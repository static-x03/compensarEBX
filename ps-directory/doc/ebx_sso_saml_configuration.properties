#################################################
## SSO specific configuration
#
# This configuration is used by the SSOConfiguration class. it is loaded once and used by ps-directory/SAML and the ps-sso-auth project (web project)
# To setup SSO with SAML, the ps-sso-auth needs to be deployed on the server. It does not have to be on the same server where EBX runs, but then either 
# the system variable ebx.properties or ebx.directory.sso.properties needs to be setup.
# 
# SSO - SAML has 2 main parts. The IDP server and recipient for the authentication response.
# The ps-sso-auth web application has a listener for "/ebxSSO" or [protocol]://[host name]:[port]/[the war file name]/ebxSSO
# this is the URL our customer needs to use when they want SSO access to EBX. The war file name can be modified. The default is ps-sso-auth. 
# 
# When a user tries to access this URL the application will generate an authentication request to the IDP server and redirect the user to the IDP URL. 
# If the user is not already authenticated, we assume the IDP will popup a login dialog. 
# Once the user is authenticated with the IDP server, we POST a message to EBX with SAML.
# The class @com.orchestranetworks.ps.customDirectory.sso.saml.SamlSSOCheck can process that request, verify the signatures in the SAML portion of it 
# and retrieve the user information and pass it to EBX.
#
# SAML can be used for authentication and authorization.
# 
#
#
#
#
#################################################
# please make sure the following jar files are on the server classpath they located in the lib folder of the ps-directory project
# esapi-2,0.1.jar
# opensaml-2.6.0.jar
# openws-1.5.0.jar
# xmltooling-1.4.0.jar
#
#################################################
## Enable SSO
################################################# 
ebx.directory.enableSSO=true
#################################################
## Specify an alternative class for SSO. must implement @com.orchestranetworks.ps.customDirectory.HttpAuthenticate
#################################################
ebx.directory.SSOClass=com.orchestranetworks.ps.customDirectory.sso.saml.SamlSSOCheck
#################################################
## SSO SAML specific configuration
#################################################
# This is a system property to specify an alternate configuration file. the default is ebx.properties. 
# add -Debx.directory.sso.properties=[property file] to ebx startup script
#
# Specify the url for EBX. last '/' is critical. when an authentication request is sent to the IDP server, this value is passed as the return address for the response
# if the user is authenticated. 
#
ebx.directory.sso.ebxurl=http://localhost:9595/ebx/

#
# Specify the parameter name where the SAML response is stored in the HTTP request posted to EBX.
# The standard requires it to be SAMLResponse but in case one doesn't follow the standard this is a way to override it.
#
ebx.directory.sso.saml.samlresponseelementname=SAMLResponse

#
# indicate is all passwords in this file are encrypted 
#
ebx.directory.passwordencrypted=false

#
# URL to IDP server. Authentication requests will be sent to this URL
#
ebx.directory.sso.idp.url=
#
# To validate a response from an IDP we use certificates 
# this property indicate if the file specified by @ebx.directory.sso.idp.certificate.file is a certificate file or a JKS file. 
# a JKS file is a collection of certificates where each certificate can be loaded with a password and by it's alias name 
#
ebx.directory.sso.idp.isjksfile=false
#
# password to be used to load a certificate from a JKS file. if the property @ebx.directory.sso.saml.passwordencrypted is set to true
# then the value needs to be the encrypted value of the password.
#
ebx.directory.sso.idp.jkspassword=
#
# if the property @ebx.directory.sso.idp.isjksfile is set to true, then this property is required. it is the alias to be used to load the certificate form the JKS file.
#
ebx.directory.sso.idp.certificate.alias=
#
# if the property @ebx.directory.sso.idp.isjksfile is set to true, this should be the path to a JKS file otherwise a path to a certificate file.
# Java includes a tool to load certificate files into a JKS file.
# from the java bin folder you can execute the following command:
# keytool -import -alias {an alias name} -keystore [path to a JKS file e.g. Java runtime /.../jdk1.8/jre/lib/security/cacerts -file [path to a certificate file e.g. /home/gugrim/tmp/sunas.der]
# 
# useful command to check the certificates stored on a file
# keytool -v -list -keystore .keystorekeytool -v -list -keystore [path to the file that contain certificates]
#
ebx.directory.sso.idp.certificate.file=
#
# This is the IDP issuer ID, It is to verify that the IDP is who he is.
#
ebx.directory.sso.idp.issuerid=https://app.onelogin.com/saml/metadata/fa031f89-f13e-4785-9db6-7fdc33edbe0d
#
# This is the Service Provider issuer ID, It is a value representing EBX. this value needs to be set on the IDP server (application configuration) and here with the same value
# The IDP server uses this value to verify that EBX is sending the authentication request and not someone else. 
#
ebx.directory.sso.sp.issuerid=https://app.onelogin.com/saml/metadata/fa031f89-f13e-4785-9db6-7fdc33edbe0d

#
# Determine if attributes are pulled from the SSO SAML Payload.
# True indicates that the attributes will be pulled from the SAML Payload.
# False indicates that the attributes will be mapped by the internal/external directory. 
#  
# Most use cases this will be true.
#
ebx.directory.sso.saml.attributes=true

#
# part of the SAML response will have user information in it. in the form of attributes in the assertion portion.
# those properties tells us what are the property names. it varies between IDP's.
#
ebx.directory.sso.saml.user.email=User.email
ebx.directory.sso.saml.user.firstname=User.FirstName
ebx.directory.sso.saml.user.lastname=User.LastName
#
# the attribute name for the user roles/groups, this return a multiple value where each is one role/group name
#
ebx.directory.sso.saml.user.roles=member-of
#
# indicates if SAML roles are used. 
#
ebx.directory.sso.useroles=true

#
# this defines the policy for storing user info. for SAML 2 default is "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified" 
#
ebx.directory.sso.idp.nameid.policy=urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
