
/********* ../yui/yahoo/yahoo-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
if(typeof YAHOO=="undefined"||!YAHOO){var YAHOO={};}YAHOO.namespace=function(){var b=arguments,g=null,e,c,f;for(e=0;e<b.length;e=e+1){f=(""+b[e]).split(".");g=YAHOO;for(c=(f[0]=="YAHOO")?1:0;c<f.length;c=c+1){g[f[c]]=g[f[c]]||{};g=g[f[c]];}}return g;};YAHOO.log=function(d,a,c){var b=YAHOO.widget.Logger;if(b&&b.log){return b.log(d,a,c);}else{return false;}};YAHOO.register=function(a,f,e){var k=YAHOO.env.modules,c,j,h,g,d;if(!k[a]){k[a]={versions:[],builds:[]};}c=k[a];j=e.version;h=e.build;g=YAHOO.env.listeners;c.name=a;c.version=j;c.build=h;c.versions.push(j);c.builds.push(h);c.mainClass=f;for(d=0;d<g.length;d=d+1){g[d](c);}if(f){f.VERSION=j;f.BUILD=h;}else{YAHOO.log("mainClass is undefined for module "+a,"warn");}};YAHOO.env=YAHOO.env||{modules:[],listeners:[]};YAHOO.env.getVersion=function(a){return YAHOO.env.modules[a]||null;};YAHOO.env.parseUA=function(d){var e=function(i){var j=0;return parseFloat(i.replace(/\./g,function(){return(j++==1)?"":".";}));},h=navigator,g={ie:0,opera:0,gecko:0,webkit:0,chrome:0,mobile:null,air:0,ipad:0,iphone:0,ipod:0,ios:null,android:0,webos:0,caja:h&&h.cajaVersion,secure:false,os:null},c=d||(navigator&&navigator.userAgent),f=window&&window.location,b=f&&f.href,a;g.secure=b&&(b.toLowerCase().indexOf("https")===0);if(c){if((/windows|win32/i).test(c)){g.os="windows";}else{if((/macintosh/i).test(c)){g.os="macintosh";}else{if((/rhino/i).test(c)){g.os="rhino";}}}if((/KHTML/).test(c)){g.webkit=1;}a=c.match(/AppleWebKit\/([^\s]*)/);if(a&&a[1]){g.webkit=e(a[1]);if(/ Mobile\//.test(c)){g.mobile="Apple";a=c.match(/OS ([^\s]*)/);if(a&&a[1]){a=e(a[1].replace("_","."));}g.ios=a;g.ipad=g.ipod=g.iphone=0;a=c.match(/iPad|iPod|iPhone/);if(a&&a[0]){g[a[0].toLowerCase()]=g.ios;}}else{a=c.match(/NokiaN[^\/]*|Android \d\.\d|webOS\/\d\.\d/);if(a){g.mobile=a[0];}if(/webOS/.test(c)){g.mobile="WebOS";a=c.match(/webOS\/([^\s]*);/);if(a&&a[1]){g.webos=e(a[1]);}}if(/ Android/.test(c)){g.mobile="Android";a=c.match(/Android ([^\s]*);/);if(a&&a[1]){g.android=e(a[1]);}}}a=c.match(/Chrome\/([^\s]*)/);if(a&&a[1]){g.chrome=e(a[1]);}else{a=c.match(/AdobeAIR\/([^\s]*)/);if(a){g.air=a[0];}}}if(!g.webkit){a=c.match(/Opera[\s\/]([^\s]*)/);if(a&&a[1]){g.opera=e(a[1]);a=c.match(/Version\/([^\s]*)/);if(a&&a[1]){g.opera=e(a[1]);}a=c.match(/Opera Mini[^;]*/);if(a){g.mobile=a[0];}}else{a=c.match(/MSIE\s([^;]*)/);if(a&&a[1]){g.ie=e(a[1]);}else{a=c.match(/Gecko\/([^\s]*)/);if(a){g.gecko=1;a=c.match(/rv:([^\s\)]*)/);if(a&&a[1]){g.gecko=e(a[1]);}}}}}}return g;};YAHOO.env.ua=YAHOO.env.parseUA();(function(){YAHOO.namespace("util","widget","example");if("undefined"!==typeof YAHOO_config){var b=YAHOO_config.listener,a=YAHOO.env.listeners,d=true,c;if(b){for(c=0;c<a.length;c++){if(a[c]==b){d=false;break;}}if(d){a.push(b);}}}})();YAHOO.lang=YAHOO.lang||{};(function(){var f=YAHOO.lang,a=Object.prototype,c="[object Array]",h="[object Function]",i="[object Object]",b=[],g={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;","`":"&#x60;"},d=["toString","valueOf"],e={isArray:function(j){return a.toString.apply(j)===c;},isBoolean:function(j){return typeof j==="boolean";},isFunction:function(j){return(typeof j==="function")||a.toString.apply(j)===h;},isNull:function(j){return j===null;},isNumber:function(j){return typeof j==="number"&&isFinite(j);},isObject:function(j){return(j&&(typeof j==="object"||f.isFunction(j)))||false;},isString:function(j){return typeof j==="string";},isUndefined:function(j){return typeof j==="undefined";},_IEEnumFix:(YAHOO.env.ua.ie)?function(l,k){var j,n,m;for(j=0;j<d.length;j=j+1){n=d[j];m=k[n];if(f.isFunction(m)&&m!=a[n]){l[n]=m;}}}:function(){},escapeHTML:function(j){return j.replace(/[&<>"'\/`]/g,function(k){return g[k];});},extend:function(m,n,l){if(!n||!m){throw new Error("extend failed, please check that "+"all dependencies are included.");}var k=function(){},j;k.prototype=n.prototype;m.prototype=new k();m.prototype.constructor=m;m.superclass=n.prototype;if(n.prototype.constructor==a.constructor){n.prototype.constructor=n;}if(l){for(j in l){if(f.hasOwnProperty(l,j)){m.prototype[j]=l[j];}}f._IEEnumFix(m.prototype,l);}},augmentObject:function(n,m){if(!m||!n){throw new Error("Absorb failed, verify dependencies.");}var j=arguments,l,o,k=j[2];if(k&&k!==true){for(l=2;l<j.length;l=l+1){n[j[l]]=m[j[l]];}}else{for(o in m){if(k||!(o in n)){n[o]=m[o];}}f._IEEnumFix(n,m);}return n;},augmentProto:function(m,l){if(!l||!m){throw new Error("Augment failed, verify dependencies.");}var j=[m.prototype,l.prototype],k;for(k=2;k<arguments.length;k=k+1){j.push(arguments[k]);}f.augmentObject.apply(this,j);return m;},dump:function(j,p){var l,n,r=[],t="{...}",k="f(){...}",q=", ",m=" => ";if(!f.isObject(j)){return j+"";}else{if(j instanceof Date||("nodeType" in j&&"tagName" in j)){return j;}else{if(f.isFunction(j)){return k;}}}p=(f.isNumber(p))?p:3;if(f.isArray(j)){r.push("[");for(l=0,n=j.length;l<n;l=l+1){if(f.isObject(j[l])){r.push((p>0)?f.dump(j[l],p-1):t);}else{r.push(j[l]);}r.push(q);}if(r.length>1){r.pop();}r.push("]");}else{r.push("{");for(l in j){if(f.hasOwnProperty(j,l)){r.push(l+m);if(f.isObject(j[l])){r.push((p>0)?f.dump(j[l],p-1):t);}else{r.push(j[l]);}r.push(q);}}if(r.length>1){r.pop();}r.push("}");}return r.join("");},substitute:function(x,y,E,l){var D,C,B,G,t,u,F=[],p,z=x.length,A="dump",r=" ",q="{",m="}",n,w;for(;;){D=x.lastIndexOf(q,z);if(D<0){break;}C=x.indexOf(m,D);if(D+1>C){break;}p=x.substring(D+1,C);G=p;u=null;B=G.indexOf(r);if(B>-1){u=G.substring(B+1);G=G.substring(0,B);}t=y[G];if(E){t=E(G,t,u);}if(f.isObject(t)){if(f.isArray(t)){t=f.dump(t,parseInt(u,10));}else{u=u||"";n=u.indexOf(A);if(n>-1){u=u.substring(4);}w=t.toString();if(w===i||n>-1){t=f.dump(t,parseInt(u,10));}else{t=w;}}}else{if(!f.isString(t)&&!f.isNumber(t)){t="~-"+F.length+"-~";F[F.length]=p;}}x=x.substring(0,D)+t+x.substring(C+1);if(l===false){z=D-1;}}for(D=F.length-1;D>=0;D=D-1){x=x.replace(new RegExp("~-"+D+"-~"),"{"+F[D]+"}","g");}return x;},trim:function(j){try{return j.replace(/^\s+|\s+$/g,"");}catch(k){return j;
}},merge:function(){var n={},k=arguments,j=k.length,m;for(m=0;m<j;m=m+1){f.augmentObject(n,k[m],true);}return n;},later:function(t,k,u,n,p){t=t||0;k=k||{};var l=u,s=n,q,j;if(f.isString(u)){l=k[u];}if(!l){throw new TypeError("method undefined");}if(!f.isUndefined(n)&&!f.isArray(s)){s=[n];}q=function(){l.apply(k,s||b);};j=(p)?setInterval(q,t):setTimeout(q,t);return{interval:p,cancel:function(){if(this.interval){clearInterval(j);}else{clearTimeout(j);}}};},isValue:function(j){return(f.isObject(j)||f.isString(j)||f.isNumber(j)||f.isBoolean(j));}};f.hasOwnProperty=(a.hasOwnProperty)?function(j,k){return j&&j.hasOwnProperty&&j.hasOwnProperty(k);}:function(j,k){return !f.isUndefined(j[k])&&j.constructor.prototype[k]!==j[k];};e.augmentObject(f,e,true);YAHOO.util.Lang=f;f.augment=f.augmentProto;YAHOO.augment=f.augmentProto;YAHOO.extend=f.extend;})();YAHOO.register("yahoo",YAHOO,{version:"2.9.0",build:"2800"});

/********* ../yui/dom/dom-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){YAHOO.env._id_counter=YAHOO.env._id_counter||0;var e=YAHOO.util,k=YAHOO.lang,L=YAHOO.env.ua,a=YAHOO.lang.trim,B={},F={},m=/^t(?:able|d|h)$/i,w=/color$/i,j=window.document,v=j.documentElement,C="ownerDocument",M="defaultView",U="documentElement",S="compatMode",z="offsetLeft",o="offsetTop",T="offsetParent",x="parentNode",K="nodeType",c="tagName",n="scrollLeft",H="scrollTop",p="getBoundingClientRect",V="getComputedStyle",y="currentStyle",l="CSS1Compat",A="BackCompat",E="class",f="className",i="",b=" ",R="(?:^|\\s)",J="(?= |$)",t="g",O="position",D="fixed",u="relative",I="left",N="top",Q="medium",P="borderLeftWidth",q="borderTopWidth",d=L.opera,h=L.webkit,g=L.gecko,s=L.ie;e.Dom={CUSTOM_ATTRIBUTES:(!v.hasAttribute)?{"for":"htmlFor","class":f}:{"htmlFor":"for","className":E},DOT_ATTRIBUTES:{checked:true},get:function(aa){var ac,X,ab,Z,W,G,Y=null;if(aa){if(typeof aa=="string"||typeof aa=="number"){ac=aa+"";aa=j.getElementById(aa);G=(aa)?aa.attributes:null;if(aa&&G&&G.id&&G.id.value===ac){return aa;}else{if(aa&&j.all){aa=null;X=j.all[ac];if(X&&X.length){for(Z=0,W=X.length;Z<W;++Z){if(X[Z].id===ac){return X[Z];}}}}}}else{if(e.Element&&aa instanceof e.Element){aa=aa.get("element");}else{if(!aa.nodeType&&"length" in aa){ab=[];for(Z=0,W=aa.length;Z<W;++Z){ab[ab.length]=e.Dom.get(aa[Z]);}aa=ab;}}}Y=aa;}return Y;},getComputedStyle:function(G,W){if(window[V]){return G[C][M][V](G,null)[W];}else{if(G[y]){return e.Dom.IE_ComputedStyle.get(G,W);}}},getStyle:function(G,W){return e.Dom.batch(G,e.Dom._getStyle,W);},_getStyle:function(){if(window[V]){return function(G,Y){Y=(Y==="float")?Y="cssFloat":e.Dom._toCamel(Y);var X=G.style[Y],W;if(!X){W=G[C][M][V](G,null);if(W){X=W[Y];}}return X;};}else{if(v[y]){return function(G,Y){var X;switch(Y){case"opacity":X=100;try{X=G.filters["DXImageTransform.Microsoft.Alpha"].opacity;}catch(Z){try{X=G.filters("alpha").opacity;}catch(W){}}return X/100;case"float":Y="styleFloat";default:Y=e.Dom._toCamel(Y);X=G[y]?G[y][Y]:null;return(G.style[Y]||X);}};}}}(),setStyle:function(G,W,X){e.Dom.batch(G,e.Dom._setStyle,{prop:W,val:X});},_setStyle:function(){if(!window.getComputedStyle&&j.documentElement.currentStyle){return function(W,G){var X=e.Dom._toCamel(G.prop),Y=G.val;if(W){switch(X){case"opacity":if(Y===""||Y===null||Y===1){W.style.removeAttribute("filter");}else{if(k.isString(W.style.filter)){W.style.filter="alpha(opacity="+Y*100+")";if(!W[y]||!W[y].hasLayout){W.style.zoom=1;}}}break;case"float":X="styleFloat";default:W.style[X]=Y;}}else{}};}else{return function(W,G){var X=e.Dom._toCamel(G.prop),Y=G.val;if(W){if(X=="float"){X="cssFloat";}W.style[X]=Y;}else{}};}}(),getXY:function(G){return e.Dom.batch(G,e.Dom._getXY);},_canPosition:function(G){return(e.Dom._getStyle(G,"display")!=="none"&&e.Dom._inDoc(G));},_getXY:function(W){var X,G,Z,ab,Y,aa,ac=Math.round,ad=false;if(e.Dom._canPosition(W)){Z=W[p]();ab=W[C];X=e.Dom.getDocumentScrollLeft(ab);G=e.Dom.getDocumentScrollTop(ab);ad=[Z[I],Z[N]];if(Y||aa){ad[0]-=aa;ad[1]-=Y;}if((G||X)){ad[0]+=X;ad[1]+=G;}ad[0]=ac(ad[0]);ad[1]=ac(ad[1]);}else{}return ad;},getX:function(G){var W=function(X){return e.Dom.getXY(X)[0];};return e.Dom.batch(G,W,e.Dom,true);},getY:function(G){var W=function(X){return e.Dom.getXY(X)[1];};return e.Dom.batch(G,W,e.Dom,true);},setXY:function(G,X,W){e.Dom.batch(G,e.Dom._setXY,{pos:X,noRetry:W});},_setXY:function(G,Z){var aa=e.Dom._getStyle(G,O),Y=e.Dom.setStyle,ad=Z.pos,W=Z.noRetry,ab=[parseInt(e.Dom.getComputedStyle(G,I),10),parseInt(e.Dom.getComputedStyle(G,N),10)],ac,X;ac=e.Dom._getXY(G);if(!ad||ac===false){return false;}if(aa=="static"){aa=u;Y(G,O,aa);}if(isNaN(ab[0])){ab[0]=(aa==u)?0:G[z];}if(isNaN(ab[1])){ab[1]=(aa==u)?0:G[o];}if(ad[0]!==null){Y(G,I,ad[0]-ac[0]+ab[0]+"px");}if(ad[1]!==null){Y(G,N,ad[1]-ac[1]+ab[1]+"px");}if(!W){X=e.Dom._getXY(G);if((ad[0]!==null&&X[0]!=ad[0])||(ad[1]!==null&&X[1]!=ad[1])){e.Dom._setXY(G,{pos:ad,noRetry:true});}}},setX:function(W,G){e.Dom.setXY(W,[G,null]);},setY:function(G,W){e.Dom.setXY(G,[null,W]);},getRegion:function(G){var W=function(X){var Y=false;if(e.Dom._canPosition(X)){Y=e.Region.getRegion(X);}else{}return Y;};return e.Dom.batch(G,W,e.Dom,true);},getClientWidth:function(){return e.Dom.getViewportWidth();},getClientHeight:function(){return e.Dom.getViewportHeight();},getElementsByClassName:function(ab,af,ac,ae,X,ad){af=af||"*";ac=(ac)?e.Dom.get(ac):null||j;if(!ac){return[];}var W=[],G=ac.getElementsByTagName(af),Z=e.Dom.hasClass;for(var Y=0,aa=G.length;Y<aa;++Y){if(Z(G[Y],ab)){W[W.length]=G[Y];}}if(ae){e.Dom.batch(W,ae,X,ad);}return W;},hasClass:function(W,G){return e.Dom.batch(W,e.Dom._hasClass,G);},_hasClass:function(X,W){var G=false,Y;if(X&&W){Y=e.Dom._getAttribute(X,f)||i;if(Y){Y=Y.replace(/\s+/g,b);}if(W.exec){G=W.test(Y);}else{G=W&&(b+Y+b).indexOf(b+W+b)>-1;}}else{}return G;},addClass:function(W,G){return e.Dom.batch(W,e.Dom._addClass,G);},_addClass:function(X,W){var G=false,Y;if(X&&W){Y=e.Dom._getAttribute(X,f)||i;if(!e.Dom._hasClass(X,W)){e.Dom.setAttribute(X,f,a(Y+b+W));G=true;}}else{}return G;},removeClass:function(W,G){return e.Dom.batch(W,e.Dom._removeClass,G);},_removeClass:function(Y,X){var W=false,aa,Z,G;if(Y&&X){aa=e.Dom._getAttribute(Y,f)||i;e.Dom.setAttribute(Y,f,aa.replace(e.Dom._getClassRegex(X),i));Z=e.Dom._getAttribute(Y,f);if(aa!==Z){e.Dom.setAttribute(Y,f,a(Z));W=true;if(e.Dom._getAttribute(Y,f)===""){G=(Y.hasAttribute&&Y.hasAttribute(E))?E:f;Y.removeAttribute(G);}}}else{}return W;},replaceClass:function(X,W,G){return e.Dom.batch(X,e.Dom._replaceClass,{from:W,to:G});},_replaceClass:function(Y,X){var W,ab,aa,G=false,Z;if(Y&&X){ab=X.from;aa=X.to;if(!aa){G=false;}else{if(!ab){G=e.Dom._addClass(Y,X.to);}else{if(ab!==aa){Z=e.Dom._getAttribute(Y,f)||i;W=(b+Z.replace(e.Dom._getClassRegex(ab),b+aa).replace(/\s+/g,b)).split(e.Dom._getClassRegex(aa));W.splice(1,0,b+aa);e.Dom.setAttribute(Y,f,a(W.join(i)));G=true;}}}}else{}return G;},generateId:function(G,X){X=X||"yui-gen";var W=function(Y){if(Y&&Y.id){return Y.id;}var Z=X+YAHOO.env._id_counter++;
if(Y){if(Y[C]&&Y[C].getElementById(Z)){return e.Dom.generateId(Y,Z+X);}Y.id=Z;}return Z;};return e.Dom.batch(G,W,e.Dom,true)||W.apply(e.Dom,arguments);},isAncestor:function(W,X){W=e.Dom.get(W);X=e.Dom.get(X);var G=false;if((W&&X)&&(W[K]&&X[K])){if(W.contains&&W!==X){G=W.contains(X);}else{if(W.compareDocumentPosition){G=!!(W.compareDocumentPosition(X)&16);}}}else{}return G;},inDocument:function(G,W){return e.Dom._inDoc(e.Dom.get(G),W);},_inDoc:function(W,X){var G=false;if(W&&W[c]){X=X||W[C];G=e.Dom.isAncestor(X[U],W);}else{}return G;},getElementsBy:function(W,af,ab,ad,X,ac,ae){af=af||"*";ab=(ab)?e.Dom.get(ab):null||j;var aa=(ae)?null:[],G;if(ab){G=ab.getElementsByTagName(af);for(var Y=0,Z=G.length;Y<Z;++Y){if(W(G[Y])){if(ae){aa=G[Y];break;}else{aa[aa.length]=G[Y];}}}if(ad){e.Dom.batch(aa,ad,X,ac);}}return aa;},getElementBy:function(X,G,W){return e.Dom.getElementsBy(X,G,W,null,null,null,true);},batch:function(X,ab,aa,Z){var Y=[],W=(Z)?aa:null;X=(X&&(X[c]||X.item))?X:e.Dom.get(X);if(X&&ab){if(X[c]||X.length===undefined){return ab.call(W,X,aa);}for(var G=0;G<X.length;++G){Y[Y.length]=ab.call(W||X[G],X[G],aa);}}else{return false;}return Y;},getDocumentHeight:function(){var W=(j[S]!=l||h)?j.body.scrollHeight:v.scrollHeight,G=Math.max(W,e.Dom.getViewportHeight());return G;},getDocumentWidth:function(){var W=(j[S]!=l||h)?j.body.scrollWidth:v.scrollWidth,G=Math.max(W,e.Dom.getViewportWidth());return G;},getViewportHeight:function(){var G=self.innerHeight,W=j[S];if((W||s)&&!d){G=(W==l)?v.clientHeight:j.body.clientHeight;}return G;},getViewportWidth:function(){var G=self.innerWidth,W=j[S];if(W||s){G=(W==l)?v.clientWidth:j.body.clientWidth;}return G;},getAncestorBy:function(G,W){while((G=G[x])){if(e.Dom._testElement(G,W)){return G;}}return null;},getAncestorByClassName:function(W,G){W=e.Dom.get(W);if(!W){return null;}var X=function(Y){return e.Dom.hasClass(Y,G);};return e.Dom.getAncestorBy(W,X);},getAncestorByTagName:function(W,G){W=e.Dom.get(W);if(!W){return null;}var X=function(Y){return Y[c]&&Y[c].toUpperCase()==G.toUpperCase();};return e.Dom.getAncestorBy(W,X);},getPreviousSiblingBy:function(G,W){while(G){G=G.previousSibling;if(e.Dom._testElement(G,W)){return G;}}return null;},getPreviousSibling:function(G){G=e.Dom.get(G);if(!G){return null;}return e.Dom.getPreviousSiblingBy(G);},getNextSiblingBy:function(G,W){while(G){G=G.nextSibling;if(e.Dom._testElement(G,W)){return G;}}return null;},getNextSibling:function(G){G=e.Dom.get(G);if(!G){return null;}return e.Dom.getNextSiblingBy(G);},getFirstChildBy:function(G,X){var W=(e.Dom._testElement(G.firstChild,X))?G.firstChild:null;return W||e.Dom.getNextSiblingBy(G.firstChild,X);},getFirstChild:function(G,W){G=e.Dom.get(G);if(!G){return null;}return e.Dom.getFirstChildBy(G);},getLastChildBy:function(G,X){if(!G){return null;}var W=(e.Dom._testElement(G.lastChild,X))?G.lastChild:null;return W||e.Dom.getPreviousSiblingBy(G.lastChild,X);},getLastChild:function(G){G=e.Dom.get(G);return e.Dom.getLastChildBy(G);},getChildrenBy:function(W,Y){var X=e.Dom.getFirstChildBy(W,Y),G=X?[X]:[];e.Dom.getNextSiblingBy(X,function(Z){if(!Y||Y(Z)){G[G.length]=Z;}return false;});return G;},getChildren:function(G){G=e.Dom.get(G);if(!G){}return e.Dom.getChildrenBy(G);},getDocumentScrollLeft:function(G){G=G||j;return Math.max(G[U].scrollLeft,G.body.scrollLeft);},getDocumentScrollTop:function(G){G=G||j;return Math.max(G[U].scrollTop,G.body.scrollTop);},insertBefore:function(W,G){W=e.Dom.get(W);G=e.Dom.get(G);if(!W||!G||!G[x]){return null;}return G[x].insertBefore(W,G);},insertAfter:function(W,G){W=e.Dom.get(W);G=e.Dom.get(G);if(!W||!G||!G[x]){return null;}if(G.nextSibling){return G[x].insertBefore(W,G.nextSibling);}else{return G[x].appendChild(W);}},getClientRegion:function(){var X=e.Dom.getDocumentScrollTop(),W=e.Dom.getDocumentScrollLeft(),Y=e.Dom.getViewportWidth()+W,G=e.Dom.getViewportHeight()+X;return new e.Region(X,Y,G,W);},setAttribute:function(W,G,X){e.Dom.batch(W,e.Dom._setAttribute,{attr:G,val:X});},_setAttribute:function(X,W){var G=e.Dom._toCamel(W.attr),Y=W.val;if(X&&X.setAttribute){if(e.Dom.DOT_ATTRIBUTES[G]&&X.tagName&&X.tagName!="BUTTON"){X[G]=Y;}else{G=e.Dom.CUSTOM_ATTRIBUTES[G]||G;X.setAttribute(G,Y);}}else{}},getAttribute:function(W,G){return e.Dom.batch(W,e.Dom._getAttribute,G);},_getAttribute:function(W,G){var X;G=e.Dom.CUSTOM_ATTRIBUTES[G]||G;if(e.Dom.DOT_ATTRIBUTES[G]){X=W[G];}else{if(W&&"getAttribute" in W){if(/^(?:href|src)$/.test(G)){X=W.getAttribute(G,2);}else{X=W.getAttribute(G);}}else{}}return X;},_toCamel:function(W){var X=B;function G(Y,Z){return Z.toUpperCase();}return X[W]||(X[W]=W.indexOf("-")===-1?W:W.replace(/-([a-z])/gi,G));},_getClassRegex:function(W){var G;if(W!==undefined){if(W.exec){G=W;}else{G=F[W];if(!G){W=W.replace(e.Dom._patterns.CLASS_RE_TOKENS,"\\$1");W=W.replace(/\s+/g,b);G=F[W]=new RegExp(R+W+J,t);}}}return G;},_patterns:{ROOT_TAG:/^body|html$/i,CLASS_RE_TOKENS:/([\.\(\)\^\$\*\+\?\|\[\]\{\}\\])/g},_testElement:function(G,W){return G&&G[K]==1&&(!W||W(G));},_calcBorders:function(X,Y){var W=parseInt(e.Dom[V](X,q),10)||0,G=parseInt(e.Dom[V](X,P),10)||0;if(g){if(m.test(X[c])){W=0;G=0;}}Y[0]+=G;Y[1]+=W;return Y;}};var r=e.Dom[V];if(L.opera){e.Dom[V]=function(W,G){var X=r(W,G);if(w.test(G)){X=e.Dom.Color.toRGB(X);}return X;};}if(L.webkit){e.Dom[V]=function(W,G){var X=r(W,G);if(X==="rgba(0, 0, 0, 0)"){X="transparent";}return X;};}if(L.ie&&L.ie>=8){e.Dom.DOT_ATTRIBUTES.type=true;}})();YAHOO.util.Region=function(d,e,a,c){this.top=d;this.y=d;this[1]=d;this.right=e;this.bottom=a;this.left=c;this.x=c;this[0]=c;this.width=this.right-this.left;this.height=this.bottom-this.top;};YAHOO.util.Region.prototype.contains=function(a){return(a.left>=this.left&&a.right<=this.right&&a.top>=this.top&&a.bottom<=this.bottom);};YAHOO.util.Region.prototype.getArea=function(){return((this.bottom-this.top)*(this.right-this.left));};YAHOO.util.Region.prototype.intersect=function(f){var d=Math.max(this.top,f.top),e=Math.min(this.right,f.right),a=Math.min(this.bottom,f.bottom),c=Math.max(this.left,f.left);
if(a>=d&&e>=c){return new YAHOO.util.Region(d,e,a,c);}else{return null;}};YAHOO.util.Region.prototype.union=function(f){var d=Math.min(this.top,f.top),e=Math.max(this.right,f.right),a=Math.max(this.bottom,f.bottom),c=Math.min(this.left,f.left);return new YAHOO.util.Region(d,e,a,c);};YAHOO.util.Region.prototype.toString=function(){return("Region {"+"top: "+this.top+", right: "+this.right+", bottom: "+this.bottom+", left: "+this.left+", height: "+this.height+", width: "+this.width+"}");};YAHOO.util.Region.getRegion=function(e){var g=YAHOO.util.Dom.getXY(e),d=g[1],f=g[0]+e.offsetWidth,a=g[1]+e.offsetHeight,c=g[0];return new YAHOO.util.Region(d,f,a,c);};YAHOO.util.Point=function(a,b){if(YAHOO.lang.isArray(a)){b=a[1];a=a[0];}YAHOO.util.Point.superclass.constructor.call(this,b,a,b,a);};YAHOO.extend(YAHOO.util.Point,YAHOO.util.Region);(function(){var b=YAHOO.util,a="clientTop",f="clientLeft",j="parentNode",k="right",w="hasLayout",i="px",u="opacity",l="auto",d="borderLeftWidth",g="borderTopWidth",p="borderRightWidth",v="borderBottomWidth",s="visible",q="transparent",n="height",e="width",h="style",t="currentStyle",r=/^width|height$/,o=/^(\d[.\d]*)+(em|ex|px|gd|rem|vw|vh|vm|ch|mm|cm|in|pt|pc|deg|rad|ms|s|hz|khz|%){1}?/i,m={get:function(x,z){var y="",A=x[t][z];if(z===u){y=b.Dom.getStyle(x,u);}else{if(!A||(A.indexOf&&A.indexOf(i)>-1)){y=A;}else{if(b.Dom.IE_COMPUTED[z]){y=b.Dom.IE_COMPUTED[z](x,z);}else{if(o.test(A)){y=b.Dom.IE.ComputedStyle.getPixel(x,z);}else{y=A;}}}}return y;},getOffset:function(z,E){var B=z[t][E],x=E.charAt(0).toUpperCase()+E.substr(1),C="offset"+x,y="pixel"+x,A="",D;if(B==l){D=z[C];if(D===undefined){A=0;}A=D;if(r.test(E)){z[h][E]=D;if(z[C]>D){A=D-(z[C]-D);}z[h][E]=l;}}else{if(!z[h][y]&&!z[h][E]){z[h][E]=B;}A=z[h][y];}return A+i;},getBorderWidth:function(x,z){var y=null;if(!x[t][w]){x[h].zoom=1;}switch(z){case g:y=x[a];break;case v:y=x.offsetHeight-x.clientHeight-x[a];break;case d:y=x[f];break;case p:y=x.offsetWidth-x.clientWidth-x[f];break;}return y+i;},getPixel:function(y,x){var A=null,B=y[t][k],z=y[t][x];y[h][k]=z;A=y[h].pixelRight;y[h][k]=B;return A+i;},getMargin:function(y,x){var z;if(y[t][x]==l){z=0+i;}else{z=b.Dom.IE.ComputedStyle.getPixel(y,x);}return z;},getVisibility:function(y,x){var z;while((z=y[t])&&z[x]=="inherit"){y=y[j];}return(z)?z[x]:s;},getColor:function(y,x){return b.Dom.Color.toRGB(y[t][x])||q;},getBorderColor:function(y,x){var z=y[t],A=z[x]||z.color;return b.Dom.Color.toRGB(b.Dom.Color.toHex(A));}},c={};c.top=c.right=c.bottom=c.left=c[e]=c[n]=m.getOffset;c.color=m.getColor;c[g]=c[p]=c[v]=c[d]=m.getBorderWidth;c.marginTop=c.marginRight=c.marginBottom=c.marginLeft=m.getMargin;c.visibility=m.getVisibility;c.borderColor=c.borderTopColor=c.borderRightColor=c.borderBottomColor=c.borderLeftColor=m.getBorderColor;b.Dom.IE_COMPUTED=c;b.Dom.IE_ComputedStyle=m;})();(function(){var c="toString",a=parseInt,b=RegExp,d=YAHOO.util;d.Dom.Color={KEYWORDS:{black:"000",silver:"c0c0c0",gray:"808080",white:"fff",maroon:"800000",red:"f00",purple:"800080",fuchsia:"f0f",green:"008000",lime:"0f0",olive:"808000",yellow:"ff0",navy:"000080",blue:"00f",teal:"008080",aqua:"0ff"},re_RGB:/^rgb\(([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\)$/i,re_hex:/^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i,re_hex3:/([0-9A-F])/gi,toRGB:function(e){if(!d.Dom.Color.re_RGB.test(e)){e=d.Dom.Color.toHex(e);}if(d.Dom.Color.re_hex.exec(e)){e="rgb("+[a(b.$1,16),a(b.$2,16),a(b.$3,16)].join(", ")+")";}return e;},toHex:function(f){f=d.Dom.Color.KEYWORDS[f]||f;if(d.Dom.Color.re_RGB.exec(f)){f=[Number(b.$1).toString(16),Number(b.$2).toString(16),Number(b.$3).toString(16)];for(var e=0;e<f.length;e++){if(f[e].length<2){f[e]="0"+f[e];}}f=f.join("");}if(f.length<6){f=f.replace(d.Dom.Color.re_hex3,"$1$1");}if(f!=="transparent"&&f.indexOf("#")<0){f="#"+f;}return f.toUpperCase();}};}());YAHOO.register("dom",YAHOO.util.Dom,{version:"2.9.0",build:"2800"});

/********* ../yui/event/event-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
YAHOO.util.CustomEvent=function(d,c,b,a,e){this.type=d;this.scope=c||window;this.silent=b;this.fireOnce=e;this.fired=false;this.firedWith=null;this.signature=a||YAHOO.util.CustomEvent.LIST;this.subscribers=[];if(!this.silent){}var f="_YUICEOnSubscribe";if(d!==f){this.subscribeEvent=new YAHOO.util.CustomEvent(f,this,true);}this.lastError=null;};YAHOO.util.CustomEvent.LIST=0;YAHOO.util.CustomEvent.FLAT=1;YAHOO.util.CustomEvent.prototype={subscribe:function(b,c,d){if(!b){throw new Error("Invalid callback for subscriber to '"+this.type+"'");}if(this.subscribeEvent){this.subscribeEvent.fire(b,c,d);}var a=new YAHOO.util.Subscriber(b,c,d);if(this.fireOnce&&this.fired){this.notify(a,this.firedWith);}else{this.subscribers.push(a);}},unsubscribe:function(d,f){if(!d){return this.unsubscribeAll();}var e=false;for(var b=0,a=this.subscribers.length;b<a;++b){var c=this.subscribers[b];if(c&&c.contains(d,f)){this._delete(b);e=true;}}return e;},fire:function(){this.lastError=null;var h=[],a=this.subscribers.length;var d=[].slice.call(arguments,0),c=true,f,b=false;if(this.fireOnce){if(this.fired){return true;}else{this.firedWith=d;}}this.fired=true;if(!a&&this.silent){return true;}if(!this.silent){}var e=this.subscribers.slice();for(f=0;f<a;++f){var g=e[f];if(!g||!g.fn){b=true;}else{c=this.notify(g,d);if(false===c){if(!this.silent){}break;}}}return(c!==false);},notify:function(g,c){var b,i=null,f=g.getScope(this.scope),a=YAHOO.util.Event.throwErrors;if(!this.silent){}if(this.signature==YAHOO.util.CustomEvent.FLAT){if(c.length>0){i=c[0];}try{b=g.fn.call(f,i,g.obj);}catch(h){this.lastError=h;if(a){throw h;}}}else{try{b=g.fn.call(f,this.type,c,g.obj);}catch(d){this.lastError=d;if(a){throw d;}}}return b;},unsubscribeAll:function(){var a=this.subscribers.length,b;for(b=a-1;b>-1;b--){this._delete(b);}this.subscribers=[];return a;},_delete:function(a){var b=this.subscribers[a];if(b){delete b.fn;delete b.obj;}this.subscribers.splice(a,1);},toString:function(){return"CustomEvent: "+"'"+this.type+"', "+"context: "+this.scope;}};YAHOO.util.Subscriber=function(a,b,c){this.fn=a;this.obj=YAHOO.lang.isUndefined(b)?null:b;this.overrideContext=c;};YAHOO.util.Subscriber.prototype.getScope=function(a){if(this.overrideContext){if(this.overrideContext===true){return this.obj;}else{return this.overrideContext;}}return a;};YAHOO.util.Subscriber.prototype.contains=function(a,b){if(b){return(this.fn==a&&this.obj==b);}else{return(this.fn==a);}};YAHOO.util.Subscriber.prototype.toString=function(){return"Subscriber { obj: "+this.obj+", overrideContext: "+(this.overrideContext||"no")+" }";};if(!YAHOO.util.Event){YAHOO.util.Event=function(){var g=false,h=[],j=[],a=0,e=[],b=0,c={63232:38,63233:40,63234:37,63235:39,63276:33,63277:34,25:9},d=YAHOO.env.ua.ie,f="focusin",i="focusout";return{POLL_RETRYS:500,POLL_INTERVAL:40,EL:0,TYPE:1,FN:2,WFN:3,UNLOAD_OBJ:3,ADJ_SCOPE:4,OBJ:5,OVERRIDE:6,CAPTURE:7,lastError:null,isSafari:YAHOO.env.ua.webkit,webkit:YAHOO.env.ua.webkit,isIE:d,_interval:null,_dri:null,_specialTypes:{focusin:(d?"focusin":"focus"),focusout:(d?"focusout":"blur")},DOMReady:false,throwErrors:false,startInterval:function(){if(!this._interval){this._interval=YAHOO.lang.later(this.POLL_INTERVAL,this,this._tryPreloadAttach,null,true);}},onAvailable:function(q,m,o,p,n){var k=(YAHOO.lang.isString(q))?[q]:q;for(var l=0;l<k.length;l=l+1){e.push({id:k[l],fn:m,obj:o,overrideContext:p,checkReady:n});}a=this.POLL_RETRYS;this.startInterval();},onContentReady:function(n,k,l,m){this.onAvailable(n,k,l,m,true);},onDOMReady:function(){this.DOMReadyEvent.subscribe.apply(this.DOMReadyEvent,arguments);},_addListener:function(m,k,v,p,t,y){if(!v||!v.call){return false;}if(this._isValidCollection(m)){var w=true;for(var q=0,s=m.length;q<s;++q){w=this.on(m[q],k,v,p,t)&&w;}return w;}else{if(YAHOO.lang.isString(m)){var o=this.getEl(m);if(o){m=o;}else{this.onAvailable(m,function(){YAHOO.util.Event._addListener(m,k,v,p,t,y);});return true;}}}if(!m){return false;}if("unload"==k&&p!==this){j[j.length]=[m,k,v,p,t];return true;}var l=m;if(t){if(t===true){l=p;}else{l=t;}}var n=function(z){return v.call(l,YAHOO.util.Event.getEvent(z,m),p);};var x=[m,k,v,n,l,p,t,y];var r=h.length;h[r]=x;try{this._simpleAdd(m,k,n,y);}catch(u){this.lastError=u;this.removeListener(m,k,v);return false;}return true;},_getType:function(k){return this._specialTypes[k]||k;},addListener:function(m,p,l,n,o){var k=((p==f||p==i)&&!YAHOO.env.ua.ie)?true:false;return this._addListener(m,this._getType(p),l,n,o,k);},addFocusListener:function(l,k,m,n){return this.on(l,f,k,m,n);},removeFocusListener:function(l,k){return this.removeListener(l,f,k);},addBlurListener:function(l,k,m,n){return this.on(l,i,k,m,n);},removeBlurListener:function(l,k){return this.removeListener(l,i,k);},removeListener:function(l,k,r){var m,p,u;k=this._getType(k);if(typeof l=="string"){l=this.getEl(l);}else{if(this._isValidCollection(l)){var s=true;for(m=l.length-1;m>-1;m--){s=(this.removeListener(l[m],k,r)&&s);}return s;}}if(!r||!r.call){return this.purgeElement(l,false,k);}if("unload"==k){for(m=j.length-1;m>-1;m--){u=j[m];if(u&&u[0]==l&&u[1]==k&&u[2]==r){j.splice(m,1);return true;}}return false;}var n=null;var o=arguments[3];if("undefined"===typeof o){o=this._getCacheIndex(h,l,k,r);}if(o>=0){n=h[o];}if(!l||!n){return false;}var t=n[this.CAPTURE]===true?true:false;try{this._simpleRemove(l,k,n[this.WFN],t);}catch(q){this.lastError=q;return false;}delete h[o][this.WFN];delete h[o][this.FN];h.splice(o,1);return true;},getTarget:function(m,l){var k=m.target||m.srcElement;return this.resolveTextNode(k);},resolveTextNode:function(l){try{if(l&&3==l.nodeType){return l.parentNode;}}catch(k){return null;}return l;},getPageX:function(l){var k=l.pageX;if(!k&&0!==k){k=l.clientX||0;if(this.isIE){k+=this._getScrollLeft();}}return k;},getPageY:function(k){var l=k.pageY;if(!l&&0!==l){l=k.clientY||0;if(this.isIE){l+=this._getScrollTop();}}return l;},getXY:function(k){return[this.getPageX(k),this.getPageY(k)];},getRelatedTarget:function(l){var k=l.relatedTarget;
if(!k){if(l.type=="mouseout"){k=l.toElement;}else{if(l.type=="mouseover"){k=l.fromElement;}}}return this.resolveTextNode(k);},getTime:function(m){if(!m.time){var l=new Date().getTime();try{m.time=l;}catch(k){this.lastError=k;return l;}}return m.time;},stopEvent:function(k){this.stopPropagation(k);this.preventDefault(k);},stopPropagation:function(k){if(k.stopPropagation){k.stopPropagation();}else{k.cancelBubble=true;}},preventDefault:function(k){if(k.preventDefault){k.preventDefault();}else{k.returnValue=false;}},getEvent:function(m,k){var l=m||window.event;if(!l){var n=this.getEvent.caller;while(n){l=n.arguments[0];if(l&&Event==l.constructor){break;}n=n.caller;}}return l;},getCharCode:function(l){var k=l.keyCode||l.charCode||0;if(YAHOO.env.ua.webkit&&(k in c)){k=c[k];}return k;},_getCacheIndex:function(n,q,r,p){for(var o=0,m=n.length;o<m;o=o+1){var k=n[o];if(k&&k[this.FN]==p&&k[this.EL]==q&&k[this.TYPE]==r){return o;}}return -1;},generateId:function(k){var l=k.id;if(!l){l="yuievtautoid-"+b;++b;k.id=l;}return l;},_isValidCollection:function(l){try{return(l&&typeof l!=="string"&&l.length&&!l.tagName&&!l.alert&&typeof l[0]!=="undefined");}catch(k){return false;}},elCache:{},getEl:function(k){return(typeof k==="string")?document.getElementById(k):k;},clearCache:function(){},DOMReadyEvent:new YAHOO.util.CustomEvent("DOMReady",YAHOO,0,0,1),_load:function(l){if(!g){g=true;var k=YAHOO.util.Event;k._ready();k._tryPreloadAttach();}},_ready:function(l){var k=YAHOO.util.Event;if(!k.DOMReady){k.DOMReady=true;k.DOMReadyEvent.fire();k._simpleRemove(document,"DOMContentLoaded",k._ready);}},_tryPreloadAttach:function(){if(e.length===0){a=0;if(this._interval){this._interval.cancel();this._interval=null;}return;}if(this.locked){return;}if(this.isIE){if(!this.DOMReady){this.startInterval();return;}}this.locked=true;var q=!g;if(!q){q=(a>0&&e.length>0);}var p=[];var r=function(t,u){var s=t;if(u.overrideContext){if(u.overrideContext===true){s=u.obj;}else{s=u.overrideContext;}}u.fn.call(s,u.obj);};var l,k,o,n,m=[];for(l=0,k=e.length;l<k;l=l+1){o=e[l];if(o){n=this.getEl(o.id);if(n){if(o.checkReady){if(g||n.nextSibling||!q){m.push(o);e[l]=null;}}else{r(n,o);e[l]=null;}}else{p.push(o);}}}for(l=0,k=m.length;l<k;l=l+1){o=m[l];r(this.getEl(o.id),o);}a--;if(q){for(l=e.length-1;l>-1;l--){o=e[l];if(!o||!o.id){e.splice(l,1);}}this.startInterval();}else{if(this._interval){this._interval.cancel();this._interval=null;}}this.locked=false;},purgeElement:function(p,q,s){var n=(YAHOO.lang.isString(p))?this.getEl(p):p;var r=this.getListeners(n,s),o,k;if(r){for(o=r.length-1;o>-1;o--){var m=r[o];this.removeListener(n,m.type,m.fn);}}if(q&&n&&n.childNodes){for(o=0,k=n.childNodes.length;o<k;++o){this.purgeElement(n.childNodes[o],q,s);}}},getListeners:function(n,k){var q=[],m;if(!k){m=[h,j];}else{if(k==="unload"){m=[j];}else{k=this._getType(k);m=[h];}}var s=(YAHOO.lang.isString(n))?this.getEl(n):n;for(var p=0;p<m.length;p=p+1){var u=m[p];if(u){for(var r=0,t=u.length;r<t;++r){var o=u[r];if(o&&o[this.EL]===s&&(!k||k===o[this.TYPE])){q.push({type:o[this.TYPE],fn:o[this.FN],obj:o[this.OBJ],adjust:o[this.OVERRIDE],scope:o[this.ADJ_SCOPE],index:r});}}}}return(q.length)?q:null;},_unload:function(s){var m=YAHOO.util.Event,p,o,n,r,q,t=j.slice(),k;for(p=0,r=j.length;p<r;++p){n=t[p];if(n){try{k=window;if(n[m.ADJ_SCOPE]){if(n[m.ADJ_SCOPE]===true){k=n[m.UNLOAD_OBJ];}else{k=n[m.ADJ_SCOPE];}}n[m.FN].call(k,m.getEvent(s,n[m.EL]),n[m.UNLOAD_OBJ]);}catch(w){}t[p]=null;}}n=null;k=null;j=null;if(h){for(o=h.length-1;o>-1;o--){n=h[o];if(n){try{m.removeListener(n[m.EL],n[m.TYPE],n[m.FN],o);}catch(v){}}}n=null;}try{m._simpleRemove(window,"unload",m._unload);m._simpleRemove(window,"load",m._load);}catch(u){}},_getScrollLeft:function(){return this._getScroll()[1];},_getScrollTop:function(){return this._getScroll()[0];},_getScroll:function(){var k=document.documentElement,l=document.body;if(k&&(k.scrollTop||k.scrollLeft)){return[k.scrollTop,k.scrollLeft];}else{if(l){return[l.scrollTop,l.scrollLeft];}else{return[0,0];}}},regCE:function(){},_simpleAdd:function(){if(window.addEventListener){return function(m,n,l,k){m.addEventListener(n,l,(k));};}else{if(window.attachEvent){return function(m,n,l,k){m.attachEvent("on"+n,l);};}else{return function(){};}}}(),_simpleRemove:function(){if(window.removeEventListener){return function(m,n,l,k){m.removeEventListener(n,l,(k));};}else{if(window.detachEvent){return function(l,m,k){l.detachEvent("on"+m,k);};}else{return function(){};}}}()};}();(function(){var a=YAHOO.util.Event;a.on=a.addListener;a.onFocus=a.addFocusListener;a.onBlur=a.addBlurListener;
/*! DOMReady: based on work by: Dean Edwards/John Resig/Matthias Miller/Diego Perini */
if(a.isIE){if(self!==self.top){document.onreadystatechange=function(){if(document.readyState=="complete"){document.onreadystatechange=null;a._ready();}};}else{YAHOO.util.Event.onDOMReady(YAHOO.util.Event._tryPreloadAttach,YAHOO.util.Event,true);var b=document.createElement("p");a._dri=setInterval(function(){try{b.doScroll("left");clearInterval(a._dri);a._dri=null;a._ready();b=null;}catch(c){}},a.POLL_INTERVAL);}}else{if(a.webkit&&a.webkit<525){a._dri=setInterval(function(){var c=document.readyState;if("loaded"==c||"complete"==c){clearInterval(a._dri);a._dri=null;a._ready();}},a.POLL_INTERVAL);}else{a._simpleAdd(document,"DOMContentLoaded",a._ready);}}a._simpleAdd(window,"load",a._load);a._simpleAdd(window,"unload",a._unload);a._tryPreloadAttach();})();}YAHOO.util.EventProvider=function(){};YAHOO.util.EventProvider.prototype={__yui_events:null,__yui_subscribers:null,subscribe:function(a,c,f,e){this.__yui_events=this.__yui_events||{};var d=this.__yui_events[a];if(d){d.subscribe(c,f,e);}else{this.__yui_subscribers=this.__yui_subscribers||{};var b=this.__yui_subscribers;if(!b[a]){b[a]=[];}b[a].push({fn:c,obj:f,overrideContext:e});}},unsubscribe:function(c,e,g){this.__yui_events=this.__yui_events||{};var a=this.__yui_events;if(c){var f=a[c];if(f){return f.unsubscribe(e,g);}}else{var b=true;for(var d in a){if(YAHOO.lang.hasOwnProperty(a,d)){b=b&&a[d].unsubscribe(e,g);
}}return b;}return false;},unsubscribeAll:function(a){return this.unsubscribe(a);},createEvent:function(b,g){this.__yui_events=this.__yui_events||{};var e=g||{},d=this.__yui_events,f;if(d[b]){}else{f=new YAHOO.util.CustomEvent(b,e.scope||this,e.silent,YAHOO.util.CustomEvent.FLAT,e.fireOnce);d[b]=f;if(e.onSubscribeCallback){f.subscribeEvent.subscribe(e.onSubscribeCallback);}this.__yui_subscribers=this.__yui_subscribers||{};var a=this.__yui_subscribers[b];if(a){for(var c=0;c<a.length;++c){f.subscribe(a[c].fn,a[c].obj,a[c].overrideContext);}}}return d[b];},fireEvent:function(b){this.__yui_events=this.__yui_events||{};var d=this.__yui_events[b];if(!d){return null;}var a=[];for(var c=1;c<arguments.length;++c){a.push(arguments[c]);}return d.fire.apply(d,a);},hasEvent:function(a){if(this.__yui_events){if(this.__yui_events[a]){return true;}}return false;}};(function(){var a=YAHOO.util.Event,c=YAHOO.lang;YAHOO.util.KeyListener=function(d,i,e,f){if(!d){}else{if(!i){}else{if(!e){}}}if(!f){f=YAHOO.util.KeyListener.KEYDOWN;}var g=new YAHOO.util.CustomEvent("keyPressed");this.enabledEvent=new YAHOO.util.CustomEvent("enabled");this.disabledEvent=new YAHOO.util.CustomEvent("disabled");if(c.isString(d)){d=document.getElementById(d);}if(c.isFunction(e)){g.subscribe(e);}else{g.subscribe(e.fn,e.scope,e.correctScope);}function h(o,n){if(!i.shift){i.shift=false;}if(!i.alt){i.alt=false;}if(!i.ctrl){i.ctrl=false;}if(o.shiftKey==i.shift&&o.altKey==i.alt&&o.ctrlKey==i.ctrl){var j,m=i.keys,l;if(YAHOO.lang.isArray(m)){for(var k=0;k<m.length;k++){j=m[k];l=a.getCharCode(o);if(j==l){g.fire(l,o);break;}}}else{l=a.getCharCode(o);if(m==l){g.fire(l,o);}}}}this.enable=function(){if(!this.enabled){a.on(d,f,h);this.enabledEvent.fire(i);}this.enabled=true;};this.disable=function(){if(this.enabled){a.removeListener(d,f,h);this.disabledEvent.fire(i);}this.enabled=false;};this.toString=function(){return"KeyListener ["+i.keys+"] "+d.tagName+(d.id?"["+d.id+"]":"");};};var b=YAHOO.util.KeyListener;b.KEYDOWN="keydown";b.KEYUP="keyup";b.KEY={ALT:18,BACK_SPACE:8,CAPS_LOCK:20,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,META:224,NUM_LOCK:144,PAGE_DOWN:34,PAGE_UP:33,PAUSE:19,PRINTSCREEN:44,RIGHT:39,SCROLL_LOCK:145,SHIFT:16,SPACE:32,TAB:9,UP:38};})();YAHOO.register("event",YAHOO.util.Event,{version:"2.9.0",build:"2800"});

/********* ../yui/animation/animation-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){var b=YAHOO.util;var a=function(d,c,e,f){if(!d){}this.init(d,c,e,f);};a.NAME="Anim";a.prototype={toString:function(){var c=this.getEl()||{};var d=c.id||c.tagName;return(this.constructor.NAME+": "+d);},patterns:{noNegatives:/width|height|opacity|padding/i,offsetAttribute:/^((width|height)|(top|left))$/,defaultUnit:/width|height|top$|bottom$|left$|right$/i,offsetUnit:/\d+(em|%|en|ex|pt|in|cm|mm|pc)$/i},doMethod:function(c,e,d){return this.method(this.currentFrame,e,d-e,this.totalFrames);},setAttribute:function(c,f,e){var d=this.getEl();if(this.patterns.noNegatives.test(c)){f=(f>0)?f:0;}if(c in d&&!("style" in d&&c in d.style)){d[c]=f;}else{b.Dom.setStyle(d,c,f+e);}},getAttribute:function(c){var e=this.getEl();var g=b.Dom.getStyle(e,c);if(g!=="auto"&&!this.patterns.offsetUnit.test(g)){return parseFloat(g);}var d=this.patterns.offsetAttribute.exec(c)||[];var h=!!(d[3]);var f=!!(d[2]);if("style" in e){if(f||(b.Dom.getStyle(e,"position")=="absolute"&&h)){g=e["offset"+d[0].charAt(0).toUpperCase()+d[0].substr(1)];}else{g=0;}}else{if(c in e){g=e[c];}}return g;},getDefaultUnit:function(c){if(this.patterns.defaultUnit.test(c)){return"px";}return"";},setRuntimeAttribute:function(d){var j;var e;var f=this.attributes;this.runtimeAttributes[d]={};var h=function(i){return(typeof i!=="undefined");};if(!h(f[d]["to"])&&!h(f[d]["by"])){return false;}j=(h(f[d]["from"]))?f[d]["from"]:this.getAttribute(d);if(h(f[d]["to"])){e=f[d]["to"];}else{if(h(f[d]["by"])){if(j.constructor==Array){e=[];for(var g=0,c=j.length;g<c;++g){e[g]=j[g]+f[d]["by"][g]*1;}}else{e=j+f[d]["by"]*1;}}}this.runtimeAttributes[d].start=j;this.runtimeAttributes[d].end=e;this.runtimeAttributes[d].unit=(h(f[d].unit))?f[d]["unit"]:this.getDefaultUnit(d);return true;},init:function(f,c,h,i){var d=false;var e=null;var g=0;f=b.Dom.get(f);this.attributes=c||{};this.duration=!YAHOO.lang.isUndefined(h)?h:1;this.method=i||b.Easing.easeNone;this.useSeconds=true;this.currentFrame=0;this.totalFrames=b.AnimMgr.fps;this.setEl=function(j){f=b.Dom.get(j);};this.getEl=function(){return f;};this.isAnimated=function(){return d;};this.getStartTime=function(){return e;};this.runtimeAttributes={};this.animate=function(){if(this.isAnimated()){return false;}this.currentFrame=0;this.totalFrames=(this.useSeconds)?Math.ceil(b.AnimMgr.fps*this.duration):this.duration;if(this.duration===0&&this.useSeconds){this.totalFrames=1;}b.AnimMgr.registerElement(this);return true;};this.stop=function(j){if(!this.isAnimated()){return false;}if(j){this.currentFrame=this.totalFrames;this._onTween.fire();}b.AnimMgr.stop(this);};this._handleStart=function(){this.onStart.fire();this.runtimeAttributes={};for(var j in this.attributes){if(this.attributes.hasOwnProperty(j)){this.setRuntimeAttribute(j);}}d=true;g=0;e=new Date();};this._handleTween=function(){var l={duration:new Date()-this.getStartTime(),currentFrame:this.currentFrame};l.toString=function(){return("duration: "+l.duration+", currentFrame: "+l.currentFrame);};this.onTween.fire(l);var k=this.runtimeAttributes;for(var j in k){if(k.hasOwnProperty(j)){this.setAttribute(j,this.doMethod(j,k[j].start,k[j].end),k[j].unit);}}this.afterTween.fire(l);g+=1;};this._handleComplete=function(){var j=(new Date()-e)/1000;var k={duration:j,frames:g,fps:g/j};k.toString=function(){return("duration: "+k.duration+", frames: "+k.frames+", fps: "+k.fps);};d=false;g=0;this.onComplete.fire(k);};this._onStart=new b.CustomEvent("_start",this,true);this.onStart=new b.CustomEvent("start",this);this.onTween=new b.CustomEvent("tween",this);this.afterTween=new b.CustomEvent("afterTween",this);this._onTween=new b.CustomEvent("_tween",this,true);this.onComplete=new b.CustomEvent("complete",this);this._onComplete=new b.CustomEvent("_complete",this,true);this._onStart.subscribe(this._handleStart);this._onTween.subscribe(this._handleTween);this._onComplete.subscribe(this._handleComplete);}};b.Anim=a;})();YAHOO.util.AnimMgr=new function(){var e=null;var c=[];var g=0;this.fps=1000;this.delay=20;this.registerElement=function(j){c[c.length]=j;g+=1;j._onStart.fire();this.start();};var f=[];var d=false;var h=function(){var j=f.shift();b.apply(YAHOO.util.AnimMgr,j);if(f.length){arguments.callee();}};var b=function(k,j){j=j||a(k);if(!k.isAnimated()||j===-1){return false;}k._onComplete.fire();c.splice(j,1);g-=1;if(g<=0){this.stop();}return true;};this.unRegister=function(){f.push(arguments);if(!d){d=true;h();d=false;}};this.start=function(){if(e===null){e=setInterval(this.run,this.delay);}};this.stop=function(l){if(!l){clearInterval(e);for(var k=0,j=c.length;k<j;++k){this.unRegister(c[0],0);}c=[];e=null;g=0;}else{this.unRegister(l);}};this.run=function(){for(var l=0,j=c.length;l<j;++l){var k=c[l];if(!k||!k.isAnimated()){continue;}if(k.currentFrame<k.totalFrames||k.totalFrames===null){k.currentFrame+=1;if(k.useSeconds){i(k);}k._onTween.fire();}else{YAHOO.util.AnimMgr.stop(k,l);}}};var a=function(l){for(var k=0,j=c.length;k<j;++k){if(c[k]===l){return k;}}return -1;};var i=function(k){var n=k.totalFrames;var m=k.currentFrame;var l=(k.currentFrame*k.duration*1000/k.totalFrames);var j=(new Date()-k.getStartTime());var o=0;if(j<k.duration*1000){o=Math.round((j/l-1)*k.currentFrame);}else{o=n-(m+1);}if(o>0&&isFinite(o)){if(k.currentFrame+o>=n){o=n-(m+1);}k.currentFrame+=o;}};this._queue=c;this._getIndex=a;};YAHOO.util.Bezier=new function(){this.getPosition=function(e,d){var f=e.length;var c=[];for(var b=0;b<f;++b){c[b]=[e[b][0],e[b][1]];}for(var a=1;a<f;++a){for(b=0;b<f-a;++b){c[b][0]=(1-d)*c[b][0]+d*c[parseInt(b+1,10)][0];c[b][1]=(1-d)*c[b][1]+d*c[parseInt(b+1,10)][1];}}return[c[0][0],c[0][1]];};};(function(){var a=function(f,e,g,h){a.superclass.constructor.call(this,f,e,g,h);};a.NAME="ColorAnim";a.DEFAULT_BGCOLOR="#fff";var c=YAHOO.util;YAHOO.extend(a,c.Anim);var d=a.superclass;var b=a.prototype;b.patterns.color=/color$/i;b.patterns.rgb=/^rgb\(([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\)$/i;b.patterns.hex=/^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i;b.patterns.hex3=/^#?([0-9A-F]{1})([0-9A-F]{1})([0-9A-F]{1})$/i;
b.patterns.transparent=/^transparent|rgba\(0, 0, 0, 0\)$/;b.parseColor=function(e){if(e.length==3){return e;}var f=this.patterns.hex.exec(e);if(f&&f.length==4){return[parseInt(f[1],16),parseInt(f[2],16),parseInt(f[3],16)];}f=this.patterns.rgb.exec(e);if(f&&f.length==4){return[parseInt(f[1],10),parseInt(f[2],10),parseInt(f[3],10)];}f=this.patterns.hex3.exec(e);if(f&&f.length==4){return[parseInt(f[1]+f[1],16),parseInt(f[2]+f[2],16),parseInt(f[3]+f[3],16)];}return null;};b.getAttribute=function(e){var g=this.getEl();if(this.patterns.color.test(e)){var i=YAHOO.util.Dom.getStyle(g,e);var h=this;if(this.patterns.transparent.test(i)){var f=YAHOO.util.Dom.getAncestorBy(g,function(j){return !h.patterns.transparent.test(i);});if(f){i=c.Dom.getStyle(f,e);}else{i=a.DEFAULT_BGCOLOR;}}}else{i=d.getAttribute.call(this,e);}return i;};b.doMethod=function(f,k,g){var j;if(this.patterns.color.test(f)){j=[];for(var h=0,e=k.length;h<e;++h){j[h]=d.doMethod.call(this,f,k[h],g[h]);}j="rgb("+Math.floor(j[0])+","+Math.floor(j[1])+","+Math.floor(j[2])+")";}else{j=d.doMethod.call(this,f,k,g);}return j;};b.setRuntimeAttribute=function(f){d.setRuntimeAttribute.call(this,f);if(this.patterns.color.test(f)){var h=this.attributes;var k=this.parseColor(this.runtimeAttributes[f].start);var g=this.parseColor(this.runtimeAttributes[f].end);if(typeof h[f]["to"]==="undefined"&&typeof h[f]["by"]!=="undefined"){g=this.parseColor(h[f].by);for(var j=0,e=k.length;j<e;++j){g[j]=k[j]+g[j];}}this.runtimeAttributes[f].start=k;this.runtimeAttributes[f].end=g;}};c.ColorAnim=a;})();
/*!
TERMS OF USE - EASING EQUATIONS
Open source under the BSD License.
Copyright 2001 Robert Penner All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

 * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of the author nor the names of contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
YAHOO.util.Easing={easeNone:function(e,a,g,f){return g*e/f+a;},easeIn:function(e,a,g,f){return g*(e/=f)*e+a;},easeOut:function(e,a,g,f){return -g*(e/=f)*(e-2)+a;},easeBoth:function(e,a,g,f){if((e/=f/2)<1){return g/2*e*e+a;}return -g/2*((--e)*(e-2)-1)+a;},easeInStrong:function(e,a,g,f){return g*(e/=f)*e*e*e+a;},easeOutStrong:function(e,a,g,f){return -g*((e=e/f-1)*e*e*e-1)+a;},easeBothStrong:function(e,a,g,f){if((e/=f/2)<1){return g/2*e*e*e*e+a;}return -g/2*((e-=2)*e*e*e-2)+a;},elasticIn:function(g,e,k,j,f,i){if(g==0){return e;}if((g/=j)==1){return e+k;}if(!i){i=j*0.3;}if(!f||f<Math.abs(k)){f=k;var h=i/4;}else{var h=i/(2*Math.PI)*Math.asin(k/f);}return -(f*Math.pow(2,10*(g-=1))*Math.sin((g*j-h)*(2*Math.PI)/i))+e;},elasticOut:function(g,e,k,j,f,i){if(g==0){return e;}if((g/=j)==1){return e+k;}if(!i){i=j*0.3;}if(!f||f<Math.abs(k)){f=k;var h=i/4;}else{var h=i/(2*Math.PI)*Math.asin(k/f);}return f*Math.pow(2,-10*g)*Math.sin((g*j-h)*(2*Math.PI)/i)+k+e;},elasticBoth:function(g,e,k,j,f,i){if(g==0){return e;}if((g/=j/2)==2){return e+k;}if(!i){i=j*(0.3*1.5);}if(!f||f<Math.abs(k)){f=k;var h=i/4;}else{var h=i/(2*Math.PI)*Math.asin(k/f);}if(g<1){return -0.5*(f*Math.pow(2,10*(g-=1))*Math.sin((g*j-h)*(2*Math.PI)/i))+e;}return f*Math.pow(2,-10*(g-=1))*Math.sin((g*j-h)*(2*Math.PI)/i)*0.5+k+e;},backIn:function(e,a,h,g,f){if(typeof f=="undefined"){f=1.70158;}return h*(e/=g)*e*((f+1)*e-f)+a;},backOut:function(e,a,h,g,f){if(typeof f=="undefined"){f=1.70158;}return h*((e=e/g-1)*e*((f+1)*e+f)+1)+a;},backBoth:function(e,a,h,g,f){if(typeof f=="undefined"){f=1.70158;}if((e/=g/2)<1){return h/2*(e*e*(((f*=(1.525))+1)*e-f))+a;}return h/2*((e-=2)*e*(((f*=(1.525))+1)*e+f)+2)+a;},bounceIn:function(e,a,g,f){return g-YAHOO.util.Easing.bounceOut(f-e,0,g,f)+a;},bounceOut:function(e,a,g,f){if((e/=f)<(1/2.75)){return g*(7.5625*e*e)+a;}else{if(e<(2/2.75)){return g*(7.5625*(e-=(1.5/2.75))*e+0.75)+a;}else{if(e<(2.5/2.75)){return g*(7.5625*(e-=(2.25/2.75))*e+0.9375)+a;}}}return g*(7.5625*(e-=(2.625/2.75))*e+0.984375)+a;},bounceBoth:function(e,a,g,f){if(e<f/2){return YAHOO.util.Easing.bounceIn(e*2,0,g,f)*0.5+a;}return YAHOO.util.Easing.bounceOut(e*2-f,0,g,f)*0.5+g*0.5+a;}};(function(){var a=function(h,g,i,j){if(h){a.superclass.constructor.call(this,h,g,i,j);}};a.NAME="Motion";var e=YAHOO.util;YAHOO.extend(a,e.ColorAnim);var f=a.superclass;var c=a.prototype;c.patterns.points=/^points$/i;c.setAttribute=function(g,i,h){if(this.patterns.points.test(g)){h=h||"px";f.setAttribute.call(this,"left",i[0],h);f.setAttribute.call(this,"top",i[1],h);}else{f.setAttribute.call(this,g,i,h);}};c.getAttribute=function(g){if(this.patterns.points.test(g)){var h=[f.getAttribute.call(this,"left"),f.getAttribute.call(this,"top")];}else{h=f.getAttribute.call(this,g);}return h;};c.doMethod=function(g,k,h){var j=null;if(this.patterns.points.test(g)){var i=this.method(this.currentFrame,0,100,this.totalFrames)/100;j=e.Bezier.getPosition(this.runtimeAttributes[g],i);
}else{j=f.doMethod.call(this,g,k,h);}return j;};c.setRuntimeAttribute=function(q){if(this.patterns.points.test(q)){var h=this.getEl();var k=this.attributes;var g;var m=k["points"]["control"]||[];var j;var n,p;if(m.length>0&&!(m[0] instanceof Array)){m=[m];}else{var l=[];for(n=0,p=m.length;n<p;++n){l[n]=m[n];}m=l;}if(e.Dom.getStyle(h,"position")=="static"){e.Dom.setStyle(h,"position","relative");}if(d(k["points"]["from"])){e.Dom.setXY(h,k["points"]["from"]);}else{e.Dom.setXY(h,e.Dom.getXY(h));}g=this.getAttribute("points");if(d(k["points"]["to"])){j=b.call(this,k["points"]["to"],g);var o=e.Dom.getXY(this.getEl());for(n=0,p=m.length;n<p;++n){m[n]=b.call(this,m[n],g);}}else{if(d(k["points"]["by"])){j=[g[0]+k["points"]["by"][0],g[1]+k["points"]["by"][1]];for(n=0,p=m.length;n<p;++n){m[n]=[g[0]+m[n][0],g[1]+m[n][1]];}}}this.runtimeAttributes[q]=[g];if(m.length>0){this.runtimeAttributes[q]=this.runtimeAttributes[q].concat(m);}this.runtimeAttributes[q][this.runtimeAttributes[q].length]=j;}else{f.setRuntimeAttribute.call(this,q);}};var b=function(g,i){var h=e.Dom.getXY(this.getEl());g=[g[0]-h[0]+i[0],g[1]-h[1]+i[1]];return g;};var d=function(g){return(typeof g!=="undefined");};e.Motion=a;})();(function(){var d=function(f,e,g,h){if(f){d.superclass.constructor.call(this,f,e,g,h);}};d.NAME="Scroll";var b=YAHOO.util;YAHOO.extend(d,b.ColorAnim);var c=d.superclass;var a=d.prototype;a.doMethod=function(e,h,f){var g=null;if(e=="scroll"){g=[this.method(this.currentFrame,h[0],f[0]-h[0],this.totalFrames),this.method(this.currentFrame,h[1],f[1]-h[1],this.totalFrames)];}else{g=c.doMethod.call(this,e,h,f);}return g;};a.getAttribute=function(e){var g=null;var f=this.getEl();if(e=="scroll"){g=[f.scrollLeft,f.scrollTop];}else{g=c.getAttribute.call(this,e);}return g;};a.setAttribute=function(e,h,g){var f=this.getEl();if(e=="scroll"){f.scrollLeft=h[0];f.scrollTop=h[1];}else{c.setAttribute.call(this,e,h,g);}};b.Scroll=d;})();YAHOO.register("animation",YAHOO.util.Anim,{version:"2.9.0",build:"2800"});

/********* ../yui/connection/connection-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
YAHOO.util.Connect={_msxml_progid:["Microsoft.XMLHTTP","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP"],_http_headers:{},_has_http_headers:false,_use_default_post_header:true,_default_post_header:"application/x-www-form-urlencoded; charset=UTF-8",_default_form_header:"application/x-www-form-urlencoded",_use_default_xhr_header:true,_default_xhr_header:"XMLHttpRequest",_has_default_headers:true,_isFormSubmit:false,_default_headers:{},_poll:{},_timeOut:{},_polling_interval:50,_transaction_id:0,startEvent:new YAHOO.util.CustomEvent("start"),completeEvent:new YAHOO.util.CustomEvent("complete"),successEvent:new YAHOO.util.CustomEvent("success"),failureEvent:new YAHOO.util.CustomEvent("failure"),abortEvent:new YAHOO.util.CustomEvent("abort"),_customEvents:{onStart:["startEvent","start"],onComplete:["completeEvent","complete"],onSuccess:["successEvent","success"],onFailure:["failureEvent","failure"],onUpload:["uploadEvent","upload"],onAbort:["abortEvent","abort"]},setProgId:function(a){this._msxml_progid.unshift(a);},setDefaultPostHeader:function(a){if(typeof a=="string"){this._default_post_header=a;this._use_default_post_header=true;}else{if(typeof a=="boolean"){this._use_default_post_header=a;}}},setDefaultXhrHeader:function(a){if(typeof a=="string"){this._default_xhr_header=a;}else{this._use_default_xhr_header=a;}},setPollingInterval:function(a){if(typeof a=="number"&&isFinite(a)){this._polling_interval=a;}},createXhrObject:function(g){var d,a,b;try{a=new XMLHttpRequest();d={conn:a,tId:g,xhr:true};}catch(c){for(b=0;b<this._msxml_progid.length;++b){try{a=new ActiveXObject(this._msxml_progid[b]);d={conn:a,tId:g,xhr:true};break;}catch(f){}}}finally{return d;}},getConnectionObject:function(a){var c,d=this._transaction_id;try{if(!a){c=this.createXhrObject(d);}else{c={tId:d};if(a==="xdr"){c.conn=this._transport;c.xdr=true;}else{if(a==="upload"){c.upload=true;}}}if(c){this._transaction_id++;}}catch(b){}return c;},asyncRequest:function(h,d,g,a){var b=g&&g.argument?g.argument:null,e=this,f,c;if(this._isFileUpload){c="upload";}else{if(g&&g.xdr){c="xdr";}}f=this.getConnectionObject(c);if(!f){return null;}else{if(g&&g.customevents){this.initCustomEvents(f,g);}if(this._isFormSubmit){if(this._isFileUpload){window.setTimeout(function(){e.uploadFile(f,g,d,a);},10);return f;}if(h.toUpperCase()=="GET"){if(this._sFormData.length!==0){d+=((d.indexOf("?")==-1)?"?":"&")+this._sFormData;}}else{if(h.toUpperCase()=="POST"){a=a?this._sFormData+"&"+a:this._sFormData;}}}if(h.toUpperCase()=="GET"&&(g&&g.cache===false)){d+=((d.indexOf("?")==-1)?"?":"&")+"rnd="+new Date().valueOf().toString();}if(this._use_default_xhr_header){if(!this._default_headers["X-Requested-With"]){this.initHeader("X-Requested-With",this._default_xhr_header,true);}}if((h.toUpperCase()==="POST"&&this._use_default_post_header)&&this._isFormSubmit===false){this.initHeader("Content-Type",this._default_post_header);}if(f.xdr){this.xdr(f,h,d,g,a);return f;}f.conn.open(h,d,true);if(this._has_default_headers||this._has_http_headers){this.setHeader(f);}this.handleReadyState(f,g);f.conn.send(a||"");if(this._isFormSubmit===true){this.resetFormState();}this.startEvent.fire(f,b);if(f.startEvent){f.startEvent.fire(f,b);}return f;}},initCustomEvents:function(a,c){var b;for(b in c.customevents){if(this._customEvents[b][0]){a[this._customEvents[b][0]]=new YAHOO.util.CustomEvent(this._customEvents[b][1],(c.scope)?c.scope:null);a[this._customEvents[b][0]].subscribe(c.customevents[b]);}}},handleReadyState:function(c,d){var b=this,a=(d&&d.argument)?d.argument:null;if(d&&d.timeout){this._timeOut[c.tId]=window.setTimeout(function(){b.abort(c,d,true);},d.timeout);}this._poll[c.tId]=window.setInterval(function(){if(c.conn&&c.conn.readyState===4){window.clearInterval(b._poll[c.tId]);delete b._poll[c.tId];if(d&&d.timeout){window.clearTimeout(b._timeOut[c.tId]);delete b._timeOut[c.tId];}b.completeEvent.fire(c,a);if(c.completeEvent){c.completeEvent.fire(c,a);}b.handleTransactionResponse(c,d);}},this._polling_interval);},handleTransactionResponse:function(b,j,d){var f,a,h=(j&&j.argument)?j.argument:null,c=(b.r&&b.r.statusText==="xdr:success")?true:false,i=(b.r&&b.r.statusText==="xdr:failure")?true:false,k=d;try{if((b.conn.status!==undefined&&b.conn.status!==0)||c){f=b.conn.status;}else{if(i&&!k){f=0;}else{f=13030;}}}catch(g){f=13030;}if((f>=200&&f<300)||f===1223||c){a=b.xdr?b.r:this.createResponseObject(b,h);if(j&&j.success){if(!j.scope){j.success(a);}else{j.success.apply(j.scope,[a]);}}this.successEvent.fire(a);if(b.successEvent){b.successEvent.fire(a);}}else{switch(f){case 12002:case 12029:case 12030:case 12031:case 12152:case 13030:a=this.createExceptionObject(b.tId,h,(d?d:false));if(j&&j.failure){if(!j.scope){j.failure(a);}else{j.failure.apply(j.scope,[a]);}}break;default:a=(b.xdr)?b.response:this.createResponseObject(b,h);if(j&&j.failure){if(!j.scope){j.failure(a);}else{j.failure.apply(j.scope,[a]);}}}this.failureEvent.fire(a);if(b.failureEvent){b.failureEvent.fire(a);}}this.releaseObject(b);a=null;},createResponseObject:function(a,h){var d={},k={},f,c,g,b;try{c=a.conn.getAllResponseHeaders();g=c.split("\n");for(f=0;f<g.length;f++){b=g[f].indexOf(":");if(b!=-1){k[g[f].substring(0,b)]=YAHOO.lang.trim(g[f].substring(b+2));}}}catch(j){}d.tId=a.tId;d.status=(a.conn.status==1223)?204:a.conn.status;d.statusText=(a.conn.status==1223)?"No Content":a.conn.statusText;d.getResponseHeader=k;d.getAllResponseHeaders=c;d.responseText=a.conn.responseText;d.responseXML=a.conn.responseXML;if(h){d.argument=h;}return d;},createExceptionObject:function(h,d,a){var f=0,g="communication failure",c=-1,b="transaction aborted",e={};e.tId=h;if(a){e.status=c;e.statusText=b;}else{e.status=f;e.statusText=g;}if(d){e.argument=d;}return e;},initHeader:function(a,d,c){var b=(c)?this._default_headers:this._http_headers;b[a]=d;if(c){this._has_default_headers=true;}else{this._has_http_headers=true;}},setHeader:function(a){var b;if(this._has_default_headers){for(b in this._default_headers){if(YAHOO.lang.hasOwnProperty(this._default_headers,b)){a.conn.setRequestHeader(b,this._default_headers[b]);
}}}if(this._has_http_headers){for(b in this._http_headers){if(YAHOO.lang.hasOwnProperty(this._http_headers,b)){a.conn.setRequestHeader(b,this._http_headers[b]);}}this._http_headers={};this._has_http_headers=false;}},resetDefaultHeaders:function(){this._default_headers={};this._has_default_headers=false;},abort:function(e,g,a){var d,b=(g&&g.argument)?g.argument:null;e=e||{};if(e.conn){if(e.xhr){if(this.isCallInProgress(e)){e.conn.abort();window.clearInterval(this._poll[e.tId]);delete this._poll[e.tId];if(a){window.clearTimeout(this._timeOut[e.tId]);delete this._timeOut[e.tId];}d=true;}}else{if(e.xdr){e.conn.abort(e.tId);d=true;}}}else{if(e.upload){var c="yuiIO"+e.tId;var f=document.getElementById(c);if(f){YAHOO.util.Event.removeListener(f,"load");document.body.removeChild(f);if(a){window.clearTimeout(this._timeOut[e.tId]);delete this._timeOut[e.tId];}d=true;}}else{d=false;}}if(d===true){this.abortEvent.fire(e,b);if(e.abortEvent){e.abortEvent.fire(e,b);}this.handleTransactionResponse(e,g,true);}return d;},isCallInProgress:function(a){a=a||{};if(a.xhr&&a.conn){return a.conn.readyState!==4&&a.conn.readyState!==0;}else{if(a.xdr&&a.conn){return a.conn.isCallInProgress(a.tId);}else{if(a.upload===true){return document.getElementById("yuiIO"+a.tId)?true:false;}else{return false;}}}},releaseObject:function(a){if(a&&a.conn){a.conn=null;a=null;}}};(function(){var g=YAHOO.util.Connect,h={};function d(i){var j='<object id="YUIConnectionSwf" type="application/x-shockwave-flash" data="'+i+'" width="0" height="0">'+'<param name="movie" value="'+i+'">'+'<param name="allowScriptAccess" value="always">'+"</object>",k=document.createElement("div");document.body.appendChild(k);k.innerHTML=j;}function b(l,i,j,n,k){h[parseInt(l.tId)]={"o":l,"c":n};if(k){n.method=i;n.data=k;}l.conn.send(j,n,l.tId);}function e(i){d(i);g._transport=document.getElementById("YUIConnectionSwf");}function c(){g.xdrReadyEvent.fire();}function a(j,i){if(j){g.startEvent.fire(j,i.argument);if(j.startEvent){j.startEvent.fire(j,i.argument);}}}function f(j){var k=h[j.tId].o,i=h[j.tId].c;if(j.statusText==="xdr:start"){a(k,i);return;}j.responseText=decodeURI(j.responseText);k.r=j;if(i.argument){k.r.argument=i.argument;}this.handleTransactionResponse(k,i,j.statusText==="xdr:abort"?true:false);delete h[j.tId];}g.xdr=b;g.swf=d;g.transport=e;g.xdrReadyEvent=new YAHOO.util.CustomEvent("xdrReady");g.xdrReady=c;g.handleXdrResponse=f;})();(function(){var e=YAHOO.util.Connect,g=YAHOO.util.Event,a=document.documentMode?document.documentMode:false;e._isFileUpload=false;e._formNode=null;e._sFormData=null;e._submitElementValue=null;e.uploadEvent=new YAHOO.util.CustomEvent("upload");e._hasSubmitListener=function(){if(g){g.addListener(document,"click",function(k){var j=g.getTarget(k),i=j.nodeName.toLowerCase();if((i==="input"||i==="button")&&(j.type&&j.type.toLowerCase()=="submit")){e._submitElementValue=encodeURIComponent(j.name)+"="+encodeURIComponent(j.value);}});return true;}return false;}();function h(w,r,m){var v,l,u,s,z,t=false,p=[],y=0,o,q,n,x,k;this.resetFormState();if(typeof w=="string"){v=(document.getElementById(w)||document.forms[w]);}else{if(typeof w=="object"){v=w;}else{return;}}if(r){this.createFrame(m?m:null);this._isFormSubmit=true;this._isFileUpload=true;this._formNode=v;return;}for(o=0,q=v.elements.length;o<q;++o){l=v.elements[o];z=l.disabled;u=l.name;if(!z&&u){u=encodeURIComponent(u)+"=";s=encodeURIComponent(l.value);switch(l.type){case"select-one":if(l.selectedIndex>-1){k=l.options[l.selectedIndex];p[y++]=u+encodeURIComponent((k.attributes.value&&k.attributes.value.specified)?k.value:k.text);}break;case"select-multiple":if(l.selectedIndex>-1){for(n=l.selectedIndex,x=l.options.length;n<x;++n){k=l.options[n];if(k.selected){p[y++]=u+encodeURIComponent((k.attributes.value&&k.attributes.value.specified)?k.value:k.text);}}}break;case"radio":case"checkbox":if(l.checked){p[y++]=u+s;}break;case"file":case undefined:case"reset":case"button":break;case"submit":if(t===false){if(this._hasSubmitListener&&this._submitElementValue){p[y++]=this._submitElementValue;}t=true;}break;default:p[y++]=u+s;}}}this._isFormSubmit=true;this._sFormData=p.join("&");this.initHeader("Content-Type",this._default_form_header);return this._sFormData;}function d(){this._isFormSubmit=false;this._isFileUpload=false;this._formNode=null;this._sFormData="";}function c(i){var j="yuiIO"+this._transaction_id,l=(a===9)?true:false,k;if(YAHOO.env.ua.ie&&!l){k=document.createElement('<iframe id="'+j+'" name="'+j+'" />');if(typeof i=="boolean"){k.src="javascript:false";}}else{k=document.createElement("iframe");k.id=j;k.name=j;}k.style.position="absolute";k.style.top="-1000px";k.style.left="-1000px";document.body.appendChild(k);}function f(j){var m=[],k=j.split("&"),l,n;for(l=0;l<k.length;l++){n=k[l].indexOf("=");if(n!=-1){m[l]=document.createElement("input");m[l].type="hidden";m[l].name=decodeURIComponent(k[l].substring(0,n));m[l].value=decodeURIComponent(k[l].substring(n+1));this._formNode.appendChild(m[l]);}}return m;}function b(m,y,n,l){var t="yuiIO"+m.tId,u="multipart/form-data",w=document.getElementById(t),p=(a>=8)?true:false,z=this,v=(y&&y.argument)?y.argument:null,x,s,k,r,j,q;j={action:this._formNode.getAttribute("action"),method:this._formNode.getAttribute("method"),target:this._formNode.getAttribute("target")};this._formNode.setAttribute("action",n);this._formNode.setAttribute("method","POST");this._formNode.setAttribute("target",t);if(YAHOO.env.ua.ie&&!p){this._formNode.setAttribute("encoding",u);}else{this._formNode.setAttribute("enctype",u);}if(l){x=this.appendPostData(l);}this._formNode.submit();this.startEvent.fire(m,v);if(m.startEvent){m.startEvent.fire(m,v);}if(y&&y.timeout){this._timeOut[m.tId]=window.setTimeout(function(){z.abort(m,y,true);},y.timeout);}if(x&&x.length>0){for(s=0;s<x.length;s++){this._formNode.removeChild(x[s]);}}for(k in j){if(YAHOO.lang.hasOwnProperty(j,k)){if(j[k]){this._formNode.setAttribute(k,j[k]);}else{this._formNode.removeAttribute(k);}}}this.resetFormState();
q=function(){var i,A,B;if(y&&y.timeout){window.clearTimeout(z._timeOut[m.tId]);delete z._timeOut[m.tId];}z.completeEvent.fire(m,v);if(m.completeEvent){m.completeEvent.fire(m,v);}r={tId:m.tId,argument:v};try{i=w.contentWindow.document.getElementsByTagName("body")[0];A=w.contentWindow.document.getElementsByTagName("pre")[0];if(i){if(A){B=A.textContent?A.textContent:A.innerText;}else{B=i.textContent?i.textContent:i.innerText;}}r.responseText=B;r.responseXML=w.contentWindow.document.XMLDocument?w.contentWindow.document.XMLDocument:w.contentWindow.document;}catch(o){}if(y&&y.upload){if(!y.scope){y.upload(r);}else{y.upload.apply(y.scope,[r]);}}z.uploadEvent.fire(r);if(m.uploadEvent){m.uploadEvent.fire(r);}g.removeListener(w,"load",q);setTimeout(function(){document.body.removeChild(w);z.releaseObject(m);},100);};g.addListener(w,"load",q);}e.setForm=h;e.resetFormState=d;e.createFrame=c;e.appendPostData=f;e.uploadFile=b;})();YAHOO.register("connection",YAHOO.util.Connect,{version:"2.9.0",build:"2800"});

/********* ../yui/dragdrop/dragdrop-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
if(!YAHOO.util.DragDropMgr){YAHOO.util.DragDropMgr=function(){var A=YAHOO.util.Event,B=YAHOO.util.Dom;return{useShim:false,_shimActive:false,_shimState:false,_debugShim:false,_createShim:function(){var C=document.createElement("div");C.id="yui-ddm-shim";if(document.body.firstChild){document.body.insertBefore(C,document.body.firstChild);}else{document.body.appendChild(C);}C.style.display="none";C.style.backgroundColor="red";C.style.position="absolute";C.style.zIndex="99999";B.setStyle(C,"opacity","0");this._shim=C;A.on(C,"mouseup",this.handleMouseUp,this,true);A.on(C,"mousemove",this.handleMouseMove,this,true);A.on(window,"scroll",this._sizeShim,this,true);},_sizeShim:function(){if(this._shimActive){var C=this._shim;C.style.height=B.getDocumentHeight()+"px";C.style.width=B.getDocumentWidth()+"px";C.style.top="0";C.style.left="0";}},_activateShim:function(){if(this.useShim){if(!this._shim){this._createShim();}this._shimActive=true;var C=this._shim,D="0";if(this._debugShim){D=".5";}B.setStyle(C,"opacity",D);this._sizeShim();C.style.display="block";}},_deactivateShim:function(){this._shim.style.display="none";this._shimActive=false;},_shim:null,ids:{},handleIds:{},dragCurrent:null,dragOvers:{},deltaX:0,deltaY:0,preventDefault:true,stopPropagation:true,initialized:false,locked:false,interactionInfo:null,init:function(){this.initialized=true;},POINT:0,INTERSECT:1,STRICT_INTERSECT:2,mode:0,_execOnAll:function(E,D){for(var F in this.ids){for(var C in this.ids[F]){var G=this.ids[F][C];if(!this.isTypeOfDD(G)){continue;}G[E].apply(G,D);}}},_onLoad:function(){this.init();A.on(document,"mouseup",this.handleMouseUp,this,true);A.on(document,"mousemove",this.handleMouseMove,this,true);A.on(window,"unload",this._onUnload,this,true);A.on(window,"resize",this._onResize,this,true);},_onResize:function(C){this._execOnAll("resetConstraints",[]);},lock:function(){this.locked=true;},unlock:function(){this.locked=false;},isLocked:function(){return this.locked;},locationCache:{},useCache:true,clickPixelThresh:3,clickTimeThresh:1000,dragThreshMet:false,clickTimeout:null,startX:0,startY:0,fromTimeout:false,regDragDrop:function(D,C){if(!this.initialized){this.init();}if(!this.ids[C]){this.ids[C]={};}this.ids[C][D.id]=D;},removeDDFromGroup:function(E,C){if(!this.ids[C]){this.ids[C]={};}var D=this.ids[C];if(D&&D[E.id]){delete D[E.id];}},_remove:function(E){for(var D in E.groups){if(D){var C=this.ids[D];if(C&&C[E.id]){delete C[E.id];}}}delete this.handleIds[E.id];},regHandle:function(D,C){if(!this.handleIds[D]){this.handleIds[D]={};}this.handleIds[D][C]=C;},isDragDrop:function(C){return(this.getDDById(C))?true:false;},getRelated:function(H,D){var G=[];for(var F in H.groups){for(var E in this.ids[F]){var C=this.ids[F][E];if(!this.isTypeOfDD(C)){continue;}if(!D||C.isTarget){G[G.length]=C;}}}return G;},isLegalTarget:function(G,F){var D=this.getRelated(G,true);for(var E=0,C=D.length;E<C;++E){if(D[E].id==F.id){return true;}}return false;},isTypeOfDD:function(C){return(C&&C.__ygDragDrop);},isHandle:function(D,C){return(this.handleIds[D]&&this.handleIds[D][C]);},getDDById:function(D){for(var C in this.ids){if(this.ids[C][D]){return this.ids[C][D];}}return null;},handleMouseDown:function(E,D){this.currentTarget=YAHOO.util.Event.getTarget(E);this.dragCurrent=D;var C=D.getEl();this.startX=YAHOO.util.Event.getPageX(E);this.startY=YAHOO.util.Event.getPageY(E);this.deltaX=this.startX-C.offsetLeft;this.deltaY=this.startY-C.offsetTop;this.dragThreshMet=false;this.clickTimeout=setTimeout(function(){var F=YAHOO.util.DDM;F.startDrag(F.startX,F.startY);F.fromTimeout=true;},this.clickTimeThresh);},startDrag:function(C,E){if(this.dragCurrent&&this.dragCurrent.useShim){this._shimState=this.useShim;this.useShim=true;}this._activateShim();clearTimeout(this.clickTimeout);var D=this.dragCurrent;if(D&&D.events.b4StartDrag){D.b4StartDrag(C,E);D.fireEvent("b4StartDragEvent",{x:C,y:E});}if(D&&D.events.startDrag){D.startDrag(C,E);D.fireEvent("startDragEvent",{x:C,y:E});}this.dragThreshMet=true;},handleMouseUp:function(C){if(this.dragCurrent){clearTimeout(this.clickTimeout);if(this.dragThreshMet){if(this.fromTimeout){this.fromTimeout=false;this.handleMouseMove(C);}this.fromTimeout=false;this.fireEvents(C,true);}else{}this.stopDrag(C);this.stopEvent(C);}},stopEvent:function(C){if(this.stopPropagation){YAHOO.util.Event.stopPropagation(C);}if(this.preventDefault){YAHOO.util.Event.preventDefault(C);}},stopDrag:function(E,D){var C=this.dragCurrent;if(C&&!D){if(this.dragThreshMet){if(C.events.b4EndDrag){C.b4EndDrag(E);C.fireEvent("b4EndDragEvent",{e:E});}if(C.events.endDrag){C.endDrag(E);C.fireEvent("endDragEvent",{e:E});}}if(C.events.mouseUp){C.onMouseUp(E);C.fireEvent("mouseUpEvent",{e:E});}}if(this._shimActive){this._deactivateShim();if(this.dragCurrent&&this.dragCurrent.useShim){this.useShim=this._shimState;this._shimState=false;}}this.dragCurrent=null;this.dragOvers={};},handleMouseMove:function(F){var C=this.dragCurrent;if(C){if(YAHOO.env.ua.ie&&(YAHOO.env.ua.ie<9)&&!F.button){this.stopEvent(F);return this.handleMouseUp(F);}else{if(F.clientX<0||F.clientY<0){}}if(!this.dragThreshMet){var E=Math.abs(this.startX-YAHOO.util.Event.getPageX(F));var D=Math.abs(this.startY-YAHOO.util.Event.getPageY(F));if(E>this.clickPixelThresh||D>this.clickPixelThresh){this.startDrag(this.startX,this.startY);}}if(this.dragThreshMet){if(C&&C.events.b4Drag){C.b4Drag(F);C.fireEvent("b4DragEvent",{e:F});}if(C&&C.events.drag){C.onDrag(F);C.fireEvent("dragEvent",{e:F});}if(C){this.fireEvents(F,false);}}this.stopEvent(F);}},fireEvents:function(W,M){var c=this.dragCurrent;if(!c||c.isLocked()||c.dragOnly){return;}var O=YAHOO.util.Event.getPageX(W),N=YAHOO.util.Event.getPageY(W),Q=new YAHOO.util.Point(O,N),K=c.getTargetCoord(Q.x,Q.y),F=c.getDragEl(),E=["out","over","drop","enter"],V=new YAHOO.util.Region(K.y,K.x+F.offsetWidth,K.y+F.offsetHeight,K.x),I=[],D={},L={},R=[],d={outEvts:[],overEvts:[],dropEvts:[],enterEvts:[]};for(var T in this.dragOvers){var f=this.dragOvers[T];if(!this.isTypeOfDD(f)){continue;
}if(!this.isOverTarget(Q,f,this.mode,V)){d.outEvts.push(f);}I[T]=true;delete this.dragOvers[T];}for(var S in c.groups){if("string"!=typeof S){continue;}for(T in this.ids[S]){var G=this.ids[S][T];if(!this.isTypeOfDD(G)){continue;}if(G.isTarget&&!G.isLocked()&&G!=c){if(this.isOverTarget(Q,G,this.mode,V)){D[S]=true;if(M){d.dropEvts.push(G);}else{if(!I[G.id]){d.enterEvts.push(G);}else{d.overEvts.push(G);}this.dragOvers[G.id]=G;}}}}}this.interactionInfo={out:d.outEvts,enter:d.enterEvts,over:d.overEvts,drop:d.dropEvts,point:Q,draggedRegion:V,sourceRegion:this.locationCache[c.id],validDrop:M};for(var C in D){R.push(C);}if(M&&!d.dropEvts.length){this.interactionInfo.validDrop=false;if(c.events.invalidDrop){c.onInvalidDrop(W);c.fireEvent("invalidDropEvent",{e:W});}}for(T=0;T<E.length;T++){var Z=null;if(d[E[T]+"Evts"]){Z=d[E[T]+"Evts"];}if(Z&&Z.length){var H=E[T].charAt(0).toUpperCase()+E[T].substr(1),Y="onDrag"+H,J="b4Drag"+H,P="drag"+H+"Event",X="drag"+H;if(this.mode){if(c.events[J]){c[J](W,Z,R);L[Y]=c.fireEvent(J+"Event",{event:W,info:Z,group:R});}if(c.events[X]&&(L[Y]!==false)){c[Y](W,Z,R);c.fireEvent(P,{event:W,info:Z,group:R});}}else{for(var a=0,U=Z.length;a<U;++a){if(c.events[J]){c[J](W,Z[a].id,R[0]);L[Y]=c.fireEvent(J+"Event",{event:W,info:Z[a].id,group:R[0]});}if(c.events[X]&&(L[Y]!==false)){c[Y](W,Z[a].id,R[0]);c.fireEvent(P,{event:W,info:Z[a].id,group:R[0]});}}}}}},getBestMatch:function(E){var G=null;var D=E.length;if(D==1){G=E[0];}else{for(var F=0;F<D;++F){var C=E[F];if(this.mode==this.INTERSECT&&C.cursorIsOver){G=C;break;}else{if(!G||!G.overlap||(C.overlap&&G.overlap.getArea()<C.overlap.getArea())){G=C;}}}}return G;},refreshCache:function(D){var F=D||this.ids;for(var C in F){if("string"!=typeof C){continue;}for(var E in this.ids[C]){var G=this.ids[C][E];if(this.isTypeOfDD(G)){var H=this.getLocation(G);if(H){this.locationCache[G.id]=H;}else{delete this.locationCache[G.id];}}}}},verifyEl:function(D){try{if(D){var C=D.offsetParent;if(C){return true;}}}catch(E){}return false;},getLocation:function(H){if(!this.isTypeOfDD(H)){return null;}var F=H.getEl(),K,E,D,M,L,N,C,J,G;try{K=YAHOO.util.Dom.getXY(F);}catch(I){}if(!K){return null;}E=K[0];D=E+F.offsetWidth;M=K[1];L=M+F.offsetHeight;N=M-H.padding[0];C=D+H.padding[1];J=L+H.padding[2];G=E-H.padding[3];return new YAHOO.util.Region(N,C,J,G);},isOverTarget:function(K,C,E,F){var G=this.locationCache[C.id];if(!G||!this.useCache){G=this.getLocation(C);this.locationCache[C.id]=G;}if(!G){return false;}C.cursorIsOver=G.contains(K);var J=this.dragCurrent;if(!J||(!E&&!J.constrainX&&!J.constrainY)){return C.cursorIsOver;}C.overlap=null;if(!F){var H=J.getTargetCoord(K.x,K.y);var D=J.getDragEl();F=new YAHOO.util.Region(H.y,H.x+D.offsetWidth,H.y+D.offsetHeight,H.x);}var I=F.intersect(G);if(I){C.overlap=I;return(E)?true:C.cursorIsOver;}else{return false;}},_onUnload:function(D,C){this.unregAll();},unregAll:function(){if(this.dragCurrent){this.stopDrag();this.dragCurrent=null;}this._execOnAll("unreg",[]);this.ids={};},elementCache:{},getElWrapper:function(D){var C=this.elementCache[D];if(!C||!C.el){C=this.elementCache[D]=new this.ElementWrapper(YAHOO.util.Dom.get(D));}return C;},getElement:function(C){return YAHOO.util.Dom.get(C);},getCss:function(D){var C=YAHOO.util.Dom.get(D);return(C)?C.style:null;},ElementWrapper:function(C){this.el=C||null;this.id=this.el&&C.id;this.css=this.el&&C.style;},getPosX:function(C){return YAHOO.util.Dom.getX(C);},getPosY:function(C){return YAHOO.util.Dom.getY(C);},swapNode:function(E,C){if(E.swapNode){E.swapNode(C);}else{var F=C.parentNode;var D=C.nextSibling;if(D==E){F.insertBefore(E,C);}else{if(C==E.nextSibling){F.insertBefore(C,E);}else{E.parentNode.replaceChild(C,E);F.insertBefore(E,D);}}}},getScroll:function(){var E,C,F=document.documentElement,D=document.body;if(F&&(F.scrollTop||F.scrollLeft)){E=F.scrollTop;C=F.scrollLeft;}else{if(D){E=D.scrollTop;C=D.scrollLeft;}else{}}return{top:E,left:C};},getStyle:function(D,C){return YAHOO.util.Dom.getStyle(D,C);},getScrollTop:function(){return this.getScroll().top;},getScrollLeft:function(){return this.getScroll().left;},moveToEl:function(C,E){var D=YAHOO.util.Dom.getXY(E);YAHOO.util.Dom.setXY(C,D);},getClientHeight:function(){return YAHOO.util.Dom.getViewportHeight();},getClientWidth:function(){return YAHOO.util.Dom.getViewportWidth();},numericSort:function(D,C){return(D-C);},_timeoutCount:0,_addListeners:function(){var C=YAHOO.util.DDM;if(YAHOO.util.Event&&document){C._onLoad();}else{if(C._timeoutCount>2000){}else{setTimeout(C._addListeners,10);if(document&&document.body){C._timeoutCount+=1;}}}},handleWasClicked:function(C,E){if(this.isHandle(E,C.id)){return true;}else{var D=C.parentNode;while(D){if(this.isHandle(E,D.id)){return true;}else{D=D.parentNode;}}}return false;}};}();YAHOO.util.DDM=YAHOO.util.DragDropMgr;YAHOO.util.DDM._addListeners();}(function(){var A=YAHOO.util.Event;var B=YAHOO.util.Dom;YAHOO.util.DragDrop=function(E,C,D){if(E){this.init(E,C,D);}};YAHOO.util.DragDrop.prototype={events:null,on:function(){this.subscribe.apply(this,arguments);},id:null,config:null,dragElId:null,handleElId:null,invalidHandleTypes:null,invalidHandleIds:null,invalidHandleClasses:null,startPageX:0,startPageY:0,groups:null,locked:false,lock:function(){this.locked=true;},unlock:function(){this.locked=false;},isTarget:true,padding:null,dragOnly:false,useShim:false,_domRef:null,__ygDragDrop:true,constrainX:false,constrainY:false,minX:0,maxX:0,minY:0,maxY:0,deltaX:0,deltaY:0,maintainOffset:false,xTicks:null,yTicks:null,primaryButtonOnly:true,available:false,hasOuterHandles:false,cursorIsOver:false,overlap:null,b4StartDrag:function(C,D){},startDrag:function(C,D){},b4Drag:function(C){},onDrag:function(C){},onDragEnter:function(C,D){},b4DragOver:function(C){},onDragOver:function(C,D){},b4DragOut:function(C){},onDragOut:function(C,D){},b4DragDrop:function(C){},onDragDrop:function(C,D){},onInvalidDrop:function(C){},b4EndDrag:function(C){},endDrag:function(C){},b4MouseDown:function(C){},onMouseDown:function(C){},onMouseUp:function(C){},onAvailable:function(){},getEl:function(){if(!this._domRef){this._domRef=B.get(this.id);
}return this._domRef;},getDragEl:function(){return B.get(this.dragElId);},init:function(F,C,D){this.initTarget(F,C,D);A.on(this._domRef||this.id,"mousedown",this.handleMouseDown,this,true);for(var E in this.events){this.createEvent(E+"Event");}},initTarget:function(E,C,D){this.config=D||{};this.events={};this.DDM=YAHOO.util.DDM;this.groups={};if(typeof E!=="string"){this._domRef=E;E=B.generateId(E);}this.id=E;this.addToGroup((C)?C:"default");this.handleElId=E;A.onAvailable(E,this.handleOnAvailable,this,true);this.setDragElId(E);this.invalidHandleTypes={A:"A"};this.invalidHandleIds={};this.invalidHandleClasses=[];this.applyConfig();},applyConfig:function(){this.events={mouseDown:true,b4MouseDown:true,mouseUp:true,b4StartDrag:true,startDrag:true,b4EndDrag:true,endDrag:true,drag:true,b4Drag:true,invalidDrop:true,b4DragOut:true,dragOut:true,dragEnter:true,b4DragOver:true,dragOver:true,b4DragDrop:true,dragDrop:true};if(this.config.events){for(var C in this.config.events){if(this.config.events[C]===false){this.events[C]=false;}}}this.padding=this.config.padding||[0,0,0,0];this.isTarget=(this.config.isTarget!==false);this.maintainOffset=(this.config.maintainOffset);this.primaryButtonOnly=(this.config.primaryButtonOnly!==false);this.dragOnly=((this.config.dragOnly===true)?true:false);this.useShim=((this.config.useShim===true)?true:false);},handleOnAvailable:function(){this.available=true;this.resetConstraints();this.onAvailable();},setPadding:function(E,C,F,D){if(!C&&0!==C){this.padding=[E,E,E,E];}else{if(!F&&0!==F){this.padding=[E,C,E,C];}else{this.padding=[E,C,F,D];}}},setInitPosition:function(F,E){var G=this.getEl();if(!this.DDM.verifyEl(G)){if(G&&G.style&&(G.style.display=="none")){}else{}return;}var D=F||0;var C=E||0;var H=B.getXY(G);this.initPageX=H[0]-D;this.initPageY=H[1]-C;this.lastPageX=H[0];this.lastPageY=H[1];this.setStartPosition(H);},setStartPosition:function(D){var C=D||B.getXY(this.getEl());this.deltaSetXY=null;this.startPageX=C[0];this.startPageY=C[1];},addToGroup:function(C){this.groups[C]=true;this.DDM.regDragDrop(this,C);},removeFromGroup:function(C){if(this.groups[C]){delete this.groups[C];}this.DDM.removeDDFromGroup(this,C);},setDragElId:function(C){this.dragElId=C;},setHandleElId:function(C){if(typeof C!=="string"){C=B.generateId(C);}this.handleElId=C;this.DDM.regHandle(this.id,C);},setOuterHandleElId:function(C){if(typeof C!=="string"){C=B.generateId(C);}A.on(C,"mousedown",this.handleMouseDown,this,true);this.setHandleElId(C);this.hasOuterHandles=true;},unreg:function(){A.removeListener(this.id,"mousedown",this.handleMouseDown);this._domRef=null;this.DDM._remove(this);},isLocked:function(){return(this.DDM.isLocked()||this.locked);},handleMouseDown:function(J,I){var D=J.which||J.button;if(this.primaryButtonOnly&&D>1){return;}if(this.isLocked()){return;}var C=this.b4MouseDown(J),F=true;if(this.events.b4MouseDown){F=this.fireEvent("b4MouseDownEvent",J);}var E=this.onMouseDown(J),H=true;if(this.events.mouseDown){if(E===false){H=false;}else{H=this.fireEvent("mouseDownEvent",J);}}if((C===false)||(E===false)||(F===false)||(H===false)){return;}this.DDM.refreshCache(this.groups);var G=new YAHOO.util.Point(A.getPageX(J),A.getPageY(J));if(!this.hasOuterHandles&&!this.DDM.isOverTarget(G,this)){}else{if(this.clickValidator(J)){this.setStartPosition();this.DDM.handleMouseDown(J,this);this.DDM.stopEvent(J);}else{}}},clickValidator:function(D){var C=YAHOO.util.Event.getTarget(D);return(this.isValidHandleChild(C)&&(this.id==this.handleElId||this.DDM.handleWasClicked(C,this.id)));},getTargetCoord:function(E,D){var C=E-this.deltaX;var F=D-this.deltaY;if(this.constrainX){if(C<this.minX){C=this.minX;}if(C>this.maxX){C=this.maxX;}}if(this.constrainY){if(F<this.minY){F=this.minY;}if(F>this.maxY){F=this.maxY;}}C=this.getTick(C,this.xTicks);F=this.getTick(F,this.yTicks);return{x:C,y:F};},addInvalidHandleType:function(C){var D=C.toUpperCase();this.invalidHandleTypes[D]=D;},addInvalidHandleId:function(C){if(typeof C!=="string"){C=B.generateId(C);}this.invalidHandleIds[C]=C;},addInvalidHandleClass:function(C){this.invalidHandleClasses.push(C);},removeInvalidHandleType:function(C){var D=C.toUpperCase();delete this.invalidHandleTypes[D];},removeInvalidHandleId:function(C){if(typeof C!=="string"){C=B.generateId(C);}delete this.invalidHandleIds[C];},removeInvalidHandleClass:function(D){for(var E=0,C=this.invalidHandleClasses.length;E<C;++E){if(this.invalidHandleClasses[E]==D){delete this.invalidHandleClasses[E];}}},isValidHandleChild:function(F){var E=true;var H;try{H=F.nodeName.toUpperCase();}catch(G){H=F.nodeName;}E=E&&!this.invalidHandleTypes[H];E=E&&!this.invalidHandleIds[F.id];for(var D=0,C=this.invalidHandleClasses.length;E&&D<C;++D){E=!B.hasClass(F,this.invalidHandleClasses[D]);}return E;},setXTicks:function(F,C){this.xTicks=[];this.xTickSize=C;var E={};for(var D=this.initPageX;D>=this.minX;D=D-C){if(!E[D]){this.xTicks[this.xTicks.length]=D;E[D]=true;}}for(D=this.initPageX;D<=this.maxX;D=D+C){if(!E[D]){this.xTicks[this.xTicks.length]=D;E[D]=true;}}this.xTicks.sort(this.DDM.numericSort);},setYTicks:function(F,C){this.yTicks=[];this.yTickSize=C;var E={};for(var D=this.initPageY;D>=this.minY;D=D-C){if(!E[D]){this.yTicks[this.yTicks.length]=D;E[D]=true;}}for(D=this.initPageY;D<=this.maxY;D=D+C){if(!E[D]){this.yTicks[this.yTicks.length]=D;E[D]=true;}}this.yTicks.sort(this.DDM.numericSort);},setXConstraint:function(E,D,C){this.leftConstraint=parseInt(E,10);this.rightConstraint=parseInt(D,10);this.minX=this.initPageX-this.leftConstraint;this.maxX=this.initPageX+this.rightConstraint;if(C){this.setXTicks(this.initPageX,C);}this.constrainX=true;},clearConstraints:function(){this.constrainX=false;this.constrainY=false;this.clearTicks();},clearTicks:function(){this.xTicks=null;this.yTicks=null;this.xTickSize=0;this.yTickSize=0;},setYConstraint:function(C,E,D){this.topConstraint=parseInt(C,10);this.bottomConstraint=parseInt(E,10);this.minY=this.initPageY-this.topConstraint;this.maxY=this.initPageY+this.bottomConstraint;
if(D){this.setYTicks(this.initPageY,D);}this.constrainY=true;},resetConstraints:function(){if(this.initPageX||this.initPageX===0){var D=(this.maintainOffset)?this.lastPageX-this.initPageX:0;var C=(this.maintainOffset)?this.lastPageY-this.initPageY:0;this.setInitPosition(D,C);}else{this.setInitPosition();}if(this.constrainX){this.setXConstraint(this.leftConstraint,this.rightConstraint,this.xTickSize);}if(this.constrainY){this.setYConstraint(this.topConstraint,this.bottomConstraint,this.yTickSize);}},getTick:function(I,F){if(!F){return I;}else{if(F[0]>=I){return F[0];}else{for(var D=0,C=F.length;D<C;++D){var E=D+1;if(F[E]&&F[E]>=I){var H=I-F[D];var G=F[E]-I;return(G>H)?F[D]:F[E];}}return F[F.length-1];}}},toString:function(){return("DragDrop "+this.id);}};YAHOO.augment(YAHOO.util.DragDrop,YAHOO.util.EventProvider);})();YAHOO.util.DD=function(C,A,B){if(C){this.init(C,A,B);}};YAHOO.extend(YAHOO.util.DD,YAHOO.util.DragDrop,{scroll:true,autoOffset:function(C,B){var A=C-this.startPageX;var D=B-this.startPageY;this.setDelta(A,D);},setDelta:function(B,A){this.deltaX=B;this.deltaY=A;},setDragElPos:function(C,B){var A=this.getDragEl();this.alignElWithMouse(A,C,B);},alignElWithMouse:function(C,G,F){var E=this.getTargetCoord(G,F);if(!this.deltaSetXY){var H=[E.x,E.y];YAHOO.util.Dom.setXY(C,H);var D=parseInt(YAHOO.util.Dom.getStyle(C,"left"),10);var B=parseInt(YAHOO.util.Dom.getStyle(C,"top"),10);this.deltaSetXY=[D-E.x,B-E.y];}else{YAHOO.util.Dom.setStyle(C,"left",(E.x+this.deltaSetXY[0])+"px");YAHOO.util.Dom.setStyle(C,"top",(E.y+this.deltaSetXY[1])+"px");}this.cachePosition(E.x,E.y);var A=this;setTimeout(function(){A.autoScroll.call(A,E.x,E.y,C.offsetHeight,C.offsetWidth);},0);},cachePosition:function(B,A){if(B){this.lastPageX=B;this.lastPageY=A;}else{var C=YAHOO.util.Dom.getXY(this.getEl());this.lastPageX=C[0];this.lastPageY=C[1];}},autoScroll:function(J,I,E,K){if(this.scroll){var L=this.DDM.getClientHeight();var B=this.DDM.getClientWidth();var N=this.DDM.getScrollTop();var D=this.DDM.getScrollLeft();var H=E+I;var M=K+J;var G=(L+N-I-this.deltaY);var F=(B+D-J-this.deltaX);var C=40;var A=(document.all)?80:30;if(H>L&&G<C){window.scrollTo(D,N+A);}if(I<N&&N>0&&I-N<C){window.scrollTo(D,N-A);}if(M>B&&F<C){window.scrollTo(D+A,N);}if(J<D&&D>0&&J-D<C){window.scrollTo(D-A,N);}}},applyConfig:function(){YAHOO.util.DD.superclass.applyConfig.call(this);this.scroll=(this.config.scroll!==false);},b4MouseDown:function(A){this.setStartPosition();this.autoOffset(YAHOO.util.Event.getPageX(A),YAHOO.util.Event.getPageY(A));},b4Drag:function(A){this.setDragElPos(YAHOO.util.Event.getPageX(A),YAHOO.util.Event.getPageY(A));},toString:function(){return("DD "+this.id);}});YAHOO.util.DDProxy=function(C,A,B){if(C){this.init(C,A,B);this.initFrame();}};YAHOO.util.DDProxy.dragElId="ygddfdiv";YAHOO.extend(YAHOO.util.DDProxy,YAHOO.util.DD,{resizeFrame:true,centerFrame:false,createFrame:function(){var B=this,A=document.body;if(!A||!A.firstChild){setTimeout(function(){B.createFrame();},50);return;}var F=this.getDragEl(),E=YAHOO.util.Dom;if(!F){F=document.createElement("div");F.id=this.dragElId;var D=F.style;D.position="absolute";D.visibility="hidden";D.cursor="move";D.border="2px solid #aaa";D.zIndex=999;D.height="25px";D.width="25px";var C=document.createElement("div");E.setStyle(C,"height","100%");E.setStyle(C,"width","100%");E.setStyle(C,"background-color","#ccc");E.setStyle(C,"opacity","0");F.appendChild(C);A.insertBefore(F,A.firstChild);}},initFrame:function(){this.createFrame();},applyConfig:function(){YAHOO.util.DDProxy.superclass.applyConfig.call(this);this.resizeFrame=(this.config.resizeFrame!==false);this.centerFrame=(this.config.centerFrame);this.setDragElId(this.config.dragElId||YAHOO.util.DDProxy.dragElId);},showFrame:function(E,D){var C=this.getEl();var A=this.getDragEl();var B=A.style;this._resizeProxy();if(this.centerFrame){this.setDelta(Math.round(parseInt(B.width,10)/2),Math.round(parseInt(B.height,10)/2));}this.setDragElPos(E,D);YAHOO.util.Dom.setStyle(A,"visibility","visible");},_resizeProxy:function(){if(this.resizeFrame){var H=YAHOO.util.Dom;var B=this.getEl();var C=this.getDragEl();var G=parseInt(H.getStyle(C,"borderTopWidth"),10);var I=parseInt(H.getStyle(C,"borderRightWidth"),10);var F=parseInt(H.getStyle(C,"borderBottomWidth"),10);var D=parseInt(H.getStyle(C,"borderLeftWidth"),10);if(isNaN(G)){G=0;}if(isNaN(I)){I=0;}if(isNaN(F)){F=0;}if(isNaN(D)){D=0;}var E=Math.max(0,B.offsetWidth-I-D);var A=Math.max(0,B.offsetHeight-G-F);H.setStyle(C,"width",E+"px");H.setStyle(C,"height",A+"px");}},b4MouseDown:function(B){this.setStartPosition();var A=YAHOO.util.Event.getPageX(B);var C=YAHOO.util.Event.getPageY(B);this.autoOffset(A,C);},b4StartDrag:function(A,B){this.showFrame(A,B);},b4EndDrag:function(A){YAHOO.util.Dom.setStyle(this.getDragEl(),"visibility","hidden");},endDrag:function(D){var C=YAHOO.util.Dom;var B=this.getEl();var A=this.getDragEl();C.setStyle(A,"visibility","");C.setStyle(B,"visibility","hidden");YAHOO.util.DDM.moveToEl(B,A);C.setStyle(A,"visibility","hidden");C.setStyle(B,"visibility","");},toString:function(){return("DDProxy "+this.id);}});YAHOO.util.DDTarget=function(C,A,B){if(C){this.initTarget(C,A,B);}};YAHOO.extend(YAHOO.util.DDTarget,YAHOO.util.DragDrop,{toString:function(){return("DDTarget "+this.id);}});YAHOO.register("dragdrop",YAHOO.util.DragDropMgr,{version:"2.9.0",build:"2800"});

/********* ../yui/container/container-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){YAHOO.util.Config=function(d){if(d){this.init(d);}};var b=YAHOO.lang,c=YAHOO.util.CustomEvent,a=YAHOO.util.Config;a.CONFIG_CHANGED_EVENT="configChanged";a.BOOLEAN_TYPE="boolean";a.prototype={owner:null,queueInProgress:false,config:null,initialConfig:null,eventQueue:null,configChangedEvent:null,init:function(d){this.owner=d;this.configChangedEvent=this.createEvent(a.CONFIG_CHANGED_EVENT);this.configChangedEvent.signature=c.LIST;this.queueInProgress=false;this.config={};this.initialConfig={};this.eventQueue=[];},checkBoolean:function(d){return(typeof d==a.BOOLEAN_TYPE);},checkNumber:function(d){return(!isNaN(d));},fireEvent:function(d,f){var e=this.config[d];if(e&&e.event){e.event.fire(f);}},addProperty:function(e,d){e=e.toLowerCase();this.config[e]=d;d.event=this.createEvent(e,{scope:this.owner});d.event.signature=c.LIST;d.key=e;if(d.handler){d.event.subscribe(d.handler,this.owner);}this.setProperty(e,d.value,true);if(!d.suppressEvent){this.queueProperty(e,d.value);}},getConfig:function(){var d={},f=this.config,g,e;for(g in f){if(b.hasOwnProperty(f,g)){e=f[g];if(e&&e.event){d[g]=e.value;}}}return d;},getProperty:function(d){var e=this.config[d.toLowerCase()];if(e&&e.event){return e.value;}else{return undefined;}},resetProperty:function(d){d=d.toLowerCase();var e=this.config[d];if(e&&e.event){if(d in this.initialConfig){this.setProperty(d,this.initialConfig[d]);return true;}}else{return false;}},setProperty:function(e,g,d){var f;e=e.toLowerCase();if(this.queueInProgress&&!d){this.queueProperty(e,g);return true;}else{f=this.config[e];if(f&&f.event){if(f.validator&&!f.validator(g)){return false;}else{f.value=g;if(!d){this.fireEvent(e,g);this.configChangedEvent.fire([e,g]);}return true;}}else{return false;}}},queueProperty:function(v,r){v=v.toLowerCase();var u=this.config[v],l=false,k,g,h,j,p,t,f,n,o,d,m,w,e;if(u&&u.event){if(!b.isUndefined(r)&&u.validator&&!u.validator(r)){return false;}else{if(!b.isUndefined(r)){u.value=r;}else{r=u.value;}l=false;k=this.eventQueue.length;for(m=0;m<k;m++){g=this.eventQueue[m];if(g){h=g[0];j=g[1];if(h==v){this.eventQueue[m]=null;this.eventQueue.push([v,(!b.isUndefined(r)?r:j)]);l=true;break;}}}if(!l&&!b.isUndefined(r)){this.eventQueue.push([v,r]);}}if(u.supercedes){p=u.supercedes.length;for(w=0;w<p;w++){t=u.supercedes[w];f=this.eventQueue.length;for(e=0;e<f;e++){n=this.eventQueue[e];if(n){o=n[0];d=n[1];if(o==t.toLowerCase()){this.eventQueue.push([o,d]);this.eventQueue[e]=null;break;}}}}}return true;}else{return false;}},refireEvent:function(d){d=d.toLowerCase();var e=this.config[d];if(e&&e.event&&!b.isUndefined(e.value)){if(this.queueInProgress){this.queueProperty(d);}else{this.fireEvent(d,e.value);}}},applyConfig:function(d,g){var f,e;if(g){e={};for(f in d){if(b.hasOwnProperty(d,f)){e[f.toLowerCase()]=d[f];}}this.initialConfig=e;}for(f in d){if(b.hasOwnProperty(d,f)){this.queueProperty(f,d[f]);}}},refresh:function(){var d;for(d in this.config){if(b.hasOwnProperty(this.config,d)){this.refireEvent(d);}}},fireQueue:function(){var e,h,d,g,f;this.queueInProgress=true;for(e=0;e<this.eventQueue.length;e++){h=this.eventQueue[e];if(h){d=h[0];g=h[1];f=this.config[d];f.value=g;this.eventQueue[e]=null;this.fireEvent(d,g);}}this.queueInProgress=false;this.eventQueue=[];},subscribeToConfigEvent:function(d,e,g,h){var f=this.config[d.toLowerCase()];if(f&&f.event){if(!a.alreadySubscribed(f.event,e,g)){f.event.subscribe(e,g,h);}return true;}else{return false;}},unsubscribeFromConfigEvent:function(d,e,g){var f=this.config[d.toLowerCase()];if(f&&f.event){return f.event.unsubscribe(e,g);}else{return false;}},toString:function(){var d="Config";if(this.owner){d+=" ["+this.owner.toString()+"]";}return d;},outputEventQueue:function(){var d="",g,e,f=this.eventQueue.length;for(e=0;e<f;e++){g=this.eventQueue[e];if(g){d+=g[0]+"="+g[1]+", ";}}return d;},destroy:function(){var e=this.config,d,f;for(d in e){if(b.hasOwnProperty(e,d)){f=e[d];f.event.unsubscribeAll();f.event=null;}}this.configChangedEvent.unsubscribeAll();this.configChangedEvent=null;this.owner=null;this.config=null;this.initialConfig=null;this.eventQueue=null;}};a.alreadySubscribed=function(e,h,j){var f=e.subscribers.length,d,g;if(f>0){g=f-1;do{d=e.subscribers[g];if(d&&d.obj==j&&d.fn==h){return true;}}while(g--);}return false;};YAHOO.lang.augmentProto(a,YAHOO.util.EventProvider);}());(function(){YAHOO.widget.Module=function(r,q){if(r){this.init(r,q);}else{}};var f=YAHOO.util.Dom,d=YAHOO.util.Config,n=YAHOO.util.Event,m=YAHOO.util.CustomEvent,g=YAHOO.widget.Module,i=YAHOO.env.ua,h,p,o,e,a={"BEFORE_INIT":"beforeInit","INIT":"init","APPEND":"append","BEFORE_RENDER":"beforeRender","RENDER":"render","CHANGE_HEADER":"changeHeader","CHANGE_BODY":"changeBody","CHANGE_FOOTER":"changeFooter","CHANGE_CONTENT":"changeContent","DESTROY":"destroy","BEFORE_SHOW":"beforeShow","SHOW":"show","BEFORE_HIDE":"beforeHide","HIDE":"hide"},j={"VISIBLE":{key:"visible",value:true,validator:YAHOO.lang.isBoolean},"EFFECT":{key:"effect",suppressEvent:true,supercedes:["visible"]},"MONITOR_RESIZE":{key:"monitorresize",value:true},"APPEND_TO_DOCUMENT_BODY":{key:"appendtodocumentbody",value:false}};g.IMG_ROOT=null;g.IMG_ROOT_SSL=null;g.CSS_MODULE="yui-module";g.CSS_HEADER="hd";g.CSS_BODY="bd";g.CSS_FOOTER="ft";g.RESIZE_MONITOR_SECURE_URL="javascript:false;";g.RESIZE_MONITOR_BUFFER=1;g.textResizeEvent=new m("textResize");g.forceDocumentRedraw=function(){var q=document.documentElement;if(q){q.className+=" ";q.className=YAHOO.lang.trim(q.className);}};function l(){if(!h){h=document.createElement("div");h.innerHTML=('<div class="'+g.CSS_HEADER+'"></div>'+'<div class="'+g.CSS_BODY+'"></div><div class="'+g.CSS_FOOTER+'"></div>');p=h.firstChild;o=p.nextSibling;e=o.nextSibling;}return h;}function k(){if(!p){l();}return(p.cloneNode(false));}function b(){if(!o){l();}return(o.cloneNode(false));}function c(){if(!e){l();}return(e.cloneNode(false));}g.prototype={constructor:g,element:null,header:null,body:null,footer:null,id:null,imageRoot:g.IMG_ROOT,initEvents:function(){var q=m.LIST;
this.beforeInitEvent=this.createEvent(a.BEFORE_INIT);this.beforeInitEvent.signature=q;this.initEvent=this.createEvent(a.INIT);this.initEvent.signature=q;this.appendEvent=this.createEvent(a.APPEND);this.appendEvent.signature=q;this.beforeRenderEvent=this.createEvent(a.BEFORE_RENDER);this.beforeRenderEvent.signature=q;this.renderEvent=this.createEvent(a.RENDER);this.renderEvent.signature=q;this.changeHeaderEvent=this.createEvent(a.CHANGE_HEADER);this.changeHeaderEvent.signature=q;this.changeBodyEvent=this.createEvent(a.CHANGE_BODY);this.changeBodyEvent.signature=q;this.changeFooterEvent=this.createEvent(a.CHANGE_FOOTER);this.changeFooterEvent.signature=q;this.changeContentEvent=this.createEvent(a.CHANGE_CONTENT);this.changeContentEvent.signature=q;this.destroyEvent=this.createEvent(a.DESTROY);this.destroyEvent.signature=q;this.beforeShowEvent=this.createEvent(a.BEFORE_SHOW);this.beforeShowEvent.signature=q;this.showEvent=this.createEvent(a.SHOW);this.showEvent.signature=q;this.beforeHideEvent=this.createEvent(a.BEFORE_HIDE);this.beforeHideEvent.signature=q;this.hideEvent=this.createEvent(a.HIDE);this.hideEvent.signature=q;},platform:function(){var q=navigator.userAgent.toLowerCase();if(q.indexOf("windows")!=-1||q.indexOf("win32")!=-1){return"windows";}else{if(q.indexOf("macintosh")!=-1){return"mac";}else{return false;}}}(),browser:function(){var q=navigator.userAgent.toLowerCase();if(q.indexOf("opera")!=-1){return"opera";}else{if(q.indexOf("msie 7")!=-1){return"ie7";}else{if(q.indexOf("msie")!=-1){return"ie";}else{if(q.indexOf("safari")!=-1){return"safari";}else{if(q.indexOf("gecko")!=-1){return"gecko";}else{return false;}}}}}}(),isSecure:function(){if(window.location.href.toLowerCase().indexOf("https")===0){return true;}else{return false;}}(),initDefaultConfig:function(){this.cfg.addProperty(j.VISIBLE.key,{handler:this.configVisible,value:j.VISIBLE.value,validator:j.VISIBLE.validator});this.cfg.addProperty(j.EFFECT.key,{handler:this.configEffect,suppressEvent:j.EFFECT.suppressEvent,supercedes:j.EFFECT.supercedes});this.cfg.addProperty(j.MONITOR_RESIZE.key,{handler:this.configMonitorResize,value:j.MONITOR_RESIZE.value});this.cfg.addProperty(j.APPEND_TO_DOCUMENT_BODY.key,{value:j.APPEND_TO_DOCUMENT_BODY.value});},init:function(v,u){var s,w;this.initEvents();this.beforeInitEvent.fire(g);this.cfg=new d(this);if(this.isSecure){this.imageRoot=g.IMG_ROOT_SSL;}if(typeof v=="string"){s=v;v=document.getElementById(v);if(!v){v=(l()).cloneNode(false);v.id=s;}}this.id=f.generateId(v);this.element=v;w=this.element.firstChild;if(w){var r=false,q=false,t=false;do{if(1==w.nodeType){if(!r&&f.hasClass(w,g.CSS_HEADER)){this.header=w;r=true;}else{if(!q&&f.hasClass(w,g.CSS_BODY)){this.body=w;q=true;}else{if(!t&&f.hasClass(w,g.CSS_FOOTER)){this.footer=w;t=true;}}}}}while((w=w.nextSibling));}this.initDefaultConfig();f.addClass(this.element,g.CSS_MODULE);if(u){this.cfg.applyConfig(u,true);}if(!d.alreadySubscribed(this.renderEvent,this.cfg.fireQueue,this.cfg)){this.renderEvent.subscribe(this.cfg.fireQueue,this.cfg,true);}this.initEvent.fire(g);},initResizeMonitor:function(){var r=(i.gecko&&this.platform=="windows");if(r){var q=this;setTimeout(function(){q._initResizeMonitor();},0);}else{this._initResizeMonitor();}},_initResizeMonitor:function(){var q,s,u;function w(){g.textResizeEvent.fire();}if(!i.opera){s=f.get("_yuiResizeMonitor");var v=this._supportsCWResize();if(!s){s=document.createElement("iframe");if(this.isSecure&&g.RESIZE_MONITOR_SECURE_URL&&i.ie){s.src=g.RESIZE_MONITOR_SECURE_URL;}if(!v){u=["<html><head><script ",'type="text/javascript">',"window.onresize=function(){window.parent.","YAHOO.widget.Module.textResizeEvent.","fire();};<","/script></head>","<body></body></html>"].join("");s.src="data:text/html;charset=utf-8,"+encodeURIComponent(u);}s.id="_yuiResizeMonitor";s.title="Text Resize Monitor";s.tabIndex=-1;s.setAttribute("role","presentation");s.style.position="absolute";s.style.visibility="hidden";var r=document.body,t=r.firstChild;if(t){r.insertBefore(s,t);}else{r.appendChild(s);}s.style.backgroundColor="transparent";s.style.borderWidth="0";s.style.width="2em";s.style.height="2em";s.style.left="0";s.style.top=(-1*(s.offsetHeight+g.RESIZE_MONITOR_BUFFER))+"px";s.style.visibility="visible";if(i.webkit){q=s.contentWindow.document;q.open();q.close();}}if(s&&s.contentWindow){g.textResizeEvent.subscribe(this.onDomResize,this,true);if(!g.textResizeInitialized){if(v){if(!n.on(s.contentWindow,"resize",w)){n.on(s,"resize",w);}}g.textResizeInitialized=true;}this.resizeMonitor=s;}}},_supportsCWResize:function(){var q=true;if(i.gecko&&i.gecko<=1.8){q=false;}return q;},onDomResize:function(s,r){var q=-1*(this.resizeMonitor.offsetHeight+g.RESIZE_MONITOR_BUFFER);this.resizeMonitor.style.top=q+"px";this.resizeMonitor.style.left="0";},setHeader:function(r){var q=this.header||(this.header=k());if(r.nodeName){q.innerHTML="";q.appendChild(r);}else{q.innerHTML=r;}if(this._rendered){this._renderHeader();}this.changeHeaderEvent.fire(r);this.changeContentEvent.fire();},appendToHeader:function(r){var q=this.header||(this.header=k());q.appendChild(r);this.changeHeaderEvent.fire(r);this.changeContentEvent.fire();},setBody:function(r){var q=this.body||(this.body=b());if(r.nodeName){q.innerHTML="";q.appendChild(r);}else{q.innerHTML=r;}if(this._rendered){this._renderBody();}this.changeBodyEvent.fire(r);this.changeContentEvent.fire();},appendToBody:function(r){var q=this.body||(this.body=b());q.appendChild(r);this.changeBodyEvent.fire(r);this.changeContentEvent.fire();},setFooter:function(r){var q=this.footer||(this.footer=c());if(r.nodeName){q.innerHTML="";q.appendChild(r);}else{q.innerHTML=r;}if(this._rendered){this._renderFooter();}this.changeFooterEvent.fire(r);this.changeContentEvent.fire();},appendToFooter:function(r){var q=this.footer||(this.footer=c());q.appendChild(r);this.changeFooterEvent.fire(r);this.changeContentEvent.fire();},render:function(s,q){var t=this;function r(u){if(typeof u=="string"){u=document.getElementById(u);
}if(u){t._addToParent(u,t.element);t.appendEvent.fire();}}this.beforeRenderEvent.fire();if(!q){q=this.element;}if(s){r(s);}else{if(!f.inDocument(this.element)){return false;}}this._renderHeader(q);this._renderBody(q);this._renderFooter(q);this._rendered=true;this.renderEvent.fire();return true;},_renderHeader:function(q){q=q||this.element;if(this.header&&!f.inDocument(this.header)){var r=q.firstChild;if(r){q.insertBefore(this.header,r);}else{q.appendChild(this.header);}}},_renderBody:function(q){q=q||this.element;if(this.body&&!f.inDocument(this.body)){if(this.footer&&f.isAncestor(q,this.footer)){q.insertBefore(this.body,this.footer);}else{q.appendChild(this.body);}}},_renderFooter:function(q){q=q||this.element;if(this.footer&&!f.inDocument(this.footer)){q.appendChild(this.footer);}},destroy:function(q){var r,s=!(q);if(this.element){n.purgeElement(this.element,s);r=this.element.parentNode;}if(r){r.removeChild(this.element);}this.element=null;this.header=null;this.body=null;this.footer=null;g.textResizeEvent.unsubscribe(this.onDomResize,this);this.cfg.destroy();this.cfg=null;this.destroyEvent.fire();},show:function(){this.cfg.setProperty("visible",true);},hide:function(){this.cfg.setProperty("visible",false);},configVisible:function(r,q,s){var t=q[0];if(t){if(this.beforeShowEvent.fire()){f.setStyle(this.element,"display","block");this.showEvent.fire();}}else{if(this.beforeHideEvent.fire()){f.setStyle(this.element,"display","none");this.hideEvent.fire();}}},configEffect:function(r,q,s){this._cachedEffects=(this.cacheEffects)?this._createEffects(q[0]):null;},cacheEffects:true,_createEffects:function(t){var q=null,u,r,s;if(t){if(t instanceof Array){q=[];u=t.length;for(r=0;r<u;r++){s=t[r];if(s.effect){q[q.length]=s.effect(this,s.duration);}}}else{if(t.effect){q=[t.effect(this,t.duration)];}}}return q;},configMonitorResize:function(s,r,t){var q=r[0];if(q){this.initResizeMonitor();}else{g.textResizeEvent.unsubscribe(this.onDomResize,this,true);this.resizeMonitor=null;}},_addToParent:function(q,r){if(!this.cfg.getProperty("appendtodocumentbody")&&q===document.body&&q.firstChild){q.insertBefore(r,q.firstChild);}else{q.appendChild(r);}},toString:function(){return"Module "+this.id;}};YAHOO.lang.augmentProto(g,YAHOO.util.EventProvider);}());(function(){YAHOO.widget.Overlay=function(p,o){YAHOO.widget.Overlay.superclass.constructor.call(this,p,o);};var i=YAHOO.lang,m=YAHOO.util.CustomEvent,g=YAHOO.widget.Module,n=YAHOO.util.Event,f=YAHOO.util.Dom,d=YAHOO.util.Config,k=YAHOO.env.ua,b=YAHOO.widget.Overlay,h="subscribe",e="unsubscribe",c="contained",j,a={"BEFORE_MOVE":"beforeMove","MOVE":"move"},l={"X":{key:"x",validator:i.isNumber,suppressEvent:true,supercedes:["iframe"]},"Y":{key:"y",validator:i.isNumber,suppressEvent:true,supercedes:["iframe"]},"XY":{key:"xy",suppressEvent:true,supercedes:["iframe"]},"CONTEXT":{key:"context",suppressEvent:true,supercedes:["iframe"]},"FIXED_CENTER":{key:"fixedcenter",value:false,supercedes:["iframe","visible"]},"WIDTH":{key:"width",suppressEvent:true,supercedes:["context","fixedcenter","iframe"]},"HEIGHT":{key:"height",suppressEvent:true,supercedes:["context","fixedcenter","iframe"]},"AUTO_FILL_HEIGHT":{key:"autofillheight",supercedes:["height"],value:"body"},"ZINDEX":{key:"zindex",value:null},"CONSTRAIN_TO_VIEWPORT":{key:"constraintoviewport",value:false,validator:i.isBoolean,supercedes:["iframe","x","y","xy"]},"IFRAME":{key:"iframe",value:(k.ie==6?true:false),validator:i.isBoolean,supercedes:["zindex"]},"PREVENT_CONTEXT_OVERLAP":{key:"preventcontextoverlap",value:false,validator:i.isBoolean,supercedes:["constraintoviewport"]}};b.IFRAME_SRC="javascript:false;";b.IFRAME_OFFSET=3;b.VIEWPORT_OFFSET=10;b.TOP_LEFT="tl";b.TOP_RIGHT="tr";b.BOTTOM_LEFT="bl";b.BOTTOM_RIGHT="br";b.PREVENT_OVERLAP_X={"tltr":true,"blbr":true,"brbl":true,"trtl":true};b.PREVENT_OVERLAP_Y={"trbr":true,"tlbl":true,"bltl":true,"brtr":true};b.CSS_OVERLAY="yui-overlay";b.CSS_HIDDEN="yui-overlay-hidden";b.CSS_IFRAME="yui-overlay-iframe";b.STD_MOD_RE=/^\s*?(body|footer|header)\s*?$/i;b.windowScrollEvent=new m("windowScroll");b.windowResizeEvent=new m("windowResize");b.windowScrollHandler=function(p){var o=n.getTarget(p);if(!o||o===window||o===window.document){if(k.ie){if(!window.scrollEnd){window.scrollEnd=-1;}clearTimeout(window.scrollEnd);window.scrollEnd=setTimeout(function(){b.windowScrollEvent.fire();},1);}else{b.windowScrollEvent.fire();}}};b.windowResizeHandler=function(o){if(k.ie){if(!window.resizeEnd){window.resizeEnd=-1;}clearTimeout(window.resizeEnd);window.resizeEnd=setTimeout(function(){b.windowResizeEvent.fire();},100);}else{b.windowResizeEvent.fire();}};b._initialized=null;if(b._initialized===null){n.on(window,"scroll",b.windowScrollHandler);n.on(window,"resize",b.windowResizeHandler);b._initialized=true;}b._TRIGGER_MAP={"windowScroll":b.windowScrollEvent,"windowResize":b.windowResizeEvent,"textResize":g.textResizeEvent};YAHOO.extend(b,g,{CONTEXT_TRIGGERS:[],init:function(p,o){b.superclass.init.call(this,p);this.beforeInitEvent.fire(b);f.addClass(this.element,b.CSS_OVERLAY);if(o){this.cfg.applyConfig(o,true);}if(this.platform=="mac"&&k.gecko){if(!d.alreadySubscribed(this.showEvent,this.showMacGeckoScrollbars,this)){this.showEvent.subscribe(this.showMacGeckoScrollbars,this,true);}if(!d.alreadySubscribed(this.hideEvent,this.hideMacGeckoScrollbars,this)){this.hideEvent.subscribe(this.hideMacGeckoScrollbars,this,true);}}this.initEvent.fire(b);},initEvents:function(){b.superclass.initEvents.call(this);var o=m.LIST;this.beforeMoveEvent=this.createEvent(a.BEFORE_MOVE);this.beforeMoveEvent.signature=o;this.moveEvent=this.createEvent(a.MOVE);this.moveEvent.signature=o;},initDefaultConfig:function(){b.superclass.initDefaultConfig.call(this);var o=this.cfg;o.addProperty(l.X.key,{handler:this.configX,validator:l.X.validator,suppressEvent:l.X.suppressEvent,supercedes:l.X.supercedes});o.addProperty(l.Y.key,{handler:this.configY,validator:l.Y.validator,suppressEvent:l.Y.suppressEvent,supercedes:l.Y.supercedes});
o.addProperty(l.XY.key,{handler:this.configXY,suppressEvent:l.XY.suppressEvent,supercedes:l.XY.supercedes});o.addProperty(l.CONTEXT.key,{handler:this.configContext,suppressEvent:l.CONTEXT.suppressEvent,supercedes:l.CONTEXT.supercedes});o.addProperty(l.FIXED_CENTER.key,{handler:this.configFixedCenter,value:l.FIXED_CENTER.value,validator:l.FIXED_CENTER.validator,supercedes:l.FIXED_CENTER.supercedes});o.addProperty(l.WIDTH.key,{handler:this.configWidth,suppressEvent:l.WIDTH.suppressEvent,supercedes:l.WIDTH.supercedes});o.addProperty(l.HEIGHT.key,{handler:this.configHeight,suppressEvent:l.HEIGHT.suppressEvent,supercedes:l.HEIGHT.supercedes});o.addProperty(l.AUTO_FILL_HEIGHT.key,{handler:this.configAutoFillHeight,value:l.AUTO_FILL_HEIGHT.value,validator:this._validateAutoFill,supercedes:l.AUTO_FILL_HEIGHT.supercedes});o.addProperty(l.ZINDEX.key,{handler:this.configzIndex,value:l.ZINDEX.value});o.addProperty(l.CONSTRAIN_TO_VIEWPORT.key,{handler:this.configConstrainToViewport,value:l.CONSTRAIN_TO_VIEWPORT.value,validator:l.CONSTRAIN_TO_VIEWPORT.validator,supercedes:l.CONSTRAIN_TO_VIEWPORT.supercedes});o.addProperty(l.IFRAME.key,{handler:this.configIframe,value:l.IFRAME.value,validator:l.IFRAME.validator,supercedes:l.IFRAME.supercedes});o.addProperty(l.PREVENT_CONTEXT_OVERLAP.key,{value:l.PREVENT_CONTEXT_OVERLAP.value,validator:l.PREVENT_CONTEXT_OVERLAP.validator,supercedes:l.PREVENT_CONTEXT_OVERLAP.supercedes});},moveTo:function(o,p){this.cfg.setProperty("xy",[o,p]);},hideMacGeckoScrollbars:function(){f.replaceClass(this.element,"show-scrollbars","hide-scrollbars");},showMacGeckoScrollbars:function(){f.replaceClass(this.element,"hide-scrollbars","show-scrollbars");},_setDomVisibility:function(o){f.setStyle(this.element,"visibility",(o)?"visible":"hidden");var p=b.CSS_HIDDEN;if(o){f.removeClass(this.element,p);}else{f.addClass(this.element,p);}},configVisible:function(x,w,t){var p=w[0],B=f.getStyle(this.element,"visibility"),o=this._cachedEffects||this._createEffects(this.cfg.getProperty("effect")),A=(this.platform=="mac"&&k.gecko),y=d.alreadySubscribed,q,v,s,r,u,z;if(B=="inherit"){v=this.element.parentNode;while(v.nodeType!=9&&v.nodeType!=11){B=f.getStyle(v,"visibility");if(B!="inherit"){break;}v=v.parentNode;}if(B=="inherit"){B="visible";}}if(p){if(A){this.showMacGeckoScrollbars();}if(o){if(p){if(B!="visible"||B===""||this._fadingOut){if(this.beforeShowEvent.fire()){z=o.length;for(s=0;s<z;s++){q=o[s];if(s===0&&!y(q.animateInCompleteEvent,this.showEvent.fire,this.showEvent)){q.animateInCompleteEvent.subscribe(this.showEvent.fire,this.showEvent,true);}q.animateIn();}}}}}else{if(B!="visible"||B===""){if(this.beforeShowEvent.fire()){this._setDomVisibility(true);this.cfg.refireEvent("iframe");this.showEvent.fire();}}else{this._setDomVisibility(true);}}}else{if(A){this.hideMacGeckoScrollbars();}if(o){if(B=="visible"||this._fadingIn){if(this.beforeHideEvent.fire()){z=o.length;for(r=0;r<z;r++){u=o[r];if(r===0&&!y(u.animateOutCompleteEvent,this.hideEvent.fire,this.hideEvent)){u.animateOutCompleteEvent.subscribe(this.hideEvent.fire,this.hideEvent,true);}u.animateOut();}}}else{if(B===""){this._setDomVisibility(false);}}}else{if(B=="visible"||B===""){if(this.beforeHideEvent.fire()){this._setDomVisibility(false);this.hideEvent.fire();}}else{this._setDomVisibility(false);}}}},doCenterOnDOMEvent:function(){var o=this.cfg,p=o.getProperty("fixedcenter");if(o.getProperty("visible")){if(p&&(p!==c||this.fitsInViewport())){this.center();}}},fitsInViewport:function(){var s=b.VIEWPORT_OFFSET,q=this.element,t=q.offsetWidth,r=q.offsetHeight,o=f.getViewportWidth(),p=f.getViewportHeight();return((t+s<o)&&(r+s<p));},configFixedCenter:function(s,q,t){var u=q[0],p=d.alreadySubscribed,r=b.windowResizeEvent,o=b.windowScrollEvent;if(u){this.center();if(!p(this.beforeShowEvent,this.center)){this.beforeShowEvent.subscribe(this.center);}if(!p(r,this.doCenterOnDOMEvent,this)){r.subscribe(this.doCenterOnDOMEvent,this,true);}if(!p(o,this.doCenterOnDOMEvent,this)){o.subscribe(this.doCenterOnDOMEvent,this,true);}}else{this.beforeShowEvent.unsubscribe(this.center);r.unsubscribe(this.doCenterOnDOMEvent,this);o.unsubscribe(this.doCenterOnDOMEvent,this);}},configHeight:function(r,p,s){var o=p[0],q=this.element;f.setStyle(q,"height",o);this.cfg.refireEvent("iframe");},configAutoFillHeight:function(t,s,p){var v=s[0],q=this.cfg,u="autofillheight",w="height",r=q.getProperty(u),o=this._autoFillOnHeightChange;q.unsubscribeFromConfigEvent(w,o);g.textResizeEvent.unsubscribe(o);this.changeContentEvent.unsubscribe(o);if(r&&v!==r&&this[r]){f.setStyle(this[r],w,"");}if(v){v=i.trim(v.toLowerCase());q.subscribeToConfigEvent(w,o,this[v],this);g.textResizeEvent.subscribe(o,this[v],this);this.changeContentEvent.subscribe(o,this[v],this);q.setProperty(u,v,true);}},configWidth:function(r,o,s){var q=o[0],p=this.element;f.setStyle(p,"width",q);this.cfg.refireEvent("iframe");},configzIndex:function(q,o,r){var s=o[0],p=this.element;if(!s){s=f.getStyle(p,"zIndex");if(!s||isNaN(s)){s=0;}}if(this.iframe||this.cfg.getProperty("iframe")===true){if(s<=0){s=1;}}f.setStyle(p,"zIndex",s);this.cfg.setProperty("zIndex",s,true);if(this.iframe){this.stackIframe();}},configXY:function(q,p,r){var t=p[0],o=t[0],s=t[1];this.cfg.setProperty("x",o);this.cfg.setProperty("y",s);this.beforeMoveEvent.fire([o,s]);o=this.cfg.getProperty("x");s=this.cfg.getProperty("y");this.cfg.refireEvent("iframe");this.moveEvent.fire([o,s]);},configX:function(q,p,r){var o=p[0],s=this.cfg.getProperty("y");this.cfg.setProperty("x",o,true);this.cfg.setProperty("y",s,true);this.beforeMoveEvent.fire([o,s]);o=this.cfg.getProperty("x");s=this.cfg.getProperty("y");f.setX(this.element,o,true);this.cfg.setProperty("xy",[o,s],true);this.cfg.refireEvent("iframe");this.moveEvent.fire([o,s]);},configY:function(q,p,r){var o=this.cfg.getProperty("x"),s=p[0];this.cfg.setProperty("x",o,true);this.cfg.setProperty("y",s,true);this.beforeMoveEvent.fire([o,s]);o=this.cfg.getProperty("x");s=this.cfg.getProperty("y");f.setY(this.element,s,true);
this.cfg.setProperty("xy",[o,s],true);this.cfg.refireEvent("iframe");this.moveEvent.fire([o,s]);},showIframe:function(){var p=this.iframe,o;if(p){o=this.element.parentNode;if(o!=p.parentNode){this._addToParent(o,p);}p.style.display="block";}},hideIframe:function(){if(this.iframe){this.iframe.style.display="none";}},syncIframe:function(){var o=this.iframe,q=this.element,s=b.IFRAME_OFFSET,p=(s*2),r;if(o){o.style.width=(q.offsetWidth+p+"px");o.style.height=(q.offsetHeight+p+"px");r=this.cfg.getProperty("xy");if(!i.isArray(r)||(isNaN(r[0])||isNaN(r[1]))){this.syncPosition();r=this.cfg.getProperty("xy");}f.setXY(o,[(r[0]-s),(r[1]-s)]);}},stackIframe:function(){if(this.iframe){var o=f.getStyle(this.element,"zIndex");if(!YAHOO.lang.isUndefined(o)&&!isNaN(o)){f.setStyle(this.iframe,"zIndex",(o-1));}}},configIframe:function(r,q,s){var o=q[0];function t(){var v=this.iframe,w=this.element,x;if(!v){if(!j){j=document.createElement("iframe");if(this.isSecure){j.src=b.IFRAME_SRC;}if(k.ie){j.style.filter="alpha(opacity=0)";j.frameBorder=0;}else{j.style.opacity="0";}j.style.position="absolute";j.style.border="none";j.style.margin="0";j.style.padding="0";j.style.display="none";j.tabIndex=-1;j.className=b.CSS_IFRAME;}v=j.cloneNode(false);v.id=this.id+"_f";x=w.parentNode;var u=x||document.body;this._addToParent(u,v);this.iframe=v;}this.showIframe();this.syncIframe();this.stackIframe();if(!this._hasIframeEventListeners){this.showEvent.subscribe(this.showIframe);this.hideEvent.subscribe(this.hideIframe);this.changeContentEvent.subscribe(this.syncIframe);this._hasIframeEventListeners=true;}}function p(){t.call(this);this.beforeShowEvent.unsubscribe(p);this._iframeDeferred=false;}if(o){if(this.cfg.getProperty("visible")){t.call(this);}else{if(!this._iframeDeferred){this.beforeShowEvent.subscribe(p);this._iframeDeferred=true;}}}else{this.hideIframe();if(this._hasIframeEventListeners){this.showEvent.unsubscribe(this.showIframe);this.hideEvent.unsubscribe(this.hideIframe);this.changeContentEvent.unsubscribe(this.syncIframe);this._hasIframeEventListeners=false;}}},_primeXYFromDOM:function(){if(YAHOO.lang.isUndefined(this.cfg.getProperty("xy"))){this.syncPosition();this.cfg.refireEvent("xy");this.beforeShowEvent.unsubscribe(this._primeXYFromDOM);}},configConstrainToViewport:function(p,o,q){var r=o[0];if(r){if(!d.alreadySubscribed(this.beforeMoveEvent,this.enforceConstraints,this)){this.beforeMoveEvent.subscribe(this.enforceConstraints,this,true);}if(!d.alreadySubscribed(this.beforeShowEvent,this._primeXYFromDOM)){this.beforeShowEvent.subscribe(this._primeXYFromDOM);}}else{this.beforeShowEvent.unsubscribe(this._primeXYFromDOM);this.beforeMoveEvent.unsubscribe(this.enforceConstraints,this);}},configContext:function(u,t,q){var x=t[0],r,o,v,s,p,w=this.CONTEXT_TRIGGERS;if(x){r=x[0];o=x[1];v=x[2];s=x[3];p=x[4];if(w&&w.length>0){s=(s||[]).concat(w);}if(r){if(typeof r=="string"){this.cfg.setProperty("context",[document.getElementById(r),o,v,s,p],true);}if(o&&v){this.align(o,v,p);}if(this._contextTriggers){this._processTriggers(this._contextTriggers,e,this._alignOnTrigger);}if(s){this._processTriggers(s,h,this._alignOnTrigger);this._contextTriggers=s;}}}},_alignOnTrigger:function(p,o){this.align();},_findTriggerCE:function(o){var p=null;if(o instanceof m){p=o;}else{if(b._TRIGGER_MAP[o]){p=b._TRIGGER_MAP[o];}}return p;},_processTriggers:function(s,v,r){var q,u;for(var p=0,o=s.length;p<o;++p){q=s[p];u=this._findTriggerCE(q);if(u){u[v](r,this,true);}else{this[v](q,r);}}},align:function(p,w,s){var v=this.cfg.getProperty("context"),t=this,o,q,u;function r(z,A){var y=null,x=null;switch(p){case b.TOP_LEFT:y=A;x=z;break;case b.TOP_RIGHT:y=A-q.offsetWidth;x=z;break;case b.BOTTOM_LEFT:y=A;x=z-q.offsetHeight;break;case b.BOTTOM_RIGHT:y=A-q.offsetWidth;x=z-q.offsetHeight;break;}if(y!==null&&x!==null){if(s){y+=s[0];x+=s[1];}t.moveTo(y,x);}}if(v){o=v[0];q=this.element;t=this;if(!p){p=v[1];}if(!w){w=v[2];}if(!s&&v[4]){s=v[4];}if(q&&o){u=f.getRegion(o);switch(w){case b.TOP_LEFT:r(u.top,u.left);break;case b.TOP_RIGHT:r(u.top,u.right);break;case b.BOTTOM_LEFT:r(u.bottom,u.left);break;case b.BOTTOM_RIGHT:r(u.bottom,u.right);break;}}}},enforceConstraints:function(p,o,q){var s=o[0];var r=this.getConstrainedXY(s[0],s[1]);this.cfg.setProperty("x",r[0],true);this.cfg.setProperty("y",r[1],true);this.cfg.setProperty("xy",r,true);},_getConstrainedPos:function(y,p){var t=this.element,r=b.VIEWPORT_OFFSET,A=(y=="x"),z=(A)?t.offsetWidth:t.offsetHeight,s=(A)?f.getViewportWidth():f.getViewportHeight(),D=(A)?f.getDocumentScrollLeft():f.getDocumentScrollTop(),C=(A)?b.PREVENT_OVERLAP_X:b.PREVENT_OVERLAP_Y,o=this.cfg.getProperty("context"),u=(z+r<s),w=this.cfg.getProperty("preventcontextoverlap")&&o&&C[(o[1]+o[2])],v=D+r,B=D+s-z-r,q=p;if(p<v||p>B){if(w){q=this._preventOverlap(y,o[0],z,s,D);}else{if(u){if(p<v){q=v;}else{if(p>B){q=B;}}}else{q=v;}}}return q;},_preventOverlap:function(y,w,z,u,C){var A=(y=="x"),t=b.VIEWPORT_OFFSET,s=this,q=((A)?f.getX(w):f.getY(w))-C,o=(A)?w.offsetWidth:w.offsetHeight,p=q-t,r=(u-(q+o))-t,D=false,v=function(){var x;if((s.cfg.getProperty(y)-C)>q){x=(q-z);}else{x=(q+o);}s.cfg.setProperty(y,(x+C),true);return x;},B=function(){var E=((s.cfg.getProperty(y)-C)>q)?r:p,x;if(z>E){if(D){v();}else{v();D=true;x=B();}}return x;};B();return this.cfg.getProperty(y);},getConstrainedX:function(o){return this._getConstrainedPos("x",o);},getConstrainedY:function(o){return this._getConstrainedPos("y",o);},getConstrainedXY:function(o,p){return[this.getConstrainedX(o),this.getConstrainedY(p)];},center:function(){var r=b.VIEWPORT_OFFSET,s=this.element.offsetWidth,q=this.element.offsetHeight,p=f.getViewportWidth(),t=f.getViewportHeight(),o,u;if(s<p){o=(p/2)-(s/2)+f.getDocumentScrollLeft();}else{o=r+f.getDocumentScrollLeft();}if(q<t){u=(t/2)-(q/2)+f.getDocumentScrollTop();}else{u=r+f.getDocumentScrollTop();}this.cfg.setProperty("xy",[parseInt(o,10),parseInt(u,10)]);this.cfg.refireEvent("iframe");if(k.webkit){this.forceContainerRedraw();}},syncPosition:function(){var o=f.getXY(this.element);
this.cfg.setProperty("x",o[0],true);this.cfg.setProperty("y",o[1],true);this.cfg.setProperty("xy",o,true);},onDomResize:function(q,p){var o=this;b.superclass.onDomResize.call(this,q,p);setTimeout(function(){o.syncPosition();o.cfg.refireEvent("iframe");o.cfg.refireEvent("context");},0);},_getComputedHeight:(function(){if(document.defaultView&&document.defaultView.getComputedStyle){return function(p){var o=null;if(p.ownerDocument&&p.ownerDocument.defaultView){var q=p.ownerDocument.defaultView.getComputedStyle(p,"");if(q){o=parseInt(q.height,10);}}return(i.isNumber(o))?o:null;};}else{return function(p){var o=null;if(p.style.pixelHeight){o=p.style.pixelHeight;}return(i.isNumber(o))?o:null;};}})(),_validateAutoFillHeight:function(o){return(!o)||(i.isString(o)&&b.STD_MOD_RE.test(o));},_autoFillOnHeightChange:function(r,p,q){var o=this.cfg.getProperty("height");if((o&&o!=="auto")||(o===0)){this.fillHeight(q);}},_getPreciseHeight:function(p){var o=p.offsetHeight;if(p.getBoundingClientRect){var q=p.getBoundingClientRect();o=q.bottom-q.top;}return o;},fillHeight:function(r){if(r){var p=this.innerElement||this.element,o=[this.header,this.body,this.footer],v,w=0,x=0,t=0,q=false;for(var u=0,s=o.length;u<s;u++){v=o[u];if(v){if(r!==v){x+=this._getPreciseHeight(v);}else{q=true;}}}if(q){if(k.ie||k.opera){f.setStyle(r,"height",0+"px");}w=this._getComputedHeight(p);if(w===null){f.addClass(p,"yui-override-padding");w=p.clientHeight;f.removeClass(p,"yui-override-padding");}t=Math.max(w-x,0);f.setStyle(r,"height",t+"px");if(r.offsetHeight!=t){t=Math.max(t-(r.offsetHeight-t),0);}f.setStyle(r,"height",t+"px");}}},bringToTop:function(){var s=[],r=this.element;function v(z,y){var B=f.getStyle(z,"zIndex"),A=f.getStyle(y,"zIndex"),x=(!B||isNaN(B))?0:parseInt(B,10),w=(!A||isNaN(A))?0:parseInt(A,10);if(x>w){return -1;}else{if(x<w){return 1;}else{return 0;}}}function q(y){var x=f.hasClass(y,b.CSS_OVERLAY),w=YAHOO.widget.Panel;if(x&&!f.isAncestor(r,y)){if(w&&f.hasClass(y,w.CSS_PANEL)){s[s.length]=y.parentNode;}else{s[s.length]=y;}}}f.getElementsBy(q,"div",document.body);s.sort(v);var o=s[0],u;if(o){u=f.getStyle(o,"zIndex");if(!isNaN(u)){var t=false;if(o!=r){t=true;}else{if(s.length>1){var p=f.getStyle(s[1],"zIndex");if(!isNaN(p)&&(u==p)){t=true;}}}if(t){this.cfg.setProperty("zindex",(parseInt(u,10)+2));}}}},destroy:function(o){if(this.iframe){this.iframe.parentNode.removeChild(this.iframe);}this.iframe=null;b.windowResizeEvent.unsubscribe(this.doCenterOnDOMEvent,this);b.windowScrollEvent.unsubscribe(this.doCenterOnDOMEvent,this);g.textResizeEvent.unsubscribe(this._autoFillOnHeightChange);if(this._contextTriggers){this._processTriggers(this._contextTriggers,e,this._alignOnTrigger);}b.superclass.destroy.call(this,o);},forceContainerRedraw:function(){var o=this;f.addClass(o.element,"yui-force-redraw");setTimeout(function(){f.removeClass(o.element,"yui-force-redraw");},0);},toString:function(){return"Overlay "+this.id;}});}());(function(){YAHOO.widget.OverlayManager=function(g){this.init(g);};var d=YAHOO.widget.Overlay,c=YAHOO.util.Event,e=YAHOO.util.Dom,b=YAHOO.util.Config,f=YAHOO.util.CustomEvent,a=YAHOO.widget.OverlayManager;a.CSS_FOCUSED="focused";a.prototype={constructor:a,overlays:null,initDefaultConfig:function(){this.cfg.addProperty("overlays",{suppressEvent:true});this.cfg.addProperty("focusevent",{value:"mousedown"});},init:function(i){this.cfg=new b(this);this.initDefaultConfig();if(i){this.cfg.applyConfig(i,true);}this.cfg.fireQueue();var h=null;this.getActive=function(){return h;};this.focus=function(j){var k=this.find(j);if(k){k.focus();}};this.remove=function(k){var m=this.find(k),j;if(m){if(h==m){h=null;}var l=(m.element===null&&m.cfg===null)?true:false;if(!l){j=e.getStyle(m.element,"zIndex");m.cfg.setProperty("zIndex",-1000,true);}this.overlays.sort(this.compareZIndexDesc);this.overlays=this.overlays.slice(0,(this.overlays.length-1));m.hideEvent.unsubscribe(m.blur);m.destroyEvent.unsubscribe(this._onOverlayDestroy,m);m.focusEvent.unsubscribe(this._onOverlayFocusHandler,m);m.blurEvent.unsubscribe(this._onOverlayBlurHandler,m);if(!l){c.removeListener(m.element,this.cfg.getProperty("focusevent"),this._onOverlayElementFocus);m.cfg.setProperty("zIndex",j,true);m.cfg.setProperty("manager",null);}if(m.focusEvent._managed){m.focusEvent=null;}if(m.blurEvent._managed){m.blurEvent=null;}if(m.focus._managed){m.focus=null;}if(m.blur._managed){m.blur=null;}}};this.blurAll=function(){var k=this.overlays.length,j;if(k>0){j=k-1;do{this.overlays[j].blur();}while(j--);}};this._manageBlur=function(j){var k=false;if(h==j){e.removeClass(h.element,a.CSS_FOCUSED);h=null;k=true;}return k;};this._manageFocus=function(j){var k=false;if(h!=j){if(h){h.blur();}h=j;this.bringToTop(h);e.addClass(h.element,a.CSS_FOCUSED);k=true;}return k;};var g=this.cfg.getProperty("overlays");if(!this.overlays){this.overlays=[];}if(g){this.register(g);this.overlays.sort(this.compareZIndexDesc);}},_onOverlayElementFocus:function(i){var g=c.getTarget(i),h=this.close;if(h&&(g==h||e.isAncestor(h,g))){this.blur();}else{this.focus();}},_onOverlayDestroy:function(h,g,i){this.remove(i);},_onOverlayFocusHandler:function(h,g,i){this._manageFocus(i);},_onOverlayBlurHandler:function(h,g,i){this._manageBlur(i);},_bindFocus:function(g){var h=this;if(!g.focusEvent){g.focusEvent=g.createEvent("focus");g.focusEvent.signature=f.LIST;g.focusEvent._managed=true;}else{g.focusEvent.subscribe(h._onOverlayFocusHandler,g,h);}if(!g.focus){c.on(g.element,h.cfg.getProperty("focusevent"),h._onOverlayElementFocus,null,g);g.focus=function(){if(h._manageFocus(this)){if(this.cfg.getProperty("visible")&&this.focusFirst){this.focusFirst();}this.focusEvent.fire();}};g.focus._managed=true;}},_bindBlur:function(g){var h=this;if(!g.blurEvent){g.blurEvent=g.createEvent("blur");g.blurEvent.signature=f.LIST;g.focusEvent._managed=true;}else{g.blurEvent.subscribe(h._onOverlayBlurHandler,g,h);}if(!g.blur){g.blur=function(){if(h._manageBlur(this)){this.blurEvent.fire();}};g.blur._managed=true;}g.hideEvent.subscribe(g.blur);
},_bindDestroy:function(g){var h=this;g.destroyEvent.subscribe(h._onOverlayDestroy,g,h);},_syncZIndex:function(g){var h=e.getStyle(g.element,"zIndex");if(!isNaN(h)){g.cfg.setProperty("zIndex",parseInt(h,10));}else{g.cfg.setProperty("zIndex",0);}},register:function(g){var k=false,h,j;if(g instanceof d){g.cfg.addProperty("manager",{value:this});this._bindFocus(g);this._bindBlur(g);this._bindDestroy(g);this._syncZIndex(g);this.overlays.push(g);this.bringToTop(g);k=true;}else{if(g instanceof Array){for(h=0,j=g.length;h<j;h++){k=this.register(g[h])||k;}}}return k;},bringToTop:function(m){var i=this.find(m),l,g,j;if(i){j=this.overlays;j.sort(this.compareZIndexDesc);g=j[0];if(g){l=e.getStyle(g.element,"zIndex");if(!isNaN(l)){var k=false;if(g!==i){k=true;}else{if(j.length>1){var h=e.getStyle(j[1].element,"zIndex");if(!isNaN(h)&&(l==h)){k=true;}}}if(k){i.cfg.setProperty("zindex",(parseInt(l,10)+2));}}j.sort(this.compareZIndexDesc);}}},find:function(g){var l=g instanceof d,j=this.overlays,p=j.length,k=null,m,h;if(l||typeof g=="string"){for(h=p-1;h>=0;h--){m=j[h];if((l&&(m===g))||(m.id==g)){k=m;break;}}}return k;},compareZIndexDesc:function(j,i){var h=(j.cfg)?j.cfg.getProperty("zIndex"):null,g=(i.cfg)?i.cfg.getProperty("zIndex"):null;if(h===null&&g===null){return 0;}else{if(h===null){return 1;}else{if(g===null){return -1;}else{if(h>g){return -1;}else{if(h<g){return 1;}else{return 0;}}}}}},showAll:function(){var h=this.overlays,j=h.length,g;for(g=j-1;g>=0;g--){h[g].show();}},hideAll:function(){var h=this.overlays,j=h.length,g;for(g=j-1;g>=0;g--){h[g].hide();}},toString:function(){return"OverlayManager";}};}());(function(){YAHOO.widget.Tooltip=function(p,o){YAHOO.widget.Tooltip.superclass.constructor.call(this,p,o);};var e=YAHOO.lang,n=YAHOO.util.Event,m=YAHOO.util.CustomEvent,c=YAHOO.util.Dom,j=YAHOO.widget.Tooltip,h=YAHOO.env.ua,g=(h.ie&&(h.ie<=6||document.compatMode=="BackCompat")),f,i={"PREVENT_OVERLAP":{key:"preventoverlap",value:true,validator:e.isBoolean,supercedes:["x","y","xy"]},"SHOW_DELAY":{key:"showdelay",value:200,validator:e.isNumber},"AUTO_DISMISS_DELAY":{key:"autodismissdelay",value:5000,validator:e.isNumber},"HIDE_DELAY":{key:"hidedelay",value:250,validator:e.isNumber},"TEXT":{key:"text",suppressEvent:true},"CONTAINER":{key:"container"},"DISABLED":{key:"disabled",value:false,suppressEvent:true},"XY_OFFSET":{key:"xyoffset",value:[0,25],suppressEvent:true}},a={"CONTEXT_MOUSE_OVER":"contextMouseOver","CONTEXT_MOUSE_OUT":"contextMouseOut","CONTEXT_TRIGGER":"contextTrigger"};j.CSS_TOOLTIP="yui-tt";function k(q,o){var p=this.cfg,r=p.getProperty("width");if(r==o){p.setProperty("width",q);}}function d(p,o){if("_originalWidth" in this){k.call(this,this._originalWidth,this._forcedWidth);}var q=document.body,u=this.cfg,t=u.getProperty("width"),r,s;if((!t||t=="auto")&&(u.getProperty("container")!=q||u.getProperty("x")>=c.getViewportWidth()||u.getProperty("y")>=c.getViewportHeight())){s=this.element.cloneNode(true);s.style.visibility="hidden";s.style.top="0px";s.style.left="0px";q.appendChild(s);r=(s.offsetWidth+"px");q.removeChild(s);s=null;u.setProperty("width",r);u.refireEvent("xy");this._originalWidth=t||"";this._forcedWidth=r;}}function b(p,o,q){this.render(q);}function l(){n.onDOMReady(b,this.cfg.getProperty("container"),this);}YAHOO.extend(j,YAHOO.widget.Overlay,{init:function(p,o){j.superclass.init.call(this,p);this.beforeInitEvent.fire(j);c.addClass(this.element,j.CSS_TOOLTIP);if(o){this.cfg.applyConfig(o,true);}this.cfg.queueProperty("visible",false);this.cfg.queueProperty("constraintoviewport",true);this.setBody("");this.subscribe("changeContent",d);this.subscribe("init",l);this.subscribe("render",this.onRender);this.initEvent.fire(j);},initEvents:function(){j.superclass.initEvents.call(this);var o=m.LIST;this.contextMouseOverEvent=this.createEvent(a.CONTEXT_MOUSE_OVER);this.contextMouseOverEvent.signature=o;this.contextMouseOutEvent=this.createEvent(a.CONTEXT_MOUSE_OUT);this.contextMouseOutEvent.signature=o;this.contextTriggerEvent=this.createEvent(a.CONTEXT_TRIGGER);this.contextTriggerEvent.signature=o;},initDefaultConfig:function(){j.superclass.initDefaultConfig.call(this);this.cfg.addProperty(i.PREVENT_OVERLAP.key,{value:i.PREVENT_OVERLAP.value,validator:i.PREVENT_OVERLAP.validator,supercedes:i.PREVENT_OVERLAP.supercedes});this.cfg.addProperty(i.SHOW_DELAY.key,{handler:this.configShowDelay,value:200,validator:i.SHOW_DELAY.validator});this.cfg.addProperty(i.AUTO_DISMISS_DELAY.key,{handler:this.configAutoDismissDelay,value:i.AUTO_DISMISS_DELAY.value,validator:i.AUTO_DISMISS_DELAY.validator});this.cfg.addProperty(i.HIDE_DELAY.key,{handler:this.configHideDelay,value:i.HIDE_DELAY.value,validator:i.HIDE_DELAY.validator});this.cfg.addProperty(i.TEXT.key,{handler:this.configText,suppressEvent:i.TEXT.suppressEvent});this.cfg.addProperty(i.CONTAINER.key,{handler:this.configContainer,value:document.body});this.cfg.addProperty(i.DISABLED.key,{handler:this.configContainer,value:i.DISABLED.value,supressEvent:i.DISABLED.suppressEvent});this.cfg.addProperty(i.XY_OFFSET.key,{value:i.XY_OFFSET.value.concat(),supressEvent:i.XY_OFFSET.suppressEvent});},configText:function(p,o,q){var r=o[0];if(r){this.setBody(r);}},configContainer:function(q,p,r){var o=p[0];if(typeof o=="string"){this.cfg.setProperty("container",document.getElementById(o),true);}},_removeEventListeners:function(){var r=this._context,o,q,p;if(r){o=r.length;if(o>0){p=o-1;do{q=r[p];n.removeListener(q,"mouseover",this.onContextMouseOver);n.removeListener(q,"mousemove",this.onContextMouseMove);n.removeListener(q,"mouseout",this.onContextMouseOut);}while(p--);}}},configContext:function(t,p,u){var s=p[0],v,o,r,q;if(s){if(!(s instanceof Array)){if(typeof s=="string"){this.cfg.setProperty("context",[document.getElementById(s)],true);}else{this.cfg.setProperty("context",[s],true);}s=this.cfg.getProperty("context");}this._removeEventListeners();this._context=s;v=this._context;if(v){o=v.length;if(o>0){q=o-1;do{r=v[q];n.on(r,"mouseover",this.onContextMouseOver,this);
n.on(r,"mousemove",this.onContextMouseMove,this);n.on(r,"mouseout",this.onContextMouseOut,this);}while(q--);}}}},onContextMouseMove:function(p,o){o.pageX=n.getPageX(p);o.pageY=n.getPageY(p);},onContextMouseOver:function(q,p){var o=this;if(o.title){p._tempTitle=o.title;o.title="";}if(p.fireEvent("contextMouseOver",o,q)!==false&&!p.cfg.getProperty("disabled")){if(p.hideProcId){clearTimeout(p.hideProcId);p.hideProcId=null;}n.on(o,"mousemove",p.onContextMouseMove,p);p.showProcId=p.doShow(q,o);}},onContextMouseOut:function(q,p){var o=this;if(p._tempTitle){o.title=p._tempTitle;p._tempTitle=null;}if(p.showProcId){clearTimeout(p.showProcId);p.showProcId=null;}if(p.hideProcId){clearTimeout(p.hideProcId);p.hideProcId=null;}p.fireEvent("contextMouseOut",o,q);p.hideProcId=setTimeout(function(){p.hide();},p.cfg.getProperty("hidedelay"));},doShow:function(r,o){var t=this.cfg.getProperty("xyoffset"),p=t[0],s=t[1],q=this;if(h.opera&&o.tagName&&o.tagName.toUpperCase()=="A"){s+=12;}return setTimeout(function(){var u=q.cfg.getProperty("text");if(q._tempTitle&&(u===""||YAHOO.lang.isUndefined(u)||YAHOO.lang.isNull(u))){q.setBody(q._tempTitle);}else{q.cfg.refireEvent("text");}q.moveTo(q.pageX+p,q.pageY+s);if(q.cfg.getProperty("preventoverlap")){q.preventOverlap(q.pageX,q.pageY);}n.removeListener(o,"mousemove",q.onContextMouseMove);q.contextTriggerEvent.fire(o);q.show();q.hideProcId=q.doHide();},this.cfg.getProperty("showdelay"));},doHide:function(){var o=this;return setTimeout(function(){o.hide();},this.cfg.getProperty("autodismissdelay"));},preventOverlap:function(s,r){var o=this.element.offsetHeight,q=new YAHOO.util.Point(s,r),p=c.getRegion(this.element);p.top-=5;p.left-=5;p.right+=5;p.bottom+=5;if(p.contains(q)){this.cfg.setProperty("y",(r-o-5));}},onRender:function(s,r){function t(){var w=this.element,v=this.underlay;if(v){v.style.width=(w.offsetWidth+6)+"px";v.style.height=(w.offsetHeight+1)+"px";}}function p(){c.addClass(this.underlay,"yui-tt-shadow-visible");if(h.ie){this.forceUnderlayRedraw();}}function o(){c.removeClass(this.underlay,"yui-tt-shadow-visible");}function u(){var x=this.underlay,w,v,z,y;if(!x){w=this.element;v=YAHOO.widget.Module;z=h.ie;y=this;if(!f){f=document.createElement("div");f.className="yui-tt-shadow";}x=f.cloneNode(false);w.appendChild(x);this.underlay=x;this._shadow=this.underlay;p.call(this);this.subscribe("beforeShow",p);this.subscribe("hide",o);if(g){window.setTimeout(function(){t.call(y);},0);this.cfg.subscribeToConfigEvent("width",t);this.cfg.subscribeToConfigEvent("height",t);this.subscribe("changeContent",t);v.textResizeEvent.subscribe(t,this,true);this.subscribe("destroy",function(){v.textResizeEvent.unsubscribe(t,this);});}}}function q(){u.call(this);this.unsubscribe("beforeShow",q);}if(this.cfg.getProperty("visible")){u.call(this);}else{this.subscribe("beforeShow",q);}},forceUnderlayRedraw:function(){var o=this;c.addClass(o.underlay,"yui-force-redraw");setTimeout(function(){c.removeClass(o.underlay,"yui-force-redraw");},0);},destroy:function(){this._removeEventListeners();j.superclass.destroy.call(this);},toString:function(){return"Tooltip "+this.id;}});}());(function(){YAHOO.widget.Panel=function(v,u){YAHOO.widget.Panel.superclass.constructor.call(this,v,u);};var s=null;var e=YAHOO.lang,f=YAHOO.util,a=f.Dom,t=f.Event,m=f.CustomEvent,k=YAHOO.util.KeyListener,i=f.Config,h=YAHOO.widget.Overlay,o=YAHOO.widget.Panel,l=YAHOO.env.ua,p=(l.ie&&(l.ie<=6||document.compatMode=="BackCompat")),g,q,c,d={"BEFORE_SHOW_MASK":"beforeShowMask","BEFORE_HIDE_MASK":"beforeHideMask","SHOW_MASK":"showMask","HIDE_MASK":"hideMask","DRAG":"drag"},n={"CLOSE":{key:"close",value:true,validator:e.isBoolean,supercedes:["visible"]},"DRAGGABLE":{key:"draggable",value:(f.DD?true:false),validator:e.isBoolean,supercedes:["visible"]},"DRAG_ONLY":{key:"dragonly",value:false,validator:e.isBoolean,supercedes:["draggable"]},"UNDERLAY":{key:"underlay",value:"shadow",supercedes:["visible"]},"MODAL":{key:"modal",value:false,validator:e.isBoolean,supercedes:["visible","zindex"]},"KEY_LISTENERS":{key:"keylisteners",suppressEvent:true,supercedes:["visible"]},"STRINGS":{key:"strings",supercedes:["close"],validator:e.isObject,value:{close:"Close"}}};o.CSS_PANEL="yui-panel";o.CSS_PANEL_CONTAINER="yui-panel-container";o.FOCUSABLE=["a","button","select","textarea","input","iframe"];function j(v,u){if(!this.header&&this.cfg.getProperty("draggable")){this.setHeader("&#160;");}}function r(v,u,w){var z=w[0],x=w[1],y=this.cfg,A=y.getProperty("width");if(A==x){y.setProperty("width",z);}this.unsubscribe("hide",r,w);}function b(v,u){var y,x,w;if(p){y=this.cfg;x=y.getProperty("width");if(!x||x=="auto"){w=(this.element.offsetWidth+"px");y.setProperty("width",w);this.subscribe("hide",r,[(x||""),w]);}}}YAHOO.extend(o,h,{init:function(v,u){o.superclass.init.call(this,v);this.beforeInitEvent.fire(o);a.addClass(this.element,o.CSS_PANEL);this.buildWrapper();if(u){this.cfg.applyConfig(u,true);}this.subscribe("showMask",this._addFocusHandlers);this.subscribe("hideMask",this._removeFocusHandlers);this.subscribe("beforeRender",j);this.subscribe("render",function(){this.setFirstLastFocusable();this.subscribe("changeContent",this.setFirstLastFocusable);});this.subscribe("show",this._focusOnShow);this.initEvent.fire(o);},_onElementFocus:function(z){if(s===this){var y=t.getTarget(z),x=document.documentElement,v=(y!==x&&y!==window);if(v&&y!==this.element&&y!==this.mask&&!a.isAncestor(this.element,y)){try{this._focusFirstModal();}catch(w){try{if(v&&y!==document.body){y.blur();}}catch(u){}}}}},_focusFirstModal:function(){var u=this.firstElement;if(u){u.focus();}else{if(this._modalFocus){this._modalFocus.focus();}else{this.innerElement.focus();}}},_addFocusHandlers:function(v,u){if(!this.firstElement){if(l.webkit||l.opera){if(!this._modalFocus){this._createHiddenFocusElement();}}else{this.innerElement.tabIndex=0;}}this._setTabLoop(this.firstElement,this.lastElement);t.onFocus(document.documentElement,this._onElementFocus,this,true);s=this;},_createHiddenFocusElement:function(){var u=document.createElement("button");
u.style.height="1px";u.style.width="1px";u.style.position="absolute";u.style.left="-10000em";u.style.opacity=0;u.tabIndex=-1;this.innerElement.appendChild(u);this._modalFocus=u;},_removeFocusHandlers:function(v,u){t.removeFocusListener(document.documentElement,this._onElementFocus,this);if(s==this){s=null;}},_focusOnShow:function(v,u,w){if(u&&u[1]){t.stopEvent(u[1]);}if(!this.focusFirst(v,u,w)){if(this.cfg.getProperty("modal")){this._focusFirstModal();}}},focusFirst:function(w,u,z){var v=this.firstElement,y=false;if(u&&u[1]){t.stopEvent(u[1]);}if(v){try{v.focus();y=true;}catch(x){}}return y;},focusLast:function(w,u,z){var v=this.lastElement,y=false;if(u&&u[1]){t.stopEvent(u[1]);}if(v){try{v.focus();y=true;}catch(x){}}return y;},_setTabLoop:function(u,v){this.setTabLoop(u,v);},setTabLoop:function(x,z){var v=this.preventBackTab,w=this.preventTabOut,u=this.showEvent,y=this.hideEvent;if(v){v.disable();u.unsubscribe(v.enable,v);y.unsubscribe(v.disable,v);v=this.preventBackTab=null;}if(w){w.disable();u.unsubscribe(w.enable,w);y.unsubscribe(w.disable,w);w=this.preventTabOut=null;}if(x){this.preventBackTab=new k(x,{shift:true,keys:9},{fn:this.focusLast,scope:this,correctScope:true});v=this.preventBackTab;u.subscribe(v.enable,v,true);y.subscribe(v.disable,v,true);}if(z){this.preventTabOut=new k(z,{shift:false,keys:9},{fn:this.focusFirst,scope:this,correctScope:true});w=this.preventTabOut;u.subscribe(w.enable,w,true);y.subscribe(w.disable,w,true);}},getFocusableElements:function(v){v=v||this.innerElement;var x={},u=this;for(var w=0;w<o.FOCUSABLE.length;w++){x[o.FOCUSABLE[w]]=true;}return a.getElementsBy(function(y){return u._testIfFocusable(y,x);},null,v);},_testIfFocusable:function(u,v){if(u.focus&&u.type!=="hidden"&&!u.disabled&&v[u.tagName.toLowerCase()]){return true;}return false;},setFirstLastFocusable:function(){this.firstElement=null;this.lastElement=null;var u=this.getFocusableElements();this.focusableElements=u;if(u.length>0){this.firstElement=u[0];this.lastElement=u[u.length-1];}if(this.cfg.getProperty("modal")){this._setTabLoop(this.firstElement,this.lastElement);}},initEvents:function(){o.superclass.initEvents.call(this);var u=m.LIST;this.showMaskEvent=this.createEvent(d.SHOW_MASK);this.showMaskEvent.signature=u;this.beforeShowMaskEvent=this.createEvent(d.BEFORE_SHOW_MASK);this.beforeShowMaskEvent.signature=u;this.hideMaskEvent=this.createEvent(d.HIDE_MASK);this.hideMaskEvent.signature=u;this.beforeHideMaskEvent=this.createEvent(d.BEFORE_HIDE_MASK);this.beforeHideMaskEvent.signature=u;this.dragEvent=this.createEvent(d.DRAG);this.dragEvent.signature=u;},initDefaultConfig:function(){o.superclass.initDefaultConfig.call(this);this.cfg.addProperty(n.CLOSE.key,{handler:this.configClose,value:n.CLOSE.value,validator:n.CLOSE.validator,supercedes:n.CLOSE.supercedes});this.cfg.addProperty(n.DRAGGABLE.key,{handler:this.configDraggable,value:(f.DD)?true:false,validator:n.DRAGGABLE.validator,supercedes:n.DRAGGABLE.supercedes});this.cfg.addProperty(n.DRAG_ONLY.key,{value:n.DRAG_ONLY.value,validator:n.DRAG_ONLY.validator,supercedes:n.DRAG_ONLY.supercedes});this.cfg.addProperty(n.UNDERLAY.key,{handler:this.configUnderlay,value:n.UNDERLAY.value,supercedes:n.UNDERLAY.supercedes});this.cfg.addProperty(n.MODAL.key,{handler:this.configModal,value:n.MODAL.value,validator:n.MODAL.validator,supercedes:n.MODAL.supercedes});this.cfg.addProperty(n.KEY_LISTENERS.key,{handler:this.configKeyListeners,suppressEvent:n.KEY_LISTENERS.suppressEvent,supercedes:n.KEY_LISTENERS.supercedes});this.cfg.addProperty(n.STRINGS.key,{value:n.STRINGS.value,handler:this.configStrings,validator:n.STRINGS.validator,supercedes:n.STRINGS.supercedes});},configClose:function(y,v,z){var A=v[0],x=this.close,u=this.cfg.getProperty("strings"),w;if(A){if(!x){if(!c){c=document.createElement("a");c.className="container-close";c.href="#";}x=c.cloneNode(true);w=this.innerElement.firstChild;if(w){this.innerElement.insertBefore(x,w);}else{this.innerElement.appendChild(x);}x.innerHTML=(u&&u.close)?u.close:"&#160;";t.on(x,"click",this._doClose,this,true);this.close=x;}else{x.style.display="block";}}else{if(x){x.style.display="none";}}},_doClose:function(u){t.preventDefault(u);this.hide();},configDraggable:function(v,u,w){var x=u[0];if(x){if(!f.DD){this.cfg.setProperty("draggable",false);return;}if(this.header){a.setStyle(this.header,"cursor","move");this.registerDragDrop();}this.subscribe("beforeShow",b);}else{if(this.dd){this.dd.unreg();}if(this.header){a.setStyle(this.header,"cursor","auto");}this.unsubscribe("beforeShow",b);}},configUnderlay:function(D,C,z){var B=(this.platform=="mac"&&l.gecko),E=C[0].toLowerCase(),v=this.underlay,w=this.element;function x(){var F=false;if(!v){if(!q){q=document.createElement("div");q.className="underlay";}v=q.cloneNode(false);this.element.appendChild(v);this.underlay=v;if(p){this.sizeUnderlay();this.cfg.subscribeToConfigEvent("width",this.sizeUnderlay);this.cfg.subscribeToConfigEvent("height",this.sizeUnderlay);this.changeContentEvent.subscribe(this.sizeUnderlay);YAHOO.widget.Module.textResizeEvent.subscribe(this.sizeUnderlay,this,true);}if(l.webkit&&l.webkit<420){this.changeContentEvent.subscribe(this.forceUnderlayRedraw);}F=true;}}function A(){var F=x.call(this);if(!F&&p){this.sizeUnderlay();}this._underlayDeferred=false;this.beforeShowEvent.unsubscribe(A);}function y(){if(this._underlayDeferred){this.beforeShowEvent.unsubscribe(A);this._underlayDeferred=false;}if(v){this.cfg.unsubscribeFromConfigEvent("width",this.sizeUnderlay);this.cfg.unsubscribeFromConfigEvent("height",this.sizeUnderlay);this.changeContentEvent.unsubscribe(this.sizeUnderlay);this.changeContentEvent.unsubscribe(this.forceUnderlayRedraw);YAHOO.widget.Module.textResizeEvent.unsubscribe(this.sizeUnderlay,this,true);this.element.removeChild(v);this.underlay=null;}}switch(E){case"shadow":a.removeClass(w,"matte");a.addClass(w,"shadow");break;case"matte":if(!B){y.call(this);}a.removeClass(w,"shadow");a.addClass(w,"matte");break;default:if(!B){y.call(this);
}a.removeClass(w,"shadow");a.removeClass(w,"matte");break;}if((E=="shadow")||(B&&!v)){if(this.cfg.getProperty("visible")){var u=x.call(this);if(!u&&p){this.sizeUnderlay();}}else{if(!this._underlayDeferred){this.beforeShowEvent.subscribe(A);this._underlayDeferred=true;}}}},configModal:function(v,u,x){var w=u[0];if(w){if(!this._hasModalityEventListeners){this.subscribe("beforeShow",this.buildMask);this.subscribe("beforeShow",this.bringToTop);this.subscribe("beforeShow",this.showMask);this.subscribe("hide",this.hideMask);h.windowResizeEvent.subscribe(this.sizeMask,this,true);this._hasModalityEventListeners=true;}}else{if(this._hasModalityEventListeners){if(this.cfg.getProperty("visible")){this.hideMask();this.removeMask();}this.unsubscribe("beforeShow",this.buildMask);this.unsubscribe("beforeShow",this.bringToTop);this.unsubscribe("beforeShow",this.showMask);this.unsubscribe("hide",this.hideMask);h.windowResizeEvent.unsubscribe(this.sizeMask,this);this._hasModalityEventListeners=false;}}},removeMask:function(){var v=this.mask,u;if(v){this.hideMask();u=v.parentNode;if(u){u.removeChild(v);}this.mask=null;}},configKeyListeners:function(x,u,A){var w=u[0],z,y,v;if(w){if(w instanceof Array){y=w.length;for(v=0;v<y;v++){z=w[v];if(!i.alreadySubscribed(this.showEvent,z.enable,z)){this.showEvent.subscribe(z.enable,z,true);}if(!i.alreadySubscribed(this.hideEvent,z.disable,z)){this.hideEvent.subscribe(z.disable,z,true);this.destroyEvent.subscribe(z.disable,z,true);}}}else{if(!i.alreadySubscribed(this.showEvent,w.enable,w)){this.showEvent.subscribe(w.enable,w,true);}if(!i.alreadySubscribed(this.hideEvent,w.disable,w)){this.hideEvent.subscribe(w.disable,w,true);this.destroyEvent.subscribe(w.disable,w,true);}}}},configStrings:function(v,u,w){var x=e.merge(n.STRINGS.value,u[0]);this.cfg.setProperty(n.STRINGS.key,x,true);},configHeight:function(x,v,y){var u=v[0],w=this.innerElement;a.setStyle(w,"height",u);this.cfg.refireEvent("iframe");},_autoFillOnHeightChange:function(x,v,w){o.superclass._autoFillOnHeightChange.apply(this,arguments);if(p){var u=this;setTimeout(function(){u.sizeUnderlay();},0);}},configWidth:function(x,u,y){var w=u[0],v=this.innerElement;a.setStyle(v,"width",w);this.cfg.refireEvent("iframe");},configzIndex:function(v,u,x){o.superclass.configzIndex.call(this,v,u,x);if(this.mask||this.cfg.getProperty("modal")===true){var w=a.getStyle(this.element,"zIndex");if(!w||isNaN(w)){w=0;}if(w===0){this.cfg.setProperty("zIndex",1);}else{this.stackMask();}}},buildWrapper:function(){var w=this.element.parentNode,u=this.element,v=document.createElement("div");v.className=o.CSS_PANEL_CONTAINER;v.id=u.id+"_c";if(w){w.insertBefore(v,u);}v.appendChild(u);this.element=v;this.innerElement=u;a.setStyle(this.innerElement,"visibility","inherit");},sizeUnderlay:function(){var v=this.underlay,u;if(v){u=this.element;v.style.width=u.offsetWidth+"px";v.style.height=u.offsetHeight+"px";}},registerDragDrop:function(){var v=this;if(this.header){if(!f.DD){return;}var u=(this.cfg.getProperty("dragonly")===true);this.dd=new f.DD(this.element.id,this.id,{dragOnly:u});if(!this.header.id){this.header.id=this.id+"_h";}this.dd.startDrag=function(){var x,z,w,C,B,A;if(YAHOO.env.ua.ie==6){a.addClass(v.element,"drag");}if(v.cfg.getProperty("constraintoviewport")){var y=h.VIEWPORT_OFFSET;x=v.element.offsetHeight;z=v.element.offsetWidth;w=a.getViewportWidth();C=a.getViewportHeight();B=a.getDocumentScrollLeft();A=a.getDocumentScrollTop();if(x+y<C){this.minY=A+y;this.maxY=A+C-x-y;}else{this.minY=A+y;this.maxY=A+y;}if(z+y<w){this.minX=B+y;this.maxX=B+w-z-y;}else{this.minX=B+y;this.maxX=B+y;}this.constrainX=true;this.constrainY=true;}else{this.constrainX=false;this.constrainY=false;}v.dragEvent.fire("startDrag",arguments);};this.dd.onDrag=function(){v.syncPosition();v.cfg.refireEvent("iframe");if(this.platform=="mac"&&YAHOO.env.ua.gecko){this.showMacGeckoScrollbars();}v.dragEvent.fire("onDrag",arguments);};this.dd.endDrag=function(){if(YAHOO.env.ua.ie==6){a.removeClass(v.element,"drag");}v.dragEvent.fire("endDrag",arguments);v.moveEvent.fire(v.cfg.getProperty("xy"));};this.dd.setHandleElId(this.header.id);this.dd.addInvalidHandleType("INPUT");this.dd.addInvalidHandleType("SELECT");this.dd.addInvalidHandleType("TEXTAREA");}},buildMask:function(){var u=this.mask;if(!u){if(!g){g=document.createElement("div");g.className="mask";g.innerHTML="&#160;";}u=g.cloneNode(true);u.id=this.id+"_mask";document.body.insertBefore(u,document.body.firstChild);this.mask=u;if(YAHOO.env.ua.gecko&&this.platform=="mac"){a.addClass(this.mask,"block-scrollbars");}this.stackMask();}},hideMask:function(){if(this.cfg.getProperty("modal")&&this.mask&&this.beforeHideMaskEvent.fire()){this.mask.style.display="none";a.removeClass(document.body,"masked");this.hideMaskEvent.fire();}},showMask:function(){if(this.cfg.getProperty("modal")&&this.mask&&this.beforeShowMaskEvent.fire()){a.addClass(document.body,"masked");this.sizeMask();this.mask.style.display="block";this.showMaskEvent.fire();}},sizeMask:function(){if(this.mask){var v=this.mask,w=a.getViewportWidth(),u=a.getViewportHeight();if(v.offsetHeight>u){v.style.height=u+"px";}if(v.offsetWidth>w){v.style.width=w+"px";}v.style.height=a.getDocumentHeight()+"px";v.style.width=a.getDocumentWidth()+"px";}},stackMask:function(){if(this.mask){var u=a.getStyle(this.element,"zIndex");if(!YAHOO.lang.isUndefined(u)&&!isNaN(u)){a.setStyle(this.mask,"zIndex",u-1);}}},render:function(u){return o.superclass.render.call(this,u,this.innerElement);},_renderHeader:function(u){u=u||this.innerElement;o.superclass._renderHeader.call(this,u);},_renderBody:function(u){u=u||this.innerElement;o.superclass._renderBody.call(this,u);},_renderFooter:function(u){u=u||this.innerElement;o.superclass._renderFooter.call(this,u);},destroy:function(u){h.windowResizeEvent.unsubscribe(this.sizeMask,this);this.removeMask();if(this.close){t.purgeElement(this.close);}o.superclass.destroy.call(this,u);},forceUnderlayRedraw:function(){var v=this.underlay;a.addClass(v,"yui-force-redraw");
setTimeout(function(){a.removeClass(v,"yui-force-redraw");},0);},toString:function(){return"Panel "+this.id;}});}());(function(){YAHOO.widget.Dialog=function(j,i){YAHOO.widget.Dialog.superclass.constructor.call(this,j,i);};var b=YAHOO.util.Event,g=YAHOO.util.CustomEvent,e=YAHOO.util.Dom,a=YAHOO.widget.Dialog,f=YAHOO.lang,h={"BEFORE_SUBMIT":"beforeSubmit","SUBMIT":"submit","MANUAL_SUBMIT":"manualSubmit","ASYNC_SUBMIT":"asyncSubmit","FORM_SUBMIT":"formSubmit","CANCEL":"cancel"},c={"POST_METHOD":{key:"postmethod",value:"async"},"POST_DATA":{key:"postdata",value:null},"BUTTONS":{key:"buttons",value:"none",supercedes:["visible"]},"HIDEAFTERSUBMIT":{key:"hideaftersubmit",value:true}};a.CSS_DIALOG="yui-dialog";function d(){var m=this._aButtons,k,l,j;if(f.isArray(m)){k=m.length;if(k>0){j=k-1;do{l=m[j];if(YAHOO.widget.Button&&l instanceof YAHOO.widget.Button){l.destroy();}else{if(l.tagName.toUpperCase()=="BUTTON"){b.purgeElement(l);b.purgeElement(l,false);}}}while(j--);}}}YAHOO.extend(a,YAHOO.widget.Panel,{form:null,initDefaultConfig:function(){a.superclass.initDefaultConfig.call(this);this.callback={success:null,failure:null,argument:null};this.cfg.addProperty(c.POST_METHOD.key,{handler:this.configPostMethod,value:c.POST_METHOD.value,validator:function(i){if(i!="form"&&i!="async"&&i!="none"&&i!="manual"){return false;}else{return true;}}});this.cfg.addProperty(c.POST_DATA.key,{value:c.POST_DATA.value});this.cfg.addProperty(c.HIDEAFTERSUBMIT.key,{value:c.HIDEAFTERSUBMIT.value});this.cfg.addProperty(c.BUTTONS.key,{handler:this.configButtons,value:c.BUTTONS.value,supercedes:c.BUTTONS.supercedes});},initEvents:function(){a.superclass.initEvents.call(this);var i=g.LIST;this.beforeSubmitEvent=this.createEvent(h.BEFORE_SUBMIT);this.beforeSubmitEvent.signature=i;this.submitEvent=this.createEvent(h.SUBMIT);this.submitEvent.signature=i;this.manualSubmitEvent=this.createEvent(h.MANUAL_SUBMIT);this.manualSubmitEvent.signature=i;this.asyncSubmitEvent=this.createEvent(h.ASYNC_SUBMIT);this.asyncSubmitEvent.signature=i;this.formSubmitEvent=this.createEvent(h.FORM_SUBMIT);this.formSubmitEvent.signature=i;this.cancelEvent=this.createEvent(h.CANCEL);this.cancelEvent.signature=i;},init:function(j,i){a.superclass.init.call(this,j);this.beforeInitEvent.fire(a);e.addClass(this.element,a.CSS_DIALOG);this.cfg.setProperty("visible",false);if(i){this.cfg.applyConfig(i,true);}this.beforeHideEvent.subscribe(this.blurButtons,this,true);this.subscribe("changeBody",this.registerForm);this.initEvent.fire(a);},doSubmit:function(){var q=YAHOO.util.Connect,r=this.form,l=false,o=false,s,n,m,j;switch(this.cfg.getProperty("postmethod")){case"async":s=r.elements;n=s.length;if(n>0){m=n-1;do{if(s[m].type=="file"){l=true;break;}}while(m--);}if(l&&YAHOO.env.ua.ie&&this.isSecure){o=true;}j=this._getFormAttributes(r);q.setForm(r,l,o);var k=this.cfg.getProperty("postdata");var p=q.asyncRequest(j.method,j.action,this.callback,k);this.asyncSubmitEvent.fire(p);break;case"form":r.submit();this.formSubmitEvent.fire();break;case"none":case"manual":this.manualSubmitEvent.fire();break;}},_getFormAttributes:function(k){var i={method:null,action:null};if(k){if(k.getAttributeNode){var j=k.getAttributeNode("action");var l=k.getAttributeNode("method");if(j){i.action=j.value;}if(l){i.method=l.value;}}else{i.action=k.getAttribute("action");i.method=k.getAttribute("method");}}i.method=(f.isString(i.method)?i.method:"POST").toUpperCase();i.action=f.isString(i.action)?i.action:"";return i;},registerForm:function(){var i=this.element.getElementsByTagName("form")[0];if(this.form){if(this.form==i&&e.isAncestor(this.element,this.form)){return;}else{b.purgeElement(this.form);this.form=null;}}if(!i){i=document.createElement("form");i.name="frm_"+this.id;this.body.appendChild(i);}if(i){this.form=i;b.on(i,"submit",this._submitHandler,this,true);}},_submitHandler:function(i){b.stopEvent(i);this.submit();this.form.blur();},setTabLoop:function(i,j){i=i||this.firstButton;j=j||this.lastButton;a.superclass.setTabLoop.call(this,i,j);},_setTabLoop:function(i,j){i=i||this.firstButton;j=this.lastButton||j;this.setTabLoop(i,j);},setFirstLastFocusable:function(){a.superclass.setFirstLastFocusable.call(this);var k,j,m,n=this.focusableElements;this.firstFormElement=null;this.lastFormElement=null;if(this.form&&n&&n.length>0){j=n.length;for(k=0;k<j;++k){m=n[k];if(this.form===m.form){this.firstFormElement=m;break;}}for(k=j-1;k>=0;--k){m=n[k];if(this.form===m.form){this.lastFormElement=m;break;}}}},configClose:function(j,i,k){a.superclass.configClose.apply(this,arguments);},_doClose:function(i){b.preventDefault(i);this.cancel();},configButtons:function(t,s,n){var o=YAHOO.widget.Button,v=s[0],l=this.innerElement,u,q,k,r,p,j,m;d.call(this);this._aButtons=null;if(f.isArray(v)){p=document.createElement("span");p.className="button-group";r=v.length;this._aButtons=[];this.defaultHtmlButton=null;for(m=0;m<r;m++){u=v[m];if(o){k=new o({label:u.text,type:u.type});k.appendTo(p);q=k.get("element");if(u.isDefault){k.addClass("default");this.defaultHtmlButton=q;}if(f.isFunction(u.handler)){k.set("onclick",{fn:u.handler,obj:this,scope:this});}else{if(f.isObject(u.handler)&&f.isFunction(u.handler.fn)){k.set("onclick",{fn:u.handler.fn,obj:((!f.isUndefined(u.handler.obj))?u.handler.obj:this),scope:(u.handler.scope||this)});}}this._aButtons[this._aButtons.length]=k;}else{q=document.createElement("button");q.setAttribute("type","button");if(u.isDefault){q.className="default";this.defaultHtmlButton=q;}q.innerHTML=u.text;if(f.isFunction(u.handler)){b.on(q,"click",u.handler,this,true);}else{if(f.isObject(u.handler)&&f.isFunction(u.handler.fn)){b.on(q,"click",u.handler.fn,((!f.isUndefined(u.handler.obj))?u.handler.obj:this),(u.handler.scope||this));}}p.appendChild(q);this._aButtons[this._aButtons.length]=q;}u.htmlButton=q;if(m===0){this.firstButton=q;}if(m==(r-1)){this.lastButton=q;}}this.setFooter(p);j=this.footer;if(e.inDocument(this.element)&&!e.isAncestor(l,j)){l.appendChild(j);}this.buttonSpan=p;}else{p=this.buttonSpan;
j=this.footer;if(p&&j){j.removeChild(p);this.buttonSpan=null;this.firstButton=null;this.lastButton=null;this.defaultHtmlButton=null;}}this.changeContentEvent.fire();},getButtons:function(){return this._aButtons||null;},focusFirst:function(k,i,n){var j=this.firstFormElement,m=false;if(i&&i[1]){b.stopEvent(i[1]);if(i[0]===9&&this.firstElement){j=this.firstElement;}}if(j){try{j.focus();m=true;}catch(l){}}else{if(this.defaultHtmlButton){m=this.focusDefaultButton();}else{m=this.focusFirstButton();}}return m;},focusLast:function(k,i,n){var o=this.cfg.getProperty("buttons"),j=this.lastFormElement,m=false;if(i&&i[1]){b.stopEvent(i[1]);if(i[0]===9&&this.lastElement){j=this.lastElement;}}if(o&&f.isArray(o)){m=this.focusLastButton();}else{if(j){try{j.focus();m=true;}catch(l){}}}return m;},_getButton:function(j){var i=YAHOO.widget.Button;if(i&&j&&j.nodeName&&j.id){j=i.getButton(j.id)||j;}return j;},focusDefaultButton:function(){var i=this._getButton(this.defaultHtmlButton),k=false;if(i){try{i.focus();k=true;}catch(j){}}return k;},blurButtons:function(){var o=this.cfg.getProperty("buttons"),l,n,k,j;if(o&&f.isArray(o)){l=o.length;if(l>0){j=(l-1);do{n=o[j];if(n){k=this._getButton(n.htmlButton);if(k){try{k.blur();}catch(m){}}}}while(j--);}}},focusFirstButton:function(){var m=this.cfg.getProperty("buttons"),k,i,l=false;if(m&&f.isArray(m)){k=m[0];if(k){i=this._getButton(k.htmlButton);if(i){try{i.focus();l=true;}catch(j){}}}}return l;},focusLastButton:function(){var n=this.cfg.getProperty("buttons"),j,l,i,m=false;if(n&&f.isArray(n)){j=n.length;if(j>0){l=n[(j-1)];if(l){i=this._getButton(l.htmlButton);if(i){try{i.focus();m=true;}catch(k){}}}}}return m;},configPostMethod:function(j,i,k){this.registerForm();},validate:function(){return true;},submit:function(){if(this.validate()){if(this.beforeSubmitEvent.fire()){this.doSubmit();this.submitEvent.fire();if(this.cfg.getProperty("hideaftersubmit")){this.hide();}return true;}else{return false;}}else{return false;}},cancel:function(){this.cancelEvent.fire();this.hide();},getData:function(){var A=this.form,k,t,w,m,u,r,q,j,x,l,y,B,p,C,o,z,v;function s(n){var i=n.tagName.toUpperCase();return((i=="INPUT"||i=="TEXTAREA"||i=="SELECT")&&n.name==m);}if(A){k=A.elements;t=k.length;w={};for(z=0;z<t;z++){m=k[z].name;u=e.getElementsBy(s,"*",A);r=u.length;if(r>0){if(r==1){u=u[0];q=u.type;j=u.tagName.toUpperCase();switch(j){case"INPUT":if(q=="checkbox"){w[m]=u.checked;}else{if(q!="radio"){w[m]=u.value;}}break;case"TEXTAREA":w[m]=u.value;break;case"SELECT":x=u.options;l=x.length;y=[];for(v=0;v<l;v++){B=x[v];if(B.selected){o=B.attributes.value;y[y.length]=(o&&o.specified)?B.value:B.text;}}w[m]=y;break;}}else{q=u[0].type;switch(q){case"radio":for(v=0;v<r;v++){p=u[v];if(p.checked){w[m]=p.value;break;}}break;case"checkbox":y=[];for(v=0;v<r;v++){C=u[v];if(C.checked){y[y.length]=C.value;}}w[m]=y;break;}}}}}return w;},destroy:function(i){d.call(this);this._aButtons=null;var j=this.element.getElementsByTagName("form"),k;if(j.length>0){k=j[0];if(k){b.purgeElement(k);if(k.parentNode){k.parentNode.removeChild(k);}this.form=null;}}a.superclass.destroy.call(this,i);},toString:function(){return"Dialog "+this.id;}});}());(function(){YAHOO.widget.SimpleDialog=function(e,d){YAHOO.widget.SimpleDialog.superclass.constructor.call(this,e,d);};var c=YAHOO.util.Dom,b=YAHOO.widget.SimpleDialog,a={"ICON":{key:"icon",value:"none",suppressEvent:true},"TEXT":{key:"text",value:"",suppressEvent:true,supercedes:["icon"]}};b.ICON_BLOCK="blckicon";b.ICON_ALARM="alrticon";b.ICON_HELP="hlpicon";b.ICON_INFO="infoicon";b.ICON_WARN="warnicon";b.ICON_TIP="tipicon";b.ICON_CSS_CLASSNAME="yui-icon";b.CSS_SIMPLEDIALOG="yui-simple-dialog";YAHOO.extend(b,YAHOO.widget.Dialog,{initDefaultConfig:function(){b.superclass.initDefaultConfig.call(this);this.cfg.addProperty(a.ICON.key,{handler:this.configIcon,value:a.ICON.value,suppressEvent:a.ICON.suppressEvent});this.cfg.addProperty(a.TEXT.key,{handler:this.configText,value:a.TEXT.value,suppressEvent:a.TEXT.suppressEvent,supercedes:a.TEXT.supercedes});},init:function(e,d){b.superclass.init.call(this,e);this.beforeInitEvent.fire(b);c.addClass(this.element,b.CSS_SIMPLEDIALOG);this.cfg.queueProperty("postmethod","manual");if(d){this.cfg.applyConfig(d,true);}this.beforeRenderEvent.subscribe(function(){if(!this.body){this.setBody("");}},this,true);this.initEvent.fire(b);},registerForm:function(){b.superclass.registerForm.call(this);var e=this.form.ownerDocument,d=e.createElement("input");d.type="hidden";d.name=this.id;d.value="";this.form.appendChild(d);},configIcon:function(k,j,h){var d=j[0],e=this.body,f=b.ICON_CSS_CLASSNAME,l,i,g;if(d&&d!="none"){l=c.getElementsByClassName(f,"*",e);if(l.length===1){i=l[0];g=i.parentNode;if(g){g.removeChild(i);i=null;}}if(d.indexOf(".")==-1){i=document.createElement("span");i.className=(f+" "+d);i.innerHTML="&#160;";}else{i=document.createElement("img");i.src=(this.imageRoot+d);i.className=f;}if(i){e.insertBefore(i,e.firstChild);}}},configText:function(e,d,f){var g=d[0];if(g){this.setBody(g);this.cfg.refireEvent("icon");}},toString:function(){return"SimpleDialog "+this.id;}});}());(function(){YAHOO.widget.ContainerEffect=function(e,h,g,d,f){if(!f){f=YAHOO.util.Anim;}this.overlay=e;this.attrIn=h;this.attrOut=g;this.targetElement=d||e.element;this.animClass=f;};var b=YAHOO.util.Dom,c=YAHOO.util.CustomEvent,a=YAHOO.widget.ContainerEffect;a.FADE=function(d,f){var g=YAHOO.util.Easing,i={attributes:{opacity:{from:0,to:1}},duration:f,method:g.easeIn},e={attributes:{opacity:{to:0}},duration:f,method:g.easeOut},h=new a(d,i,e,d.element);h.handleUnderlayStart=function(){var k=this.overlay.underlay;if(k&&YAHOO.env.ua.ie){var j=(k.filters&&k.filters.length>0);if(j){b.addClass(d.element,"yui-effect-fade");}}};h.handleUnderlayComplete=function(){var j=this.overlay.underlay;if(j&&YAHOO.env.ua.ie){b.removeClass(d.element,"yui-effect-fade");}};h.handleStartAnimateIn=function(k,j,l){l.overlay._fadingIn=true;b.addClass(l.overlay.element,"hide-select");if(!l.overlay.underlay){l.overlay.cfg.refireEvent("underlay");
}l.handleUnderlayStart();l.overlay._setDomVisibility(true);b.setStyle(l.overlay.element,"opacity",0);};h.handleCompleteAnimateIn=function(k,j,l){l.overlay._fadingIn=false;b.removeClass(l.overlay.element,"hide-select");if(l.overlay.element.style.filter){l.overlay.element.style.filter=null;}l.handleUnderlayComplete();l.overlay.cfg.refireEvent("iframe");l.animateInCompleteEvent.fire();};h.handleStartAnimateOut=function(k,j,l){l.overlay._fadingOut=true;b.addClass(l.overlay.element,"hide-select");l.handleUnderlayStart();};h.handleCompleteAnimateOut=function(k,j,l){l.overlay._fadingOut=false;b.removeClass(l.overlay.element,"hide-select");if(l.overlay.element.style.filter){l.overlay.element.style.filter=null;}l.overlay._setDomVisibility(false);b.setStyle(l.overlay.element,"opacity",1);l.handleUnderlayComplete();l.overlay.cfg.refireEvent("iframe");l.animateOutCompleteEvent.fire();};h.init();return h;};a.SLIDE=function(f,d){var i=YAHOO.util.Easing,l=f.cfg.getProperty("x")||b.getX(f.element),k=f.cfg.getProperty("y")||b.getY(f.element),m=b.getClientWidth(),h=f.element.offsetWidth,j={attributes:{points:{to:[l,k]}},duration:d,method:i.easeIn},e={attributes:{points:{to:[(m+25),k]}},duration:d,method:i.easeOut},g=new a(f,j,e,f.element,YAHOO.util.Motion);g.handleStartAnimateIn=function(o,n,p){p.overlay.element.style.left=((-25)-h)+"px";p.overlay.element.style.top=k+"px";};g.handleTweenAnimateIn=function(q,p,r){var s=b.getXY(r.overlay.element),o=s[0],n=s[1];if(b.getStyle(r.overlay.element,"visibility")=="hidden"&&o<l){r.overlay._setDomVisibility(true);}r.overlay.cfg.setProperty("xy",[o,n],true);r.overlay.cfg.refireEvent("iframe");};g.handleCompleteAnimateIn=function(o,n,p){p.overlay.cfg.setProperty("xy",[l,k],true);p.startX=l;p.startY=k;p.overlay.cfg.refireEvent("iframe");p.animateInCompleteEvent.fire();};g.handleStartAnimateOut=function(o,n,r){var p=b.getViewportWidth(),s=b.getXY(r.overlay.element),q=s[1];r.animOut.attributes.points.to=[(p+25),q];};g.handleTweenAnimateOut=function(p,o,q){var s=b.getXY(q.overlay.element),n=s[0],r=s[1];q.overlay.cfg.setProperty("xy",[n,r],true);q.overlay.cfg.refireEvent("iframe");};g.handleCompleteAnimateOut=function(o,n,p){p.overlay._setDomVisibility(false);p.overlay.cfg.setProperty("xy",[l,k]);p.animateOutCompleteEvent.fire();};g.init();return g;};a.prototype={init:function(){this.beforeAnimateInEvent=this.createEvent("beforeAnimateIn");this.beforeAnimateInEvent.signature=c.LIST;this.beforeAnimateOutEvent=this.createEvent("beforeAnimateOut");this.beforeAnimateOutEvent.signature=c.LIST;this.animateInCompleteEvent=this.createEvent("animateInComplete");this.animateInCompleteEvent.signature=c.LIST;this.animateOutCompleteEvent=this.createEvent("animateOutComplete");this.animateOutCompleteEvent.signature=c.LIST;this.animIn=new this.animClass(this.targetElement,this.attrIn.attributes,this.attrIn.duration,this.attrIn.method);this.animIn.onStart.subscribe(this.handleStartAnimateIn,this);this.animIn.onTween.subscribe(this.handleTweenAnimateIn,this);this.animIn.onComplete.subscribe(this.handleCompleteAnimateIn,this);this.animOut=new this.animClass(this.targetElement,this.attrOut.attributes,this.attrOut.duration,this.attrOut.method);this.animOut.onStart.subscribe(this.handleStartAnimateOut,this);this.animOut.onTween.subscribe(this.handleTweenAnimateOut,this);this.animOut.onComplete.subscribe(this.handleCompleteAnimateOut,this);},animateIn:function(){this._stopAnims(this.lastFrameOnStop);this.beforeAnimateInEvent.fire();this.animIn.animate();},animateOut:function(){this._stopAnims(this.lastFrameOnStop);this.beforeAnimateOutEvent.fire();this.animOut.animate();},lastFrameOnStop:true,_stopAnims:function(d){if(this.animOut&&this.animOut.isAnimated()){this.animOut.stop(d);}if(this.animIn&&this.animIn.isAnimated()){this.animIn.stop(d);}},handleStartAnimateIn:function(e,d,f){},handleTweenAnimateIn:function(e,d,f){},handleCompleteAnimateIn:function(e,d,f){},handleStartAnimateOut:function(e,d,f){},handleTweenAnimateOut:function(e,d,f){},handleCompleteAnimateOut:function(e,d,f){},toString:function(){var d="ContainerEffect";if(this.overlay){d+=" ["+this.overlay.toString()+"]";}return d;}};YAHOO.lang.augmentProto(a,YAHOO.util.EventProvider);})();YAHOO.register("container",YAHOO.widget.Module,{version:"2.9.0",build:"2800"});

/********* ../yui/menu/menu-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){var K=YAHOO.env.ua,C=YAHOO.util.Dom,Z=YAHOO.util.Event,H=YAHOO.lang,T="DIV",P="hd",M="bd",O="ft",X="LI",A="disabled",D="mouseover",F="mouseout",U="mousedown",G="mouseup",V="click",B="keydown",N="keyup",I="keypress",L="clicktohide",S="position",Q="dynamic",Y="showdelay",J="selected",E="visible",W="UL",R="MenuManager";YAHOO.widget.MenuManager=function(){var l=false,d={},o={},h={},c={"click":"clickEvent","mousedown":"mouseDownEvent","mouseup":"mouseUpEvent","mouseover":"mouseOverEvent","mouseout":"mouseOutEvent","keydown":"keyDownEvent","keyup":"keyUpEvent","keypress":"keyPressEvent","focus":"focusEvent","focusin":"focusEvent","blur":"blurEvent","focusout":"blurEvent"},i=null;function b(r){var p,q;if(r&&r.tagName){switch(r.tagName.toUpperCase()){case T:p=r.parentNode;if((C.hasClass(r,P)||C.hasClass(r,M)||C.hasClass(r,O))&&p&&p.tagName&&p.tagName.toUpperCase()==T){q=p;}else{q=r;}break;case X:q=r;break;default:p=r.parentNode;if(p){q=b(p);}break;}}return q;}function e(t){var p=Z.getTarget(t),q=b(p),u=true,w=t.type,x,r,s,z,y;if(q){r=q.tagName.toUpperCase();if(r==X){s=q.id;if(s&&h[s]){z=h[s];y=z.parent;}}else{if(r==T){if(q.id){y=d[q.id];}}}}if(y){x=c[w];if(w=="click"&&(K.gecko&&y.platform!="mac")&&t.button>0){u=false;}if(u&&z&&!z.cfg.getProperty(A)){z[x].fire(t);}if(u){y[x].fire(t,z);}}else{if(w==U){for(var v in o){if(H.hasOwnProperty(o,v)){y=o[v];if(y.cfg.getProperty(L)&&!(y instanceof YAHOO.widget.MenuBar)&&y.cfg.getProperty(S)==Q){y.hide();if(K.ie&&p.focus&&(K.ie<9)){p.setActive();}}else{if(y.cfg.getProperty(Y)>0){y._cancelShowDelay();}if(y.activeItem){y.activeItem.blur();y.activeItem.cfg.setProperty(J,false);y.activeItem=null;}}}}}}}function n(q,p,r){if(d[r.id]){this.removeMenu(r);}}function k(q,p){var r=p[1];if(r){i=r;}}function f(q,p){i=null;}function a(r,q){var p=q[0],s=this.id;if(p){o[s]=this;}else{if(o[s]){delete o[s];}}}function j(q,p){m(this);}function m(q){var p=q.id;if(p&&h[p]){if(i==q){i=null;}delete h[p];q.destroyEvent.unsubscribe(j);}}function g(q,p){var s=p[0],r;if(s instanceof YAHOO.widget.MenuItem){r=s.id;if(!h[r]){h[r]=s;s.destroyEvent.subscribe(j);}}}return{addMenu:function(q){var p;if(q instanceof YAHOO.widget.Menu&&q.id&&!d[q.id]){d[q.id]=q;if(!l){p=document;Z.on(p,D,e,this,true);Z.on(p,F,e,this,true);Z.on(p,U,e,this,true);Z.on(p,G,e,this,true);Z.on(p,V,e,this,true);Z.on(p,B,e,this,true);Z.on(p,N,e,this,true);Z.on(p,I,e,this,true);Z.onFocus(p,e,this,true);Z.onBlur(p,e,this,true);l=true;}q.cfg.subscribeToConfigEvent(E,a);q.destroyEvent.subscribe(n,q,this);q.itemAddedEvent.subscribe(g);q.focusEvent.subscribe(k);q.blurEvent.subscribe(f);}},removeMenu:function(s){var q,p,r;if(s){q=s.id;if((q in d)&&(d[q]==s)){p=s.getItems();if(p&&p.length>0){r=p.length-1;do{m(p[r]);}while(r--);}delete d[q];if((q in o)&&(o[q]==s)){delete o[q];}if(s.cfg){s.cfg.unsubscribeFromConfigEvent(E,a);}s.destroyEvent.unsubscribe(n,s);s.itemAddedEvent.unsubscribe(g);s.focusEvent.unsubscribe(k);s.blurEvent.unsubscribe(f);}}},hideVisible:function(){var p;for(var q in o){if(H.hasOwnProperty(o,q)){p=o[q];if(!(p instanceof YAHOO.widget.MenuBar)&&p.cfg.getProperty(S)==Q){p.hide();}}}},getVisible:function(){return o;},getMenus:function(){return d;},getMenu:function(q){var p;if(q in d){p=d[q];}return p;},getMenuItem:function(q){var p;if(q in h){p=h[q];}return p;},getMenuItemGroup:function(t){var q=C.get(t),p,v,u,r,s;if(q&&q.tagName&&q.tagName.toUpperCase()==W){v=q.firstChild;if(v){p=[];do{r=v.id;if(r){u=this.getMenuItem(r);if(u){p[p.length]=u;}}}while((v=v.nextSibling));if(p.length>0){s=p;}}}return s;},getFocusedMenuItem:function(){return i;},getFocusedMenu:function(){var p;if(i){p=i.parent.getRoot();}return p;},toString:function(){return R;}};}();})();(function(){var AM=YAHOO.lang,Aq="Menu",G="DIV",K="div",Am="id",AH="SELECT",e="xy",R="y",Ax="UL",L="ul",AJ="first-of-type",k="LI",h="OPTGROUP",Az="OPTION",Ah="disabled",AY="none",y="selected",At="groupindex",i="index",O="submenu",Au="visible",AX="hidedelay",Ac="position",AD="dynamic",C="static",An=AD+","+C,Q="url",M="#",V="target",AU="maxheight",T="topscrollbar",x="bottomscrollbar",d="_",P=T+d+Ah,E=x+d+Ah,b="mousemove",Av="showdelay",c="submenuhidedelay",AF="iframe",w="constraintoviewport",A4="preventcontextoverlap",AO="submenualignment",Z="autosubmenudisplay",AC="clicktohide",g="container",j="scrollincrement",Aj="minscrollheight",A2="classname",Ag="shadow",Ar="keepopen",A0="hd",D="hastitle",p="context",u="",Ak="mousedown",Ae="keydown",Ao="height",U="width",AQ="px",Ay="effect",AE="monitorresize",AW="display",AV="block",J="visibility",z="absolute",AS="zindex",l="yui-menu-body-scrolled",AK="&#32;",A1=" ",Ai="mouseover",H="mouseout",AR="itemAdded",n="itemRemoved",AL="hidden",s="yui-menu-shadow",AG=s+"-visible",m=s+A1+AG;YAHOO.widget.Menu=function(A6,A5){if(A5){this.parent=A5.parent;this.lazyLoad=A5.lazyLoad||A5.lazyload;this.itemData=A5.itemData||A5.itemdata;}YAHOO.widget.Menu.superclass.constructor.call(this,A6,A5);};function B(A6){var A5=false;if(AM.isString(A6)){A5=(An.indexOf((A6.toLowerCase()))!=-1);}return A5;}var f=YAHOO.util.Dom,AA=YAHOO.util.Event,Aw=YAHOO.widget.Module,AB=YAHOO.widget.Overlay,r=YAHOO.widget.Menu,A3=YAHOO.widget.MenuManager,F=YAHOO.util.CustomEvent,As=YAHOO.env.ua,Ap,AT=false,Ad,Ab=[["mouseOverEvent",Ai],["mouseOutEvent",H],["mouseDownEvent",Ak],["mouseUpEvent","mouseup"],["clickEvent","click"],["keyPressEvent","keypress"],["keyDownEvent",Ae],["keyUpEvent","keyup"],["focusEvent","focus"],["blurEvent","blur"],["itemAddedEvent",AR],["itemRemovedEvent",n]],AZ={key:Au,value:false,validator:AM.isBoolean},AP={key:w,value:true,validator:AM.isBoolean,supercedes:[AF,"x",R,e]},AI={key:A4,value:true,validator:AM.isBoolean,supercedes:[w]},S={key:Ac,value:AD,validator:B,supercedes:[Au,AF]},A={key:AO,value:["tl","tr"]},t={key:Z,value:true,validator:AM.isBoolean,suppressEvent:true},Y={key:Av,value:250,validator:AM.isNumber,suppressEvent:true},q={key:AX,value:0,validator:AM.isNumber,suppressEvent:true},v={key:c,value:250,validator:AM.isNumber,suppressEvent:true},o={key:AC,value:true,validator:AM.isBoolean,suppressEvent:true},AN={key:g,suppressEvent:true},Af={key:j,value:1,validator:AM.isNumber,supercedes:[AU],suppressEvent:true},N={key:Aj,value:90,validator:AM.isNumber,supercedes:[AU],suppressEvent:true},X={key:AU,value:0,validator:AM.isNumber,supercedes:[AF],suppressEvent:true},W={key:A2,value:null,validator:AM.isString,suppressEvent:true},a={key:Ah,value:false,validator:AM.isBoolean,suppressEvent:true},I={key:Ag,value:true,validator:AM.isBoolean,suppressEvent:true,supercedes:[Au]},Al={key:Ar,value:false,validator:AM.isBoolean};
function Aa(A5){Ad=AA.getTarget(A5);}YAHOO.lang.extend(r,AB,{CSS_CLASS_NAME:"yuimenu",ITEM_TYPE:null,GROUP_TITLE_TAG_NAME:"h6",OFF_SCREEN_POSITION:"-999em",_useHideDelay:false,_bHandledMouseOverEvent:false,_bHandledMouseOutEvent:false,_aGroupTitleElements:null,_aItemGroups:null,_aListElements:null,_nCurrentMouseX:0,_bStopMouseEventHandlers:false,_sClassName:null,lazyLoad:false,itemData:null,activeItem:null,parent:null,srcElement:null,init:function(A7,A6){this._aItemGroups=[];this._aListElements=[];this._aGroupTitleElements=[];if(!this.ITEM_TYPE){this.ITEM_TYPE=YAHOO.widget.MenuItem;}var A5;if(AM.isString(A7)){A5=f.get(A7);}else{if(A7.tagName){A5=A7;}}if(A5&&A5.tagName){switch(A5.tagName.toUpperCase()){case G:this.srcElement=A5;if(!A5.id){A5.setAttribute(Am,f.generateId());}r.superclass.init.call(this,A5);this.beforeInitEvent.fire(r);break;case AH:this.srcElement=A5;r.superclass.init.call(this,f.generateId());this.beforeInitEvent.fire(r);break;}}else{r.superclass.init.call(this,A7);this.beforeInitEvent.fire(r);}if(this.element){f.addClass(this.element,this.CSS_CLASS_NAME);this.initEvent.subscribe(this._onInit);this.beforeRenderEvent.subscribe(this._onBeforeRender);this.renderEvent.subscribe(this._onRender);this.beforeShowEvent.subscribe(this._onBeforeShow);this.hideEvent.subscribe(this._onHide);this.showEvent.subscribe(this._onShow);this.beforeHideEvent.subscribe(this._onBeforeHide);this.mouseOverEvent.subscribe(this._onMouseOver);this.mouseOutEvent.subscribe(this._onMouseOut);this.clickEvent.subscribe(this._onClick);this.keyDownEvent.subscribe(this._onKeyDown);this.keyPressEvent.subscribe(this._onKeyPress);this.blurEvent.subscribe(this._onBlur);if(!AT){AA.onFocus(document,Aa);AT=true;}if((As.gecko&&As.gecko<1.9)||(As.webkit&&As.webkit<523)){this.cfg.subscribeToConfigEvent(R,this._onYChange);}if(A6){this.cfg.applyConfig(A6,true);}A3.addMenu(this);this.initEvent.fire(r);}},_initSubTree:function(){var A6=this.srcElement,A5,A8,BB,BC,BA,A9,A7;if(A6){A5=(A6.tagName&&A6.tagName.toUpperCase());if(A5==G){BC=this.body.firstChild;if(BC){A8=0;BB=this.GROUP_TITLE_TAG_NAME.toUpperCase();do{if(BC&&BC.tagName){switch(BC.tagName.toUpperCase()){case BB:this._aGroupTitleElements[A8]=BC;break;case Ax:this._aListElements[A8]=BC;this._aItemGroups[A8]=[];A8++;break;}}}while((BC=BC.nextSibling));if(this._aListElements[0]){f.addClass(this._aListElements[0],AJ);}}}BC=null;if(A5){switch(A5){case G:BA=this._aListElements;A9=BA.length;if(A9>0){A7=A9-1;do{BC=BA[A7].firstChild;if(BC){do{if(BC&&BC.tagName&&BC.tagName.toUpperCase()==k){this.addItem(new this.ITEM_TYPE(BC,{parent:this}),A7);}}while((BC=BC.nextSibling));}}while(A7--);}break;case AH:BC=A6.firstChild;do{if(BC&&BC.tagName){switch(BC.tagName.toUpperCase()){case h:case Az:this.addItem(new this.ITEM_TYPE(BC,{parent:this}));break;}}}while((BC=BC.nextSibling));break;}}}},_getFirstEnabledItem:function(){var A5=this.getItems(),A9=A5.length,A8,A7;for(var A6=0;A6<A9;A6++){A8=A5[A6];if(A8&&!A8.cfg.getProperty(Ah)&&A8.element.style.display!=AY){A7=A8;break;}}return A7;},_addItemToGroup:function(BA,BB,BF){var BD,BG,A8,BE,A9,A6,A7,BC;function A5(BH,BI){return(BH[BI]||A5(BH,(BI+1)));}if(BB instanceof this.ITEM_TYPE){BD=BB;BD.parent=this;}else{if(AM.isString(BB)){BD=new this.ITEM_TYPE(BB,{parent:this});}else{if(AM.isObject(BB)){BB.parent=this;BD=new this.ITEM_TYPE(BB.text,BB);}}}if(BD){if(BD.cfg.getProperty(y)){this.activeItem=BD;}BG=AM.isNumber(BA)?BA:0;A8=this._getItemGroup(BG);if(!A8){A8=this._createItemGroup(BG);}if(AM.isNumber(BF)){A9=(BF>=A8.length);if(A8[BF]){A8.splice(BF,0,BD);}else{A8[BF]=BD;}BE=A8[BF];if(BE){if(A9&&(!BE.element.parentNode||BE.element.parentNode.nodeType==11)){this._aListElements[BG].appendChild(BE.element);}else{A6=A5(A8,(BF+1));if(A6&&(!BE.element.parentNode||BE.element.parentNode.nodeType==11)){this._aListElements[BG].insertBefore(BE.element,A6.element);}}BE.parent=this;this._subscribeToItemEvents(BE);this._configureSubmenu(BE);this._updateItemProperties(BG);this.itemAddedEvent.fire(BE);this.changeContentEvent.fire();BC=BE;}}else{A7=A8.length;A8[A7]=BD;BE=A8[A7];if(BE){if(!f.isAncestor(this._aListElements[BG],BE.element)){this._aListElements[BG].appendChild(BE.element);}BE.element.setAttribute(At,BG);BE.element.setAttribute(i,A7);BE.parent=this;BE.index=A7;BE.groupIndex=BG;this._subscribeToItemEvents(BE);this._configureSubmenu(BE);if(A7===0){f.addClass(BE.element,AJ);}this.itemAddedEvent.fire(BE);this.changeContentEvent.fire();BC=BE;}}}return BC;},_removeItemFromGroupByIndex:function(A8,A6){var A7=AM.isNumber(A8)?A8:0,A9=this._getItemGroup(A7),BB,BA,A5;if(A9){BB=A9.splice(A6,1);BA=BB[0];if(BA){this._updateItemProperties(A7);if(A9.length===0){A5=this._aListElements[A7];if(A5&&A5.parentNode){A5.parentNode.removeChild(A5);}this._aItemGroups.splice(A7,1);this._aListElements.splice(A7,1);A5=this._aListElements[0];if(A5){f.addClass(A5,AJ);}}this.itemRemovedEvent.fire(BA);this.changeContentEvent.fire();}}return BA;},_removeItemFromGroupByValue:function(A8,A5){var BA=this._getItemGroup(A8),BB,A9,A7,A6;if(BA){BB=BA.length;A9=-1;if(BB>0){A6=BB-1;do{if(BA[A6]==A5){A9=A6;break;}}while(A6--);if(A9>-1){A7=this._removeItemFromGroupByIndex(A8,A9);}}}return A7;},_updateItemProperties:function(A6){var A7=this._getItemGroup(A6),BA=A7.length,A9,A8,A5;if(BA>0){A5=BA-1;do{A9=A7[A5];if(A9){A8=A9.element;A9.index=A5;A9.groupIndex=A6;A8.setAttribute(At,A6);A8.setAttribute(i,A5);f.removeClass(A8,AJ);}}while(A5--);if(A8){f.addClass(A8,AJ);}}},_createItemGroup:function(A7){var A5,A6;if(!this._aItemGroups[A7]){this._aItemGroups[A7]=[];A5=document.createElement(L);this._aListElements[A7]=A5;A6=this._aItemGroups[A7];}return A6;},_getItemGroup:function(A7){var A5=AM.isNumber(A7)?A7:0,A8=this._aItemGroups,A6;if(A5 in A8){A6=A8[A5];}return A6;},_configureSubmenu:function(A5){var A6=A5.cfg.getProperty(O);if(A6){this.cfg.configChangedEvent.subscribe(this._onParentMenuConfigChange,A6,true);this.renderEvent.subscribe(this._onParentMenuRender,A6,true);}},_subscribeToItemEvents:function(A5){A5.destroyEvent.subscribe(this._onMenuItemDestroy,A5,this);
A5.cfg.configChangedEvent.subscribe(this._onMenuItemConfigChange,A5,this);},_onVisibleChange:function(A7,A6){var A5=A6[0];if(A5){f.addClass(this.element,Au);}else{f.removeClass(this.element,Au);}},_cancelHideDelay:function(){var A5=this.getRoot()._hideDelayTimer;if(A5){A5.cancel();}},_execHideDelay:function(){this._cancelHideDelay();var A5=this.getRoot();A5._hideDelayTimer=AM.later(A5.cfg.getProperty(AX),this,function(){if(A5.activeItem){if(A5.hasFocus()){A5.activeItem.focus();}A5.clearActiveItem();}if(A5==this&&!(this instanceof YAHOO.widget.MenuBar)&&this.cfg.getProperty(Ac)==AD){this.hide();}});},_cancelShowDelay:function(){var A5=this.getRoot()._showDelayTimer;if(A5){A5.cancel();}},_execSubmenuHideDelay:function(A7,A6,A5){A7._submenuHideDelayTimer=AM.later(50,this,function(){if(this._nCurrentMouseX>(A6+10)){A7._submenuHideDelayTimer=AM.later(A5,A7,function(){this.hide();});}else{A7.hide();}});},_disableScrollHeader:function(){if(!this._bHeaderDisabled){f.addClass(this.header,P);this._bHeaderDisabled=true;}},_disableScrollFooter:function(){if(!this._bFooterDisabled){f.addClass(this.footer,E);this._bFooterDisabled=true;}},_enableScrollHeader:function(){if(this._bHeaderDisabled){f.removeClass(this.header,P);this._bHeaderDisabled=false;}},_enableScrollFooter:function(){if(this._bFooterDisabled){f.removeClass(this.footer,E);this._bFooterDisabled=false;}},_onMouseOver:function(BH,BA){var BI=BA[0],BE=BA[1],A5=AA.getTarget(BI),A9=this.getRoot(),BG=this._submenuHideDelayTimer,A6,A8,BD,A7,BC,BB;var BF=function(){if(this.parent.cfg.getProperty(y)){this.show();}};if(!this._bStopMouseEventHandlers){if(!this._bHandledMouseOverEvent&&(A5==this.element||f.isAncestor(this.element,A5))){if(this._useHideDelay){this._cancelHideDelay();}this._nCurrentMouseX=0;AA.on(this.element,b,this._onMouseMove,this,true);if(!(BE&&f.isAncestor(BE.element,AA.getRelatedTarget(BI)))){this.clearActiveItem();}if(this.parent&&BG){BG.cancel();this.parent.cfg.setProperty(y,true);A6=this.parent.parent;A6._bHandledMouseOutEvent=true;A6._bHandledMouseOverEvent=false;}this._bHandledMouseOverEvent=true;this._bHandledMouseOutEvent=false;}if(BE&&!BE.handledMouseOverEvent&&!BE.cfg.getProperty(Ah)&&(A5==BE.element||f.isAncestor(BE.element,A5))){A8=this.cfg.getProperty(Av);BD=(A8>0);if(BD){this._cancelShowDelay();}A7=this.activeItem;if(A7){A7.cfg.setProperty(y,false);}BC=BE.cfg;BC.setProperty(y,true);if(this.hasFocus()||A9._hasFocus){BE.focus();A9._hasFocus=false;}if(this.cfg.getProperty(Z)){BB=BC.getProperty(O);if(BB){if(BD){A9._showDelayTimer=AM.later(A9.cfg.getProperty(Av),BB,BF);}else{BB.show();}}}BE.handledMouseOverEvent=true;BE.handledMouseOutEvent=false;}}},_onMouseOut:function(BD,A7){var BE=A7[0],BB=A7[1],A8=AA.getRelatedTarget(BE),BC=false,BA,A9,A5,A6;if(!this._bStopMouseEventHandlers){if(BB&&!BB.cfg.getProperty(Ah)){BA=BB.cfg;A9=BA.getProperty(O);if(A9&&(A8==A9.element||f.isAncestor(A9.element,A8))){BC=true;}if(!BB.handledMouseOutEvent&&((A8!=BB.element&&!f.isAncestor(BB.element,A8))||BC)){if(!BC){BB.cfg.setProperty(y,false);if(A9){A5=this.cfg.getProperty(c);A6=this.cfg.getProperty(Av);if(!(this instanceof YAHOO.widget.MenuBar)&&A5>0&&A5>=A6){this._execSubmenuHideDelay(A9,AA.getPageX(BE),A5);}else{A9.hide();}}}BB.handledMouseOutEvent=true;BB.handledMouseOverEvent=false;}}if(!this._bHandledMouseOutEvent){if(this._didMouseLeave(A8)||BC){if(this._useHideDelay){this._execHideDelay();}AA.removeListener(this.element,b,this._onMouseMove);this._nCurrentMouseX=AA.getPageX(BE);this._bHandledMouseOutEvent=true;this._bHandledMouseOverEvent=false;}}}},_didMouseLeave:function(A5){return(A5===this._shadow||(A5!=this.element&&!f.isAncestor(this.element,A5)));},_onMouseMove:function(A6,A5){if(!this._bStopMouseEventHandlers){this._nCurrentMouseX=AA.getPageX(A6);}},_onClick:function(BG,A7){var BH=A7[0],BB=A7[1],BD=false,A9,BE,A6,A5,BA,BC,BF;var A8=function(){A6=this.getRoot();if(A6 instanceof YAHOO.widget.MenuBar||A6.cfg.getProperty(Ac)==C){A6.clearActiveItem();}else{A6.hide();}};if(BB){if(BB.cfg.getProperty(Ah)){AA.preventDefault(BH);A8.call(this);}else{A9=BB.cfg.getProperty(O);BA=BB.cfg.getProperty(Q);if(BA){BC=BA.indexOf(M);BF=BA.length;if(BC!=-1){BA=BA.substr(BC,BF);BF=BA.length;if(BF>1){A5=BA.substr(1,BF);BE=YAHOO.widget.MenuManager.getMenu(A5);if(BE){BD=(this.getRoot()===BE.getRoot());}}else{if(BF===1){BD=true;}}}}if(BD&&!BB.cfg.getProperty(V)){AA.preventDefault(BH);if(As.webkit){BB.focus();}else{BB.focusEvent.fire();}}if(!A9&&!this.cfg.getProperty(Ar)){A8.call(this);}}}},_stopMouseEventHandlers:function(){this._bStopMouseEventHandlers=true;AM.later(10,this,function(){this._bStopMouseEventHandlers=false;});},_onKeyDown:function(BJ,BD){var BG=BD[0],BF=BD[1],BC,BH,A6,A9,BK,A5,BN,A8,BI,A7,BE,BM,BA,BB;if(this._useHideDelay){this._cancelHideDelay();}if(BF&&!BF.cfg.getProperty(Ah)){BH=BF.cfg;A6=this.parent;switch(BG.keyCode){case 38:case 40:BK=(BG.keyCode==38)?BF.getPreviousEnabledSibling():BF.getNextEnabledSibling();if(BK){this.clearActiveItem();BK.cfg.setProperty(y,true);BK.focus();if(this.cfg.getProperty(AU)>0||f.hasClass(this.body,l)){A5=this.body;BN=A5.scrollTop;A8=A5.offsetHeight;BI=this.getItems();A7=BI.length-1;BE=BK.element.offsetTop;if(BG.keyCode==40){if(BE>=(A8+BN)){A5.scrollTop=BE-A8;}else{if(BE<=BN){A5.scrollTop=0;}}if(BK==BI[A7]){A5.scrollTop=BK.element.offsetTop;}}else{if(BE<=BN){A5.scrollTop=BE-BK.element.offsetHeight;}else{if(BE>=(BN+A8)){A5.scrollTop=BE;}}if(BK==BI[0]){A5.scrollTop=0;}}BN=A5.scrollTop;BM=A5.scrollHeight-A5.offsetHeight;if(BN===0){this._disableScrollHeader();this._enableScrollFooter();}else{if(BN==BM){this._enableScrollHeader();this._disableScrollFooter();}else{this._enableScrollHeader();this._enableScrollFooter();}}}}AA.preventDefault(BG);this._stopMouseEventHandlers();break;case 39:BC=BH.getProperty(O);if(BC){if(!BH.getProperty(y)){BH.setProperty(y,true);}BC.show();BC.setInitialFocus();BC.setInitialSelection();}else{A9=this.getRoot();if(A9 instanceof YAHOO.widget.MenuBar){BK=A9.activeItem.getNextEnabledSibling();
if(BK){A9.clearActiveItem();BK.cfg.setProperty(y,true);BC=BK.cfg.getProperty(O);if(BC){BC.show();BC.setInitialFocus();}else{BK.focus();}}}}AA.preventDefault(BG);this._stopMouseEventHandlers();break;case 37:if(A6){BA=A6.parent;if(BA instanceof YAHOO.widget.MenuBar){BK=BA.activeItem.getPreviousEnabledSibling();if(BK){BA.clearActiveItem();BK.cfg.setProperty(y,true);BC=BK.cfg.getProperty(O);if(BC){BC.show();BC.setInitialFocus();}else{BK.focus();}}}else{this.hide();A6.focus();}}AA.preventDefault(BG);this._stopMouseEventHandlers();break;}}if(BG.keyCode==27){if(this.cfg.getProperty(Ac)==AD){this.hide();if(this.parent){this.parent.focus();}else{BB=this._focusedElement;if(BB&&BB.focus){try{BB.focus();}catch(BL){}}}}else{if(this.activeItem){BC=this.activeItem.cfg.getProperty(O);if(BC&&BC.cfg.getProperty(Au)){BC.hide();this.activeItem.focus();}else{this.activeItem.blur();this.activeItem.cfg.setProperty(y,false);}}}AA.preventDefault(BG);}},_onKeyPress:function(A7,A6){var A5=A6[0];if(A5.keyCode==40||A5.keyCode==38){AA.preventDefault(A5);}},_onBlur:function(A6,A5){if(this._hasFocus){this._hasFocus=false;}},_onYChange:function(A6,A5){var A8=this.parent,BA,A7,A9;if(A8){BA=A8.parent.body.scrollTop;if(BA>0){A9=(this.cfg.getProperty(R)-BA);f.setY(this.element,A9);A7=this.iframe;if(A7){f.setY(A7,A9);}this.cfg.setProperty(R,A9,true);}}},_onScrollTargetMouseOver:function(BB,BE){var BD=this._bodyScrollTimer;if(BD){BD.cancel();}this._cancelHideDelay();var A7=AA.getTarget(BB),A9=this.body,A8=this.cfg.getProperty(j),A5,A6;function BC(){var BF=A9.scrollTop;if(BF<A5){A9.scrollTop=(BF+A8);this._enableScrollHeader();}else{A9.scrollTop=A5;this._bodyScrollTimer.cancel();this._disableScrollFooter();}}function BA(){var BF=A9.scrollTop;if(BF>0){A9.scrollTop=(BF-A8);this._enableScrollFooter();}else{A9.scrollTop=0;this._bodyScrollTimer.cancel();this._disableScrollHeader();}}if(f.hasClass(A7,A0)){A6=BA;}else{A5=A9.scrollHeight-A9.offsetHeight;A6=BC;}this._bodyScrollTimer=AM.later(10,this,A6,null,true);},_onScrollTargetMouseOut:function(A7,A5){var A6=this._bodyScrollTimer;if(A6){A6.cancel();}this._cancelHideDelay();},_onInit:function(A6,A5){this.cfg.subscribeToConfigEvent(Au,this._onVisibleChange);var A7=!this.parent,A8=this.lazyLoad;if(((A7&&!A8)||(A7&&(this.cfg.getProperty(Au)||this.cfg.getProperty(Ac)==C))||(!A7&&!A8))&&this.getItemGroups().length===0){if(this.srcElement){this._initSubTree();}if(this.itemData){this.addItems(this.itemData);}}else{if(A8){this.cfg.fireQueue();}}},_onBeforeRender:function(A8,A7){var A9=this.element,BC=this._aListElements.length,A6=true,BB=0,A5,BA;if(BC>0){do{A5=this._aListElements[BB];if(A5){if(A6){f.addClass(A5,AJ);A6=false;}if(!f.isAncestor(A9,A5)){this.appendToBody(A5);}BA=this._aGroupTitleElements[BB];if(BA){if(!f.isAncestor(A9,BA)){A5.parentNode.insertBefore(BA,A5);}f.addClass(A5,D);}}BB++;}while(BB<BC);}},_onRender:function(A6,A5){if(this.cfg.getProperty(Ac)==AD){if(!this.cfg.getProperty(Au)){this.positionOffScreen();}}},_onBeforeShow:function(A7,A6){var A9,BC,A8,BA=this.cfg.getProperty(g);if(this.lazyLoad&&this.getItemGroups().length===0){if(this.srcElement){this._initSubTree();}if(this.itemData){if(this.parent&&this.parent.parent&&this.parent.parent.srcElement&&this.parent.parent.srcElement.tagName.toUpperCase()==AH){A9=this.itemData.length;for(BC=0;BC<A9;BC++){if(this.itemData[BC].tagName){this.addItem((new this.ITEM_TYPE(this.itemData[BC])));}}}else{this.addItems(this.itemData);}}A8=this.srcElement;if(A8){if(A8.tagName.toUpperCase()==AH){if(f.inDocument(A8)){this.render(A8.parentNode);}else{this.render(BA);}}else{this.render();}}else{if(this.parent){this.render(this.parent.element);}else{this.render(BA);}}}var BB=this.parent,A5;if(!BB&&this.cfg.getProperty(Ac)==AD){this.cfg.refireEvent(e);}if(BB){A5=BB.parent.cfg.getProperty(AO);this.cfg.setProperty(p,[BB.element,A5[0],A5[1]]);this.align();}},getConstrainedY:function(BH){var BS=this,BO=BS.cfg.getProperty(p),BV=BS.cfg.getProperty(AU),BR,BG={"trbr":true,"tlbl":true,"bltl":true,"brtr":true},BA=(BO&&BG[BO[1]+BO[2]]),BC=BS.element,BW=BC.offsetHeight,BQ=AB.VIEWPORT_OFFSET,BL=f.getViewportHeight(),BP=f.getDocumentScrollTop(),BM=(BS.cfg.getProperty(Aj)+BQ<BL),BU,BD,BJ,BK,BF=false,BE,A7,BI=BP+BQ,A9=BP+BL-BW-BQ,A5=BH;var BB=function(){var BX;if((BS.cfg.getProperty(R)-BP)>BJ){BX=(BJ-BW);}else{BX=(BJ+BK);}BS.cfg.setProperty(R,(BX+BP),true);return BX;};var A8=function(){if((BS.cfg.getProperty(R)-BP)>BJ){return(A7-BQ);}else{return(BE-BQ);}};var BN=function(){var BX;if((BS.cfg.getProperty(R)-BP)>BJ){BX=(BJ+BK);}else{BX=(BJ-BC.offsetHeight);}BS.cfg.setProperty(R,(BX+BP),true);};var A6=function(){BS._setScrollHeight(this.cfg.getProperty(AU));BS.hideEvent.unsubscribe(A6);};var BT=function(){var Ba=A8(),BX=(BS.getItems().length>0),BZ,BY;if(BW>Ba){BZ=BX?BS.cfg.getProperty(Aj):BW;if((Ba>BZ)&&BX){BR=Ba;}else{BR=BV;}BS._setScrollHeight(BR);BS.hideEvent.subscribe(A6);BN();if(Ba<BZ){if(BF){BB();}else{BB();BF=true;BY=BT();}}}else{if(BR&&(BR!==BV)){BS._setScrollHeight(BV);BS.hideEvent.subscribe(A6);BN();}}return BY;};if(BH<BI||BH>A9){if(BM){if(BS.cfg.getProperty(A4)&&BA){BD=BO[0];BK=BD.offsetHeight;BJ=(f.getY(BD)-BP);BE=BJ;A7=(BL-(BJ+BK));BT();A5=BS.cfg.getProperty(R);}else{if(!(BS instanceof YAHOO.widget.MenuBar)&&BW>=BL){BU=(BL-(BQ*2));if(BU>BS.cfg.getProperty(Aj)){BS._setScrollHeight(BU);BS.hideEvent.subscribe(A6);BN();A5=BS.cfg.getProperty(R);}}else{if(BH<BI){A5=BI;}else{if(BH>A9){A5=A9;}}}}}else{A5=BQ+BP;}}return A5;},_onHide:function(A6,A5){if(this.cfg.getProperty(Ac)===AD){this.positionOffScreen();}},_onShow:function(BD,BB){var A5=this.parent,A7,A8,BA,A6;function A9(BF){var BE;if(BF.type==Ak||(BF.type==Ae&&BF.keyCode==27)){BE=AA.getTarget(BF);if(BE!=A7.element||!f.isAncestor(A7.element,BE)){A7.cfg.setProperty(Z,false);AA.removeListener(document,Ak,A9);AA.removeListener(document,Ae,A9);}}}function BC(BF,BE,BG){this.cfg.setProperty(U,u);this.hideEvent.unsubscribe(BC,BG);}if(A5){A7=A5.parent;if(!A7.cfg.getProperty(Z)&&(A7 instanceof YAHOO.widget.MenuBar||A7.cfg.getProperty(Ac)==C)){A7.cfg.setProperty(Z,true);
AA.on(document,Ak,A9);AA.on(document,Ae,A9);}if((this.cfg.getProperty("x")<A7.cfg.getProperty("x"))&&(As.gecko&&As.gecko<1.9)&&!this.cfg.getProperty(U)){A8=this.element;BA=A8.offsetWidth;A8.style.width=BA+AQ;A6=(BA-(A8.offsetWidth-BA))+AQ;this.cfg.setProperty(U,A6);this.hideEvent.subscribe(BC,A6);}}if(this===this.getRoot()&&this.cfg.getProperty(Ac)===AD){this._focusedElement=Ad;this.focus();}},_onBeforeHide:function(A7,A6){var A5=this.activeItem,A9=this.getRoot(),BA,A8;if(A5){BA=A5.cfg;BA.setProperty(y,false);A8=BA.getProperty(O);if(A8){A8.hide();}}if(As.ie&&this.cfg.getProperty(Ac)===AD&&this.parent){A9._hasFocus=this.hasFocus();}if(A9==this){A9.blur();}},_onParentMenuConfigChange:function(A6,A5,A9){var A7=A5[0][0],A8=A5[0][1];switch(A7){case AF:case w:case AX:case Av:case c:case AC:case Ay:case A2:case j:case AU:case Aj:case AE:case Ag:case A4:case Ar:A9.cfg.setProperty(A7,A8);break;case AO:if(!(this.parent.parent instanceof YAHOO.widget.MenuBar)){A9.cfg.setProperty(A7,A8);}break;}},_onParentMenuRender:function(A6,A5,BB){var A8=BB.parent.parent,A7=A8.cfg,A9={constraintoviewport:A7.getProperty(w),xy:[0,0],clicktohide:A7.getProperty(AC),effect:A7.getProperty(Ay),showdelay:A7.getProperty(Av),hidedelay:A7.getProperty(AX),submenuhidedelay:A7.getProperty(c),classname:A7.getProperty(A2),scrollincrement:A7.getProperty(j),maxheight:A7.getProperty(AU),minscrollheight:A7.getProperty(Aj),iframe:A7.getProperty(AF),shadow:A7.getProperty(Ag),preventcontextoverlap:A7.getProperty(A4),monitorresize:A7.getProperty(AE),keepopen:A7.getProperty(Ar)},BA;if(!(A8 instanceof YAHOO.widget.MenuBar)){A9[AO]=A7.getProperty(AO);}BB.cfg.applyConfig(A9);if(!this.lazyLoad){BA=this.parent.element;if(this.element.parentNode==BA){this.render();}else{this.render(BA);}}},_onMenuItemDestroy:function(A7,A6,A5){this._removeItemFromGroupByValue(A5.groupIndex,A5);},_onMenuItemConfigChange:function(A7,A6,A5){var A9=A6[0][0],BA=A6[0][1],A8;switch(A9){case y:if(BA===true){this.activeItem=A5;}break;case O:A8=A6[0][1];if(A8){this._configureSubmenu(A5);}break;}},configVisible:function(A7,A6,A8){var A5,A9;if(this.cfg.getProperty(Ac)==AD){r.superclass.configVisible.call(this,A7,A6,A8);}else{A5=A6[0];A9=f.getStyle(this.element,AW);f.setStyle(this.element,J,Au);if(A5){if(A9!=AV){this.beforeShowEvent.fire();f.setStyle(this.element,AW,AV);this.showEvent.fire();}}else{if(A9==AV){this.beforeHideEvent.fire();f.setStyle(this.element,AW,AY);this.hideEvent.fire();}}}},configPosition:function(A7,A6,BA){var A9=this.element,A8=A6[0]==C?C:z,BB=this.cfg,A5;f.setStyle(A9,Ac,A8);if(A8==C){f.setStyle(A9,AW,AV);BB.setProperty(Au,true);}else{f.setStyle(A9,J,AL);}if(A8==z){A5=BB.getProperty(AS);if(!A5||A5===0){BB.setProperty(AS,1);}}},configIframe:function(A6,A5,A7){if(this.cfg.getProperty(Ac)==AD){r.superclass.configIframe.call(this,A6,A5,A7);}},configHideDelay:function(A6,A5,A7){var A8=A5[0];this._useHideDelay=(A8>0);},configContainer:function(A6,A5,A8){var A7=A5[0];if(AM.isString(A7)){this.cfg.setProperty(g,f.get(A7),true);}},_clearSetWidthFlag:function(){this._widthSetForScroll=false;this.cfg.unsubscribeFromConfigEvent(U,this._clearSetWidthFlag);},_subscribeScrollHandlers:function(A6,A5){var A8=this._onScrollTargetMouseOver;var A7=this._onScrollTargetMouseOut;AA.on(A6,Ai,A8,this,true);AA.on(A6,H,A7,this,true);AA.on(A5,Ai,A8,this,true);AA.on(A5,H,A7,this,true);},_unsubscribeScrollHandlers:function(A6,A5){var A8=this._onScrollTargetMouseOver;var A7=this._onScrollTargetMouseOut;AA.removeListener(A6,Ai,A8);AA.removeListener(A6,H,A7);AA.removeListener(A5,Ai,A8);AA.removeListener(A5,H,A7);},_setScrollHeight:function(BF){var BC=BF,BB=false,BG=false,A8,A9,BE,A6,A5,BD,BA,A7;if(this.getItems().length>0){A8=this.element;A9=this.body;BE=this.header;A6=this.footer;A5=this.cfg.getProperty(Aj);if(BC>0&&BC<A5){BC=A5;}f.setStyle(A9,Ao,u);f.removeClass(A9,l);A9.scrollTop=0;BG=((As.gecko&&As.gecko<1.9)||As.ie);if(BC>0&&BG&&!this.cfg.getProperty(U)){BA=A8.offsetWidth;A8.style.width=BA+AQ;A7=(BA-(A8.offsetWidth-BA))+AQ;this.cfg.unsubscribeFromConfigEvent(U,this._clearSetWidthFlag);this.cfg.setProperty(U,A7);this._widthSetForScroll=true;this.cfg.subscribeToConfigEvent(U,this._clearSetWidthFlag);}if(BC>0&&(!BE&&!A6)){this.setHeader(AK);this.setFooter(AK);BE=this.header;A6=this.footer;f.addClass(BE,T);f.addClass(A6,x);A8.insertBefore(BE,A9);A8.appendChild(A6);}BD=BC;if(BE&&A6){BD=(BD-(BE.offsetHeight+A6.offsetHeight));}if((BD>0)&&(A9.offsetHeight>BC)){f.addClass(A9,l);f.setStyle(A9,Ao,(BD+AQ));if(!this._hasScrollEventHandlers){this._subscribeScrollHandlers(BE,A6);this._hasScrollEventHandlers=true;}this._disableScrollHeader();this._enableScrollFooter();BB=true;}else{if(BE&&A6){if(this._widthSetForScroll){this._widthSetForScroll=false;this.cfg.unsubscribeFromConfigEvent(U,this._clearSetWidthFlag);this.cfg.setProperty(U,u);}this._enableScrollHeader();this._enableScrollFooter();if(this._hasScrollEventHandlers){this._unsubscribeScrollHandlers(BE,A6);this._hasScrollEventHandlers=false;}A8.removeChild(BE);A8.removeChild(A6);this.header=null;this.footer=null;BB=true;}}if(BB){this.cfg.refireEvent(AF);this.cfg.refireEvent(Ag);}}},_setMaxHeight:function(A6,A5,A7){this._setScrollHeight(A7);this.renderEvent.unsubscribe(this._setMaxHeight);},configMaxHeight:function(A6,A5,A7){var A8=A5[0];if(this.lazyLoad&&!this.body&&A8>0){this.renderEvent.subscribe(this._setMaxHeight,A8,this);}else{this._setScrollHeight(A8);}},configClassName:function(A7,A6,A8){var A5=A6[0];if(this._sClassName){f.removeClass(this.element,this._sClassName);}f.addClass(this.element,A5);this._sClassName=A5;},_onItemAdded:function(A6,A5){var A7=A5[0];if(A7){A7.cfg.setProperty(Ah,true);}},configDisabled:function(A7,A6,BA){var A9=A6[0],A5=this.getItems(),BB,A8;if(AM.isArray(A5)){BB=A5.length;if(BB>0){A8=BB-1;do{A5[A8].cfg.setProperty(Ah,A9);}while(A8--);}if(A9){this.clearActiveItem(true);f.addClass(this.element,Ah);this.itemAddedEvent.subscribe(this._onItemAdded);}else{f.removeClass(this.element,Ah);this.itemAddedEvent.unsubscribe(this._onItemAdded);
}}},_sizeShadow:function(){var A6=this.element,A5=this._shadow;if(A5&&A6){if(A5.style.width&&A5.style.height){A5.style.width=u;A5.style.height=u;}A5.style.width=(A6.offsetWidth+6)+AQ;A5.style.height=(A6.offsetHeight+1)+AQ;}},_replaceShadow:function(){this.element.appendChild(this._shadow);},_addShadowVisibleClass:function(){f.addClass(this._shadow,AG);},_removeShadowVisibleClass:function(){f.removeClass(this._shadow,AG);},_removeShadow:function(){var A5=(this._shadow&&this._shadow.parentNode);if(A5){A5.removeChild(this._shadow);}this.beforeShowEvent.unsubscribe(this._addShadowVisibleClass);this.beforeHideEvent.unsubscribe(this._removeShadowVisibleClass);this.cfg.unsubscribeFromConfigEvent(U,this._sizeShadow);this.cfg.unsubscribeFromConfigEvent(Ao,this._sizeShadow);this.cfg.unsubscribeFromConfigEvent(AU,this._sizeShadow);this.cfg.unsubscribeFromConfigEvent(AU,this._replaceShadow);this.changeContentEvent.unsubscribe(this._sizeShadow);Aw.textResizeEvent.unsubscribe(this._sizeShadow);},_createShadow:function(){var A6=this._shadow,A5;if(!A6){A5=this.element;if(!Ap){Ap=document.createElement(K);Ap.className=m;}A6=Ap.cloneNode(false);A5.appendChild(A6);this._shadow=A6;this.beforeShowEvent.subscribe(this._addShadowVisibleClass);this.beforeHideEvent.subscribe(this._removeShadowVisibleClass);if(As.ie){AM.later(0,this,function(){this._sizeShadow();this.syncIframe();});this.cfg.subscribeToConfigEvent(U,this._sizeShadow);this.cfg.subscribeToConfigEvent(Ao,this._sizeShadow);this.cfg.subscribeToConfigEvent(AU,this._sizeShadow);this.changeContentEvent.subscribe(this._sizeShadow);Aw.textResizeEvent.subscribe(this._sizeShadow,this,true);this.destroyEvent.subscribe(function(){Aw.textResizeEvent.unsubscribe(this._sizeShadow,this);});}this.cfg.subscribeToConfigEvent(AU,this._replaceShadow);}},_shadowBeforeShow:function(){if(this._shadow){this._replaceShadow();if(As.ie){this._sizeShadow();}}else{this._createShadow();}this.beforeShowEvent.unsubscribe(this._shadowBeforeShow);},configShadow:function(A6,A5,A7){var A8=A5[0];if(A8&&this.cfg.getProperty(Ac)==AD){if(this.cfg.getProperty(Au)){if(this._shadow){this._replaceShadow();if(As.ie){this._sizeShadow();}}else{this._createShadow();}}else{this.beforeShowEvent.subscribe(this._shadowBeforeShow);}}else{if(!A8){this.beforeShowEvent.unsubscribe(this._shadowBeforeShow);this._removeShadow();}}},initEvents:function(){r.superclass.initEvents.call(this);var A6=Ab.length-1,A7,A5;do{A7=Ab[A6];A5=this.createEvent(A7[1]);A5.signature=F.LIST;this[A7[0]]=A5;}while(A6--);},positionOffScreen:function(){var A6=this.iframe,A7=this.element,A5=this.OFF_SCREEN_POSITION;A7.style.top=u;A7.style.left=u;if(A6){A6.style.top=A5;A6.style.left=A5;}},getRoot:function(){var A7=this.parent,A6,A5;if(A7){A6=A7.parent;A5=A6?A6.getRoot():this;}else{A5=this;}return A5;},toString:function(){var A6=Aq,A5=this.id;if(A5){A6+=(A1+A5);}return A6;},setItemGroupTitle:function(BA,A9){var A8,A7,A6,A5;if(AM.isString(BA)&&BA.length>0){A8=AM.isNumber(A9)?A9:0;A7=this._aGroupTitleElements[A8];if(A7){A7.innerHTML=BA;}else{A7=document.createElement(this.GROUP_TITLE_TAG_NAME);A7.innerHTML=BA;this._aGroupTitleElements[A8]=A7;}A6=this._aGroupTitleElements.length-1;do{if(this._aGroupTitleElements[A6]){f.removeClass(this._aGroupTitleElements[A6],AJ);A5=A6;}}while(A6--);if(A5!==null){f.addClass(this._aGroupTitleElements[A5],AJ);}this.changeContentEvent.fire();}},addItem:function(A5,A6){return this._addItemToGroup(A6,A5);},addItems:function(A9,A8){var BB,A5,BA,A6,A7;if(AM.isArray(A9)){BB=A9.length;A5=[];for(A6=0;A6<BB;A6++){BA=A9[A6];if(BA){if(AM.isArray(BA)){A5[A5.length]=this.addItems(BA,A6);}else{A5[A5.length]=this._addItemToGroup(A8,BA);}}}if(A5.length){A7=A5;}}return A7;},insertItem:function(A5,A6,A7){return this._addItemToGroup(A7,A5,A6);},removeItem:function(A5,A7){var A8,A6;if(!AM.isUndefined(A5)){if(A5 instanceof YAHOO.widget.MenuItem){A8=this._removeItemFromGroupByValue(A7,A5);}else{if(AM.isNumber(A5)){A8=this._removeItemFromGroupByIndex(A7,A5);}}if(A8){A8.destroy();A6=A8;}}return A6;},getItems:function(){var A8=this._aItemGroups,A6,A7,A5=[];if(AM.isArray(A8)){A6=A8.length;A7=((A6==1)?A8[0]:(Array.prototype.concat.apply(A5,A8)));}return A7;},getItemGroups:function(){return this._aItemGroups;},getItem:function(A6,A7){var A8,A5;if(AM.isNumber(A6)){A8=this._getItemGroup(A7);if(A8){A5=A8[A6];}}return A5;},getSubmenus:function(){var A6=this.getItems(),BA=A6.length,A5,A7,A9,A8;if(BA>0){A5=[];for(A8=0;A8<BA;A8++){A9=A6[A8];if(A9){A7=A9.cfg.getProperty(O);if(A7){A5[A5.length]=A7;}}}}return A5;},clearContent:function(){var A9=this.getItems(),A6=A9.length,A7=this.element,A8=this.body,BD=this.header,A5=this.footer,BC,BB,BA;if(A6>0){BA=A6-1;do{BC=A9[BA];if(BC){BB=BC.cfg.getProperty(O);if(BB){this.cfg.configChangedEvent.unsubscribe(this._onParentMenuConfigChange,BB);this.renderEvent.unsubscribe(this._onParentMenuRender,BB);}this.removeItem(BC,BC.groupIndex);}}while(BA--);}if(BD){AA.purgeElement(BD);A7.removeChild(BD);}if(A5){AA.purgeElement(A5);A7.removeChild(A5);}if(A8){AA.purgeElement(A8);A8.innerHTML=u;}this.activeItem=null;this._aItemGroups=[];this._aListElements=[];this._aGroupTitleElements=[];this.cfg.setProperty(U,null);},destroy:function(A5){this.clearContent();this._aItemGroups=null;this._aListElements=null;this._aGroupTitleElements=null;r.superclass.destroy.call(this,A5);},setInitialFocus:function(){var A5=this._getFirstEnabledItem();if(A5){A5.focus();}},setInitialSelection:function(){var A5=this._getFirstEnabledItem();if(A5){A5.cfg.setProperty(y,true);}},clearActiveItem:function(A7){if(this.cfg.getProperty(Av)>0){this._cancelShowDelay();}var A5=this.activeItem,A8,A6;if(A5){A8=A5.cfg;if(A7){A5.blur();this.getRoot()._hasFocus=true;}A8.setProperty(y,false);A6=A8.getProperty(O);if(A6){A6.hide();}this.activeItem=null;}},focus:function(){if(!this.hasFocus()){this.setInitialFocus();}},blur:function(){var A5;if(this.hasFocus()){A5=A3.getFocusedMenuItem();if(A5){A5.blur();}}},hasFocus:function(){return(A3.getFocusedMenu()==this.getRoot());
},_doItemSubmenuSubscribe:function(A6,A5,A8){var A9=A5[0],A7=A9.cfg.getProperty(O);if(A7){A7.subscribe.apply(A7,A8);}},_doSubmenuSubscribe:function(A6,A5,A8){var A7=this.cfg.getProperty(O);if(A7){A7.subscribe.apply(A7,A8);}},subscribe:function(){r.superclass.subscribe.apply(this,arguments);r.superclass.subscribe.call(this,AR,this._doItemSubmenuSubscribe,arguments);var A5=this.getItems(),A9,A8,A6,A7;if(A5){A9=A5.length;if(A9>0){A7=A9-1;do{A8=A5[A7];A6=A8.cfg.getProperty(O);if(A6){A6.subscribe.apply(A6,arguments);}else{A8.cfg.subscribeToConfigEvent(O,this._doSubmenuSubscribe,arguments);}}while(A7--);}}},unsubscribe:function(){r.superclass.unsubscribe.apply(this,arguments);r.superclass.unsubscribe.call(this,AR,this._doItemSubmenuSubscribe,arguments);var A5=this.getItems(),A9,A8,A6,A7;if(A5){A9=A5.length;if(A9>0){A7=A9-1;do{A8=A5[A7];A6=A8.cfg.getProperty(O);if(A6){A6.unsubscribe.apply(A6,arguments);}else{A8.cfg.unsubscribeFromConfigEvent(O,this._doSubmenuSubscribe,arguments);}}while(A7--);}}},initDefaultConfig:function(){r.superclass.initDefaultConfig.call(this);var A5=this.cfg;A5.addProperty(AZ.key,{handler:this.configVisible,value:AZ.value,validator:AZ.validator});A5.addProperty(AP.key,{handler:this.configConstrainToViewport,value:AP.value,validator:AP.validator,supercedes:AP.supercedes});A5.addProperty(AI.key,{value:AI.value,validator:AI.validator,supercedes:AI.supercedes});A5.addProperty(S.key,{handler:this.configPosition,value:S.value,validator:S.validator,supercedes:S.supercedes});A5.addProperty(A.key,{value:A.value,suppressEvent:A.suppressEvent});A5.addProperty(t.key,{value:t.value,validator:t.validator,suppressEvent:t.suppressEvent});A5.addProperty(Y.key,{value:Y.value,validator:Y.validator,suppressEvent:Y.suppressEvent});A5.addProperty(q.key,{handler:this.configHideDelay,value:q.value,validator:q.validator,suppressEvent:q.suppressEvent});A5.addProperty(v.key,{value:v.value,validator:v.validator,suppressEvent:v.suppressEvent});A5.addProperty(o.key,{value:o.value,validator:o.validator,suppressEvent:o.suppressEvent});A5.addProperty(AN.key,{handler:this.configContainer,value:document.body,suppressEvent:AN.suppressEvent});A5.addProperty(Af.key,{value:Af.value,validator:Af.validator,supercedes:Af.supercedes,suppressEvent:Af.suppressEvent});A5.addProperty(N.key,{value:N.value,validator:N.validator,supercedes:N.supercedes,suppressEvent:N.suppressEvent});A5.addProperty(X.key,{handler:this.configMaxHeight,value:X.value,validator:X.validator,suppressEvent:X.suppressEvent,supercedes:X.supercedes});A5.addProperty(W.key,{handler:this.configClassName,value:W.value,validator:W.validator,supercedes:W.supercedes});A5.addProperty(a.key,{handler:this.configDisabled,value:a.value,validator:a.validator,suppressEvent:a.suppressEvent});A5.addProperty(I.key,{handler:this.configShadow,value:I.value,validator:I.validator});A5.addProperty(Al.key,{value:Al.value,validator:Al.validator});}});})();(function(){YAHOO.widget.MenuItem=function(AS,AR){if(AS){if(AR){this.parent=AR.parent;this.value=AR.value;this.id=AR.id;}this.init(AS,AR);}};var x=YAHOO.util.Dom,j=YAHOO.widget.Module,AB=YAHOO.widget.Menu,c=YAHOO.widget.MenuItem,AK=YAHOO.util.CustomEvent,k=YAHOO.env.ua,AQ=YAHOO.lang,AL="text",O="#",Q="-",L="helptext",n="url",AH="target",A="emphasis",N="strongemphasis",b="checked",w="submenu",H="disabled",B="selected",P="hassubmenu",U="checked-disabled",AI="hassubmenu-disabled",AD="hassubmenu-selected",T="checked-selected",q="onclick",J="classname",AJ="",i="OPTION",v="OPTGROUP",K="LI",AE="href",r="SELECT",X="DIV",AN='<em class="helptext">',a="<em>",I="</em>",W="<strong>",y="</strong>",Y="preventcontextoverlap",h="obj",AG="scope",t="none",V="visible",E=" ",m="MenuItem",AA="click",D="show",M="hide",S="li",AF='<a href="#"></a>',p=[["mouseOverEvent","mouseover"],["mouseOutEvent","mouseout"],["mouseDownEvent","mousedown"],["mouseUpEvent","mouseup"],["clickEvent",AA],["keyPressEvent","keypress"],["keyDownEvent","keydown"],["keyUpEvent","keyup"],["focusEvent","focus"],["blurEvent","blur"],["destroyEvent","destroy"]],o={key:AL,value:AJ,validator:AQ.isString,suppressEvent:true},s={key:L,supercedes:[AL],suppressEvent:true},G={key:n,value:O,suppressEvent:true},AO={key:AH,suppressEvent:true},AP={key:A,value:false,validator:AQ.isBoolean,suppressEvent:true,supercedes:[AL]},d={key:N,value:false,validator:AQ.isBoolean,suppressEvent:true,supercedes:[AL]},l={key:b,value:false,validator:AQ.isBoolean,suppressEvent:true,supercedes:[H,B]},F={key:w,suppressEvent:true,supercedes:[H,B]},AM={key:H,value:false,validator:AQ.isBoolean,suppressEvent:true,supercedes:[AL,B]},f={key:B,value:false,validator:AQ.isBoolean,suppressEvent:true},u={key:q,suppressEvent:true},AC={key:J,value:null,validator:AQ.isString,suppressEvent:true},z={key:"keylistener",value:null,suppressEvent:true},C=null,e={};var Z=function(AU,AT){var AR=e[AU];if(!AR){e[AU]={};AR=e[AU];}var AS=AR[AT];if(!AS){AS=AU+Q+AT;AR[AT]=AS;}return AS;};var g=function(AR){x.addClass(this.element,Z(this.CSS_CLASS_NAME,AR));x.addClass(this._oAnchor,Z(this.CSS_LABEL_CLASS_NAME,AR));};var R=function(AR){x.removeClass(this.element,Z(this.CSS_CLASS_NAME,AR));x.removeClass(this._oAnchor,Z(this.CSS_LABEL_CLASS_NAME,AR));};c.prototype={CSS_CLASS_NAME:"yuimenuitem",CSS_LABEL_CLASS_NAME:"yuimenuitemlabel",SUBMENU_TYPE:null,_oAnchor:null,_oHelpTextEM:null,_oSubmenu:null,_oOnclickAttributeValue:null,_sClassName:null,constructor:c,index:null,groupIndex:null,parent:null,element:null,srcElement:null,value:null,browser:j.prototype.browser,id:null,init:function(AR,Ab){if(!this.SUBMENU_TYPE){this.SUBMENU_TYPE=AB;}this.cfg=new YAHOO.util.Config(this);this.initDefaultConfig();var AX=this.cfg,AY=O,AT,Aa,AZ,AS,AV,AU,AW;if(AQ.isString(AR)){this._createRootNodeStructure();AX.queueProperty(AL,AR);}else{if(AR&&AR.tagName){switch(AR.tagName.toUpperCase()){case i:this._createRootNodeStructure();AX.queueProperty(AL,AR.text);AX.queueProperty(H,AR.disabled);this.value=AR.value;this.srcElement=AR;break;case v:this._createRootNodeStructure();
AX.queueProperty(AL,AR.label);AX.queueProperty(H,AR.disabled);this.srcElement=AR;this._initSubTree();break;case K:AZ=x.getFirstChild(AR);if(AZ){AY=AZ.getAttribute(AE,2);AS=AZ.getAttribute(AH);AV=AZ.innerHTML;}this.srcElement=AR;this.element=AR;this._oAnchor=AZ;AX.setProperty(AL,AV,true);AX.setProperty(n,AY,true);AX.setProperty(AH,AS,true);this._initSubTree();break;}}}if(this.element){AU=(this.srcElement||this.element).id;if(!AU){AU=this.id||x.generateId();this.element.id=AU;}this.id=AU;x.addClass(this.element,this.CSS_CLASS_NAME);x.addClass(this._oAnchor,this.CSS_LABEL_CLASS_NAME);AW=p.length-1;do{Aa=p[AW];AT=this.createEvent(Aa[1]);AT.signature=AK.LIST;this[Aa[0]]=AT;}while(AW--);if(Ab){AX.applyConfig(Ab);}AX.fireQueue();}},_createRootNodeStructure:function(){var AR,AS;if(!C){C=document.createElement(S);C.innerHTML=AF;}AR=C.cloneNode(true);AR.className=this.CSS_CLASS_NAME;AS=AR.firstChild;AS.className=this.CSS_LABEL_CLASS_NAME;this.element=AR;this._oAnchor=AS;},_initSubTree:function(){var AX=this.srcElement,AT=this.cfg,AV,AU,AS,AR,AW;if(AX.childNodes.length>0){if(this.parent.lazyLoad&&this.parent.srcElement&&this.parent.srcElement.tagName.toUpperCase()==r){AT.setProperty(w,{id:x.generateId(),itemdata:AX.childNodes});}else{AV=AX.firstChild;AU=[];do{if(AV&&AV.tagName){switch(AV.tagName.toUpperCase()){case X:AT.setProperty(w,AV);break;case i:AU[AU.length]=AV;break;}}}while((AV=AV.nextSibling));AS=AU.length;if(AS>0){AR=new this.SUBMENU_TYPE(x.generateId());AT.setProperty(w,AR);for(AW=0;AW<AS;AW++){AR.addItem((new AR.ITEM_TYPE(AU[AW])));}}}}},configText:function(Aa,AT,AV){var AS=AT[0],AU=this.cfg,AY=this._oAnchor,AR=AU.getProperty(L),AZ=AJ,AW=AJ,AX=AJ;if(AS){if(AR){AZ=AN+AR+I;}if(AU.getProperty(A)){AW=a;AX=I;}if(AU.getProperty(N)){AW=W;AX=y;}AY.innerHTML=(AW+AS+AX+AZ);}},configHelpText:function(AT,AS,AR){this.cfg.refireEvent(AL);},configURL:function(AT,AS,AR){var AV=AS[0];if(!AV){AV=O;}var AU=this._oAnchor;if(k.opera){AU.removeAttribute(AE);}AU.setAttribute(AE,AV);},configTarget:function(AU,AT,AS){var AR=AT[0],AV=this._oAnchor;if(AR&&AR.length>0){AV.setAttribute(AH,AR);}else{AV.removeAttribute(AH);}},configEmphasis:function(AT,AS,AR){var AV=AS[0],AU=this.cfg;if(AV&&AU.getProperty(N)){AU.setProperty(N,false);}AU.refireEvent(AL);},configStrongEmphasis:function(AU,AT,AS){var AR=AT[0],AV=this.cfg;if(AR&&AV.getProperty(A)){AV.setProperty(A,false);}AV.refireEvent(AL);},configChecked:function(AT,AS,AR){var AV=AS[0],AU=this.cfg;if(AV){g.call(this,b);}else{R.call(this,b);}AU.refireEvent(AL);if(AU.getProperty(H)){AU.refireEvent(H);}if(AU.getProperty(B)){AU.refireEvent(B);}},configDisabled:function(AT,AS,AR){var AV=AS[0],AW=this.cfg,AU=AW.getProperty(w),AX=AW.getProperty(b);if(AV){if(AW.getProperty(B)){AW.setProperty(B,false);}g.call(this,H);if(AU){g.call(this,AI);}if(AX){g.call(this,U);}}else{R.call(this,H);if(AU){R.call(this,AI);}if(AX){R.call(this,U);}}},configSelected:function(AT,AS,AR){var AX=this.cfg,AW=this._oAnchor,AV=AS[0],AY=AX.getProperty(b),AU=AX.getProperty(w);if(k.opera){AW.blur();}if(AV&&!AX.getProperty(H)){g.call(this,B);if(AU){g.call(this,AD);}if(AY){g.call(this,T);}}else{R.call(this,B);if(AU){R.call(this,AD);}if(AY){R.call(this,T);}}if(this.hasFocus()&&k.opera){AW.focus();}},_onSubmenuBeforeHide:function(AU,AT){var AV=this.parent,AR;function AS(){AV._oAnchor.blur();AR.beforeHideEvent.unsubscribe(AS);}if(AV.hasFocus()){AR=AV.parent;AR.beforeHideEvent.subscribe(AS);}},configSubmenu:function(AY,AT,AW){var AV=AT[0],AU=this.cfg,AS=this.parent&&this.parent.lazyLoad,AX,AZ,AR;if(AV){if(AV instanceof AB){AX=AV;AX.parent=this;AX.lazyLoad=AS;}else{if(AQ.isObject(AV)&&AV.id&&!AV.nodeType){AZ=AV.id;AR=AV;AR.lazyload=AS;AR.parent=this;AX=new this.SUBMENU_TYPE(AZ,AR);AU.setProperty(w,AX,true);}else{AX=new this.SUBMENU_TYPE(AV,{lazyload:AS,parent:this});AU.setProperty(w,AX,true);}}if(AX){AX.cfg.setProperty(Y,true);g.call(this,P);if(AU.getProperty(n)===O){AU.setProperty(n,(O+AX.id));}this._oSubmenu=AX;if(k.opera){AX.beforeHideEvent.subscribe(this._onSubmenuBeforeHide);}}}else{R.call(this,P);if(this._oSubmenu){this._oSubmenu.destroy();}}if(AU.getProperty(H)){AU.refireEvent(H);}if(AU.getProperty(B)){AU.refireEvent(B);}},configOnClick:function(AT,AS,AR){var AU=AS[0];if(this._oOnclickAttributeValue&&(this._oOnclickAttributeValue!=AU)){this.clickEvent.unsubscribe(this._oOnclickAttributeValue.fn,this._oOnclickAttributeValue.obj);this._oOnclickAttributeValue=null;}if(!this._oOnclickAttributeValue&&AQ.isObject(AU)&&AQ.isFunction(AU.fn)){this.clickEvent.subscribe(AU.fn,((h in AU)?AU.obj:this),((AG in AU)?AU.scope:null));this._oOnclickAttributeValue=AU;}},configClassName:function(AU,AT,AS){var AR=AT[0];if(this._sClassName){x.removeClass(this.element,this._sClassName);}x.addClass(this.element,AR);this._sClassName=AR;},_dispatchClickEvent:function(){var AS=this,AR;if(!AS.cfg.getProperty(H)){AR=x.getFirstChild(AS.element);this._dispatchDOMClick(AR);}},_dispatchDOMClick:function(AS){var AR;if(k.ie&&k.ie<9){AS.fireEvent(q);}else{if((k.gecko&&k.gecko>=1.9)||k.opera||k.webkit){AR=document.createEvent("HTMLEvents");AR.initEvent(AA,true,true);}else{AR=document.createEvent("MouseEvents");AR.initMouseEvent(AA,true,true,window,0,0,0,0,0,false,false,false,false,0,null);}AS.dispatchEvent(AR);}},_createKeyListener:function(AU,AT,AW){var AV=this,AS=AV.parent;var AR=new YAHOO.util.KeyListener(AS.element.ownerDocument,AW,{fn:AV._dispatchClickEvent,scope:AV,correctScope:true});if(AS.cfg.getProperty(V)){AR.enable();}AS.subscribe(D,AR.enable,null,AR);AS.subscribe(M,AR.disable,null,AR);AV._keyListener=AR;AS.unsubscribe(D,AV._createKeyListener,AW);},configKeyListener:function(AT,AS){var AV=AS[0],AU=this,AR=AU.parent;if(AU._keyData){AR.unsubscribe(D,AU._createKeyListener,AU._keyData);AU._keyData=null;}if(AU._keyListener){AR.unsubscribe(D,AU._keyListener.enable);AR.unsubscribe(M,AU._keyListener.disable);AU._keyListener.disable();AU._keyListener=null;}if(AV){AU._keyData=AV;AR.subscribe(D,AU._createKeyListener,AV,AU);}},initDefaultConfig:function(){var AR=this.cfg;
AR.addProperty(o.key,{handler:this.configText,value:o.value,validator:o.validator,suppressEvent:o.suppressEvent});AR.addProperty(s.key,{handler:this.configHelpText,supercedes:s.supercedes,suppressEvent:s.suppressEvent});AR.addProperty(G.key,{handler:this.configURL,value:G.value,suppressEvent:G.suppressEvent});AR.addProperty(AO.key,{handler:this.configTarget,suppressEvent:AO.suppressEvent});AR.addProperty(AP.key,{handler:this.configEmphasis,value:AP.value,validator:AP.validator,suppressEvent:AP.suppressEvent,supercedes:AP.supercedes});AR.addProperty(d.key,{handler:this.configStrongEmphasis,value:d.value,validator:d.validator,suppressEvent:d.suppressEvent,supercedes:d.supercedes});AR.addProperty(l.key,{handler:this.configChecked,value:l.value,validator:l.validator,suppressEvent:l.suppressEvent,supercedes:l.supercedes});AR.addProperty(AM.key,{handler:this.configDisabled,value:AM.value,validator:AM.validator,suppressEvent:AM.suppressEvent});AR.addProperty(f.key,{handler:this.configSelected,value:f.value,validator:f.validator,suppressEvent:f.suppressEvent});AR.addProperty(F.key,{handler:this.configSubmenu,supercedes:F.supercedes,suppressEvent:F.suppressEvent});AR.addProperty(u.key,{handler:this.configOnClick,suppressEvent:u.suppressEvent});AR.addProperty(AC.key,{handler:this.configClassName,value:AC.value,validator:AC.validator,suppressEvent:AC.suppressEvent});AR.addProperty(z.key,{handler:this.configKeyListener,value:z.value,suppressEvent:z.suppressEvent});},getNextSibling:function(){var AR=function(AX){return(AX.nodeName.toLowerCase()==="ul");},AV=this.element,AU=x.getNextSibling(AV),AT,AS,AW;if(!AU){AT=AV.parentNode;AS=x.getNextSiblingBy(AT,AR);if(AS){AW=AS;}else{AW=x.getFirstChildBy(AT.parentNode,AR);}AU=x.getFirstChild(AW);}return YAHOO.widget.MenuManager.getMenuItem(AU.id);},getNextEnabledSibling:function(){var AR=this.getNextSibling();return(AR.cfg.getProperty(H)||AR.element.style.display==t)?AR.getNextEnabledSibling():AR;},getPreviousSibling:function(){var AR=function(AX){return(AX.nodeName.toLowerCase()==="ul");},AV=this.element,AU=x.getPreviousSibling(AV),AT,AS,AW;if(!AU){AT=AV.parentNode;AS=x.getPreviousSiblingBy(AT,AR);if(AS){AW=AS;}else{AW=x.getLastChildBy(AT.parentNode,AR);}AU=x.getLastChild(AW);}return YAHOO.widget.MenuManager.getMenuItem(AU.id);},getPreviousEnabledSibling:function(){var AR=this.getPreviousSibling();return(AR.cfg.getProperty(H)||AR.element.style.display==t)?AR.getPreviousEnabledSibling():AR;},focus:function(){var AU=this.parent,AT=this._oAnchor,AR=AU.activeItem;function AS(){try{if(!(k.ie&&!document.hasFocus())){if(AR){AR.blurEvent.fire();}AT.focus();this.focusEvent.fire();}}catch(AV){}}if(!this.cfg.getProperty(H)&&AU&&AU.cfg.getProperty(V)&&this.element.style.display!=t){AQ.later(0,this,AS);}},blur:function(){var AR=this.parent;if(!this.cfg.getProperty(H)&&AR&&AR.cfg.getProperty(V)){AQ.later(0,this,function(){try{this._oAnchor.blur();this.blurEvent.fire();}catch(AS){}},0);}},hasFocus:function(){return(YAHOO.widget.MenuManager.getFocusedMenuItem()==this);},destroy:function(){var AT=this.element,AS,AR,AV,AU;if(AT){AS=this.cfg.getProperty(w);if(AS){AS.destroy();}AR=AT.parentNode;if(AR){AR.removeChild(AT);this.destroyEvent.fire();}AU=p.length-1;do{AV=p[AU];this[AV[0]].unsubscribeAll();}while(AU--);this.cfg.configChangedEvent.unsubscribeAll();}},toString:function(){var AS=m,AR=this.id;if(AR){AS+=(E+AR);}return AS;}};AQ.augmentProto(c,YAHOO.util.EventProvider);})();(function(){var B="xy",C="mousedown",F="ContextMenu",J=" ";YAHOO.widget.ContextMenu=function(L,K){YAHOO.widget.ContextMenu.superclass.constructor.call(this,L,K);};var I=YAHOO.util.Event,E=YAHOO.env.ua,G=YAHOO.widget.ContextMenu,A={"TRIGGER_CONTEXT_MENU":"triggerContextMenu","CONTEXT_MENU":(E.opera?C:"contextmenu"),"CLICK":"click"},H={key:"trigger",suppressEvent:true};function D(L,K,M){this.cfg.setProperty(B,M);this.beforeShowEvent.unsubscribe(D,M);}YAHOO.lang.extend(G,YAHOO.widget.Menu,{_oTrigger:null,_bCancelled:false,contextEventTarget:null,triggerContextMenuEvent:null,init:function(L,K){G.superclass.init.call(this,L);this.beforeInitEvent.fire(G);if(K){this.cfg.applyConfig(K,true);}this.initEvent.fire(G);},initEvents:function(){G.superclass.initEvents.call(this);this.triggerContextMenuEvent=this.createEvent(A.TRIGGER_CONTEXT_MENU);this.triggerContextMenuEvent.signature=YAHOO.util.CustomEvent.LIST;},cancel:function(){this._bCancelled=true;},_removeEventHandlers:function(){var K=this._oTrigger;if(K){I.removeListener(K,A.CONTEXT_MENU,this._onTriggerContextMenu);if(E.opera){I.removeListener(K,A.CLICK,this._onTriggerClick);}}},_onTriggerClick:function(L,K){if(L.ctrlKey){I.stopEvent(L);}},_onTriggerContextMenu:function(M,K){var L;if(!(M.type==C&&!M.ctrlKey)){this.contextEventTarget=I.getTarget(M);this.triggerContextMenuEvent.fire(M);if(!this._bCancelled){I.stopEvent(M);YAHOO.widget.MenuManager.hideVisible();L=I.getXY(M);if(!YAHOO.util.Dom.inDocument(this.element)){this.beforeShowEvent.subscribe(D,L);}else{this.cfg.setProperty(B,L);}this.show();}this._bCancelled=false;}},toString:function(){var L=F,K=this.id;if(K){L+=(J+K);}return L;},initDefaultConfig:function(){G.superclass.initDefaultConfig.call(this);this.cfg.addProperty(H.key,{handler:this.configTrigger,suppressEvent:H.suppressEvent});},destroy:function(K){this._removeEventHandlers();G.superclass.destroy.call(this,K);},configTrigger:function(L,K,N){var M=K[0];if(M){if(this._oTrigger){this._removeEventHandlers();}this._oTrigger=M;I.on(M,A.CONTEXT_MENU,this._onTriggerContextMenu,this,true);if(E.opera){I.on(M,A.CLICK,this._onTriggerClick,this,true);}}else{this._removeEventHandlers();}}});}());YAHOO.widget.ContextMenuItem=YAHOO.widget.MenuItem;(function(){var D=YAHOO.lang,N="static",M="dynamic,"+N,A="disabled",F="selected",B="autosubmenudisplay",G="submenu",C="visible",Q=" ",H="submenutoggleregion",P="MenuBar";YAHOO.widget.MenuBar=function(T,S){YAHOO.widget.MenuBar.superclass.constructor.call(this,T,S);};function O(T){var S=false;if(D.isString(T)){S=(M.indexOf((T.toLowerCase()))!=-1);
}return S;}var R=YAHOO.util.Event,L=YAHOO.widget.MenuBar,K={key:"position",value:N,validator:O,supercedes:[C]},E={key:"submenualignment",value:["tl","bl"]},J={key:B,value:false,validator:D.isBoolean,suppressEvent:true},I={key:H,value:false,validator:D.isBoolean};D.extend(L,YAHOO.widget.Menu,{init:function(T,S){if(!this.ITEM_TYPE){this.ITEM_TYPE=YAHOO.widget.MenuBarItem;}L.superclass.init.call(this,T);this.beforeInitEvent.fire(L);if(S){this.cfg.applyConfig(S,true);}this.initEvent.fire(L);},CSS_CLASS_NAME:"yuimenubar",SUBMENU_TOGGLE_REGION_WIDTH:20,_onKeyDown:function(U,T,Y){var S=T[0],Z=T[1],W,X,V;if(Z&&!Z.cfg.getProperty(A)){X=Z.cfg;switch(S.keyCode){case 37:case 39:if(Z==this.activeItem&&!X.getProperty(F)){X.setProperty(F,true);}else{V=(S.keyCode==37)?Z.getPreviousEnabledSibling():Z.getNextEnabledSibling();if(V){this.clearActiveItem();V.cfg.setProperty(F,true);W=V.cfg.getProperty(G);if(W){W.show();W.setInitialFocus();}else{V.focus();}}}R.preventDefault(S);break;case 40:if(this.activeItem!=Z){this.clearActiveItem();X.setProperty(F,true);Z.focus();}W=X.getProperty(G);if(W){if(W.cfg.getProperty(C)){W.setInitialSelection();W.setInitialFocus();}else{W.show();W.setInitialFocus();}}R.preventDefault(S);break;}}if(S.keyCode==27&&this.activeItem){W=this.activeItem.cfg.getProperty(G);if(W&&W.cfg.getProperty(C)){W.hide();this.activeItem.focus();}else{this.activeItem.cfg.setProperty(F,false);this.activeItem.blur();}R.preventDefault(S);}},_onClick:function(e,Y,b){L.superclass._onClick.call(this,e,Y,b);var d=Y[1],T=true,S,f,U,W,Z,a,c,V;var X=function(){if(a.cfg.getProperty(C)){a.hide();}else{a.show();}};if(d&&!d.cfg.getProperty(A)){f=Y[0];U=R.getTarget(f);W=this.activeItem;Z=this.cfg;if(W&&W!=d){this.clearActiveItem();}d.cfg.setProperty(F,true);a=d.cfg.getProperty(G);if(a){S=d.element;c=YAHOO.util.Dom.getX(S);V=c+(S.offsetWidth-this.SUBMENU_TOGGLE_REGION_WIDTH);if(Z.getProperty(H)){if(R.getPageX(f)>V){X();R.preventDefault(f);T=false;}}else{X();}}}return T;},configSubmenuToggle:function(U,T){var S=T[0];if(S){this.cfg.setProperty(B,false);}},toString:function(){var T=P,S=this.id;if(S){T+=(Q+S);}return T;},initDefaultConfig:function(){L.superclass.initDefaultConfig.call(this);var S=this.cfg;S.addProperty(K.key,{handler:this.configPosition,value:K.value,validator:K.validator,supercedes:K.supercedes});S.addProperty(E.key,{value:E.value,suppressEvent:E.suppressEvent});S.addProperty(J.key,{value:J.value,validator:J.validator,suppressEvent:J.suppressEvent});S.addProperty(I.key,{value:I.value,validator:I.validator,handler:this.configSubmenuToggle});}});}());YAHOO.widget.MenuBarItem=function(B,A){YAHOO.widget.MenuBarItem.superclass.constructor.call(this,B,A);};YAHOO.lang.extend(YAHOO.widget.MenuBarItem,YAHOO.widget.MenuItem,{init:function(B,A){if(!this.SUBMENU_TYPE){this.SUBMENU_TYPE=YAHOO.widget.Menu;}YAHOO.widget.MenuBarItem.superclass.init.call(this,B);var C=this.cfg;if(A){C.applyConfig(A,true);}C.fireQueue();},CSS_CLASS_NAME:"yuimenubaritem",CSS_LABEL_CLASS_NAME:"yuimenubaritemlabel",toString:function(){var A="MenuBarItem";if(this.cfg&&this.cfg.getProperty("text")){A+=(": "+this.cfg.getProperty("text"));}return A;}});YAHOO.register("menu",YAHOO.widget.Menu,{version:"2.9.0",build:"2800"});

/********* ../yui/element/element-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
YAHOO.util.Attribute=function(b,a){if(a){this.owner=a;this.configure(b,true);}};YAHOO.util.Attribute.INVALID_VALUE={};YAHOO.util.Attribute.prototype={name:undefined,value:null,owner:null,readOnly:false,writeOnce:false,_initialConfig:null,_written:false,method:null,setter:null,getter:null,validator:null,getValue:function(){var a=this.value;if(this.getter){a=this.getter.call(this.owner,this.name,a);}return a;},setValue:function(f,b){var e,a=this.owner,c=this.name,g=YAHOO.util.Attribute.INVALID_VALUE,d={type:c,prevValue:this.getValue(),newValue:f};if(this.readOnly||(this.writeOnce&&this._written)){return false;}if(this.validator&&!this.validator.call(a,f)){return false;}if(!b){e=a.fireBeforeChangeEvent(d);if(e===false){return false;}}if(this.setter){f=this.setter.call(a,f,this.name);if(f===undefined){}if(f===g){return false;}}if(this.method){if(this.method.call(a,f,this.name)===g){return false;}}this.value=f;this._written=true;d.type=c;if(!b){this.owner.fireChangeEvent(d);}return true;},configure:function(b,c){b=b||{};if(c){this._written=false;}this._initialConfig=this._initialConfig||{};for(var a in b){if(b.hasOwnProperty(a)){this[a]=b[a];if(c){this._initialConfig[a]=b[a];}}}},resetValue:function(){return this.setValue(this._initialConfig.value);},resetConfig:function(){this.configure(this._initialConfig,true);},refresh:function(a){this.setValue(this.value,a);}};(function(){var a=YAHOO.util.Lang;YAHOO.util.AttributeProvider=function(){};YAHOO.util.AttributeProvider.prototype={_configs:null,get:function(c){this._configs=this._configs||{};var b=this._configs[c];if(!b||!this._configs.hasOwnProperty(c)){return null;}return b.getValue();},set:function(d,e,b){this._configs=this._configs||{};var c=this._configs[d];if(!c){return false;}return c.setValue(e,b);},getAttributeKeys:function(){this._configs=this._configs;var c=[],b;for(b in this._configs){if(a.hasOwnProperty(this._configs,b)&&!a.isUndefined(this._configs[b])){c[c.length]=b;}}return c;},setAttributes:function(d,b){for(var c in d){if(a.hasOwnProperty(d,c)){this.set(c,d[c],b);}}},resetValue:function(c,b){this._configs=this._configs||{};if(this._configs[c]){this.set(c,this._configs[c]._initialConfig.value,b);return true;}return false;},refresh:function(e,c){this._configs=this._configs||{};var f=this._configs;e=((a.isString(e))?[e]:e)||this.getAttributeKeys();for(var d=0,b=e.length;d<b;++d){if(f.hasOwnProperty(e[d])){this._configs[e[d]].refresh(c);}}},register:function(b,c){this.setAttributeConfig(b,c);},getAttributeConfig:function(c){this._configs=this._configs||{};var b=this._configs[c]||{};var d={};for(c in b){if(a.hasOwnProperty(b,c)){d[c]=b[c];}}return d;},setAttributeConfig:function(b,c,d){this._configs=this._configs||{};c=c||{};if(!this._configs[b]){c.name=b;this._configs[b]=this.createAttribute(c);}else{this._configs[b].configure(c,d);}},configureAttribute:function(b,c,d){this.setAttributeConfig(b,c,d);},resetAttributeConfig:function(b){this._configs=this._configs||{};this._configs[b].resetConfig();},subscribe:function(b,c){this._events=this._events||{};if(!(b in this._events)){this._events[b]=this.createEvent(b);}YAHOO.util.EventProvider.prototype.subscribe.apply(this,arguments);},on:function(){this.subscribe.apply(this,arguments);},addListener:function(){this.subscribe.apply(this,arguments);},fireBeforeChangeEvent:function(c){var b="before";b+=c.type.charAt(0).toUpperCase()+c.type.substr(1)+"Change";c.type=b;return this.fireEvent(c.type,c);},fireChangeEvent:function(b){b.type+="Change";return this.fireEvent(b.type,b);},createAttribute:function(b){return new YAHOO.util.Attribute(b,this);}};YAHOO.augment(YAHOO.util.AttributeProvider,YAHOO.util.EventProvider);})();(function(){var b=YAHOO.util.Dom,d=YAHOO.util.AttributeProvider,c={mouseenter:true,mouseleave:true};var a=function(e,f){this.init.apply(this,arguments);};a.DOM_EVENTS={"click":true,"dblclick":true,"keydown":true,"keypress":true,"keyup":true,"mousedown":true,"mousemove":true,"mouseout":true,"mouseover":true,"mouseup":true,"mouseenter":true,"mouseleave":true,"focus":true,"blur":true,"submit":true,"change":true};a.prototype={DOM_EVENTS:null,DEFAULT_HTML_SETTER:function(g,e){var f=this.get("element");if(f){f[e]=g;}return g;},DEFAULT_HTML_GETTER:function(e){var f=this.get("element"),g;if(f){g=f[e];}return g;},appendChild:function(e){e=e.get?e.get("element"):e;return this.get("element").appendChild(e);},getElementsByTagName:function(e){return this.get("element").getElementsByTagName(e);},hasChildNodes:function(){return this.get("element").hasChildNodes();},insertBefore:function(e,f){e=e.get?e.get("element"):e;f=(f&&f.get)?f.get("element"):f;return this.get("element").insertBefore(e,f);},removeChild:function(e){e=e.get?e.get("element"):e;return this.get("element").removeChild(e);},replaceChild:function(e,f){e=e.get?e.get("element"):e;f=f.get?f.get("element"):f;return this.get("element").replaceChild(e,f);},initAttributes:function(e){},addListener:function(j,i,k,h){h=h||this;var e=YAHOO.util.Event,g=this.get("element")||this.get("id"),f=this;if(c[j]&&!e._createMouseDelegate){return false;}if(!this._events[j]){if(g&&this.DOM_EVENTS[j]){e.on(g,j,function(m,l){if(m.srcElement&&!m.target){m.target=m.srcElement;}if((m.toElement&&!m.relatedTarget)||(m.fromElement&&!m.relatedTarget)){m.relatedTarget=e.getRelatedTarget(m);}if(!m.currentTarget){m.currentTarget=g;}f.fireEvent(j,m,l);},k,h);}this.createEvent(j,{scope:this});}return YAHOO.util.EventProvider.prototype.subscribe.apply(this,arguments);},on:function(){return this.addListener.apply(this,arguments);},subscribe:function(){return this.addListener.apply(this,arguments);},removeListener:function(f,e){return this.unsubscribe.apply(this,arguments);},addClass:function(e){b.addClass(this.get("element"),e);},getElementsByClassName:function(f,e){return b.getElementsByClassName(f,e,this.get("element"));},hasClass:function(e){return b.hasClass(this.get("element"),e);},removeClass:function(e){return b.removeClass(this.get("element"),e);},replaceClass:function(f,e){return b.replaceClass(this.get("element"),f,e);
},setStyle:function(f,e){return b.setStyle(this.get("element"),f,e);},getStyle:function(e){return b.getStyle(this.get("element"),e);},fireQueue:function(){var f=this._queue;for(var g=0,e=f.length;g<e;++g){this[f[g][0]].apply(this,f[g][1]);}},appendTo:function(f,g){f=(f.get)?f.get("element"):b.get(f);this.fireEvent("beforeAppendTo",{type:"beforeAppendTo",target:f});g=(g&&g.get)?g.get("element"):b.get(g);var e=this.get("element");if(!e){return false;}if(!f){return false;}if(e.parent!=f){if(g){f.insertBefore(e,g);}else{f.appendChild(e);}}this.fireEvent("appendTo",{type:"appendTo",target:f});return e;},get:function(e){var g=this._configs||{},f=g.element;if(f&&!g[e]&&!YAHOO.lang.isUndefined(f.value[e])){this._setHTMLAttrConfig(e);}return d.prototype.get.call(this,e);},setAttributes:function(l,h){var f={},j=this._configOrder;for(var k=0,e=j.length;k<e;++k){if(l[j[k]]!==undefined){f[j[k]]=true;this.set(j[k],l[j[k]],h);}}for(var g in l){if(l.hasOwnProperty(g)&&!f[g]){this.set(g,l[g],h);}}},set:function(f,h,e){var g=this.get("element");if(!g){this._queue[this._queue.length]=["set",arguments];if(this._configs[f]){this._configs[f].value=h;}return;}if(!this._configs[f]&&!YAHOO.lang.isUndefined(g[f])){this._setHTMLAttrConfig(f);}return d.prototype.set.apply(this,arguments);},setAttributeConfig:function(e,f,g){this._configOrder.push(e);d.prototype.setAttributeConfig.apply(this,arguments);},createEvent:function(f,e){this._events[f]=true;return d.prototype.createEvent.apply(this,arguments);},init:function(f,e){this._initElement(f,e);},destroy:function(){var e=this.get("element");YAHOO.util.Event.purgeElement(e,true);this.unsubscribeAll();if(e&&e.parentNode){e.parentNode.removeChild(e);}this._queue=[];this._events={};this._configs={};this._configOrder=[];},_initElement:function(g,f){this._queue=this._queue||[];this._events=this._events||{};this._configs=this._configs||{};this._configOrder=[];f=f||{};f.element=f.element||g||null;var i=false;var e=a.DOM_EVENTS;this.DOM_EVENTS=this.DOM_EVENTS||{};for(var h in e){if(e.hasOwnProperty(h)){this.DOM_EVENTS[h]=e[h];}}if(typeof f.element==="string"){this._setHTMLAttrConfig("id",{value:f.element});}if(b.get(f.element)){i=true;this._initHTMLElement(f);this._initContent(f);}YAHOO.util.Event.onAvailable(f.element,function(){if(!i){this._initHTMLElement(f);}this.fireEvent("available",{type:"available",target:b.get(f.element)});},this,true);YAHOO.util.Event.onContentReady(f.element,function(){if(!i){this._initContent(f);}this.fireEvent("contentReady",{type:"contentReady",target:b.get(f.element)});},this,true);},_initHTMLElement:function(e){this.setAttributeConfig("element",{value:b.get(e.element),readOnly:true});},_initContent:function(e){this.initAttributes(e);this.setAttributes(e,true);this.fireQueue();},_setHTMLAttrConfig:function(e,g){var f=this.get("element");g=g||{};g.name=e;g.setter=g.setter||this.DEFAULT_HTML_SETTER;g.getter=g.getter||this.DEFAULT_HTML_GETTER;g.value=g.value||f[e];this._configs[e]=new YAHOO.util.Attribute(g,this);}};YAHOO.augment(a,d);YAHOO.util.Element=a;})();YAHOO.register("element",YAHOO.util.Element,{version:"2.9.0",build:"2800"});

/********* ../yui/button/button-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){var G=YAHOO.util.Dom,M=YAHOO.util.Event,I=YAHOO.lang,L=YAHOO.env.ua,B=YAHOO.widget.Overlay,J=YAHOO.widget.Menu,D={},K=null,E=null,C=null;function F(O,N,R,P){var S,Q;if(I.isString(O)&&I.isString(N)){if(L.ie&&(L.ie<9)){Q='<input type="'+O+'" name="'+N+'"';if(P){Q+=" checked";}Q+=">";S=document.createElement(Q);S.value=R;}else{S=document.createElement("input");S.name=N;S.type=O;S.value=R;if(P){S.checked=true;}}}return S;}function H(O,V){var N=O.nodeName.toUpperCase(),S=(this.CLASS_NAME_PREFIX+this.CSS_CLASS_NAME),T=this,U,P,Q;function W(X){if(!(X in V)){U=O.getAttributeNode(X);if(U&&("value" in U)){V[X]=U.value;}}}function R(){W("type");if(V.type=="button"){V.type="push";}if(!("disabled" in V)){V.disabled=O.disabled;}W("name");W("value");W("title");}switch(N){case"A":V.type="link";W("href");W("target");break;case"INPUT":R();if(!("checked" in V)){V.checked=O.checked;}break;case"BUTTON":R();P=O.parentNode.parentNode;if(G.hasClass(P,S+"-checked")){V.checked=true;}if(G.hasClass(P,S+"-disabled")){V.disabled=true;}O.removeAttribute("value");O.setAttribute("type","button");break;}O.removeAttribute("id");O.removeAttribute("name");if(!("tabindex" in V)){V.tabindex=O.tabIndex;}if(!("label" in V)){Q=N=="INPUT"?O.value:O.innerHTML;if(Q&&Q.length>0){V.label=Q;}}}function A(P){var O=P.attributes,N=O.srcelement,R=N.nodeName.toUpperCase(),Q=this;if(R==this.NODE_NAME){P.element=N;P.id=N.id;G.getElementsBy(function(S){switch(S.nodeName.toUpperCase()){case"BUTTON":case"A":case"INPUT":H.call(Q,S,O);break;}},"*",N);}else{switch(R){case"BUTTON":case"A":case"INPUT":H.call(this,N,O);break;}}}YAHOO.widget.Button=function(R,O){if(!B&&YAHOO.widget.Overlay){B=YAHOO.widget.Overlay;}if(!J&&YAHOO.widget.Menu){J=YAHOO.widget.Menu;}var Q=YAHOO.widget.Button.superclass.constructor,P,N;if(arguments.length==1&&!I.isString(R)&&!R.nodeName){if(!R.id){R.id=G.generateId();}Q.call(this,(this.createButtonElement(R.type)),R);}else{P={element:null,attributes:(O||{})};if(I.isString(R)){N=G.get(R);if(N){if(!P.attributes.id){P.attributes.id=R;}P.attributes.srcelement=N;A.call(this,P);if(!P.element){P.element=this.createButtonElement(P.attributes.type);}Q.call(this,P.element,P.attributes);}}else{if(R.nodeName){if(!P.attributes.id){if(R.id){P.attributes.id=R.id;}else{P.attributes.id=G.generateId();}}P.attributes.srcelement=R;A.call(this,P);if(!P.element){P.element=this.createButtonElement(P.attributes.type);}Q.call(this,P.element,P.attributes);}}}};YAHOO.extend(YAHOO.widget.Button,YAHOO.util.Element,{_button:null,_menu:null,_hiddenFields:null,_onclickAttributeValue:null,_activationKeyPressed:false,_activationButtonPressed:false,_hasKeyEventHandlers:false,_hasMouseEventHandlers:false,_nOptionRegionX:0,CLASS_NAME_PREFIX:"yui-",NODE_NAME:"SPAN",CHECK_ACTIVATION_KEYS:[32],ACTIVATION_KEYS:[13,32],OPTION_AREA_WIDTH:20,CSS_CLASS_NAME:"button",_setType:function(N){if(N=="split"){this.on("option",this._onOption);}},_setLabel:function(O){this._button.innerHTML=O;var P,N=L.gecko;if(N&&N<1.9&&G.inDocument(this.get("element"))){P=(this.CLASS_NAME_PREFIX+this.CSS_CLASS_NAME);this.removeClass(P);I.later(0,this,this.addClass,P);}},_setTabIndex:function(N){this._button.tabIndex=N;},_setTitle:function(N){if(this.get("type")!="link"){this._button.title=N;}},_setDisabled:function(N){if(this.get("type")!="link"){if(N){if(this._menu){this._menu.hide();}if(this.hasFocus()){this.blur();}this._button.setAttribute("disabled","disabled");this.addStateCSSClasses("disabled");this.removeStateCSSClasses("hover");this.removeStateCSSClasses("active");this.removeStateCSSClasses("focus");}else{this._button.removeAttribute("disabled");this.removeStateCSSClasses("disabled");}}},_setHref:function(N){if(this.get("type")=="link"){this._button.href=N;}},_setTarget:function(N){if(this.get("type")=="link"){this._button.setAttribute("target",N);}},_setChecked:function(N){var O=this.get("type");if(O=="checkbox"||O=="radio"){if(N){this.addStateCSSClasses("checked");}else{this.removeStateCSSClasses("checked");}}},_setMenu:function(U){var P=this.get("lazyloadmenu"),R=this.get("element"),N,W=false,X,O,Q;function V(){X.render(R.parentNode);this.removeListener("appendTo",V);}function T(){X.cfg.queueProperty("container",R.parentNode);this.removeListener("appendTo",T);}function S(){var Y;if(X){G.addClass(X.element,this.get("menuclassname"));G.addClass(X.element,this.CLASS_NAME_PREFIX+this.get("type")+"-button-menu");X.showEvent.subscribe(this._onMenuShow,null,this);X.hideEvent.subscribe(this._onMenuHide,null,this);X.renderEvent.subscribe(this._onMenuRender,null,this);if(J&&X instanceof J){if(P){Y=this.get("container");if(Y){X.cfg.queueProperty("container",Y);}else{this.on("appendTo",T);}}X.cfg.queueProperty("clicktohide",false);X.keyDownEvent.subscribe(this._onMenuKeyDown,this,true);X.subscribe("click",this._onMenuClick,this,true);this.on("selectedMenuItemChange",this._onSelectedMenuItemChange);Q=X.srcElement;if(Q&&Q.nodeName.toUpperCase()=="SELECT"){Q.style.display="none";Q.parentNode.removeChild(Q);}}else{if(B&&X instanceof B){if(!K){K=new YAHOO.widget.OverlayManager();}K.register(X);}}this._menu=X;if(!W&&!P){if(G.inDocument(R)){X.render(R.parentNode);}else{this.on("appendTo",V);}}}}if(B){if(J){N=J.prototype.CSS_CLASS_NAME;}if(U&&J&&(U instanceof J)){X=U;W=true;S.call(this);}else{if(B&&U&&(U instanceof B)){X=U;W=true;X.cfg.queueProperty("visible",false);S.call(this);}else{if(J&&I.isArray(U)){X=new J(G.generateId(),{lazyload:P,itemdata:U});this._menu=X;this.on("appendTo",S);}else{if(I.isString(U)){O=G.get(U);if(O){if(J&&G.hasClass(O,N)||O.nodeName.toUpperCase()=="SELECT"){X=new J(U,{lazyload:P});S.call(this);}else{if(B){X=new B(U,{visible:false});S.call(this);}}}}else{if(U&&U.nodeName){if(J&&G.hasClass(U,N)||U.nodeName.toUpperCase()=="SELECT"){X=new J(U,{lazyload:P});S.call(this);}else{if(B){if(!U.id){G.generateId(U);}X=new B(U,{visible:false});S.call(this);}}}}}}}}},_setOnClick:function(N){if(this._onclickAttributeValue&&(this._onclickAttributeValue!=N)){this.removeListener("click",this._onclickAttributeValue.fn);
this._onclickAttributeValue=null;}if(!this._onclickAttributeValue&&I.isObject(N)&&I.isFunction(N.fn)){this.on("click",N.fn,N.obj,N.scope);this._onclickAttributeValue=N;}},_isActivationKey:function(N){var S=this.get("type"),O=(S=="checkbox"||S=="radio")?this.CHECK_ACTIVATION_KEYS:this.ACTIVATION_KEYS,Q=O.length,R=false,P;if(Q>0){P=Q-1;do{if(N==O[P]){R=true;break;}}while(P--);}return R;},_isSplitButtonOptionKey:function(P){var O=(M.getCharCode(P)==40);var N=function(Q){M.preventDefault(Q);this.removeListener("keypress",N);};if(O){if(L.opera){this.on("keypress",N);}M.preventDefault(P);}return O;},_addListenersToForm:function(){var T=this.getForm(),S=YAHOO.widget.Button.onFormKeyPress,R,N,Q,P,O;if(T){M.on(T,"reset",this._onFormReset,null,this);M.on(T,"submit",this._onFormSubmit,null,this);N=this.get("srcelement");if(this.get("type")=="submit"||(N&&N.type=="submit")){Q=M.getListeners(T,"keypress");R=false;if(Q){P=Q.length;if(P>0){O=P-1;do{if(Q[O].fn==S){R=true;break;}}while(O--);}}if(!R){M.on(T,"keypress",S);}}}},_showMenu:function(R){if(YAHOO.widget.MenuManager){YAHOO.widget.MenuManager.hideVisible();}if(K){K.hideAll();}var N=this._menu,Q=this.get("menualignment"),P=this.get("focusmenu"),O;if(this._renderedMenu){N.cfg.setProperty("context",[this.get("element"),Q[0],Q[1]]);N.cfg.setProperty("preventcontextoverlap",true);N.cfg.setProperty("constraintoviewport",true);}else{N.cfg.queueProperty("context",[this.get("element"),Q[0],Q[1]]);N.cfg.queueProperty("preventcontextoverlap",true);N.cfg.queueProperty("constraintoviewport",true);}this.focus();if(J&&N&&(N instanceof J)){O=N.focus;N.focus=function(){};if(this._renderedMenu){N.cfg.setProperty("minscrollheight",this.get("menuminscrollheight"));N.cfg.setProperty("maxheight",this.get("menumaxheight"));}else{N.cfg.queueProperty("minscrollheight",this.get("menuminscrollheight"));N.cfg.queueProperty("maxheight",this.get("menumaxheight"));}N.show();N.focus=O;N.align();if(R.type=="mousedown"){M.stopPropagation(R);}if(P){N.focus();}}else{if(B&&N&&(N instanceof B)){if(!this._renderedMenu){N.render(this.get("element").parentNode);}N.show();N.align();}}},_hideMenu:function(){var N=this._menu;if(N){N.hide();}},_onMouseOver:function(O){var Q=this.get("type"),N,P;if(Q==="split"){N=this.get("element");P=(G.getX(N)+(N.offsetWidth-this.OPTION_AREA_WIDTH));this._nOptionRegionX=P;}if(!this._hasMouseEventHandlers){if(Q==="split"){this.on("mousemove",this._onMouseMove);}this.on("mouseout",this._onMouseOut);this._hasMouseEventHandlers=true;}this.addStateCSSClasses("hover");if(Q==="split"&&(M.getPageX(O)>P)){this.addStateCSSClasses("hoveroption");}if(this._activationButtonPressed){this.addStateCSSClasses("active");}if(this._bOptionPressed){this.addStateCSSClasses("activeoption");}if(this._activationButtonPressed||this._bOptionPressed){M.removeListener(document,"mouseup",this._onDocumentMouseUp);}},_onMouseMove:function(N){var O=this._nOptionRegionX;if(O){if(M.getPageX(N)>O){this.addStateCSSClasses("hoveroption");}else{this.removeStateCSSClasses("hoveroption");}}},_onMouseOut:function(N){var O=this.get("type");this.removeStateCSSClasses("hover");if(O!="menu"){this.removeStateCSSClasses("active");}if(this._activationButtonPressed||this._bOptionPressed){M.on(document,"mouseup",this._onDocumentMouseUp,null,this);}if(O==="split"&&(M.getPageX(N)>this._nOptionRegionX)){this.removeStateCSSClasses("hoveroption");}},_onDocumentMouseUp:function(P){this._activationButtonPressed=false;this._bOptionPressed=false;var Q=this.get("type"),N,O;if(Q=="menu"||Q=="split"){N=M.getTarget(P);O=this._menu.element;if(N!=O&&!G.isAncestor(O,N)){this.removeStateCSSClasses((Q=="menu"?"active":"activeoption"));this._hideMenu();}}M.removeListener(document,"mouseup",this._onDocumentMouseUp);},_onMouseDown:function(P){var Q,O=true;function N(){this._hideMenu();this.removeListener("mouseup",N);}if((P.which||P.button)==1){if(!this.hasFocus()){I.later(0,this,this.focus);}Q=this.get("type");if(Q=="split"){if(M.getPageX(P)>this._nOptionRegionX){this.fireEvent("option",P);O=false;}else{this.addStateCSSClasses("active");this._activationButtonPressed=true;}}else{if(Q=="menu"){if(this.isActive()){this._hideMenu();this._activationButtonPressed=false;}else{this._showMenu(P);this._activationButtonPressed=true;}}else{this.addStateCSSClasses("active");this._activationButtonPressed=true;}}if(Q=="split"||Q=="menu"){this._hideMenuTimer=I.later(250,this,this.on,["mouseup",N]);}}return O;},_onMouseUp:function(P){this.inMouseDown=false;var Q=this.get("type"),N=this._hideMenuTimer,O=true;if(N){N.cancel();}if(Q=="checkbox"||Q=="radio"){if((P.which||P.button)!=1){return;}this.set("checked",!(this.get("checked")));}this._activationButtonPressed=false;if(Q!="menu"){this.removeStateCSSClasses("active");}if(Q=="split"&&M.getPageX(P)>this._nOptionRegionX){O=false;}return O;},_onFocus:function(O){var N;this.addStateCSSClasses("focus");if(this._activationKeyPressed){this.addStateCSSClasses("active");}C=this;if(!this._hasKeyEventHandlers){N=this._button;M.on(N,"blur",this._onBlur,null,this);M.on(N,"keydown",this._onKeyDown,null,this);M.on(N,"keyup",this._onKeyUp,null,this);this._hasKeyEventHandlers=true;}this.fireEvent("focus",O);},_onBlur:function(N){this.removeStateCSSClasses("focus");if(this.get("type")!="menu"){this.removeStateCSSClasses("active");}if(this._activationKeyPressed){M.on(document,"keyup",this._onDocumentKeyUp,null,this);}C=null;this.fireEvent("blur",N);},_onDocumentKeyUp:function(N){if(this._isActivationKey(M.getCharCode(N))){this._activationKeyPressed=false;M.removeListener(document,"keyup",this._onDocumentKeyUp);}},_onKeyDown:function(O){var N=this._menu;if(this.get("type")=="split"&&this._isSplitButtonOptionKey(O)){this.fireEvent("option",O);}else{if(this._isActivationKey(M.getCharCode(O))){if(this.get("type")=="menu"){this._showMenu(O);}else{this._activationKeyPressed=true;this.addStateCSSClasses("active");}}}if(N&&N.cfg.getProperty("visible")&&M.getCharCode(O)==27){N.hide();this.focus();}},_onKeyUp:function(N){var O;
if(this._isActivationKey(M.getCharCode(N))){O=this.get("type");if(O=="checkbox"||O=="radio"){this.set("checked",!(this.get("checked")));}this._activationKeyPressed=false;if(this.get("type")!="menu"){this.removeStateCSSClasses("active");}}},_onClick:function(P){var R=this.get("type"),Q,N,O;switch(R){case"submit":if(P.returnValue!==false){this.submitForm();}break;case"reset":Q=this.getForm();if(Q){Q.reset();}break;case"split":if(this._nOptionRegionX>0&&(M.getPageX(P)>this._nOptionRegionX)){O=false;}else{this._hideMenu();N=this.get("srcelement");if(N&&N.type=="submit"&&P.returnValue!==false){this.submitForm();}}break;}return O;},_onDblClick:function(O){var N=true;if(this.get("type")=="split"&&M.getPageX(O)>this._nOptionRegionX){N=false;}return N;},_onAppendTo:function(N){I.later(0,this,this._addListenersToForm);},_onFormReset:function(O){var P=this.get("type"),N=this._menu;if(P=="checkbox"||P=="radio"){this.resetValue("checked");}if(J&&N&&(N instanceof J)){this.resetValue("selectedMenuItem");}},_onFormSubmit:function(N){this.createHiddenFields();},_onDocumentMouseDown:function(R){var O=M.getTarget(R),Q=this.get("element"),P=this._menu.element;function N(T){var V,S,U;if(!T){return true;}for(V=0,S=T.length;V<S;V++){U=T[V].element;if(O==U||G.isAncestor(U,O)){return true;}if(T[V]&&T[V].getSubmenus){if(N(T[V].getSubmenus())){return true;}}}return false;}if(O!=Q&&!G.isAncestor(Q,O)&&O!=P&&!G.isAncestor(P,O)){if(this._menu&&this._menu.getSubmenus){if(!N(this._menu.getSubmenus())){return;}}this._hideMenu();if(L.ie&&(L.ie<9)&&O.focus){O.setActive();}M.removeListener(document,"mousedown",this._onDocumentMouseDown);}},_onOption:function(N){if(this.hasClass(this.CLASS_NAME_PREFIX+"split-button-activeoption")){this._hideMenu();this._bOptionPressed=false;}else{this._showMenu(N);this._bOptionPressed=true;}},_onMenuShow:function(N){M.on(document,"mousedown",this._onDocumentMouseDown,null,this);var O=(this.get("type")=="split")?"activeoption":"active";this.addStateCSSClasses(O);},_onMenuHide:function(N){var O=(this.get("type")=="split")?"activeoption":"active";this.removeStateCSSClasses(O);if(this.get("type")=="split"){this._bOptionPressed=false;}},_onMenuKeyDown:function(P,O){var N=O[0];if(M.getCharCode(N)==27){this.focus();if(this.get("type")=="split"){this._bOptionPressed=false;}}},_onMenuRender:function(P){var S=this.get("element"),O=S.parentNode,N=this._menu,R=N.element,Q=N.srcElement,T;if(O!=R.parentNode){O.appendChild(R);}this._renderedMenu=true;if(Q&&Q.nodeName.toLowerCase()==="select"&&Q.value){T=N.getItem(Q.selectedIndex);this.set("selectedMenuItem",T,true);this._onSelectedMenuItemChange({newValue:T});}},_onMenuClick:function(O,N){var Q=N[1],P;if(Q){this.set("selectedMenuItem",Q);P=this.get("srcelement");if(P&&P.type=="submit"){this.submitForm();}this._hideMenu();}},_onSelectedMenuItemChange:function(O){var P=O.prevValue,Q=O.newValue,N=this.CLASS_NAME_PREFIX;if(P){G.removeClass(P.element,(N+"button-selectedmenuitem"));}if(Q){G.addClass(Q.element,(N+"button-selectedmenuitem"));}},_onLabelClick:function(N){this.focus();var O=this.get("type");if(O=="radio"||O=="checkbox"){this.set("checked",(!this.get("checked")));}},createButtonElement:function(N){var P=this.NODE_NAME,O=document.createElement(P);O.innerHTML="<"+P+' class="first-child">'+(N=="link"?"<a></a>":'<button type="button"></button>')+"</"+P+">";return O;},addStateCSSClasses:function(O){var P=this.get("type"),N=this.CLASS_NAME_PREFIX;if(I.isString(O)){if(O!="activeoption"&&O!="hoveroption"){this.addClass(N+this.CSS_CLASS_NAME+("-"+O));}this.addClass(N+P+("-button-"+O));}},removeStateCSSClasses:function(O){var P=this.get("type"),N=this.CLASS_NAME_PREFIX;if(I.isString(O)){this.removeClass(N+this.CSS_CLASS_NAME+("-"+O));this.removeClass(N+P+("-button-"+O));}},createHiddenFields:function(){this.removeHiddenFields();var V=this.getForm(),Z,O,S,X,Y,T,U,N,R,W,P,Q=false;if(V&&!this.get("disabled")){O=this.get("type");S=(O=="checkbox"||O=="radio");if((S&&this.get("checked"))||(E==this)){Z=F((S?O:"hidden"),this.get("name"),this.get("value"),this.get("checked"));if(Z){if(S){Z.style.display="none";}V.appendChild(Z);}}X=this._menu;if(J&&X&&(X instanceof J)){Y=this.get("selectedMenuItem");P=X.srcElement;Q=(P&&P.nodeName.toUpperCase()=="SELECT");if(Y){U=(Y.value===null||Y.value==="")?Y.cfg.getProperty("text"):Y.value;T=this.get("name");if(Q){W=P.name;}else{if(T){W=(T+"_options");}}if(U&&W){N=F("hidden",W,U);V.appendChild(N);}}else{if(Q){N=V.appendChild(P);}}}if(Z&&N){this._hiddenFields=[Z,N];}else{if(!Z&&N){this._hiddenFields=N;}else{if(Z&&!N){this._hiddenFields=Z;}}}R=this._hiddenFields;}return R;},removeHiddenFields:function(){var Q=this._hiddenFields,O,P;function N(R){if(G.inDocument(R)){R.parentNode.removeChild(R);}}if(Q){if(I.isArray(Q)){O=Q.length;if(O>0){P=O-1;do{N(Q[P]);}while(P--);}}else{N(Q);}this._hiddenFields=null;}},submitForm:function(){var Q=this.getForm(),P=this.get("srcelement"),O=false,N;if(Q){if(this.get("type")=="submit"||(P&&P.type=="submit")){E=this;}if(L.ie&&(L.ie<9)){O=Q.fireEvent("onsubmit");}else{N=document.createEvent("HTMLEvents");N.initEvent("submit",true,true);O=Q.dispatchEvent(N);}if((L.ie||L.webkit)&&O){Q.submit();}}return O;},init:function(P,d){var V=d.type=="link"?"a":"button",a=d.srcelement,S=P.getElementsByTagName(V)[0],U;if(!S){U=P.getElementsByTagName("input")[0];if(U){S=document.createElement("button");S.setAttribute("type","button");U.parentNode.replaceChild(S,U);}}this._button=S;YAHOO.widget.Button.superclass.init.call(this,P,d);var T=this.get("id"),Z=T+"-button";S.id=Z;var X,Q;var e=function(f){return(f.htmlFor===T);};var c=function(){Q.setAttribute((L.ie?"htmlFor":"for"),Z);};if(a&&this.get("type")!="link"){X=G.getElementsBy(e,"label");if(I.isArray(X)&&X.length>0){Q=X[0];}}D[T]=this;var b=this.CLASS_NAME_PREFIX;this.addClass(b+this.CSS_CLASS_NAME);this.addClass(b+this.get("type")+"-button");M.on(this._button,"focus",this._onFocus,null,this);this.on("mouseover",this._onMouseOver);this.on("mousedown",this._onMouseDown);
this.on("mouseup",this._onMouseUp);this.on("click",this._onClick);var R=this.get("onclick");this.set("onclick",null);this.set("onclick",R);this.on("dblclick",this._onDblClick);var O;if(Q){if(this.get("replaceLabel")){this.set("label",Q.innerHTML);O=Q.parentNode;O.removeChild(Q);}else{this.on("appendTo",c);M.on(Q,"click",this._onLabelClick,null,this);this._label=Q;}}this.on("appendTo",this._onAppendTo);var N=this.get("container"),Y=this.get("element"),W=G.inDocument(Y);if(N){if(a&&a!=Y){O=a.parentNode;if(O){O.removeChild(a);}}if(I.isString(N)){M.onContentReady(N,this.appendTo,N,this);}else{this.on("init",function(){I.later(0,this,this.appendTo,N);});}}else{if(!W&&a&&a!=Y){O=a.parentNode;if(O){this.fireEvent("beforeAppendTo",{type:"beforeAppendTo",target:O});O.replaceChild(Y,a);this.fireEvent("appendTo",{type:"appendTo",target:O});}}else{if(this.get("type")!="link"&&W&&a&&a==Y){this._addListenersToForm();}}}this.fireEvent("init",{type:"init",target:this});},initAttributes:function(O){var N=O||{};YAHOO.widget.Button.superclass.initAttributes.call(this,N);this.setAttributeConfig("type",{value:(N.type||"push"),validator:I.isString,writeOnce:true,method:this._setType});this.setAttributeConfig("label",{value:N.label,validator:I.isString,method:this._setLabel});this.setAttributeConfig("value",{value:N.value});this.setAttributeConfig("name",{value:N.name,validator:I.isString});this.setAttributeConfig("tabindex",{value:N.tabindex,validator:I.isNumber,method:this._setTabIndex});this.configureAttribute("title",{value:N.title,validator:I.isString,method:this._setTitle});this.setAttributeConfig("disabled",{value:(N.disabled||false),validator:I.isBoolean,method:this._setDisabled});this.setAttributeConfig("href",{value:N.href,validator:I.isString,method:this._setHref});this.setAttributeConfig("target",{value:N.target,validator:I.isString,method:this._setTarget});this.setAttributeConfig("checked",{value:(N.checked||false),validator:I.isBoolean,method:this._setChecked});this.setAttributeConfig("container",{value:N.container,writeOnce:true});this.setAttributeConfig("srcelement",{value:N.srcelement,writeOnce:true});this.setAttributeConfig("menu",{value:null,method:this._setMenu,writeOnce:true});this.setAttributeConfig("lazyloadmenu",{value:(N.lazyloadmenu===false?false:true),validator:I.isBoolean,writeOnce:true});this.setAttributeConfig("menuclassname",{value:(N.menuclassname||(this.CLASS_NAME_PREFIX+"button-menu")),validator:I.isString,method:this._setMenuClassName,writeOnce:true});this.setAttributeConfig("menuminscrollheight",{value:(N.menuminscrollheight||90),validator:I.isNumber});this.setAttributeConfig("menumaxheight",{value:(N.menumaxheight||0),validator:I.isNumber});this.setAttributeConfig("menualignment",{value:(N.menualignment||["tl","bl"]),validator:I.isArray});this.setAttributeConfig("selectedMenuItem",{value:null});this.setAttributeConfig("onclick",{value:N.onclick,method:this._setOnClick});this.setAttributeConfig("focusmenu",{value:(N.focusmenu===false?false:true),validator:I.isBoolean});this.setAttributeConfig("replaceLabel",{value:false,validator:I.isBoolean,writeOnce:true});},focus:function(){if(!this.get("disabled")){try{this._button.focus();}catch(N){}}},blur:function(){if(!this.get("disabled")){try{this._button.blur();}catch(N){}}},hasFocus:function(){return(C==this);},isActive:function(){return this.hasClass(this.CLASS_NAME_PREFIX+this.CSS_CLASS_NAME+"-active");},getMenu:function(){return this._menu;},getForm:function(){var N=this._button,O;if(N){O=N.form;}return O;},getHiddenFields:function(){return this._hiddenFields;},destroy:function(){var P=this.get("element"),N=this._menu,T=this._label,O,S;if(N){if(K&&K.find(N)){K.remove(N);}N.destroy();}M.purgeElement(P);M.purgeElement(this._button);M.removeListener(document,"mouseup",this._onDocumentMouseUp);M.removeListener(document,"keyup",this._onDocumentKeyUp);M.removeListener(document,"mousedown",this._onDocumentMouseDown);if(T){M.removeListener(T,"click",this._onLabelClick);O=T.parentNode;O.removeChild(T);}var Q=this.getForm();if(Q){M.removeListener(Q,"reset",this._onFormReset);M.removeListener(Q,"submit",this._onFormSubmit);}this.unsubscribeAll();O=P.parentNode;if(O){O.removeChild(P);}delete D[this.get("id")];var R=(this.CLASS_NAME_PREFIX+this.CSS_CLASS_NAME);S=G.getElementsByClassName(R,this.NODE_NAME,Q);if(I.isArray(S)&&S.length===0){M.removeListener(Q,"keypress",YAHOO.widget.Button.onFormKeyPress);}},fireEvent:function(O,N){var P=arguments[0];if(this.DOM_EVENTS[P]&&this.get("disabled")){return false;}return YAHOO.widget.Button.superclass.fireEvent.apply(this,arguments);},toString:function(){return("Button "+this.get("id"));}});YAHOO.widget.Button.onFormKeyPress=function(R){var P=M.getTarget(R),S=M.getCharCode(R),Q=P.nodeName&&P.nodeName.toUpperCase(),N=P.type,T=false,V,X,O,W;function U(a){var Z,Y;switch(a.nodeName.toUpperCase()){case"INPUT":case"BUTTON":if(a.type=="submit"&&!a.disabled){if(!T&&!O){O=a;}}break;default:Z=a.id;if(Z){V=D[Z];if(V){T=true;if(!V.get("disabled")){Y=V.get("srcelement");if(!X&&(V.get("type")=="submit"||(Y&&Y.type=="submit"))){X=V;}}}}break;}}if(S==13&&((Q=="INPUT"&&(N=="text"||N=="password"||N=="checkbox"||N=="radio"||N=="file"))||Q=="SELECT")){G.getElementsBy(U,"*",this);if(O){O.focus();}else{if(!O&&X){M.preventDefault(R);if(L.ie){X.get("element").fireEvent("onclick");}else{W=document.createEvent("HTMLEvents");W.initEvent("click",true,true);if(L.gecko<1.9){X.fireEvent("click",W);}else{X.get("element").dispatchEvent(W);}}}}}};YAHOO.widget.Button.addHiddenFieldsToForm=function(N){var R=YAHOO.widget.Button.prototype,T=G.getElementsByClassName((R.CLASS_NAME_PREFIX+R.CSS_CLASS_NAME),"*",N),Q=T.length,S,O,P;if(Q>0){for(P=0;P<Q;P++){O=T[P].id;if(O){S=D[O];if(S){S.createHiddenFields();}}}}};YAHOO.widget.Button.getButton=function(N){return D[N];};})();(function(){var C=YAHOO.util.Dom,B=YAHOO.util.Event,D=YAHOO.lang,A=YAHOO.widget.Button,E={};YAHOO.widget.ButtonGroup=function(J,H){var I=YAHOO.widget.ButtonGroup.superclass.constructor,K,G,F;
if(arguments.length==1&&!D.isString(J)&&!J.nodeName){if(!J.id){F=C.generateId();J.id=F;}I.call(this,(this._createGroupElement()),J);}else{if(D.isString(J)){G=C.get(J);if(G){if(G.nodeName.toUpperCase()==this.NODE_NAME){I.call(this,G,H);}}}else{K=J.nodeName.toUpperCase();if(K&&K==this.NODE_NAME){if(!J.id){J.id=C.generateId();}I.call(this,J,H);}}}};YAHOO.extend(YAHOO.widget.ButtonGroup,YAHOO.util.Element,{_buttons:null,NODE_NAME:"DIV",CLASS_NAME_PREFIX:"yui-",CSS_CLASS_NAME:"buttongroup",_createGroupElement:function(){var F=document.createElement(this.NODE_NAME);return F;},_setDisabled:function(G){var H=this.getCount(),F;if(H>0){F=H-1;do{this._buttons[F].set("disabled",G);}while(F--);}},_onKeyDown:function(K){var G=B.getTarget(K),I=B.getCharCode(K),H=G.parentNode.parentNode.id,J=E[H],F=-1;if(I==37||I==38){F=(J.index===0)?(this._buttons.length-1):(J.index-1);}else{if(I==39||I==40){F=(J.index===(this._buttons.length-1))?0:(J.index+1);}}if(F>-1){this.check(F);this.getButton(F).focus();}},_onAppendTo:function(H){var I=this._buttons,G=I.length,F;for(F=0;F<G;F++){I[F].appendTo(this.get("element"));}},_onButtonCheckedChange:function(G,F){var I=G.newValue,H=this.get("checkedButton");if(I&&H!=F){if(H){H.set("checked",false,true);}this.set("checkedButton",F);this.set("value",F.get("value"));}else{if(H&&!H.set("checked")){H.set("checked",true,true);}}},init:function(I,H){this._buttons=[];YAHOO.widget.ButtonGroup.superclass.init.call(this,I,H);this.addClass(this.CLASS_NAME_PREFIX+this.CSS_CLASS_NAME);var K=(YAHOO.widget.Button.prototype.CLASS_NAME_PREFIX+"radio-button"),J=this.getElementsByClassName(K);if(J.length>0){this.addButtons(J);}function F(L){return(L.type=="radio");}J=C.getElementsBy(F,"input",this.get("element"));if(J.length>0){this.addButtons(J);}this.on("keydown",this._onKeyDown);this.on("appendTo",this._onAppendTo);var G=this.get("container");if(G){if(D.isString(G)){B.onContentReady(G,function(){this.appendTo(G);},null,this);}else{this.appendTo(G);}}},initAttributes:function(G){var F=G||{};YAHOO.widget.ButtonGroup.superclass.initAttributes.call(this,F);this.setAttributeConfig("name",{value:F.name,validator:D.isString});this.setAttributeConfig("disabled",{value:(F.disabled||false),validator:D.isBoolean,method:this._setDisabled});this.setAttributeConfig("value",{value:F.value});this.setAttributeConfig("container",{value:F.container,writeOnce:true});this.setAttributeConfig("checkedButton",{value:null});},addButton:function(J){var L,K,G,F,H,I;if(J instanceof A&&J.get("type")=="radio"){L=J;}else{if(!D.isString(J)&&!J.nodeName){J.type="radio";L=new A(J);}else{L=new A(J,{type:"radio"});}}if(L){F=this._buttons.length;H=L.get("name");I=this.get("name");L.index=F;this._buttons[F]=L;E[L.get("id")]=L;if(H!=I){L.set("name",I);}if(this.get("disabled")){L.set("disabled",true);}if(L.get("checked")){this.set("checkedButton",L);}K=L.get("element");G=this.get("element");if(K.parentNode!=G){G.appendChild(K);}L.on("checkedChange",this._onButtonCheckedChange,L,this);}return L;},addButtons:function(G){var H,I,J,F;if(D.isArray(G)){H=G.length;J=[];if(H>0){for(F=0;F<H;F++){I=this.addButton(G[F]);if(I){J[J.length]=I;}}}}return J;},removeButton:function(H){var I=this.getButton(H),G,F;if(I){this._buttons.splice(H,1);delete E[I.get("id")];I.removeListener("checkedChange",this._onButtonCheckedChange);I.destroy();G=this._buttons.length;if(G>0){F=this._buttons.length-1;do{this._buttons[F].index=F;}while(F--);}}},getButton:function(F){return this._buttons[F];},getButtons:function(){return this._buttons;},getCount:function(){return this._buttons.length;},focus:function(H){var I,G,F;if(D.isNumber(H)){I=this._buttons[H];if(I){I.focus();}}else{G=this.getCount();for(F=0;F<G;F++){I=this._buttons[F];if(!I.get("disabled")){I.focus();break;}}}},check:function(F){var G=this.getButton(F);if(G){G.set("checked",true);}},destroy:function(){var I=this._buttons.length,H=this.get("element"),F=H.parentNode,G;if(I>0){G=this._buttons.length-1;do{this._buttons[G].destroy();}while(G--);}B.purgeElement(H);F.removeChild(H);},toString:function(){return("ButtonGroup "+this.get("id"));}});})();YAHOO.register("button",YAHOO.widget.Button,{version:"2.9.0",build:"2800"});

/********* ../yui/calendar/calendar-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){YAHOO.util.Config=function(d){if(d){this.init(d);}};var b=YAHOO.lang,c=YAHOO.util.CustomEvent,a=YAHOO.util.Config;a.CONFIG_CHANGED_EVENT="configChanged";a.BOOLEAN_TYPE="boolean";a.prototype={owner:null,queueInProgress:false,config:null,initialConfig:null,eventQueue:null,configChangedEvent:null,init:function(d){this.owner=d;this.configChangedEvent=this.createEvent(a.CONFIG_CHANGED_EVENT);this.configChangedEvent.signature=c.LIST;this.queueInProgress=false;this.config={};this.initialConfig={};this.eventQueue=[];},checkBoolean:function(d){return(typeof d==a.BOOLEAN_TYPE);},checkNumber:function(d){return(!isNaN(d));},fireEvent:function(d,f){var e=this.config[d];if(e&&e.event){e.event.fire(f);}},addProperty:function(e,d){e=e.toLowerCase();this.config[e]=d;d.event=this.createEvent(e,{scope:this.owner});d.event.signature=c.LIST;d.key=e;if(d.handler){d.event.subscribe(d.handler,this.owner);}this.setProperty(e,d.value,true);if(!d.suppressEvent){this.queueProperty(e,d.value);}},getConfig:function(){var d={},f=this.config,g,e;for(g in f){if(b.hasOwnProperty(f,g)){e=f[g];if(e&&e.event){d[g]=e.value;}}}return d;},getProperty:function(d){var e=this.config[d.toLowerCase()];if(e&&e.event){return e.value;}else{return undefined;}},resetProperty:function(d){d=d.toLowerCase();var e=this.config[d];if(e&&e.event){if(d in this.initialConfig){this.setProperty(d,this.initialConfig[d]);return true;}}else{return false;}},setProperty:function(e,g,d){var f;e=e.toLowerCase();if(this.queueInProgress&&!d){this.queueProperty(e,g);return true;}else{f=this.config[e];if(f&&f.event){if(f.validator&&!f.validator(g)){return false;}else{f.value=g;if(!d){this.fireEvent(e,g);this.configChangedEvent.fire([e,g]);}return true;}}else{return false;}}},queueProperty:function(v,r){v=v.toLowerCase();var u=this.config[v],l=false,k,g,h,j,p,t,f,n,o,d,m,w,e;if(u&&u.event){if(!b.isUndefined(r)&&u.validator&&!u.validator(r)){return false;}else{if(!b.isUndefined(r)){u.value=r;}else{r=u.value;}l=false;k=this.eventQueue.length;for(m=0;m<k;m++){g=this.eventQueue[m];if(g){h=g[0];j=g[1];if(h==v){this.eventQueue[m]=null;this.eventQueue.push([v,(!b.isUndefined(r)?r:j)]);l=true;break;}}}if(!l&&!b.isUndefined(r)){this.eventQueue.push([v,r]);}}if(u.supercedes){p=u.supercedes.length;for(w=0;w<p;w++){t=u.supercedes[w];f=this.eventQueue.length;for(e=0;e<f;e++){n=this.eventQueue[e];if(n){o=n[0];d=n[1];if(o==t.toLowerCase()){this.eventQueue.push([o,d]);this.eventQueue[e]=null;break;}}}}}return true;}else{return false;}},refireEvent:function(d){d=d.toLowerCase();var e=this.config[d];if(e&&e.event&&!b.isUndefined(e.value)){if(this.queueInProgress){this.queueProperty(d);}else{this.fireEvent(d,e.value);}}},applyConfig:function(d,g){var f,e;if(g){e={};for(f in d){if(b.hasOwnProperty(d,f)){e[f.toLowerCase()]=d[f];}}this.initialConfig=e;}for(f in d){if(b.hasOwnProperty(d,f)){this.queueProperty(f,d[f]);}}},refresh:function(){var d;for(d in this.config){if(b.hasOwnProperty(this.config,d)){this.refireEvent(d);}}},fireQueue:function(){var e,h,d,g,f;this.queueInProgress=true;for(e=0;e<this.eventQueue.length;e++){h=this.eventQueue[e];if(h){d=h[0];g=h[1];f=this.config[d];f.value=g;this.eventQueue[e]=null;this.fireEvent(d,g);}}this.queueInProgress=false;this.eventQueue=[];},subscribeToConfigEvent:function(d,e,g,h){var f=this.config[d.toLowerCase()];if(f&&f.event){if(!a.alreadySubscribed(f.event,e,g)){f.event.subscribe(e,g,h);}return true;}else{return false;}},unsubscribeFromConfigEvent:function(d,e,g){var f=this.config[d.toLowerCase()];if(f&&f.event){return f.event.unsubscribe(e,g);}else{return false;}},toString:function(){var d="Config";if(this.owner){d+=" ["+this.owner.toString()+"]";}return d;},outputEventQueue:function(){var d="",g,e,f=this.eventQueue.length;for(e=0;e<f;e++){g=this.eventQueue[e];if(g){d+=g[0]+"="+g[1]+", ";}}return d;},destroy:function(){var e=this.config,d,f;for(d in e){if(b.hasOwnProperty(e,d)){f=e[d];f.event.unsubscribeAll();f.event=null;}}this.configChangedEvent.unsubscribeAll();this.configChangedEvent=null;this.owner=null;this.config=null;this.initialConfig=null;this.eventQueue=null;}};a.alreadySubscribed=function(e,h,j){var f=e.subscribers.length,d,g;if(f>0){g=f-1;do{d=e.subscribers[g];if(d&&d.obj==j&&d.fn==h){return true;}}while(g--);}return false;};YAHOO.lang.augmentProto(a,YAHOO.util.EventProvider);}());YAHOO.widget.DateMath={DAY:"D",WEEK:"W",YEAR:"Y",MONTH:"M",ONE_DAY_MS:1000*60*60*24,WEEK_ONE_JAN_DATE:1,add:function(a,e,c){var g=new Date(a.getTime());switch(e){case this.MONTH:var f=a.getMonth()+c;var b=0;if(f<0){while(f<0){f+=12;b-=1;}}else{if(f>11){while(f>11){f-=12;b+=1;}}}g.setMonth(f);g.setFullYear(a.getFullYear()+b);break;case this.DAY:this._addDays(g,c);break;case this.YEAR:g.setFullYear(a.getFullYear()+c);break;case this.WEEK:this._addDays(g,(c*7));break;}return g;},_addDays:function(e,c){if(YAHOO.env.ua.webkit&&YAHOO.env.ua.webkit<420){if(c<0){for(var b=-128;c<b;c-=b){e.setDate(e.getDate()+b);}}else{for(var a=96;c>a;c-=a){e.setDate(e.getDate()+a);}}}e.setDate(e.getDate()+c);},subtract:function(a,c,b){return this.add(a,c,(b*-1));},before:function(c,b){var a=b.getTime();if(c.getTime()<a){return true;}else{return false;}},after:function(c,b){var a=b.getTime();if(c.getTime()>a){return true;}else{return false;}},between:function(b,a,c){if(this.after(b,a)&&this.before(b,c)){return true;}else{return false;}},getJan1:function(a){return this.getDate(a,0,1);},getDayOffset:function(b,d){var c=this.getJan1(d);var a=Math.ceil((b.getTime()-c.getTime())/this.ONE_DAY_MS);return a;},getWeekNumber:function(d,b,g){b=b||0;g=g||this.WEEK_ONE_JAN_DATE;var h=this.clearTime(d),l,m;if(h.getDay()===b){l=h;}else{l=this.getFirstDayOfWeek(h,b);}var i=l.getFullYear();m=new Date(l.getTime()+6*this.ONE_DAY_MS);var f;if(i!==m.getFullYear()&&m.getDate()>=g){f=1;}else{var e=this.clearTime(this.getDate(i,0,g)),a=this.getFirstDayOfWeek(e,b);var j=Math.round((h.getTime()-a.getTime())/this.ONE_DAY_MS);var k=j%7;var c=(j-k)/7;f=c+1;}return f;},getFirstDayOfWeek:function(d,a){a=a||0;
var b=d.getDay(),c=(b-a+7)%7;return this.subtract(d,this.DAY,c);},isYearOverlapWeek:function(a){var c=false;var b=this.add(a,this.DAY,6);if(b.getFullYear()!=a.getFullYear()){c=true;}return c;},isMonthOverlapWeek:function(a){var c=false;var b=this.add(a,this.DAY,6);if(b.getMonth()!=a.getMonth()){c=true;}return c;},findMonthStart:function(a){var b=this.getDate(a.getFullYear(),a.getMonth(),1);return b;},findMonthEnd:function(b){var d=this.findMonthStart(b);var c=this.add(d,this.MONTH,1);var a=this.subtract(c,this.DAY,1);return a;},clearTime:function(a){a.setHours(12,0,0,0);return a;},getDate:function(e,a,c){var b=null;if(YAHOO.lang.isUndefined(c)){c=1;}if(e>=100){b=new Date(e,a,c);}else{b=new Date();b.setFullYear(e);b.setMonth(a);b.setDate(c);b.setHours(0,0,0,0);}return b;}};(function(){var c=YAHOO.util.Dom,a=YAHOO.util.Event,e=YAHOO.lang,d=YAHOO.widget.DateMath;function f(i,g,h){this.init.apply(this,arguments);}f.IMG_ROOT=null;f.DATE="D";f.MONTH_DAY="MD";f.WEEKDAY="WD";f.RANGE="R";f.MONTH="M";f.DISPLAY_DAYS=42;f.STOP_RENDER="S";f.SHORT="short";f.LONG="long";f.MEDIUM="medium";f.ONE_CHAR="1char";f.DEFAULT_CONFIG={YEAR_OFFSET:{key:"year_offset",value:0,supercedes:["pagedate","selected","mindate","maxdate"]},TODAY:{key:"today",value:new Date(),supercedes:["pagedate"]},PAGEDATE:{key:"pagedate",value:null},SELECTED:{key:"selected",value:[]},TITLE:{key:"title",value:""},CLOSE:{key:"close",value:false},IFRAME:{key:"iframe",value:(YAHOO.env.ua.ie&&YAHOO.env.ua.ie<=6)?true:false},MINDATE:{key:"mindate",value:null},MAXDATE:{key:"maxdate",value:null},MULTI_SELECT:{key:"multi_select",value:false},OOM_SELECT:{key:"oom_select",value:false},START_WEEKDAY:{key:"start_weekday",value:0},SHOW_WEEKDAYS:{key:"show_weekdays",value:true},SHOW_WEEK_HEADER:{key:"show_week_header",value:false},SHOW_WEEK_FOOTER:{key:"show_week_footer",value:false},HIDE_BLANK_WEEKS:{key:"hide_blank_weeks",value:false},NAV_ARROW_LEFT:{key:"nav_arrow_left",value:null},NAV_ARROW_RIGHT:{key:"nav_arrow_right",value:null},MONTHS_SHORT:{key:"months_short",value:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},MONTHS_LONG:{key:"months_long",value:["January","February","March","April","May","June","July","August","September","October","November","December"]},WEEKDAYS_1CHAR:{key:"weekdays_1char",value:["S","M","T","W","T","F","S"]},WEEKDAYS_SHORT:{key:"weekdays_short",value:["Su","Mo","Tu","We","Th","Fr","Sa"]},WEEKDAYS_MEDIUM:{key:"weekdays_medium",value:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]},WEEKDAYS_LONG:{key:"weekdays_long",value:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},LOCALE_MONTHS:{key:"locale_months",value:"long"},LOCALE_WEEKDAYS:{key:"locale_weekdays",value:"short"},DATE_DELIMITER:{key:"date_delimiter",value:","},DATE_FIELD_DELIMITER:{key:"date_field_delimiter",value:"/"},DATE_RANGE_DELIMITER:{key:"date_range_delimiter",value:"-"},MY_MONTH_POSITION:{key:"my_month_position",value:1},MY_YEAR_POSITION:{key:"my_year_position",value:2},MD_MONTH_POSITION:{key:"md_month_position",value:1},MD_DAY_POSITION:{key:"md_day_position",value:2},MDY_MONTH_POSITION:{key:"mdy_month_position",value:1},MDY_DAY_POSITION:{key:"mdy_day_position",value:2},MDY_YEAR_POSITION:{key:"mdy_year_position",value:3},MY_LABEL_MONTH_POSITION:{key:"my_label_month_position",value:1},MY_LABEL_YEAR_POSITION:{key:"my_label_year_position",value:2},MY_LABEL_MONTH_SUFFIX:{key:"my_label_month_suffix",value:" "},MY_LABEL_YEAR_SUFFIX:{key:"my_label_year_suffix",value:""},NAV:{key:"navigator",value:null},STRINGS:{key:"strings",value:{previousMonth:"Previous Month",nextMonth:"Next Month",close:"Close"},supercedes:["close","title"]}};f._DEFAULT_CONFIG=f.DEFAULT_CONFIG;var b=f.DEFAULT_CONFIG;f._EVENT_TYPES={BEFORE_SELECT:"beforeSelect",SELECT:"select",BEFORE_DESELECT:"beforeDeselect",DESELECT:"deselect",CHANGE_PAGE:"changePage",BEFORE_RENDER:"beforeRender",RENDER:"render",BEFORE_DESTROY:"beforeDestroy",DESTROY:"destroy",RESET:"reset",CLEAR:"clear",BEFORE_HIDE:"beforeHide",HIDE:"hide",BEFORE_SHOW:"beforeShow",SHOW:"show",BEFORE_HIDE_NAV:"beforeHideNav",HIDE_NAV:"hideNav",BEFORE_SHOW_NAV:"beforeShowNav",SHOW_NAV:"showNav",BEFORE_RENDER_NAV:"beforeRenderNav",RENDER_NAV:"renderNav"};f.STYLES={CSS_ROW_HEADER:"calrowhead",CSS_ROW_FOOTER:"calrowfoot",CSS_CELL:"calcell",CSS_CELL_SELECTOR:"selector",CSS_CELL_SELECTED:"selected",CSS_CELL_SELECTABLE:"selectable",CSS_CELL_RESTRICTED:"restricted",CSS_CELL_TODAY:"today",CSS_CELL_OOM:"oom",CSS_CELL_OOB:"previous",CSS_HEADER:"calheader",CSS_HEADER_TEXT:"calhead",CSS_BODY:"calbody",CSS_WEEKDAY_CELL:"calweekdaycell",CSS_WEEKDAY_ROW:"calweekdayrow",CSS_FOOTER:"calfoot",CSS_CALENDAR:"yui-calendar",CSS_SINGLE:"single",CSS_CONTAINER:"yui-calcontainer",CSS_NAV_LEFT:"calnavleft",CSS_NAV_RIGHT:"calnavright",CSS_NAV:"calnav",CSS_CLOSE:"calclose",CSS_CELL_TOP:"calcelltop",CSS_CELL_LEFT:"calcellleft",CSS_CELL_RIGHT:"calcellright",CSS_CELL_BOTTOM:"calcellbottom",CSS_CELL_HOVER:"calcellhover",CSS_CELL_HIGHLIGHT1:"highlight1",CSS_CELL_HIGHLIGHT2:"highlight2",CSS_CELL_HIGHLIGHT3:"highlight3",CSS_CELL_HIGHLIGHT4:"highlight4",CSS_WITH_TITLE:"withtitle",CSS_FIXED_SIZE:"fixedsize",CSS_LINK_CLOSE:"link-close"};f._STYLES=f.STYLES;f.prototype={Config:null,parent:null,index:-1,cells:null,cellDates:null,id:null,containerId:null,oDomContainer:null,today:null,renderStack:null,_renderStack:null,oNavigator:null,_selectedDates:null,domEventMap:null,_parseArgs:function(h){var g={id:null,container:null,config:null};if(h&&h.length&&h.length>0){switch(h.length){case 1:g.id=null;g.container=h[0];g.config=null;break;case 2:if(e.isObject(h[1])&&!h[1].tagName&&!(h[1] instanceof String)){g.id=null;g.container=h[0];g.config=h[1];}else{g.id=h[0];g.container=h[1];g.config=null;}break;default:g.id=h[0];g.container=h[1];g.config=h[2];break;}}else{}return g;},init:function(j,h,i){var g=this._parseArgs(arguments);j=g.id;h=g.container;i=g.config;this.oDomContainer=c.get(h);this._oDoc=this.oDomContainer.ownerDocument;if(!this.oDomContainer.id){this.oDomContainer.id=c.generateId();
}if(!j){j=this.oDomContainer.id+"_t";}this.id=j;this.containerId=this.oDomContainer.id;this.initEvents();this.cfg=new YAHOO.util.Config(this);this.Options={};this.Locale={};this.initStyles();c.addClass(this.oDomContainer,this.Style.CSS_CONTAINER);c.addClass(this.oDomContainer,this.Style.CSS_SINGLE);this.cellDates=[];this.cells=[];this.renderStack=[];this._renderStack=[];this.setupConfig();if(i){this.cfg.applyConfig(i,true);}this.cfg.fireQueue();this.today=this.cfg.getProperty("today");},configIframe:function(i,h,j){var g=h[0];if(!this.parent){if(c.inDocument(this.oDomContainer)){if(g){var k=c.getStyle(this.oDomContainer,"position");if(k=="absolute"||k=="relative"){if(!c.inDocument(this.iframe)){this.iframe=document.createElement("iframe");this.iframe.src="javascript:false;";c.setStyle(this.iframe,"opacity","0");if(YAHOO.env.ua.ie&&YAHOO.env.ua.ie<=6){c.addClass(this.iframe,this.Style.CSS_FIXED_SIZE);}this.oDomContainer.insertBefore(this.iframe,this.oDomContainer.firstChild);}}}else{if(this.iframe){if(this.iframe.parentNode){this.iframe.parentNode.removeChild(this.iframe);}this.iframe=null;}}}}},configTitle:function(h,g,i){var k=g[0];if(k){this.createTitleBar(k);}else{var j=this.cfg.getProperty(b.CLOSE.key);if(!j){this.removeTitleBar();}else{this.createTitleBar("&#160;");}}},configClose:function(h,g,i){var k=g[0],j=this.cfg.getProperty(b.TITLE.key);if(k){if(!j){this.createTitleBar("&#160;");}this.createCloseButton();}else{this.removeCloseButton();if(!j){this.removeTitleBar();}}},initEvents:function(){var g=f._EVENT_TYPES,i=YAHOO.util.CustomEvent,h=this;h.beforeSelectEvent=new i(g.BEFORE_SELECT);h.selectEvent=new i(g.SELECT);h.beforeDeselectEvent=new i(g.BEFORE_DESELECT);h.deselectEvent=new i(g.DESELECT);h.changePageEvent=new i(g.CHANGE_PAGE);h.beforeRenderEvent=new i(g.BEFORE_RENDER);h.renderEvent=new i(g.RENDER);h.beforeDestroyEvent=new i(g.BEFORE_DESTROY);h.destroyEvent=new i(g.DESTROY);h.resetEvent=new i(g.RESET);h.clearEvent=new i(g.CLEAR);h.beforeShowEvent=new i(g.BEFORE_SHOW);h.showEvent=new i(g.SHOW);h.beforeHideEvent=new i(g.BEFORE_HIDE);h.hideEvent=new i(g.HIDE);h.beforeShowNavEvent=new i(g.BEFORE_SHOW_NAV);h.showNavEvent=new i(g.SHOW_NAV);h.beforeHideNavEvent=new i(g.BEFORE_HIDE_NAV);h.hideNavEvent=new i(g.HIDE_NAV);h.beforeRenderNavEvent=new i(g.BEFORE_RENDER_NAV);h.renderNavEvent=new i(g.RENDER_NAV);h.beforeSelectEvent.subscribe(h.onBeforeSelect,this,true);h.selectEvent.subscribe(h.onSelect,this,true);h.beforeDeselectEvent.subscribe(h.onBeforeDeselect,this,true);h.deselectEvent.subscribe(h.onDeselect,this,true);h.changePageEvent.subscribe(h.onChangePage,this,true);h.renderEvent.subscribe(h.onRender,this,true);h.resetEvent.subscribe(h.onReset,this,true);h.clearEvent.subscribe(h.onClear,this,true);},doPreviousMonthNav:function(h,g){a.preventDefault(h);setTimeout(function(){g.previousMonth();var j=c.getElementsByClassName(g.Style.CSS_NAV_LEFT,"a",g.oDomContainer);if(j&&j[0]){try{j[0].focus();}catch(i){}}},0);},doNextMonthNav:function(h,g){a.preventDefault(h);setTimeout(function(){g.nextMonth();var j=c.getElementsByClassName(g.Style.CSS_NAV_RIGHT,"a",g.oDomContainer);if(j&&j[0]){try{j[0].focus();}catch(i){}}},0);},doSelectCell:function(m,g){var r,o,i,l;var n=a.getTarget(m),h=n.tagName.toLowerCase(),k=false;while(h!="td"&&!c.hasClass(n,g.Style.CSS_CELL_SELECTABLE)){if(!k&&h=="a"&&c.hasClass(n,g.Style.CSS_CELL_SELECTOR)){k=true;}n=n.parentNode;h=n.tagName.toLowerCase();if(n==this.oDomContainer||h=="html"){return;}}if(k){a.preventDefault(m);}r=n;if(c.hasClass(r,g.Style.CSS_CELL_SELECTABLE)){l=g.getIndexFromId(r.id);if(l>-1){o=g.cellDates[l];if(o){i=d.getDate(o[0],o[1]-1,o[2]);var q;if(g.Options.MULTI_SELECT){q=r.getElementsByTagName("a")[0];if(q){q.blur();}var j=g.cellDates[l];var p=g._indexOfSelectedFieldArray(j);if(p>-1){g.deselectCell(l);}else{g.selectCell(l);}}else{q=r.getElementsByTagName("a")[0];if(q){q.blur();}g.selectCell(l);}}}}},doCellMouseOver:function(i,h){var g;if(i){g=a.getTarget(i);}else{g=this;}while(g.tagName&&g.tagName.toLowerCase()!="td"){g=g.parentNode;if(!g.tagName||g.tagName.toLowerCase()=="html"){return;}}if(c.hasClass(g,h.Style.CSS_CELL_SELECTABLE)){c.addClass(g,h.Style.CSS_CELL_HOVER);}},doCellMouseOut:function(i,h){var g;if(i){g=a.getTarget(i);}else{g=this;}while(g.tagName&&g.tagName.toLowerCase()!="td"){g=g.parentNode;if(!g.tagName||g.tagName.toLowerCase()=="html"){return;}}if(c.hasClass(g,h.Style.CSS_CELL_SELECTABLE)){c.removeClass(g,h.Style.CSS_CELL_HOVER);}},setupConfig:function(){var g=this.cfg;g.addProperty(b.TODAY.key,{value:new Date(b.TODAY.value.getTime()),supercedes:b.TODAY.supercedes,handler:this.configToday,suppressEvent:true});g.addProperty(b.PAGEDATE.key,{value:b.PAGEDATE.value||new Date(b.TODAY.value.getTime()),handler:this.configPageDate});g.addProperty(b.SELECTED.key,{value:b.SELECTED.value.concat(),handler:this.configSelected});g.addProperty(b.TITLE.key,{value:b.TITLE.value,handler:this.configTitle});g.addProperty(b.CLOSE.key,{value:b.CLOSE.value,handler:this.configClose});g.addProperty(b.IFRAME.key,{value:b.IFRAME.value,handler:this.configIframe,validator:g.checkBoolean});g.addProperty(b.MINDATE.key,{value:b.MINDATE.value,handler:this.configMinDate});g.addProperty(b.MAXDATE.key,{value:b.MAXDATE.value,handler:this.configMaxDate});g.addProperty(b.MULTI_SELECT.key,{value:b.MULTI_SELECT.value,handler:this.configOptions,validator:g.checkBoolean});g.addProperty(b.OOM_SELECT.key,{value:b.OOM_SELECT.value,handler:this.configOptions,validator:g.checkBoolean});g.addProperty(b.START_WEEKDAY.key,{value:b.START_WEEKDAY.value,handler:this.configOptions,validator:g.checkNumber});g.addProperty(b.SHOW_WEEKDAYS.key,{value:b.SHOW_WEEKDAYS.value,handler:this.configOptions,validator:g.checkBoolean});g.addProperty(b.SHOW_WEEK_HEADER.key,{value:b.SHOW_WEEK_HEADER.value,handler:this.configOptions,validator:g.checkBoolean});g.addProperty(b.SHOW_WEEK_FOOTER.key,{value:b.SHOW_WEEK_FOOTER.value,handler:this.configOptions,validator:g.checkBoolean});g.addProperty(b.HIDE_BLANK_WEEKS.key,{value:b.HIDE_BLANK_WEEKS.value,handler:this.configOptions,validator:g.checkBoolean});
g.addProperty(b.NAV_ARROW_LEFT.key,{value:b.NAV_ARROW_LEFT.value,handler:this.configOptions});g.addProperty(b.NAV_ARROW_RIGHT.key,{value:b.NAV_ARROW_RIGHT.value,handler:this.configOptions});g.addProperty(b.MONTHS_SHORT.key,{value:b.MONTHS_SHORT.value,handler:this.configLocale});g.addProperty(b.MONTHS_LONG.key,{value:b.MONTHS_LONG.value,handler:this.configLocale});g.addProperty(b.WEEKDAYS_1CHAR.key,{value:b.WEEKDAYS_1CHAR.value,handler:this.configLocale});g.addProperty(b.WEEKDAYS_SHORT.key,{value:b.WEEKDAYS_SHORT.value,handler:this.configLocale});g.addProperty(b.WEEKDAYS_MEDIUM.key,{value:b.WEEKDAYS_MEDIUM.value,handler:this.configLocale});g.addProperty(b.WEEKDAYS_LONG.key,{value:b.WEEKDAYS_LONG.value,handler:this.configLocale});var h=function(){g.refireEvent(b.LOCALE_MONTHS.key);g.refireEvent(b.LOCALE_WEEKDAYS.key);};g.subscribeToConfigEvent(b.START_WEEKDAY.key,h,this,true);g.subscribeToConfigEvent(b.MONTHS_SHORT.key,h,this,true);g.subscribeToConfigEvent(b.MONTHS_LONG.key,h,this,true);g.subscribeToConfigEvent(b.WEEKDAYS_1CHAR.key,h,this,true);g.subscribeToConfigEvent(b.WEEKDAYS_SHORT.key,h,this,true);g.subscribeToConfigEvent(b.WEEKDAYS_MEDIUM.key,h,this,true);g.subscribeToConfigEvent(b.WEEKDAYS_LONG.key,h,this,true);g.addProperty(b.LOCALE_MONTHS.key,{value:b.LOCALE_MONTHS.value,handler:this.configLocaleValues});g.addProperty(b.LOCALE_WEEKDAYS.key,{value:b.LOCALE_WEEKDAYS.value,handler:this.configLocaleValues});g.addProperty(b.YEAR_OFFSET.key,{value:b.YEAR_OFFSET.value,supercedes:b.YEAR_OFFSET.supercedes,handler:this.configLocale});g.addProperty(b.DATE_DELIMITER.key,{value:b.DATE_DELIMITER.value,handler:this.configLocale});g.addProperty(b.DATE_FIELD_DELIMITER.key,{value:b.DATE_FIELD_DELIMITER.value,handler:this.configLocale});g.addProperty(b.DATE_RANGE_DELIMITER.key,{value:b.DATE_RANGE_DELIMITER.value,handler:this.configLocale});g.addProperty(b.MY_MONTH_POSITION.key,{value:b.MY_MONTH_POSITION.value,handler:this.configLocale,validator:g.checkNumber});g.addProperty(b.MY_YEAR_POSITION.key,{value:b.MY_YEAR_POSITION.value,handler:this.configLocale,validator:g.checkNumber});g.addProperty(b.MD_MONTH_POSITION.key,{value:b.MD_MONTH_POSITION.value,handler:this.configLocale,validator:g.checkNumber});g.addProperty(b.MD_DAY_POSITION.key,{value:b.MD_DAY_POSITION.value,handler:this.configLocale,validator:g.checkNumber});g.addProperty(b.MDY_MONTH_POSITION.key,{value:b.MDY_MONTH_POSITION.value,handler:this.configLocale,validator:g.checkNumber});g.addProperty(b.MDY_DAY_POSITION.key,{value:b.MDY_DAY_POSITION.value,handler:this.configLocale,validator:g.checkNumber});g.addProperty(b.MDY_YEAR_POSITION.key,{value:b.MDY_YEAR_POSITION.value,handler:this.configLocale,validator:g.checkNumber});g.addProperty(b.MY_LABEL_MONTH_POSITION.key,{value:b.MY_LABEL_MONTH_POSITION.value,handler:this.configLocale,validator:g.checkNumber});g.addProperty(b.MY_LABEL_YEAR_POSITION.key,{value:b.MY_LABEL_YEAR_POSITION.value,handler:this.configLocale,validator:g.checkNumber});g.addProperty(b.MY_LABEL_MONTH_SUFFIX.key,{value:b.MY_LABEL_MONTH_SUFFIX.value,handler:this.configLocale});g.addProperty(b.MY_LABEL_YEAR_SUFFIX.key,{value:b.MY_LABEL_YEAR_SUFFIX.value,handler:this.configLocale});g.addProperty(b.NAV.key,{value:b.NAV.value,handler:this.configNavigator});g.addProperty(b.STRINGS.key,{value:b.STRINGS.value,handler:this.configStrings,validator:function(i){return e.isObject(i);},supercedes:b.STRINGS.supercedes});},configStrings:function(h,g,i){var j=e.merge(b.STRINGS.value,g[0]);this.cfg.setProperty(b.STRINGS.key,j,true);},configPageDate:function(h,g,i){this.cfg.setProperty(b.PAGEDATE.key,this._parsePageDate(g[0]),true);},configMinDate:function(h,g,i){var j=g[0];if(e.isString(j)){j=this._parseDate(j);this.cfg.setProperty(b.MINDATE.key,d.getDate(j[0],(j[1]-1),j[2]));}},configMaxDate:function(h,g,i){var j=g[0];if(e.isString(j)){j=this._parseDate(j);this.cfg.setProperty(b.MAXDATE.key,d.getDate(j[0],(j[1]-1),j[2]));}},configToday:function(i,h,j){var k=h[0];if(e.isString(k)){k=this._parseDate(k);}var g=d.clearTime(k);if(!this.cfg.initialConfig[b.PAGEDATE.key]){this.cfg.setProperty(b.PAGEDATE.key,g);}this.today=g;this.cfg.setProperty(b.TODAY.key,g,true);},configSelected:function(i,g,k){var h=g[0],j=b.SELECTED.key;if(h){if(e.isString(h)){this.cfg.setProperty(j,this._parseDates(h),true);}}if(!this._selectedDates){this._selectedDates=this.cfg.getProperty(j);}},configOptions:function(h,g,i){this.Options[h.toUpperCase()]=g[0];},configLocale:function(h,g,i){this.Locale[h.toUpperCase()]=g[0];this.cfg.refireEvent(b.LOCALE_MONTHS.key);this.cfg.refireEvent(b.LOCALE_WEEKDAYS.key);},configLocaleValues:function(j,i,k){j=j.toLowerCase();var m=i[0],h=this.cfg,n=this.Locale;switch(j){case b.LOCALE_MONTHS.key:switch(m){case f.SHORT:n.LOCALE_MONTHS=h.getProperty(b.MONTHS_SHORT.key).concat();break;case f.LONG:n.LOCALE_MONTHS=h.getProperty(b.MONTHS_LONG.key).concat();break;}break;case b.LOCALE_WEEKDAYS.key:switch(m){case f.ONE_CHAR:n.LOCALE_WEEKDAYS=h.getProperty(b.WEEKDAYS_1CHAR.key).concat();break;case f.SHORT:n.LOCALE_WEEKDAYS=h.getProperty(b.WEEKDAYS_SHORT.key).concat();break;case f.MEDIUM:n.LOCALE_WEEKDAYS=h.getProperty(b.WEEKDAYS_MEDIUM.key).concat();break;case f.LONG:n.LOCALE_WEEKDAYS=h.getProperty(b.WEEKDAYS_LONG.key).concat();break;}var l=h.getProperty(b.START_WEEKDAY.key);if(l>0){for(var g=0;g<l;++g){n.LOCALE_WEEKDAYS.push(n.LOCALE_WEEKDAYS.shift());}}break;}},configNavigator:function(h,g,i){var j=g[0];if(YAHOO.widget.CalendarNavigator&&(j===true||e.isObject(j))){if(!this.oNavigator){this.oNavigator=new YAHOO.widget.CalendarNavigator(this);this.beforeRenderEvent.subscribe(function(){if(!this.pages){this.oNavigator.erase();}},this,true);}}else{if(this.oNavigator){this.oNavigator.destroy();this.oNavigator=null;}}},initStyles:function(){var g=f.STYLES;this.Style={CSS_ROW_HEADER:g.CSS_ROW_HEADER,CSS_ROW_FOOTER:g.CSS_ROW_FOOTER,CSS_CELL:g.CSS_CELL,CSS_CELL_SELECTOR:g.CSS_CELL_SELECTOR,CSS_CELL_SELECTED:g.CSS_CELL_SELECTED,CSS_CELL_SELECTABLE:g.CSS_CELL_SELECTABLE,CSS_CELL_RESTRICTED:g.CSS_CELL_RESTRICTED,CSS_CELL_TODAY:g.CSS_CELL_TODAY,CSS_CELL_OOM:g.CSS_CELL_OOM,CSS_CELL_OOB:g.CSS_CELL_OOB,CSS_HEADER:g.CSS_HEADER,CSS_HEADER_TEXT:g.CSS_HEADER_TEXT,CSS_BODY:g.CSS_BODY,CSS_WEEKDAY_CELL:g.CSS_WEEKDAY_CELL,CSS_WEEKDAY_ROW:g.CSS_WEEKDAY_ROW,CSS_FOOTER:g.CSS_FOOTER,CSS_CALENDAR:g.CSS_CALENDAR,CSS_SINGLE:g.CSS_SINGLE,CSS_CONTAINER:g.CSS_CONTAINER,CSS_NAV_LEFT:g.CSS_NAV_LEFT,CSS_NAV_RIGHT:g.CSS_NAV_RIGHT,CSS_NAV:g.CSS_NAV,CSS_CLOSE:g.CSS_CLOSE,CSS_CELL_TOP:g.CSS_CELL_TOP,CSS_CELL_LEFT:g.CSS_CELL_LEFT,CSS_CELL_RIGHT:g.CSS_CELL_RIGHT,CSS_CELL_BOTTOM:g.CSS_CELL_BOTTOM,CSS_CELL_HOVER:g.CSS_CELL_HOVER,CSS_CELL_HIGHLIGHT1:g.CSS_CELL_HIGHLIGHT1,CSS_CELL_HIGHLIGHT2:g.CSS_CELL_HIGHLIGHT2,CSS_CELL_HIGHLIGHT3:g.CSS_CELL_HIGHLIGHT3,CSS_CELL_HIGHLIGHT4:g.CSS_CELL_HIGHLIGHT4,CSS_WITH_TITLE:g.CSS_WITH_TITLE,CSS_FIXED_SIZE:g.CSS_FIXED_SIZE,CSS_LINK_CLOSE:g.CSS_LINK_CLOSE};
},buildMonthLabel:function(){return this._buildMonthLabel(this.cfg.getProperty(b.PAGEDATE.key));},_buildMonthLabel:function(g){var i=this.Locale.LOCALE_MONTHS[g.getMonth()]+this.Locale.MY_LABEL_MONTH_SUFFIX,h=(g.getFullYear()+this.Locale.YEAR_OFFSET)+this.Locale.MY_LABEL_YEAR_SUFFIX;if(this.Locale.MY_LABEL_MONTH_POSITION==2||this.Locale.MY_LABEL_YEAR_POSITION==1){return h+i;}else{return i+h;}},buildDayLabel:function(g){return g.getDate();},createTitleBar:function(g){var h=c.getElementsByClassName(YAHOO.widget.CalendarGroup.CSS_2UPTITLE,"div",this.oDomContainer)[0]||document.createElement("div");h.className=YAHOO.widget.CalendarGroup.CSS_2UPTITLE;h.innerHTML=g;this.oDomContainer.insertBefore(h,this.oDomContainer.firstChild);c.addClass(this.oDomContainer,this.Style.CSS_WITH_TITLE);return h;},removeTitleBar:function(){var g=c.getElementsByClassName(YAHOO.widget.CalendarGroup.CSS_2UPTITLE,"div",this.oDomContainer)[0]||null;if(g){a.purgeElement(g);this.oDomContainer.removeChild(g);}c.removeClass(this.oDomContainer,this.Style.CSS_WITH_TITLE);},createCloseButton:function(){var k=YAHOO.widget.CalendarGroup.CSS_2UPCLOSE,j=this.Style.CSS_LINK_CLOSE,m="us/my/bn/x_d.gif",l=c.getElementsByClassName(j,"a",this.oDomContainer)[0],g=this.cfg.getProperty(b.STRINGS.key),h=(g&&g.close)?g.close:"";if(!l){l=document.createElement("a");a.addListener(l,"click",function(o,n){n.hide();a.preventDefault(o);},this);}l.href="#";l.className=j;if(f.IMG_ROOT!==null){var i=c.getElementsByClassName(k,"img",l)[0]||document.createElement("img");i.src=f.IMG_ROOT+m;i.className=k;l.appendChild(i);}else{l.innerHTML='<span class="'+k+" "+this.Style.CSS_CLOSE+'">'+h+"</span>";}this.oDomContainer.appendChild(l);return l;},removeCloseButton:function(){var g=c.getElementsByClassName(this.Style.CSS_LINK_CLOSE,"a",this.oDomContainer)[0]||null;if(g){a.purgeElement(g);this.oDomContainer.removeChild(g);}},renderHeader:function(q){var p=7,o="us/tr/callt.gif",g="us/tr/calrt.gif",n=this.cfg,k=n.getProperty(b.PAGEDATE.key),l=n.getProperty(b.STRINGS.key),v=(l&&l.previousMonth)?l.previousMonth:"",h=(l&&l.nextMonth)?l.nextMonth:"",m;if(n.getProperty(b.SHOW_WEEK_HEADER.key)){p+=1;}if(n.getProperty(b.SHOW_WEEK_FOOTER.key)){p+=1;}q[q.length]="<thead>";q[q.length]="<tr>";q[q.length]='<th colspan="'+p+'" class="'+this.Style.CSS_HEADER_TEXT+'">';q[q.length]='<div class="'+this.Style.CSS_HEADER+'">';var x,u=false;if(this.parent){if(this.index===0){x=true;}if(this.index==(this.parent.cfg.getProperty("pages")-1)){u=true;}}else{x=true;u=true;}if(x){m=this._buildMonthLabel(d.subtract(k,d.MONTH,1));var r=n.getProperty(b.NAV_ARROW_LEFT.key);if(r===null&&f.IMG_ROOT!==null){r=f.IMG_ROOT+o;}var i=(r===null)?"":' style="background-image:url('+r+')"';q[q.length]='<a class="'+this.Style.CSS_NAV_LEFT+'"'+i+' href="#">'+v+" ("+m+")"+"</a>";}var w=this.buildMonthLabel();var s=this.parent||this;if(s.cfg.getProperty("navigator")){w='<a class="'+this.Style.CSS_NAV+'" href="#">'+w+"</a>";}q[q.length]=w;if(u){m=this._buildMonthLabel(d.add(k,d.MONTH,1));var t=n.getProperty(b.NAV_ARROW_RIGHT.key);if(t===null&&f.IMG_ROOT!==null){t=f.IMG_ROOT+g;}var j=(t===null)?"":' style="background-image:url('+t+')"';q[q.length]='<a class="'+this.Style.CSS_NAV_RIGHT+'"'+j+' href="#">'+h+" ("+m+")"+"</a>";}q[q.length]="</div>\n</th>\n</tr>";if(n.getProperty(b.SHOW_WEEKDAYS.key)){q=this.buildWeekdays(q);}q[q.length]="</thead>";return q;},buildWeekdays:function(h){h[h.length]='<tr class="'+this.Style.CSS_WEEKDAY_ROW+'">';if(this.cfg.getProperty(b.SHOW_WEEK_HEADER.key)){h[h.length]="<th>&#160;</th>";}for(var g=0;g<this.Locale.LOCALE_WEEKDAYS.length;++g){h[h.length]='<th class="'+this.Style.CSS_WEEKDAY_CELL+'">'+this.Locale.LOCALE_WEEKDAYS[g]+"</th>";}if(this.cfg.getProperty(b.SHOW_WEEK_FOOTER.key)){h[h.length]="<th>&#160;</th>";}h[h.length]="</tr>";return h;},renderBody:function(T,Q){var ao=this.cfg.getProperty(b.START_WEEKDAY.key);this.preMonthDays=T.getDay();if(ao>0){this.preMonthDays-=ao;}if(this.preMonthDays<0){this.preMonthDays+=7;}this.monthDays=d.findMonthEnd(T).getDate();this.postMonthDays=f.DISPLAY_DAYS-this.preMonthDays-this.monthDays;T=d.subtract(T,d.DAY,this.preMonthDays);var F,q,o="w",L="_cell",J="wd",Z="d",v,X,af=this.today,u=this.cfg,ae,D=af.getFullYear(),Y=af.getMonth(),k=af.getDate(),ad=u.getProperty(b.PAGEDATE.key),j=u.getProperty(b.HIDE_BLANK_WEEKS.key),P=u.getProperty(b.SHOW_WEEK_FOOTER.key),I=u.getProperty(b.SHOW_WEEK_HEADER.key),O=u.getProperty(b.OOM_SELECT.key),B=u.getProperty(b.MINDATE.key),H=u.getProperty(b.MAXDATE.key),A=this.Locale.YEAR_OFFSET;if(B){B=d.clearTime(B);}if(H){H=d.clearTime(H);}Q[Q.length]='<tbody class="m'+(ad.getMonth()+1)+" "+this.Style.CSS_BODY+'">';var am=0,w=document.createElement("div"),R=document.createElement("td");w.appendChild(R);var ac=this.parent||this;for(var ah=0;ah<6;ah++){F=d.getWeekNumber(T,ao);q=o+F;if(ah!==0&&j===true&&T.getMonth()!=ad.getMonth()){break;}else{Q[Q.length]='<tr class="'+q+'">';if(I){Q=this.renderRowHeader(F,Q);}for(var an=0;an<7;an++){v=[];this.clearElement(R);R.className=this.Style.CSS_CELL;R.id=this.id+L+am;if(T.getDate()==k&&T.getMonth()==Y&&T.getFullYear()==D){v[v.length]=ac.renderCellStyleToday;}var G=[T.getFullYear(),T.getMonth()+1,T.getDate()];this.cellDates[this.cellDates.length]=G;ae=T.getMonth()!=ad.getMonth();if(ae&&!O){v[v.length]=ac.renderCellNotThisMonth;}else{c.addClass(R,J+T.getDay());c.addClass(R,Z+T.getDate());var S=this.renderStack.concat();for(var ag=0,al=S.length;ag<al;++ag){X=null;var aa=S[ag],ap=aa[0],h,K,n;switch(ap){case f.DATE:h=aa[1][1];K=aa[1][2];n=aa[1][0];if(T.getMonth()+1==h&&T.getDate()==K&&T.getFullYear()==n){X=aa[2];this.renderStack.splice(ag,1);}break;case f.MONTH_DAY:h=aa[1][0];K=aa[1][1];if(T.getMonth()+1==h&&T.getDate()==K){X=aa[2];this.renderStack.splice(ag,1);}break;case f.RANGE:var N=aa[1][0],M=aa[1][1],U=N[1],z=N[2],E=N[0],ak=d.getDate(E,U-1,z),m=M[1],W=M[2],g=M[0],aj=d.getDate(g,m-1,W);if(T.getTime()>=ak.getTime()&&T.getTime()<=aj.getTime()){X=aa[2];if(T.getTime()==aj.getTime()){this.renderStack.splice(ag,1);
}}break;case f.WEEKDAY:var y=aa[1][0];if(T.getDay()+1==y){X=aa[2];}break;case f.MONTH:h=aa[1][0];if(T.getMonth()+1==h){X=aa[2];}break;}if(X){v[v.length]=X;}}}if(this._indexOfSelectedFieldArray(G)>-1){v[v.length]=ac.renderCellStyleSelected;}if(ae){v[v.length]=ac.styleCellNotThisMonth;}if((B&&(T.getTime()<B.getTime()))||(H&&(T.getTime()>H.getTime()))){v[v.length]=ac.renderOutOfBoundsDate;}else{v[v.length]=ac.styleCellDefault;v[v.length]=ac.renderCellDefault;}for(var ab=0;ab<v.length;++ab){if(v[ab].call(ac,T,R)==f.STOP_RENDER){break;}}T.setTime(T.getTime()+d.ONE_DAY_MS);T=d.clearTime(T);if(am>=0&&am<=6){c.addClass(R,this.Style.CSS_CELL_TOP);}if((am%7)===0){c.addClass(R,this.Style.CSS_CELL_LEFT);}if(((am+1)%7)===0){c.addClass(R,this.Style.CSS_CELL_RIGHT);}var V=this.postMonthDays;if(j&&V>=7){var C=Math.floor(V/7);for(var ai=0;ai<C;++ai){V-=7;}}if(am>=((this.preMonthDays+V+this.monthDays)-7)){c.addClass(R,this.Style.CSS_CELL_BOTTOM);}Q[Q.length]=w.innerHTML;am++;}if(P){Q=this.renderRowFooter(F,Q);}Q[Q.length]="</tr>";}}Q[Q.length]="</tbody>";return Q;},renderFooter:function(g){return g;},render:function(){this.beforeRenderEvent.fire();var i=d.findMonthStart(this.cfg.getProperty(b.PAGEDATE.key));this.resetRenderers();this.cellDates.length=0;a.purgeElement(this.oDomContainer,true);var g=[],h;g[g.length]='<table cellSpacing="0" class="'+this.Style.CSS_CALENDAR+" y"+(i.getFullYear()+this.Locale.YEAR_OFFSET)+'" id="'+this.id+'">';g=this.renderHeader(g);g=this.renderBody(i,g);g=this.renderFooter(g);g[g.length]="</table>";this.oDomContainer.innerHTML=g.join("\n");this.applyListeners();h=((this._oDoc)&&this._oDoc.getElementById(this.id))||(this.id);this.cells=c.getElementsByClassName(this.Style.CSS_CELL,"td",h);this.cfg.refireEvent(b.TITLE.key);this.cfg.refireEvent(b.CLOSE.key);this.cfg.refireEvent(b.IFRAME.key);this.renderEvent.fire();},applyListeners:function(){var q=this.oDomContainer,h=this.parent||this,m="a",t="click";var n=c.getElementsByClassName(this.Style.CSS_NAV_LEFT,m,q),j=c.getElementsByClassName(this.Style.CSS_NAV_RIGHT,m,q);if(n&&n.length>0){this.linkLeft=n[0];a.addListener(this.linkLeft,t,this.doPreviousMonthNav,h,true);}if(j&&j.length>0){this.linkRight=j[0];a.addListener(this.linkRight,t,this.doNextMonthNav,h,true);}if(h.cfg.getProperty("navigator")!==null){this.applyNavListeners();}if(this.domEventMap){var k,g;for(var s in this.domEventMap){if(e.hasOwnProperty(this.domEventMap,s)){var o=this.domEventMap[s];if(!(o instanceof Array)){o=[o];}for(var l=0;l<o.length;l++){var r=o[l];g=c.getElementsByClassName(s,r.tag,this.oDomContainer);for(var p=0;p<g.length;p++){k=g[p];a.addListener(k,r.event,r.handler,r.scope,r.correct);}}}}}a.addListener(this.oDomContainer,"click",this.doSelectCell,this);a.addListener(this.oDomContainer,"mouseover",this.doCellMouseOver,this);a.addListener(this.oDomContainer,"mouseout",this.doCellMouseOut,this);},applyNavListeners:function(){var h=this.parent||this,i=this,g=c.getElementsByClassName(this.Style.CSS_NAV,"a",this.oDomContainer);if(g.length>0){a.addListener(g,"click",function(n,m){var l=a.getTarget(n);if(this===l||c.isAncestor(this,l)){a.preventDefault(n);}var j=h.oNavigator;if(j){var k=i.cfg.getProperty("pagedate");j.setYear(k.getFullYear()+i.Locale.YEAR_OFFSET);j.setMonth(k.getMonth());j.show();}});}},getDateByCellId:function(h){var g=this.getDateFieldsByCellId(h);return(g)?d.getDate(g[0],g[1]-1,g[2]):null;},getDateFieldsByCellId:function(g){g=this.getIndexFromId(g);return(g>-1)?this.cellDates[g]:null;},getCellIndex:function(j){var h=-1;if(j){var g=j.getMonth(),p=j.getFullYear(),o=j.getDate(),l=this.cellDates;for(var k=0;k<l.length;++k){var n=l[k];if(n[0]===p&&n[1]===g+1&&n[2]===o){h=k;break;}}}return h;},getIndexFromId:function(i){var h=-1,g=i.lastIndexOf("_cell");if(g>-1){h=parseInt(i.substring(g+5),10);}return h;},renderOutOfBoundsDate:function(h,g){c.addClass(g,this.Style.CSS_CELL_OOB);g.innerHTML=h.getDate();return f.STOP_RENDER;},renderRowHeader:function(h,g){g[g.length]='<th class="'+this.Style.CSS_ROW_HEADER+'">'+h+"</th>";return g;},renderRowFooter:function(h,g){g[g.length]='<th class="'+this.Style.CSS_ROW_FOOTER+'">'+h+"</th>";return g;},renderCellDefault:function(h,g){g.innerHTML='<a href="#" class="'+this.Style.CSS_CELL_SELECTOR+'">'+this.buildDayLabel(h)+"</a>";},styleCellDefault:function(h,g){c.addClass(g,this.Style.CSS_CELL_SELECTABLE);},renderCellStyleHighlight1:function(h,g){c.addClass(g,this.Style.CSS_CELL_HIGHLIGHT1);},renderCellStyleHighlight2:function(h,g){c.addClass(g,this.Style.CSS_CELL_HIGHLIGHT2);},renderCellStyleHighlight3:function(h,g){c.addClass(g,this.Style.CSS_CELL_HIGHLIGHT3);},renderCellStyleHighlight4:function(h,g){c.addClass(g,this.Style.CSS_CELL_HIGHLIGHT4);},renderCellStyleToday:function(h,g){c.addClass(g,this.Style.CSS_CELL_TODAY);},renderCellStyleSelected:function(h,g){c.addClass(g,this.Style.CSS_CELL_SELECTED);},renderCellNotThisMonth:function(h,g){this.styleCellNotThisMonth(h,g);g.innerHTML=h.getDate();return f.STOP_RENDER;},styleCellNotThisMonth:function(h,g){YAHOO.util.Dom.addClass(g,this.Style.CSS_CELL_OOM);},renderBodyCellRestricted:function(h,g){c.addClass(g,this.Style.CSS_CELL);c.addClass(g,this.Style.CSS_CELL_RESTRICTED);g.innerHTML=h.getDate();return f.STOP_RENDER;},addMonths:function(i){var h=b.PAGEDATE.key,j=this.cfg.getProperty(h),g=d.add(j,d.MONTH,i);this.cfg.setProperty(h,g);this.resetRenderers();this.changePageEvent.fire(j,g);},subtractMonths:function(g){this.addMonths(-1*g);},addYears:function(i){var h=b.PAGEDATE.key,j=this.cfg.getProperty(h),g=d.add(j,d.YEAR,i);this.cfg.setProperty(h,g);this.resetRenderers();this.changePageEvent.fire(j,g);},subtractYears:function(g){this.addYears(-1*g);},nextMonth:function(){this.addMonths(1);},previousMonth:function(){this.addMonths(-1);},nextYear:function(){this.addYears(1);},previousYear:function(){this.addYears(-1);},reset:function(){this.cfg.resetProperty(b.SELECTED.key);this.cfg.resetProperty(b.PAGEDATE.key);this.resetEvent.fire();},clear:function(){this.cfg.setProperty(b.SELECTED.key,[]);
this.cfg.setProperty(b.PAGEDATE.key,new Date(this.today.getTime()));this.clearEvent.fire();},select:function(i){var l=this._toFieldArray(i),h=[],k=[],m=b.SELECTED.key;for(var g=0;g<l.length;++g){var j=l[g];if(!this.isDateOOB(this._toDate(j))){if(h.length===0){this.beforeSelectEvent.fire();k=this.cfg.getProperty(m);}h.push(j);if(this._indexOfSelectedFieldArray(j)==-1){k[k.length]=j;}}}if(h.length>0){if(this.parent){this.parent.cfg.setProperty(m,k);}else{this.cfg.setProperty(m,k);}this.selectEvent.fire(h);}return this.getSelectedDates();},selectCell:function(j){var h=this.cells[j],n=this.cellDates[j],m=this._toDate(n),i=c.hasClass(h,this.Style.CSS_CELL_SELECTABLE);if(i){this.beforeSelectEvent.fire();var l=b.SELECTED.key;var k=this.cfg.getProperty(l);var g=n.concat();if(this._indexOfSelectedFieldArray(g)==-1){k[k.length]=g;}if(this.parent){this.parent.cfg.setProperty(l,k);}else{this.cfg.setProperty(l,k);}this.renderCellStyleSelected(m,h);this.selectEvent.fire([g]);this.doCellMouseOut.call(h,null,this);}return this.getSelectedDates();},deselect:function(k){var g=this._toFieldArray(k),j=[],m=[],n=b.SELECTED.key;for(var h=0;h<g.length;++h){var l=g[h];if(!this.isDateOOB(this._toDate(l))){if(j.length===0){this.beforeDeselectEvent.fire();m=this.cfg.getProperty(n);}j.push(l);var i=this._indexOfSelectedFieldArray(l);if(i!=-1){m.splice(i,1);}}}if(j.length>0){if(this.parent){this.parent.cfg.setProperty(n,m);}else{this.cfg.setProperty(n,m);}this.deselectEvent.fire(j);}return this.getSelectedDates();},deselectCell:function(k){var h=this.cells[k],n=this.cellDates[k],i=this._indexOfSelectedFieldArray(n);var j=c.hasClass(h,this.Style.CSS_CELL_SELECTABLE);if(j){this.beforeDeselectEvent.fire();var l=this.cfg.getProperty(b.SELECTED.key),m=this._toDate(n),g=n.concat();if(i>-1){if((this.cfg.getProperty(b.PAGEDATE.key).getMonth()==m.getMonth()&&this.cfg.getProperty(b.PAGEDATE.key).getFullYear()==m.getFullYear())||this.cfg.getProperty(b.OOM_SELECT.key)){c.removeClass(h,this.Style.CSS_CELL_SELECTED);}l.splice(i,1);}if(this.parent){this.parent.cfg.setProperty(b.SELECTED.key,l);}else{this.cfg.setProperty(b.SELECTED.key,l);}this.deselectEvent.fire([g]);}return this.getSelectedDates();},deselectAll:function(){this.beforeDeselectEvent.fire();var j=b.SELECTED.key,g=this.cfg.getProperty(j),h=g.length,i=g.concat();if(this.parent){this.parent.cfg.setProperty(j,[]);}else{this.cfg.setProperty(j,[]);}if(h>0){this.deselectEvent.fire(i);}return this.getSelectedDates();},_toFieldArray:function(h){var g=[];if(h instanceof Date){g=[[h.getFullYear(),h.getMonth()+1,h.getDate()]];}else{if(e.isString(h)){g=this._parseDates(h);}else{if(e.isArray(h)){for(var j=0;j<h.length;++j){var k=h[j];g[g.length]=[k.getFullYear(),k.getMonth()+1,k.getDate()];}}}}return g;},toDate:function(g){return this._toDate(g);},_toDate:function(g){if(g instanceof Date){return g;}else{return d.getDate(g[0],g[1]-1,g[2]);}},_fieldArraysAreEqual:function(i,h){var g=false;if(i[0]==h[0]&&i[1]==h[1]&&i[2]==h[2]){g=true;}return g;},_indexOfSelectedFieldArray:function(k){var j=-1,g=this.cfg.getProperty(b.SELECTED.key);for(var i=0;i<g.length;++i){var h=g[i];if(k[0]==h[0]&&k[1]==h[1]&&k[2]==h[2]){j=i;break;}}return j;},isDateOOM:function(g){return(g.getMonth()!=this.cfg.getProperty(b.PAGEDATE.key).getMonth());},isDateOOB:function(i){var j=this.cfg.getProperty(b.MINDATE.key),k=this.cfg.getProperty(b.MAXDATE.key),h=d;if(j){j=h.clearTime(j);}if(k){k=h.clearTime(k);}var g=new Date(i.getTime());g=h.clearTime(g);return((j&&g.getTime()<j.getTime())||(k&&g.getTime()>k.getTime()));},_parsePageDate:function(g){var j;if(g){if(g instanceof Date){j=d.findMonthStart(g);}else{var k,i,h;h=g.split(this.cfg.getProperty(b.DATE_FIELD_DELIMITER.key));k=parseInt(h[this.cfg.getProperty(b.MY_MONTH_POSITION.key)-1],10)-1;i=parseInt(h[this.cfg.getProperty(b.MY_YEAR_POSITION.key)-1],10)-this.Locale.YEAR_OFFSET;j=d.getDate(i,k,1);}}else{j=d.getDate(this.today.getFullYear(),this.today.getMonth(),1);}return j;},onBeforeSelect:function(){if(this.cfg.getProperty(b.MULTI_SELECT.key)===false){if(this.parent){this.parent.callChildFunction("clearAllBodyCellStyles",this.Style.CSS_CELL_SELECTED);this.parent.deselectAll();}else{this.clearAllBodyCellStyles(this.Style.CSS_CELL_SELECTED);this.deselectAll();}}},onSelect:function(g){},onBeforeDeselect:function(){},onDeselect:function(g){},onChangePage:function(){this.render();},onRender:function(){},onReset:function(){this.render();},onClear:function(){this.render();},validate:function(){return true;},_parseDate:function(j){var k=j.split(this.Locale.DATE_FIELD_DELIMITER),g;if(k.length==2){g=[k[this.Locale.MD_MONTH_POSITION-1],k[this.Locale.MD_DAY_POSITION-1]];g.type=f.MONTH_DAY;}else{g=[k[this.Locale.MDY_YEAR_POSITION-1]-this.Locale.YEAR_OFFSET,k[this.Locale.MDY_MONTH_POSITION-1],k[this.Locale.MDY_DAY_POSITION-1]];g.type=f.DATE;}for(var h=0;h<g.length;h++){g[h]=parseInt(g[h],10);}return g;},_parseDates:function(h){var o=[],n=h.split(this.Locale.DATE_DELIMITER);for(var m=0;m<n.length;++m){var l=n[m];if(l.indexOf(this.Locale.DATE_RANGE_DELIMITER)!=-1){var g=l.split(this.Locale.DATE_RANGE_DELIMITER),k=this._parseDate(g[0]),p=this._parseDate(g[1]),j=this._parseRange(k,p);o=o.concat(j);}else{var i=this._parseDate(l);o.push(i);}}return o;},_parseRange:function(g,k){var h=d.add(d.getDate(g[0],g[1]-1,g[2]),d.DAY,1),j=d.getDate(k[0],k[1]-1,k[2]),i=[];i.push(g);while(h.getTime()<=j.getTime()){i.push([h.getFullYear(),h.getMonth()+1,h.getDate()]);h=d.add(h,d.DAY,1);}return i;},resetRenderers:function(){this.renderStack=this._renderStack.concat();},removeRenderers:function(){this._renderStack=[];this.renderStack=[];},clearElement:function(g){g.innerHTML="&#160;";g.className="";},addRenderer:function(g,h){var k=this._parseDates(g);for(var j=0;j<k.length;++j){var l=k[j];if(l.length==2){if(l[0] instanceof Array){this._addRenderer(f.RANGE,l,h);}else{this._addRenderer(f.MONTH_DAY,l,h);}}else{if(l.length==3){this._addRenderer(f.DATE,l,h);}}}},_addRenderer:function(h,i,g){var j=[h,i,g];
this.renderStack.unshift(j);this._renderStack=this.renderStack.concat();},addMonthRenderer:function(h,g){this._addRenderer(f.MONTH,[h],g);},addWeekdayRenderer:function(h,g){this._addRenderer(f.WEEKDAY,[h],g);},clearAllBodyCellStyles:function(g){for(var h=0;h<this.cells.length;++h){c.removeClass(this.cells[h],g);}},setMonth:function(i){var g=b.PAGEDATE.key,h=this.cfg.getProperty(g);h.setMonth(parseInt(i,10));this.cfg.setProperty(g,h);},setYear:function(h){var g=b.PAGEDATE.key,i=this.cfg.getProperty(g);i.setFullYear(parseInt(h,10)-this.Locale.YEAR_OFFSET);this.cfg.setProperty(g,i);},getSelectedDates:function(){var i=[],h=this.cfg.getProperty(b.SELECTED.key);for(var k=0;k<h.length;++k){var j=h[k];var g=d.getDate(j[0],j[1]-1,j[2]);i.push(g);}i.sort(function(m,l){return m-l;});return i;},hide:function(){if(this.beforeHideEvent.fire()){this.oDomContainer.style.display="none";this.hideEvent.fire();}},show:function(){if(this.beforeShowEvent.fire()){this.oDomContainer.style.display="block";this.showEvent.fire();}},browser:(function(){var g=navigator.userAgent.toLowerCase();if(g.indexOf("opera")!=-1){return"opera";}else{if(g.indexOf("msie 7")!=-1){return"ie7";}else{if(g.indexOf("msie")!=-1){return"ie";}else{if(g.indexOf("safari")!=-1){return"safari";}else{if(g.indexOf("gecko")!=-1){return"gecko";}else{return false;}}}}}})(),toString:function(){return"Calendar "+this.id;},destroy:function(){if(this.beforeDestroyEvent.fire()){var g=this;if(g.navigator){g.navigator.destroy();}if(g.cfg){g.cfg.destroy();}a.purgeElement(g.oDomContainer,true);c.removeClass(g.oDomContainer,g.Style.CSS_WITH_TITLE);c.removeClass(g.oDomContainer,g.Style.CSS_CONTAINER);c.removeClass(g.oDomContainer,g.Style.CSS_SINGLE);g.oDomContainer.innerHTML="";g.oDomContainer=null;g.cells=null;this.destroyEvent.fire();}}};YAHOO.widget.Calendar=f;YAHOO.widget.Calendar_Core=YAHOO.widget.Calendar;YAHOO.widget.Cal_Core=YAHOO.widget.Calendar;})();(function(){var d=YAHOO.util.Dom,f=YAHOO.widget.DateMath,a=YAHOO.util.Event,e=YAHOO.lang,g=YAHOO.widget.Calendar;function b(j,h,i){if(arguments.length>0){this.init.apply(this,arguments);}}b.DEFAULT_CONFIG=b._DEFAULT_CONFIG=g.DEFAULT_CONFIG;b.DEFAULT_CONFIG.PAGES={key:"pages",value:2};var c=b.DEFAULT_CONFIG;b.prototype={init:function(k,i,j){var h=this._parseArgs(arguments);k=h.id;i=h.container;j=h.config;this.oDomContainer=d.get(i);if(!this.oDomContainer.id){this.oDomContainer.id=d.generateId();}if(!k){k=this.oDomContainer.id+"_t";}this.id=k;this.containerId=this.oDomContainer.id;this.initEvents();this.initStyles();this.pages=[];d.addClass(this.oDomContainer,b.CSS_CONTAINER);d.addClass(this.oDomContainer,b.CSS_MULTI_UP);this.cfg=new YAHOO.util.Config(this);this.Options={};this.Locale={};this.setupConfig();if(j){this.cfg.applyConfig(j,true);}this.cfg.fireQueue();},setupConfig:function(){var h=this.cfg;h.addProperty(c.PAGES.key,{value:c.PAGES.value,validator:h.checkNumber,handler:this.configPages});h.addProperty(c.YEAR_OFFSET.key,{value:c.YEAR_OFFSET.value,handler:this.delegateConfig,supercedes:c.YEAR_OFFSET.supercedes,suppressEvent:true});h.addProperty(c.TODAY.key,{value:new Date(c.TODAY.value.getTime()),supercedes:c.TODAY.supercedes,handler:this.configToday,suppressEvent:false});h.addProperty(c.PAGEDATE.key,{value:c.PAGEDATE.value||new Date(c.TODAY.value.getTime()),handler:this.configPageDate});h.addProperty(c.SELECTED.key,{value:[],handler:this.configSelected});h.addProperty(c.TITLE.key,{value:c.TITLE.value,handler:this.configTitle});h.addProperty(c.CLOSE.key,{value:c.CLOSE.value,handler:this.configClose});h.addProperty(c.IFRAME.key,{value:c.IFRAME.value,handler:this.configIframe,validator:h.checkBoolean});h.addProperty(c.MINDATE.key,{value:c.MINDATE.value,handler:this.delegateConfig});h.addProperty(c.MAXDATE.key,{value:c.MAXDATE.value,handler:this.delegateConfig});h.addProperty(c.MULTI_SELECT.key,{value:c.MULTI_SELECT.value,handler:this.delegateConfig,validator:h.checkBoolean});h.addProperty(c.OOM_SELECT.key,{value:c.OOM_SELECT.value,handler:this.delegateConfig,validator:h.checkBoolean});h.addProperty(c.START_WEEKDAY.key,{value:c.START_WEEKDAY.value,handler:this.delegateConfig,validator:h.checkNumber});h.addProperty(c.SHOW_WEEKDAYS.key,{value:c.SHOW_WEEKDAYS.value,handler:this.delegateConfig,validator:h.checkBoolean});h.addProperty(c.SHOW_WEEK_HEADER.key,{value:c.SHOW_WEEK_HEADER.value,handler:this.delegateConfig,validator:h.checkBoolean});h.addProperty(c.SHOW_WEEK_FOOTER.key,{value:c.SHOW_WEEK_FOOTER.value,handler:this.delegateConfig,validator:h.checkBoolean});h.addProperty(c.HIDE_BLANK_WEEKS.key,{value:c.HIDE_BLANK_WEEKS.value,handler:this.delegateConfig,validator:h.checkBoolean});h.addProperty(c.NAV_ARROW_LEFT.key,{value:c.NAV_ARROW_LEFT.value,handler:this.delegateConfig});h.addProperty(c.NAV_ARROW_RIGHT.key,{value:c.NAV_ARROW_RIGHT.value,handler:this.delegateConfig});h.addProperty(c.MONTHS_SHORT.key,{value:c.MONTHS_SHORT.value,handler:this.delegateConfig});h.addProperty(c.MONTHS_LONG.key,{value:c.MONTHS_LONG.value,handler:this.delegateConfig});h.addProperty(c.WEEKDAYS_1CHAR.key,{value:c.WEEKDAYS_1CHAR.value,handler:this.delegateConfig});h.addProperty(c.WEEKDAYS_SHORT.key,{value:c.WEEKDAYS_SHORT.value,handler:this.delegateConfig});h.addProperty(c.WEEKDAYS_MEDIUM.key,{value:c.WEEKDAYS_MEDIUM.value,handler:this.delegateConfig});h.addProperty(c.WEEKDAYS_LONG.key,{value:c.WEEKDAYS_LONG.value,handler:this.delegateConfig});h.addProperty(c.LOCALE_MONTHS.key,{value:c.LOCALE_MONTHS.value,handler:this.delegateConfig});h.addProperty(c.LOCALE_WEEKDAYS.key,{value:c.LOCALE_WEEKDAYS.value,handler:this.delegateConfig});h.addProperty(c.DATE_DELIMITER.key,{value:c.DATE_DELIMITER.value,handler:this.delegateConfig});h.addProperty(c.DATE_FIELD_DELIMITER.key,{value:c.DATE_FIELD_DELIMITER.value,handler:this.delegateConfig});h.addProperty(c.DATE_RANGE_DELIMITER.key,{value:c.DATE_RANGE_DELIMITER.value,handler:this.delegateConfig});h.addProperty(c.MY_MONTH_POSITION.key,{value:c.MY_MONTH_POSITION.value,handler:this.delegateConfig,validator:h.checkNumber});
h.addProperty(c.MY_YEAR_POSITION.key,{value:c.MY_YEAR_POSITION.value,handler:this.delegateConfig,validator:h.checkNumber});h.addProperty(c.MD_MONTH_POSITION.key,{value:c.MD_MONTH_POSITION.value,handler:this.delegateConfig,validator:h.checkNumber});h.addProperty(c.MD_DAY_POSITION.key,{value:c.MD_DAY_POSITION.value,handler:this.delegateConfig,validator:h.checkNumber});h.addProperty(c.MDY_MONTH_POSITION.key,{value:c.MDY_MONTH_POSITION.value,handler:this.delegateConfig,validator:h.checkNumber});h.addProperty(c.MDY_DAY_POSITION.key,{value:c.MDY_DAY_POSITION.value,handler:this.delegateConfig,validator:h.checkNumber});h.addProperty(c.MDY_YEAR_POSITION.key,{value:c.MDY_YEAR_POSITION.value,handler:this.delegateConfig,validator:h.checkNumber});h.addProperty(c.MY_LABEL_MONTH_POSITION.key,{value:c.MY_LABEL_MONTH_POSITION.value,handler:this.delegateConfig,validator:h.checkNumber});h.addProperty(c.MY_LABEL_YEAR_POSITION.key,{value:c.MY_LABEL_YEAR_POSITION.value,handler:this.delegateConfig,validator:h.checkNumber});h.addProperty(c.MY_LABEL_MONTH_SUFFIX.key,{value:c.MY_LABEL_MONTH_SUFFIX.value,handler:this.delegateConfig});h.addProperty(c.MY_LABEL_YEAR_SUFFIX.key,{value:c.MY_LABEL_YEAR_SUFFIX.value,handler:this.delegateConfig});h.addProperty(c.NAV.key,{value:c.NAV.value,handler:this.configNavigator});h.addProperty(c.STRINGS.key,{value:c.STRINGS.value,handler:this.configStrings,validator:function(i){return e.isObject(i);},supercedes:c.STRINGS.supercedes});},initEvents:function(){var j=this,l="Event",m=YAHOO.util.CustomEvent;var i=function(o,s,n){for(var r=0;r<j.pages.length;++r){var q=j.pages[r];q[this.type+l].subscribe(o,s,n);}};var h=function(n,r){for(var q=0;q<j.pages.length;++q){var o=j.pages[q];o[this.type+l].unsubscribe(n,r);}};var k=g._EVENT_TYPES;j.beforeSelectEvent=new m(k.BEFORE_SELECT);j.beforeSelectEvent.subscribe=i;j.beforeSelectEvent.unsubscribe=h;j.selectEvent=new m(k.SELECT);j.selectEvent.subscribe=i;j.selectEvent.unsubscribe=h;j.beforeDeselectEvent=new m(k.BEFORE_DESELECT);j.beforeDeselectEvent.subscribe=i;j.beforeDeselectEvent.unsubscribe=h;j.deselectEvent=new m(k.DESELECT);j.deselectEvent.subscribe=i;j.deselectEvent.unsubscribe=h;j.changePageEvent=new m(k.CHANGE_PAGE);j.changePageEvent.subscribe=i;j.changePageEvent.unsubscribe=h;j.beforeRenderEvent=new m(k.BEFORE_RENDER);j.beforeRenderEvent.subscribe=i;j.beforeRenderEvent.unsubscribe=h;j.renderEvent=new m(k.RENDER);j.renderEvent.subscribe=i;j.renderEvent.unsubscribe=h;j.resetEvent=new m(k.RESET);j.resetEvent.subscribe=i;j.resetEvent.unsubscribe=h;j.clearEvent=new m(k.CLEAR);j.clearEvent.subscribe=i;j.clearEvent.unsubscribe=h;j.beforeShowEvent=new m(k.BEFORE_SHOW);j.showEvent=new m(k.SHOW);j.beforeHideEvent=new m(k.BEFORE_HIDE);j.hideEvent=new m(k.HIDE);j.beforeShowNavEvent=new m(k.BEFORE_SHOW_NAV);j.showNavEvent=new m(k.SHOW_NAV);j.beforeHideNavEvent=new m(k.BEFORE_HIDE_NAV);j.hideNavEvent=new m(k.HIDE_NAV);j.beforeRenderNavEvent=new m(k.BEFORE_RENDER_NAV);j.renderNavEvent=new m(k.RENDER_NAV);j.beforeDestroyEvent=new m(k.BEFORE_DESTROY);j.destroyEvent=new m(k.DESTROY);},configPages:function(u,s,n){var l=s[0],j=c.PAGEDATE.key,x="_",m,o=null,t="groupcal",w="first-of-type",k="last-of-type";for(var i=0;i<l;++i){var v=this.id+x+i,r=this.containerId+x+i,q=this.cfg.getConfig();q.close=false;q.title=false;q.navigator=null;if(i>0){m=new Date(o);this._setMonthOnDate(m,m.getMonth()+i);q.pageDate=m;}var h=this.constructChild(v,r,q);d.removeClass(h.oDomContainer,this.Style.CSS_SINGLE);d.addClass(h.oDomContainer,t);if(i===0){o=h.cfg.getProperty(j);d.addClass(h.oDomContainer,w);}if(i==(l-1)){d.addClass(h.oDomContainer,k);}h.parent=this;h.index=i;this.pages[this.pages.length]=h;}},configPageDate:function(o,n,l){var j=n[0],m;var k=c.PAGEDATE.key;for(var i=0;i<this.pages.length;++i){var h=this.pages[i];if(i===0){m=h._parsePageDate(j);h.cfg.setProperty(k,m);}else{var q=new Date(m);this._setMonthOnDate(q,q.getMonth()+i);h.cfg.setProperty(k,q);}}},configSelected:function(j,h,l){var k=c.SELECTED.key;this.delegateConfig(j,h,l);var i=(this.pages.length>0)?this.pages[0].cfg.getProperty(k):[];this.cfg.setProperty(k,i,true);},delegateConfig:function(i,h,l){var m=h[0];var k;for(var j=0;j<this.pages.length;j++){k=this.pages[j];k.cfg.setProperty(i,m);}},setChildFunction:function(k,i){var h=this.cfg.getProperty(c.PAGES.key);for(var j=0;j<h;++j){this.pages[j][k]=i;}},callChildFunction:function(m,i){var h=this.cfg.getProperty(c.PAGES.key);for(var l=0;l<h;++l){var k=this.pages[l];if(k[m]){var j=k[m];j.call(k,i);}}},constructChild:function(k,i,j){var h=document.getElementById(i);if(!h){h=document.createElement("div");h.id=i;this.oDomContainer.appendChild(h);}return new g(k,i,j);},setMonth:function(l){l=parseInt(l,10);var m;var i=c.PAGEDATE.key;for(var k=0;k<this.pages.length;++k){var j=this.pages[k];var h=j.cfg.getProperty(i);if(k===0){m=h.getFullYear();}else{h.setFullYear(m);}this._setMonthOnDate(h,l+k);j.cfg.setProperty(i,h);}},setYear:function(j){var i=c.PAGEDATE.key;j=parseInt(j,10);for(var l=0;l<this.pages.length;++l){var k=this.pages[l];var h=k.cfg.getProperty(i);if((h.getMonth()+1)==1&&l>0){j+=1;}k.setYear(j);}},render:function(){this.renderHeader();for(var i=0;i<this.pages.length;++i){var h=this.pages[i];h.render();}this.renderFooter();},select:function(h){for(var j=0;j<this.pages.length;++j){var i=this.pages[j];i.select(h);}return this.getSelectedDates();},selectCell:function(h){for(var j=0;j<this.pages.length;++j){var i=this.pages[j];i.selectCell(h);}return this.getSelectedDates();},deselect:function(h){for(var j=0;j<this.pages.length;++j){var i=this.pages[j];i.deselect(h);}return this.getSelectedDates();},deselectAll:function(){for(var i=0;i<this.pages.length;++i){var h=this.pages[i];h.deselectAll();}return this.getSelectedDates();},deselectCell:function(h){for(var j=0;j<this.pages.length;++j){var i=this.pages[j];i.deselectCell(h);}return this.getSelectedDates();},reset:function(){for(var i=0;i<this.pages.length;++i){var h=this.pages[i];h.reset();}},clear:function(){for(var i=0;
i<this.pages.length;++i){var h=this.pages[i];h.clear();}this.cfg.setProperty(c.SELECTED.key,[]);this.cfg.setProperty(c.PAGEDATE.key,new Date(this.pages[0].today.getTime()));this.render();},nextMonth:function(){for(var i=0;i<this.pages.length;++i){var h=this.pages[i];h.nextMonth();}},previousMonth:function(){for(var i=this.pages.length-1;i>=0;--i){var h=this.pages[i];h.previousMonth();}},nextYear:function(){for(var i=0;i<this.pages.length;++i){var h=this.pages[i];h.nextYear();}},previousYear:function(){for(var i=0;i<this.pages.length;++i){var h=this.pages[i];h.previousYear();}},getSelectedDates:function(){var j=[];var i=this.cfg.getProperty(c.SELECTED.key);for(var l=0;l<i.length;++l){var k=i[l];var h=f.getDate(k[0],k[1]-1,k[2]);j.push(h);}j.sort(function(n,m){return n-m;});return j;},addRenderer:function(h,i){for(var k=0;k<this.pages.length;++k){var j=this.pages[k];j.addRenderer(h,i);}},addMonthRenderer:function(k,h){for(var j=0;j<this.pages.length;++j){var i=this.pages[j];i.addMonthRenderer(k,h);}},addWeekdayRenderer:function(i,h){for(var k=0;k<this.pages.length;++k){var j=this.pages[k];j.addWeekdayRenderer(i,h);}},removeRenderers:function(){this.callChildFunction("removeRenderers");},renderHeader:function(){},renderFooter:function(){},addMonths:function(h){this.callChildFunction("addMonths",h);},subtractMonths:function(h){this.callChildFunction("subtractMonths",h);},addYears:function(h){this.callChildFunction("addYears",h);},subtractYears:function(h){this.callChildFunction("subtractYears",h);},getCalendarPage:function(l){var o=null;if(l){var p=l.getFullYear(),k=l.getMonth();var j=this.pages;for(var n=0;n<j.length;++n){var h=j[n].cfg.getProperty("pagedate");if(h.getFullYear()===p&&h.getMonth()===k){o=j[n];break;}}}return o;},_setMonthOnDate:function(i,j){if(YAHOO.env.ua.webkit&&YAHOO.env.ua.webkit<420&&(j<0||j>11)){var h=f.add(i,f.MONTH,j-i.getMonth());i.setTime(h.getTime());}else{i.setMonth(j);}},_fixWidth:function(){var h=0;for(var j=0;j<this.pages.length;++j){var i=this.pages[j];h+=i.oDomContainer.offsetWidth;}if(h>0){this.oDomContainer.style.width=h+"px";}},toString:function(){return"CalendarGroup "+this.id;},destroy:function(){if(this.beforeDestroyEvent.fire()){var k=this;if(k.navigator){k.navigator.destroy();}if(k.cfg){k.cfg.destroy();}a.purgeElement(k.oDomContainer,true);d.removeClass(k.oDomContainer,b.CSS_CONTAINER);d.removeClass(k.oDomContainer,b.CSS_MULTI_UP);for(var j=0,h=k.pages.length;j<h;j++){k.pages[j].destroy();k.pages[j]=null;}k.oDomContainer.innerHTML="";k.oDomContainer=null;this.destroyEvent.fire();}}};b.CSS_CONTAINER="yui-calcontainer";b.CSS_MULTI_UP="multi";b.CSS_2UPTITLE="title";b.CSS_2UPCLOSE="close-icon";YAHOO.lang.augmentProto(b,g,"buildDayLabel","buildMonthLabel","renderOutOfBoundsDate","renderRowHeader","renderRowFooter","renderCellDefault","styleCellDefault","renderCellStyleHighlight1","renderCellStyleHighlight2","renderCellStyleHighlight3","renderCellStyleHighlight4","renderCellStyleToday","renderCellStyleSelected","renderCellNotThisMonth","styleCellNotThisMonth","renderBodyCellRestricted","initStyles","configTitle","configClose","configIframe","configStrings","configToday","configNavigator","createTitleBar","createCloseButton","removeTitleBar","removeCloseButton","hide","show","toDate","_toDate","_parseArgs","browser");YAHOO.widget.CalGrp=b;YAHOO.widget.CalendarGroup=b;YAHOO.widget.Calendar2up=function(j,h,i){this.init(j,h,i);};YAHOO.extend(YAHOO.widget.Calendar2up,b);YAHOO.widget.Cal2up=YAHOO.widget.Calendar2up;})();YAHOO.widget.CalendarNavigator=function(a){this.init(a);};(function(){var a=YAHOO.widget.CalendarNavigator;a.CLASSES={NAV:"yui-cal-nav",NAV_VISIBLE:"yui-cal-nav-visible",MASK:"yui-cal-nav-mask",YEAR:"yui-cal-nav-y",MONTH:"yui-cal-nav-m",BUTTONS:"yui-cal-nav-b",BUTTON:"yui-cal-nav-btn",ERROR:"yui-cal-nav-e",YEAR_CTRL:"yui-cal-nav-yc",MONTH_CTRL:"yui-cal-nav-mc",INVALID:"yui-invalid",DEFAULT:"yui-default"};a.DEFAULT_CONFIG={strings:{month:"Month",year:"Year",submit:"Okay",cancel:"Cancel",invalidYear:"Year needs to be a number"},monthFormat:YAHOO.widget.Calendar.LONG,initialFocus:"year"};a._DEFAULT_CFG=a.DEFAULT_CONFIG;a.ID_SUFFIX="_nav";a.MONTH_SUFFIX="_month";a.YEAR_SUFFIX="_year";a.ERROR_SUFFIX="_error";a.CANCEL_SUFFIX="_cancel";a.SUBMIT_SUFFIX="_submit";a.YR_MAX_DIGITS=4;a.YR_MINOR_INC=1;a.YR_MAJOR_INC=10;a.UPDATE_DELAY=50;a.YR_PATTERN=/^\d+$/;a.TRIM=/^\s*(.*?)\s*$/;})();YAHOO.widget.CalendarNavigator.prototype={id:null,cal:null,navEl:null,maskEl:null,yearEl:null,monthEl:null,errorEl:null,submitEl:null,cancelEl:null,firstCtrl:null,lastCtrl:null,_doc:null,_year:null,_month:0,__rendered:false,init:function(a){var c=a.oDomContainer;this.cal=a;this.id=c.id+YAHOO.widget.CalendarNavigator.ID_SUFFIX;this._doc=c.ownerDocument;var b=YAHOO.env.ua.ie;this.__isIEQuirks=(b&&((b<=6)||(this._doc.compatMode=="BackCompat")));},show:function(){var a=YAHOO.widget.CalendarNavigator.CLASSES;if(this.cal.beforeShowNavEvent.fire()){if(!this.__rendered){this.render();}this.clearErrors();this._updateMonthUI();this._updateYearUI();this._show(this.navEl,true);this.setInitialFocus();this.showMask();YAHOO.util.Dom.addClass(this.cal.oDomContainer,a.NAV_VISIBLE);this.cal.showNavEvent.fire();}},hide:function(){var a=YAHOO.widget.CalendarNavigator.CLASSES;if(this.cal.beforeHideNavEvent.fire()){this._show(this.navEl,false);this.hideMask();YAHOO.util.Dom.removeClass(this.cal.oDomContainer,a.NAV_VISIBLE);this.cal.hideNavEvent.fire();}},showMask:function(){this._show(this.maskEl,true);if(this.__isIEQuirks){this._syncMask();}},hideMask:function(){this._show(this.maskEl,false);},getMonth:function(){return this._month;},getYear:function(){return this._year;},setMonth:function(a){if(a>=0&&a<12){this._month=a;}this._updateMonthUI();},setYear:function(b){var a=YAHOO.widget.CalendarNavigator.YR_PATTERN;if(YAHOO.lang.isNumber(b)&&a.test(b+"")){this._year=b;}this._updateYearUI();},render:function(){this.cal.beforeRenderNavEvent.fire();if(!this.__rendered){this.createNav();this.createMask();this.applyListeners();
this.__rendered=true;}this.cal.renderNavEvent.fire();},createNav:function(){var b=YAHOO.widget.CalendarNavigator;var c=this._doc;var e=c.createElement("div");e.className=b.CLASSES.NAV;var a=this.renderNavContents([]);e.innerHTML=a.join("");this.cal.oDomContainer.appendChild(e);this.navEl=e;this.yearEl=c.getElementById(this.id+b.YEAR_SUFFIX);this.monthEl=c.getElementById(this.id+b.MONTH_SUFFIX);this.errorEl=c.getElementById(this.id+b.ERROR_SUFFIX);this.submitEl=c.getElementById(this.id+b.SUBMIT_SUFFIX);this.cancelEl=c.getElementById(this.id+b.CANCEL_SUFFIX);if(YAHOO.env.ua.gecko&&this.yearEl&&this.yearEl.type=="text"){this.yearEl.setAttribute("autocomplete","off");}this._setFirstLastElements();},createMask:function(){var b=YAHOO.widget.CalendarNavigator.CLASSES;var a=this._doc.createElement("div");a.className=b.MASK;this.cal.oDomContainer.appendChild(a);this.maskEl=a;},_syncMask:function(){var b=this.cal.oDomContainer;if(b&&this.maskEl){var a=YAHOO.util.Dom.getRegion(b);YAHOO.util.Dom.setStyle(this.maskEl,"width",a.right-a.left+"px");YAHOO.util.Dom.setStyle(this.maskEl,"height",a.bottom-a.top+"px");}},renderNavContents:function(a){var c=YAHOO.widget.CalendarNavigator,d=c.CLASSES,b=a;b[b.length]='<div class="'+d.MONTH+'">';this.renderMonth(b);b[b.length]="</div>";b[b.length]='<div class="'+d.YEAR+'">';this.renderYear(b);b[b.length]="</div>";b[b.length]='<div class="'+d.BUTTONS+'">';this.renderButtons(b);b[b.length]="</div>";b[b.length]='<div class="'+d.ERROR+'" id="'+this.id+c.ERROR_SUFFIX+'"></div>';return b;},renderMonth:function(c){var f=YAHOO.widget.CalendarNavigator,g=f.CLASSES;var j=this.id+f.MONTH_SUFFIX,e=this.__getCfg("monthFormat"),a=this.cal.cfg.getProperty((e==YAHOO.widget.Calendar.SHORT)?"MONTHS_SHORT":"MONTHS_LONG"),d=c;if(a&&a.length>0){d[d.length]='<label for="'+j+'">';d[d.length]=this.__getCfg("month",true);d[d.length]="</label>";d[d.length]='<select name="'+j+'" id="'+j+'" class="'+g.MONTH_CTRL+'">';for(var b=0;b<a.length;b++){d[d.length]='<option value="'+b+'">';d[d.length]=a[b];d[d.length]="</option>";}d[d.length]="</select>";}return d;},renderYear:function(b){var d=YAHOO.widget.CalendarNavigator,e=d.CLASSES;var f=this.id+d.YEAR_SUFFIX,a=d.YR_MAX_DIGITS,c=b;c[c.length]='<label for="'+f+'">';c[c.length]=this.__getCfg("year",true);c[c.length]="</label>";c[c.length]='<input type="text" name="'+f+'" id="'+f+'" class="'+e.YEAR_CTRL+'" maxlength="'+a+'"/>';return c;},renderButtons:function(a){var c=YAHOO.widget.CalendarNavigator.CLASSES;var b=a;b[b.length]='<span class="'+c.BUTTON+" "+c.DEFAULT+'">';b[b.length]='<button type="button" id="'+this.id+"_submit"+'">';b[b.length]=this.__getCfg("submit",true);b[b.length]="</button>";b[b.length]="</span>";b[b.length]='<span class="'+c.BUTTON+'">';b[b.length]='<button type="button" id="'+this.id+"_cancel"+'">';b[b.length]=this.__getCfg("cancel",true);b[b.length]="</button>";b[b.length]="</span>";return b;},applyListeners:function(){var b=YAHOO.util.Event;function a(){if(this.validate()){this.setYear(this._getYearFromUI());}}function c(){this.setMonth(this._getMonthFromUI());}b.on(this.submitEl,"click",this.submit,this,true);b.on(this.cancelEl,"click",this.cancel,this,true);b.on(this.yearEl,"blur",a,this,true);b.on(this.monthEl,"change",c,this,true);if(this.__isIEQuirks){YAHOO.util.Event.on(this.cal.oDomContainer,"resize",this._syncMask,this,true);}this.applyKeyListeners();},purgeListeners:function(){var a=YAHOO.util.Event;a.removeListener(this.submitEl,"click",this.submit);a.removeListener(this.cancelEl,"click",this.cancel);a.removeListener(this.yearEl,"blur");a.removeListener(this.monthEl,"change");if(this.__isIEQuirks){a.removeListener(this.cal.oDomContainer,"resize",this._syncMask);}this.purgeKeyListeners();},applyKeyListeners:function(){var d=YAHOO.util.Event,a=YAHOO.env.ua;var c=(a.ie||a.webkit)?"keydown":"keypress";var b=(a.ie||a.opera||a.webkit)?"keydown":"keypress";d.on(this.yearEl,"keypress",this._handleEnterKey,this,true);d.on(this.yearEl,c,this._handleDirectionKeys,this,true);d.on(this.lastCtrl,b,this._handleTabKey,this,true);d.on(this.firstCtrl,b,this._handleShiftTabKey,this,true);},purgeKeyListeners:function(){var d=YAHOO.util.Event,a=YAHOO.env.ua;var c=(a.ie||a.webkit)?"keydown":"keypress";var b=(a.ie||a.opera||a.webkit)?"keydown":"keypress";d.removeListener(this.yearEl,"keypress",this._handleEnterKey);d.removeListener(this.yearEl,c,this._handleDirectionKeys);d.removeListener(this.lastCtrl,b,this._handleTabKey);d.removeListener(this.firstCtrl,b,this._handleShiftTabKey);},submit:function(){if(this.validate()){this.hide();this.setMonth(this._getMonthFromUI());this.setYear(this._getYearFromUI());var b=this.cal;var a=YAHOO.widget.CalendarNavigator.UPDATE_DELAY;if(a>0){var c=this;window.setTimeout(function(){c._update(b);},a);}else{this._update(b);}}},_update:function(b){var a=YAHOO.widget.DateMath.getDate(this.getYear()-b.cfg.getProperty("YEAR_OFFSET"),this.getMonth(),1);b.cfg.setProperty("pagedate",a);b.render();},cancel:function(){this.hide();},validate:function(){if(this._getYearFromUI()!==null){this.clearErrors();return true;}else{this.setYearError();this.setError(this.__getCfg("invalidYear",true));return false;}},setError:function(a){if(this.errorEl){this.errorEl.innerHTML=a;this._show(this.errorEl,true);}},clearError:function(){if(this.errorEl){this.errorEl.innerHTML="";this._show(this.errorEl,false);}},setYearError:function(){YAHOO.util.Dom.addClass(this.yearEl,YAHOO.widget.CalendarNavigator.CLASSES.INVALID);},clearYearError:function(){YAHOO.util.Dom.removeClass(this.yearEl,YAHOO.widget.CalendarNavigator.CLASSES.INVALID);},clearErrors:function(){this.clearError();this.clearYearError();},setInitialFocus:function(){var a=this.submitEl,c=this.__getCfg("initialFocus");if(c&&c.toLowerCase){c=c.toLowerCase();if(c=="year"){a=this.yearEl;try{this.yearEl.select();}catch(b){}}else{if(c=="month"){a=this.monthEl;}}}if(a&&YAHOO.lang.isFunction(a.focus)){try{a.focus();}catch(d){}}},erase:function(){if(this.__rendered){this.purgeListeners();
this.yearEl=null;this.monthEl=null;this.errorEl=null;this.submitEl=null;this.cancelEl=null;this.firstCtrl=null;this.lastCtrl=null;if(this.navEl){this.navEl.innerHTML="";}var b=this.navEl.parentNode;if(b){b.removeChild(this.navEl);}this.navEl=null;var a=this.maskEl.parentNode;if(a){a.removeChild(this.maskEl);}this.maskEl=null;this.__rendered=false;}},destroy:function(){this.erase();this._doc=null;this.cal=null;this.id=null;},_show:function(b,a){if(b){YAHOO.util.Dom.setStyle(b,"display",(a)?"block":"none");}},_getMonthFromUI:function(){if(this.monthEl){return this.monthEl.selectedIndex;}else{return 0;}},_getYearFromUI:function(){var b=YAHOO.widget.CalendarNavigator;var a=null;if(this.yearEl){var c=this.yearEl.value;c=c.replace(b.TRIM,"$1");if(b.YR_PATTERN.test(c)){a=parseInt(c,10);}}return a;},_updateYearUI:function(){if(this.yearEl&&this._year!==null){this.yearEl.value=this._year;}},_updateMonthUI:function(){if(this.monthEl){this.monthEl.selectedIndex=this._month;}},_setFirstLastElements:function(){this.firstCtrl=this.monthEl;this.lastCtrl=this.cancelEl;if(this.__isMac){if(YAHOO.env.ua.webkit&&YAHOO.env.ua.webkit<420){this.firstCtrl=this.monthEl;this.lastCtrl=this.yearEl;}if(YAHOO.env.ua.gecko){this.firstCtrl=this.yearEl;this.lastCtrl=this.yearEl;}}},_handleEnterKey:function(b){var a=YAHOO.util.KeyListener.KEY;if(YAHOO.util.Event.getCharCode(b)==a.ENTER){YAHOO.util.Event.preventDefault(b);this.submit();}},_handleDirectionKeys:function(h){var g=YAHOO.util.Event,a=YAHOO.util.KeyListener.KEY,d=YAHOO.widget.CalendarNavigator;var f=(this.yearEl.value)?parseInt(this.yearEl.value,10):null;if(isFinite(f)){var b=false;switch(g.getCharCode(h)){case a.UP:this.yearEl.value=f+d.YR_MINOR_INC;b=true;break;case a.DOWN:this.yearEl.value=Math.max(f-d.YR_MINOR_INC,0);b=true;break;case a.PAGE_UP:this.yearEl.value=f+d.YR_MAJOR_INC;b=true;break;case a.PAGE_DOWN:this.yearEl.value=Math.max(f-d.YR_MAJOR_INC,0);b=true;break;default:break;}if(b){g.preventDefault(h);try{this.yearEl.select();}catch(c){}}}},_handleTabKey:function(d){var c=YAHOO.util.Event,a=YAHOO.util.KeyListener.KEY;if(c.getCharCode(d)==a.TAB&&!d.shiftKey){try{c.preventDefault(d);this.firstCtrl.focus();}catch(b){}}},_handleShiftTabKey:function(d){var c=YAHOO.util.Event,a=YAHOO.util.KeyListener.KEY;if(d.shiftKey&&c.getCharCode(d)==a.TAB){try{c.preventDefault(d);this.lastCtrl.focus();}catch(b){}}},__getCfg:function(d,b){var c=YAHOO.widget.CalendarNavigator.DEFAULT_CONFIG;var a=this.cal.cfg.getProperty("navigator");if(b){return(a!==true&&a.strings&&a.strings[d])?a.strings[d]:c.strings[d];}else{return(a!==true&&a[d])?a[d]:c[d];}},__isMac:(navigator.userAgent.toLowerCase().indexOf("macintosh")!=-1)};YAHOO.register("calendar",YAHOO.widget.Calendar,{version:"2.9.0",build:"2800"});

/********* ../yui/slider/slider-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){var B=YAHOO.util.Dom.getXY,A=YAHOO.util.Event,D=Array.prototype.slice;function C(G,E,F,H){C.ANIM_AVAIL=(!YAHOO.lang.isUndefined(YAHOO.util.Anim));if(G){this.init(G,E,true);this.initSlider(H);this.initThumb(F);}}YAHOO.lang.augmentObject(C,{getHorizSlider:function(F,G,I,H,E){return new C(F,F,new YAHOO.widget.SliderThumb(G,F,I,H,0,0,E),"horiz");},getVertSlider:function(G,H,E,I,F){return new C(G,G,new YAHOO.widget.SliderThumb(H,G,0,0,E,I,F),"vert");},getSliderRegion:function(G,H,J,I,E,K,F){return new C(G,G,new YAHOO.widget.SliderThumb(H,G,J,I,E,K,F),"region");},SOURCE_UI_EVENT:1,SOURCE_SET_VALUE:2,SOURCE_KEY_EVENT:3,ANIM_AVAIL:false},true);YAHOO.extend(C,YAHOO.util.DragDrop,{_mouseDown:false,dragOnly:true,initSlider:function(E){this.type=E;this.createEvent("change",this);this.createEvent("slideStart",this);this.createEvent("slideEnd",this);this.isTarget=false;this.animate=C.ANIM_AVAIL;this.backgroundEnabled=true;this.tickPause=40;this.enableKeys=true;this.keyIncrement=20;this.moveComplete=true;this.animationDuration=0.2;this.SOURCE_UI_EVENT=1;this.SOURCE_SET_VALUE=2;this.valueChangeSource=0;this._silent=false;this.lastOffset=[0,0];},initThumb:function(F){var E=this;this.thumb=F;F.cacheBetweenDrags=true;if(F._isHoriz&&F.xTicks&&F.xTicks.length){this.tickPause=Math.round(360/F.xTicks.length);}else{if(F.yTicks&&F.yTicks.length){this.tickPause=Math.round(360/F.yTicks.length);}}F.onAvailable=function(){return E.setStartSliderState();};F.onMouseDown=function(){E._mouseDown=true;return E.focus();};F.startDrag=function(){E._slideStart();};F.onDrag=function(){E.fireEvents(true);};F.onMouseUp=function(){E.thumbMouseUp();};},onAvailable:function(){this._bindKeyEvents();},_bindKeyEvents:function(){A.on(this.id,"keydown",this.handleKeyDown,this,true);A.on(this.id,"keypress",this.handleKeyPress,this,true);},handleKeyPress:function(F){if(this.enableKeys){var E=A.getCharCode(F);switch(E){case 37:case 38:case 39:case 40:case 36:case 35:A.preventDefault(F);break;default:}}},handleKeyDown:function(J){if(this.enableKeys){var G=A.getCharCode(J),F=this.thumb,H=this.getXValue(),E=this.getYValue(),I=true;switch(G){case 37:H-=this.keyIncrement;break;case 38:E-=this.keyIncrement;break;case 39:H+=this.keyIncrement;break;case 40:E+=this.keyIncrement;break;case 36:H=F.leftConstraint;E=F.topConstraint;break;case 35:H=F.rightConstraint;E=F.bottomConstraint;break;default:I=false;}if(I){if(F._isRegion){this._setRegionValue(C.SOURCE_KEY_EVENT,H,E,true);}else{this._setValue(C.SOURCE_KEY_EVENT,(F._isHoriz?H:E),true);}A.stopEvent(J);}}},setStartSliderState:function(){this.setThumbCenterPoint();this.baselinePos=B(this.getEl());this.thumb.startOffset=this.thumb.getOffsetFromParent(this.baselinePos);if(this.thumb._isRegion){if(this.deferredSetRegionValue){this._setRegionValue.apply(this,this.deferredSetRegionValue);this.deferredSetRegionValue=null;}else{this.setRegionValue(0,0,true,true,true);}}else{if(this.deferredSetValue){this._setValue.apply(this,this.deferredSetValue);this.deferredSetValue=null;}else{this.setValue(0,true,true,true);}}},setThumbCenterPoint:function(){var E=this.thumb.getEl();if(E){this.thumbCenterPoint={x:parseInt(E.offsetWidth/2,10),y:parseInt(E.offsetHeight/2,10)};}},lock:function(){this.thumb.lock();this.locked=true;},unlock:function(){this.thumb.unlock();this.locked=false;},thumbMouseUp:function(){this._mouseDown=false;if(!this.isLocked()){this.endMove();}},onMouseUp:function(){this._mouseDown=false;if(this.backgroundEnabled&&!this.isLocked()){this.endMove();}},getThumb:function(){return this.thumb;},focus:function(){this.valueChangeSource=C.SOURCE_UI_EVENT;var E=this.getEl();if(E.focus){try{E.focus();}catch(F){}}this.verifyOffset();return !this.isLocked();},onChange:function(E,F){},onSlideStart:function(){},onSlideEnd:function(){},getValue:function(){return this.thumb.getValue();},getXValue:function(){return this.thumb.getXValue();},getYValue:function(){return this.thumb.getYValue();},setValue:function(){var E=D.call(arguments);E.unshift(C.SOURCE_SET_VALUE);return this._setValue.apply(this,E);},_setValue:function(I,L,G,H,E){var F=this.thumb,K,J;if(!F.available){this.deferredSetValue=arguments;return false;}if(this.isLocked()&&!H){return false;}if(isNaN(L)){return false;}if(F._isRegion){return false;}this._silent=E;this.valueChangeSource=I||C.SOURCE_SET_VALUE;F.lastOffset=[L,L];this.verifyOffset();this._slideStart();if(F._isHoriz){K=F.initPageX+L+this.thumbCenterPoint.x;this.moveThumb(K,F.initPageY,G);}else{J=F.initPageY+L+this.thumbCenterPoint.y;this.moveThumb(F.initPageX,J,G);}return true;},setRegionValue:function(){var E=D.call(arguments);E.unshift(C.SOURCE_SET_VALUE);return this._setRegionValue.apply(this,E);},_setRegionValue:function(F,J,H,I,G,K){var L=this.thumb,E,M;if(!L.available){this.deferredSetRegionValue=arguments;return false;}if(this.isLocked()&&!G){return false;}if(isNaN(J)){return false;}if(!L._isRegion){return false;}this._silent=K;this.valueChangeSource=F||C.SOURCE_SET_VALUE;L.lastOffset=[J,H];this.verifyOffset();this._slideStart();E=L.initPageX+J+this.thumbCenterPoint.x;M=L.initPageY+H+this.thumbCenterPoint.y;this.moveThumb(E,M,I);return true;},verifyOffset:function(){var F=B(this.getEl()),E=this.thumb;if(!this.thumbCenterPoint||!this.thumbCenterPoint.x){this.setThumbCenterPoint();}if(F){if(F[0]!=this.baselinePos[0]||F[1]!=this.baselinePos[1]){this.setInitPosition();this.baselinePos=F;E.initPageX=this.initPageX+E.startOffset[0];E.initPageY=this.initPageY+E.startOffset[1];E.deltaSetXY=null;this.resetThumbConstraints();return false;}}return true;},moveThumb:function(K,J,I,G){var L=this.thumb,M=this,F,E,H;if(!L.available){return;}L.setDelta(this.thumbCenterPoint.x,this.thumbCenterPoint.y);E=L.getTargetCoord(K,J);F=[Math.round(E.x),Math.round(E.y)];if(this.animate&&L._graduated&&!I){this.lock();this.curCoord=B(this.thumb.getEl());this.curCoord=[Math.round(this.curCoord[0]),Math.round(this.curCoord[1])];setTimeout(function(){M.moveOneTick(F);},this.tickPause);}else{if(this.animate&&C.ANIM_AVAIL&&!I){this.lock();
H=new YAHOO.util.Motion(L.id,{points:{to:F}},this.animationDuration,YAHOO.util.Easing.easeOut);H.onComplete.subscribe(function(){M.unlock();if(!M._mouseDown){M.endMove();}});H.animate();}else{L.setDragElPos(K,J);if(!G&&!this._mouseDown){this.endMove();}}}},_slideStart:function(){if(!this._sliding){if(!this._silent){this.onSlideStart();this.fireEvent("slideStart");}this._sliding=true;this.moveComplete=false;}},_slideEnd:function(){if(this._sliding){var E=this._silent;this._sliding=false;this.moveComplete=true;this._silent=false;if(!E){this.onSlideEnd();this.fireEvent("slideEnd");}}},moveOneTick:function(F){var H=this.thumb,G=this,I=null,E,J;if(H._isRegion){I=this._getNextX(this.curCoord,F);E=(I!==null)?I[0]:this.curCoord[0];I=this._getNextY(this.curCoord,F);J=(I!==null)?I[1]:this.curCoord[1];I=E!==this.curCoord[0]||J!==this.curCoord[1]?[E,J]:null;}else{if(H._isHoriz){I=this._getNextX(this.curCoord,F);}else{I=this._getNextY(this.curCoord,F);}}if(I){this.curCoord=I;this.thumb.alignElWithMouse(H.getEl(),I[0]+this.thumbCenterPoint.x,I[1]+this.thumbCenterPoint.y);if(!(I[0]==F[0]&&I[1]==F[1])){setTimeout(function(){G.moveOneTick(F);},this.tickPause);}else{this.unlock();if(!this._mouseDown){this.endMove();}}}else{this.unlock();if(!this._mouseDown){this.endMove();}}},_getNextX:function(E,F){var H=this.thumb,J,G=[],I=null;if(E[0]>F[0]){J=H.tickSize-this.thumbCenterPoint.x;G=H.getTargetCoord(E[0]-J,E[1]);I=[G.x,G.y];}else{if(E[0]<F[0]){J=H.tickSize+this.thumbCenterPoint.x;G=H.getTargetCoord(E[0]+J,E[1]);I=[G.x,G.y];}else{}}return I;},_getNextY:function(E,F){var H=this.thumb,J,G=[],I=null;if(E[1]>F[1]){J=H.tickSize-this.thumbCenterPoint.y;G=H.getTargetCoord(E[0],E[1]-J);I=[G.x,G.y];}else{if(E[1]<F[1]){J=H.tickSize+this.thumbCenterPoint.y;G=H.getTargetCoord(E[0],E[1]+J);I=[G.x,G.y];}else{}}return I;},b4MouseDown:function(E){if(!this.backgroundEnabled){return false;}this.thumb.autoOffset();this.baselinePos=[];},onMouseDown:function(F){if(!this.backgroundEnabled||this.isLocked()){return false;}this._mouseDown=true;var E=A.getPageX(F),G=A.getPageY(F);this.focus();this._slideStart();this.moveThumb(E,G);},onDrag:function(F){if(this.backgroundEnabled&&!this.isLocked()){var E=A.getPageX(F),G=A.getPageY(F);this.moveThumb(E,G,true,true);this.fireEvents();}},endMove:function(){this.unlock();this.fireEvents();this._slideEnd();},resetThumbConstraints:function(){var E=this.thumb;E.setXConstraint(E.leftConstraint,E.rightConstraint,E.xTickSize);E.setYConstraint(E.topConstraint,E.bottomConstraint,E.xTickSize);},fireEvents:function(G){var F=this.thumb,I,H,E;if(!G){F.cachePosition();}if(!this.isLocked()){if(F._isRegion){I=F.getXValue();H=F.getYValue();if(I!=this.previousX||H!=this.previousY){if(!this._silent){this.onChange(I,H);this.fireEvent("change",{x:I,y:H});}}this.previousX=I;this.previousY=H;}else{E=F.getValue();if(E!=this.previousVal){if(!this._silent){this.onChange(E);this.fireEvent("change",E);}}this.previousVal=E;}}},toString:function(){return("Slider ("+this.type+") "+this.id);}});YAHOO.lang.augmentProto(C,YAHOO.util.EventProvider);YAHOO.widget.Slider=C;})();YAHOO.widget.SliderThumb=function(G,B,E,D,A,F,C){if(G){YAHOO.widget.SliderThumb.superclass.constructor.call(this,G,B);this.parentElId=B;}this.isTarget=false;this.tickSize=C;this.maintainOffset=true;this.initSlider(E,D,A,F,C);this.scroll=false;};YAHOO.extend(YAHOO.widget.SliderThumb,YAHOO.util.DD,{startOffset:null,dragOnly:true,_isHoriz:false,_prevVal:0,_graduated:false,getOffsetFromParent0:function(C){var A=YAHOO.util.Dom.getXY(this.getEl()),B=C||YAHOO.util.Dom.getXY(this.parentElId);return[(A[0]-B[0]),(A[1]-B[1])];},getOffsetFromParent:function(H){var A=this.getEl(),E,I,F,B,K,D,C,J,G;if(!this.deltaOffset){I=YAHOO.util.Dom.getXY(A);F=H||YAHOO.util.Dom.getXY(this.parentElId);E=[(I[0]-F[0]),(I[1]-F[1])];B=parseInt(YAHOO.util.Dom.getStyle(A,"left"),10);K=parseInt(YAHOO.util.Dom.getStyle(A,"top"),10);D=B-E[0];C=K-E[1];if(isNaN(D)||isNaN(C)){}else{this.deltaOffset=[D,C];}}else{J=parseInt(YAHOO.util.Dom.getStyle(A,"left"),10);G=parseInt(YAHOO.util.Dom.getStyle(A,"top"),10);E=[J+this.deltaOffset[0],G+this.deltaOffset[1]];}return E;},initSlider:function(D,C,A,E,B){this.initLeft=D;this.initRight=C;this.initUp=A;this.initDown=E;this.setXConstraint(D,C,B);this.setYConstraint(A,E,B);if(B&&B>1){this._graduated=true;}this._isHoriz=(D||C);this._isVert=(A||E);this._isRegion=(this._isHoriz&&this._isVert);},clearTicks:function(){YAHOO.widget.SliderThumb.superclass.clearTicks.call(this);this.tickSize=0;this._graduated=false;},getValue:function(){return(this._isHoriz)?this.getXValue():this.getYValue();},getXValue:function(){if(!this.available){return 0;}var A=this.getOffsetFromParent();if(YAHOO.lang.isNumber(A[0])){this.lastOffset=A;return(A[0]-this.startOffset[0]);}else{return(this.lastOffset[0]-this.startOffset[0]);}},getYValue:function(){if(!this.available){return 0;}var A=this.getOffsetFromParent();if(YAHOO.lang.isNumber(A[1])){this.lastOffset=A;return(A[1]-this.startOffset[1]);}else{return(this.lastOffset[1]-this.startOffset[1]);}},toString:function(){return"SliderThumb "+this.id;},onChange:function(A,B){}});(function(){var A=YAHOO.util.Event,B=YAHOO.widget;function C(I,F,H,D){var G=this,J={min:false,max:false},E,K;this.minSlider=I;this.maxSlider=F;this.activeSlider=I;this.isHoriz=I.thumb._isHoriz;E=this.minSlider.thumb.onMouseDown;K=this.maxSlider.thumb.onMouseDown;this.minSlider.thumb.onMouseDown=function(){G.activeSlider=G.minSlider;E.apply(this,arguments);};this.maxSlider.thumb.onMouseDown=function(){G.activeSlider=G.maxSlider;K.apply(this,arguments);};this.minSlider.thumb.onAvailable=function(){I.setStartSliderState();J.min=true;if(J.max){G.fireEvent("ready",G);}};this.maxSlider.thumb.onAvailable=function(){F.setStartSliderState();J.max=true;if(J.min){G.fireEvent("ready",G);}};I.onMouseDown=F.onMouseDown=function(L){return this.backgroundEnabled&&G._handleMouseDown(L);};I.onDrag=F.onDrag=function(L){G._handleDrag(L);};I.onMouseUp=F.onMouseUp=function(L){G._handleMouseUp(L);
};I._bindKeyEvents=function(){G._bindKeyEvents(this);};F._bindKeyEvents=function(){};I.subscribe("change",this._handleMinChange,I,this);I.subscribe("slideStart",this._handleSlideStart,I,this);I.subscribe("slideEnd",this._handleSlideEnd,I,this);F.subscribe("change",this._handleMaxChange,F,this);F.subscribe("slideStart",this._handleSlideStart,F,this);F.subscribe("slideEnd",this._handleSlideEnd,F,this);this.createEvent("ready",this);this.createEvent("change",this);this.createEvent("slideStart",this);this.createEvent("slideEnd",this);D=YAHOO.lang.isArray(D)?D:[0,H];D[0]=Math.min(Math.max(parseInt(D[0],10)|0,0),H);D[1]=Math.max(Math.min(parseInt(D[1],10)|0,H),0);if(D[0]>D[1]){D.splice(0,2,D[1],D[0]);}this.minVal=D[0];this.maxVal=D[1];this.minSlider.setValue(this.minVal,true,true,true);this.maxSlider.setValue(this.maxVal,true,true,true);}C.prototype={minVal:-1,maxVal:-1,minRange:0,_handleSlideStart:function(E,D){this.fireEvent("slideStart",D);},_handleSlideEnd:function(E,D){this.fireEvent("slideEnd",D);},_handleDrag:function(D){B.Slider.prototype.onDrag.call(this.activeSlider,D);},_handleMinChange:function(){this.activeSlider=this.minSlider;this.updateValue();},_handleMaxChange:function(){this.activeSlider=this.maxSlider;this.updateValue();},_bindKeyEvents:function(D){A.on(D.id,"keydown",this._handleKeyDown,this,true);A.on(D.id,"keypress",this._handleKeyPress,this,true);},_handleKeyDown:function(D){this.activeSlider.handleKeyDown.apply(this.activeSlider,arguments);},_handleKeyPress:function(D){this.activeSlider.handleKeyPress.apply(this.activeSlider,arguments);},setValues:function(H,K,I,E,J){var F=this.minSlider,M=this.maxSlider,D=F.thumb,L=M.thumb,N=this,G={min:false,max:false};if(D._isHoriz){D.setXConstraint(D.leftConstraint,L.rightConstraint,D.tickSize);L.setXConstraint(D.leftConstraint,L.rightConstraint,L.tickSize);}else{D.setYConstraint(D.topConstraint,L.bottomConstraint,D.tickSize);L.setYConstraint(D.topConstraint,L.bottomConstraint,L.tickSize);}this._oneTimeCallback(F,"slideEnd",function(){G.min=true;if(G.max){N.updateValue(J);setTimeout(function(){N._cleanEvent(F,"slideEnd");N._cleanEvent(M,"slideEnd");},0);}});this._oneTimeCallback(M,"slideEnd",function(){G.max=true;if(G.min){N.updateValue(J);setTimeout(function(){N._cleanEvent(F,"slideEnd");N._cleanEvent(M,"slideEnd");},0);}});F.setValue(H,I,E,false);M.setValue(K,I,E,false);},setMinValue:function(F,H,I,E){var G=this.minSlider,D=this;this.activeSlider=G;D=this;this._oneTimeCallback(G,"slideEnd",function(){D.updateValue(E);setTimeout(function(){D._cleanEvent(G,"slideEnd");},0);});G.setValue(F,H,I);},setMaxValue:function(D,H,I,F){var G=this.maxSlider,E=this;this.activeSlider=G;this._oneTimeCallback(G,"slideEnd",function(){E.updateValue(F);setTimeout(function(){E._cleanEvent(G,"slideEnd");},0);});G.setValue(D,H,I);},updateValue:function(J){var E=this.minSlider.getValue(),K=this.maxSlider.getValue(),F=false,D,M,H,I,L,G;if(E!=this.minVal||K!=this.maxVal){F=true;D=this.minSlider.thumb;M=this.maxSlider.thumb;H=this.isHoriz?"x":"y";G=this.minSlider.thumbCenterPoint[H]+this.maxSlider.thumbCenterPoint[H];I=Math.max(K-G-this.minRange,0);L=Math.min(-E-G-this.minRange,0);if(this.isHoriz){I=Math.min(I,M.rightConstraint);D.setXConstraint(D.leftConstraint,I,D.tickSize);M.setXConstraint(L,M.rightConstraint,M.tickSize);}else{I=Math.min(I,M.bottomConstraint);D.setYConstraint(D.leftConstraint,I,D.tickSize);M.setYConstraint(L,M.bottomConstraint,M.tickSize);}}this.minVal=E;this.maxVal=K;if(F&&!J){this.fireEvent("change",this);}},selectActiveSlider:function(H){var E=this.minSlider,D=this.maxSlider,J=E.isLocked()||!E.backgroundEnabled,G=D.isLocked()||!E.backgroundEnabled,F=YAHOO.util.Event,I;if(J||G){this.activeSlider=J?D:E;}else{if(this.isHoriz){I=F.getPageX(H)-E.thumb.initPageX-E.thumbCenterPoint.x;}else{I=F.getPageY(H)-E.thumb.initPageY-E.thumbCenterPoint.y;}this.activeSlider=I*2>D.getValue()+E.getValue()?D:E;}},_handleMouseDown:function(D){if(!D._handled&&!this.minSlider._sliding&&!this.maxSlider._sliding){D._handled=true;this.selectActiveSlider(D);return B.Slider.prototype.onMouseDown.call(this.activeSlider,D);}else{return false;}},_handleMouseUp:function(D){B.Slider.prototype.onMouseUp.apply(this.activeSlider,arguments);},_oneTimeCallback:function(G,D,F){var E=function(){G.unsubscribe(D,E);F.apply({},arguments);};G.subscribe(D,E);},_cleanEvent:function(K,E){var J,I,D,G,H,F;if(K.__yui_events&&K.events[E]){for(I=K.__yui_events.length;I>=0;--I){if(K.__yui_events[I].type===E){J=K.__yui_events[I];break;}}if(J){H=J.subscribers;F=[];G=0;for(I=0,D=H.length;I<D;++I){if(H[I]){F[G++]=H[I];}}J.subscribers=F;}}}};YAHOO.lang.augmentProto(C,YAHOO.util.EventProvider);B.Slider.getHorizDualSlider=function(H,J,K,G,F,D){var I=new B.SliderThumb(J,H,0,G,0,0,F),E=new B.SliderThumb(K,H,0,G,0,0,F);return new C(new B.Slider(H,H,I,"horiz"),new B.Slider(H,H,E,"horiz"),G,D);};B.Slider.getVertDualSlider=function(H,J,K,G,F,D){var I=new B.SliderThumb(J,H,0,0,0,G,F),E=new B.SliderThumb(K,H,0,0,0,G,F);return new B.DualSlider(new B.Slider(H,H,I,"vert"),new B.Slider(H,H,E,"vert"),G,D);};YAHOO.widget.DualSlider=C;})();YAHOO.register("slider",YAHOO.widget.Slider,{version:"2.9.0",build:"2800"});

/********* ../yui/colorpicker/colorpicker-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
YAHOO.util.Color=function(){var a="0",b=YAHOO.lang.isArray,c=YAHOO.lang.isNumber;return{real2dec:function(d){return Math.min(255,Math.round(d*256));},hsv2rgb:function(l,y,w){if(b(l)){return this.hsv2rgb.call(this,l[0],l[1],l[2]);}var d,m,u,k=Math.floor((l/60)%6),n=(l/60)-k,j=w*(1-y),e=w*(1-n*y),x=w*(1-(1-n)*y),o;switch(k){case 0:d=w;m=x;u=j;break;case 1:d=e;m=w;u=j;break;case 2:d=j;m=w;u=x;break;case 3:d=j;m=e;u=w;break;case 4:d=x;m=j;u=w;break;case 5:d=w;m=j;u=e;break;}o=this.real2dec;return[o(d),o(m),o(u)];},rgb2hsv:function(d,j,k){if(b(d)){return this.rgb2hsv.apply(this,d);}d/=255;j/=255;k/=255;var i,n,e=Math.min(Math.min(d,j),k),l=Math.max(Math.max(d,j),k),m=l-e,f;switch(l){case e:i=0;break;case d:i=60*(j-k)/m;if(j<k){i+=360;}break;case j:i=(60*(k-d)/m)+120;break;case k:i=(60*(d-j)/m)+240;break;}n=(l===0)?0:1-(e/l);f=[Math.round(i),n,l];return f;},rgb2hex:function(h,e,d){if(b(h)){return this.rgb2hex.apply(this,h);}var i=this.dec2hex;return i(h)+i(e)+i(d);},dec2hex:function(d){d=parseInt(d,10)|0;d=(d>255||d<0)?0:d;return(a+d.toString(16)).slice(-2).toUpperCase();},hex2dec:function(d){return parseInt(d,16);},hex2rgb:function(d){var e=this.hex2dec;return[e(d.slice(0,2)),e(d.slice(2,4)),e(d.slice(4,6))];},websafe:function(h,e,d){if(b(h)){return this.websafe.apply(this,h);}var i=function(f){if(c(f)){f=Math.min(Math.max(0,f),255);var g,j;for(g=0;g<256;g=g+51){j=g+51;if(f>=g&&f<=j){return(f-g>25)?j:g;}}}return f;};return[i(h),i(e),i(d)];}};}();(function(){var k=0,g=YAHOO.util,d=YAHOO.lang,e=YAHOO.widget.Slider,c=g.Color,f=g.Dom,j=g.Event,a=d.substitute,i="yui-picker";function h(l,b){k=k+1;b=b||{};if(arguments.length===1&&!YAHOO.lang.isString(l)&&!l.nodeName){b=l;l=b.element||null;}if(!l&&!b.element){l=this._createHostElement(b);}h.superclass.constructor.call(this,l,b);this.initPicker();}YAHOO.extend(h,YAHOO.util.Element,{ID:{R:i+"-r",R_HEX:i+"-rhex",G:i+"-g",G_HEX:i+"-ghex",B:i+"-b",B_HEX:i+"-bhex",H:i+"-h",S:i+"-s",V:i+"-v",PICKER_BG:i+"-bg",PICKER_THUMB:i+"-thumb",HUE_BG:i+"-hue-bg",HUE_THUMB:i+"-hue-thumb",HEX:i+"-hex",SWATCH:i+"-swatch",WEBSAFE_SWATCH:i+"-websafe-swatch",CONTROLS:i+"-controls",RGB_CONTROLS:i+"-rgb-controls",HSV_CONTROLS:i+"-hsv-controls",HEX_CONTROLS:i+"-hex-controls",HEX_SUMMARY:i+"-hex-summary",CONTROLS_LABEL:i+"-controls-label"},TXT:{ILLEGAL_HEX:"Illegal hex value entered",SHOW_CONTROLS:"Show color details",HIDE_CONTROLS:"Hide color details",CURRENT_COLOR:"Currently selected color: {rgb}",CLOSEST_WEBSAFE:"Closest websafe color: {rgb}. Click to select.",R:"R",G:"G",B:"B",H:"H",S:"S",V:"V",HEX:"#",DEG:"\u00B0",PERCENT:"%"},IMAGE:{PICKER_THUMB:"../../build/colorpicker/assets/picker_thumb.png",HUE_THUMB:"../../build/colorpicker/assets/hue_thumb.png"},DEFAULT:{PICKER_SIZE:180},OPT:{HUE:"hue",SATURATION:"saturation",VALUE:"value",RED:"red",GREEN:"green",BLUE:"blue",HSV:"hsv",RGB:"rgb",WEBSAFE:"websafe",HEX:"hex",PICKER_SIZE:"pickersize",SHOW_CONTROLS:"showcontrols",SHOW_RGB_CONTROLS:"showrgbcontrols",SHOW_HSV_CONTROLS:"showhsvcontrols",SHOW_HEX_CONTROLS:"showhexcontrols",SHOW_HEX_SUMMARY:"showhexsummary",SHOW_WEBSAFE:"showwebsafe",CONTAINER:"container",IDS:"ids",ELEMENTS:"elements",TXT:"txt",IMAGES:"images",ANIMATE:"animate"},skipAnim:true,_createHostElement:function(){var b=document.createElement("div");if(this.CSS.BASE){b.className=this.CSS.BASE;}return b;},_updateHueSlider:function(){var b=this.get(this.OPT.PICKER_SIZE),l=this.get(this.OPT.HUE);l=b-Math.round(l/360*b);if(l===b){l=0;}this.hueSlider.setValue(l,this.skipAnim);},_updatePickerSlider:function(){var l=this.get(this.OPT.PICKER_SIZE),m=this.get(this.OPT.SATURATION),b=this.get(this.OPT.VALUE);m=Math.round(m*l/100);b=Math.round(l-(b*l/100));this.pickerSlider.setRegionValue(m,b,this.skipAnim);},_updateSliders:function(){this._updateHueSlider();this._updatePickerSlider();},setValue:function(l,b){b=(b)||false;this.set(this.OPT.RGB,l,b);this._updateSliders();},hueSlider:null,pickerSlider:null,_getH:function(){var b=this.get(this.OPT.PICKER_SIZE),l=(b-this.hueSlider.getValue())/b;l=Math.round(l*360);return(l===360)?0:l;},_getS:function(){return this.pickerSlider.getXValue()/this.get(this.OPT.PICKER_SIZE);},_getV:function(){var b=this.get(this.OPT.PICKER_SIZE);return(b-this.pickerSlider.getYValue())/b;},_updateSwatch:function(){var m=this.get(this.OPT.RGB),o=this.get(this.OPT.WEBSAFE),n=this.getElement(this.ID.SWATCH),l=m.join(","),b=this.get(this.OPT.TXT);f.setStyle(n,"background-color","rgb("+l+")");n.title=a(b.CURRENT_COLOR,{"rgb":"#"+this.get(this.OPT.HEX)});n=this.getElement(this.ID.WEBSAFE_SWATCH);l=o.join(",");f.setStyle(n,"background-color","rgb("+l+")");n.title=a(b.CLOSEST_WEBSAFE,{"rgb":"#"+c.rgb2hex(o)});},_getValuesFromSliders:function(){this.set(this.OPT.RGB,c.hsv2rgb(this._getH(),this._getS(),this._getV()));},_updateFormFields:function(){this.getElement(this.ID.H).value=this.get(this.OPT.HUE);this.getElement(this.ID.S).value=this.get(this.OPT.SATURATION);this.getElement(this.ID.V).value=this.get(this.OPT.VALUE);this.getElement(this.ID.R).value=this.get(this.OPT.RED);this.getElement(this.ID.R_HEX).innerHTML=c.dec2hex(this.get(this.OPT.RED));this.getElement(this.ID.G).value=this.get(this.OPT.GREEN);this.getElement(this.ID.G_HEX).innerHTML=c.dec2hex(this.get(this.OPT.GREEN));this.getElement(this.ID.B).value=this.get(this.OPT.BLUE);this.getElement(this.ID.B_HEX).innerHTML=c.dec2hex(this.get(this.OPT.BLUE));this.getElement(this.ID.HEX).value=this.get(this.OPT.HEX);},_onHueSliderChange:function(n){var l=this._getH(),b=c.hsv2rgb(l,1,1),m="rgb("+b.join(",")+")";this.set(this.OPT.HUE,l,true);f.setStyle(this.getElement(this.ID.PICKER_BG),"background-color",m);if(this.hueSlider.valueChangeSource!==e.SOURCE_SET_VALUE){this._getValuesFromSliders();}this._updateFormFields();this._updateSwatch();},_onPickerSliderChange:function(m){var l=this._getS(),b=this._getV();this.set(this.OPT.SATURATION,Math.round(l*100),true);this.set(this.OPT.VALUE,Math.round(b*100),true);if(this.pickerSlider.valueChangeSource!==e.SOURCE_SET_VALUE){this._getValuesFromSliders();
}this._updateFormFields();this._updateSwatch();},_getCommand:function(b){var l=j.getCharCode(b);if(l===38){return 3;}else{if(l===13){return 6;}else{if(l===40){return 4;}else{if(l>=48&&l<=57){return 1;}else{if(l>=97&&l<=102){return 2;}else{if(l>=65&&l<=70){return 2;}else{if("8, 9, 13, 27, 37, 39".indexOf(l)>-1||b.ctrlKey||b.metaKey){return 5;}else{return 0;}}}}}}}},_useFieldValue:function(l,b,n){var m=b.value;if(n!==this.OPT.HEX){m=parseInt(m,10);}if(m!==this.get(n)){this.set(n,m);}},_rgbFieldKeypress:function(m,b,o){var n=this._getCommand(m),l=(m.shiftKey)?10:1;switch(n){case 6:this._useFieldValue.apply(this,arguments);break;case 3:this.set(o,Math.min(this.get(o)+l,255));this._updateFormFields();break;case 4:this.set(o,Math.max(this.get(o)-l,0));this._updateFormFields();break;default:}},_hexFieldKeypress:function(l,b,n){var m=this._getCommand(l);if(m===6){this._useFieldValue.apply(this,arguments);}},_hexOnly:function(l,b){var m=this._getCommand(l);switch(m){case 6:case 5:case 1:break;case 2:if(b!==true){break;}default:j.stopEvent(l);return false;}},_numbersOnly:function(b){return this._hexOnly(b,true);},getElement:function(b){return this.get(this.OPT.ELEMENTS)[this.get(this.OPT.IDS)[b]];},_createElements:function(){var n,m,q,o,l,b=this.get(this.OPT.IDS),r=this.get(this.OPT.TXT),t=this.get(this.OPT.IMAGES),s=function(p,v){var w=document.createElement(p);if(v){d.augmentObject(w,v,true);}return w;},u=function(p,v){var w=d.merge({autocomplete:"off",value:"0",size:3,maxlength:3},v);w.name=w.id;return new s(p,w);};l=this.get("element");n=new s("div",{id:b[this.ID.PICKER_BG],className:"yui-picker-bg",tabIndex:-1,hideFocus:true});m=new s("div",{id:b[this.ID.PICKER_THUMB],className:"yui-picker-thumb"});q=new s("img",{src:t.PICKER_THUMB});m.appendChild(q);n.appendChild(m);l.appendChild(n);n=new s("div",{id:b[this.ID.HUE_BG],className:"yui-picker-hue-bg",tabIndex:-1,hideFocus:true});m=new s("div",{id:b[this.ID.HUE_THUMB],className:"yui-picker-hue-thumb"});q=new s("img",{src:t.HUE_THUMB});m.appendChild(q);n.appendChild(m);l.appendChild(n);n=new s("div",{id:b[this.ID.CONTROLS],className:"yui-picker-controls"});l.appendChild(n);l=n;n=new s("div",{className:"hd"});m=new s("a",{id:b[this.ID.CONTROLS_LABEL],href:"#"});n.appendChild(m);l.appendChild(n);n=new s("div",{className:"bd"});l.appendChild(n);l=n;n=new s("ul",{id:b[this.ID.RGB_CONTROLS],className:"yui-picker-rgb-controls"});m=new s("li");m.appendChild(document.createTextNode(r.R+" "));o=new u("input",{id:b[this.ID.R],className:"yui-picker-r"});m.appendChild(o);n.appendChild(m);m=new s("li");m.appendChild(document.createTextNode(r.G+" "));o=new u("input",{id:b[this.ID.G],className:"yui-picker-g"});m.appendChild(o);n.appendChild(m);m=new s("li");m.appendChild(document.createTextNode(r.B+" "));o=new u("input",{id:b[this.ID.B],className:"yui-picker-b"});m.appendChild(o);n.appendChild(m);l.appendChild(n);n=new s("ul",{id:b[this.ID.HSV_CONTROLS],className:"yui-picker-hsv-controls"});m=new s("li");m.appendChild(document.createTextNode(r.H+" "));o=new u("input",{id:b[this.ID.H],className:"yui-picker-h"});m.appendChild(o);m.appendChild(document.createTextNode(" "+r.DEG));n.appendChild(m);m=new s("li");m.appendChild(document.createTextNode(r.S+" "));o=new u("input",{id:b[this.ID.S],className:"yui-picker-s"});m.appendChild(o);m.appendChild(document.createTextNode(" "+r.PERCENT));n.appendChild(m);m=new s("li");m.appendChild(document.createTextNode(r.V+" "));o=new u("input",{id:b[this.ID.V],className:"yui-picker-v"});m.appendChild(o);m.appendChild(document.createTextNode(" "+r.PERCENT));n.appendChild(m);l.appendChild(n);n=new s("ul",{id:b[this.ID.HEX_SUMMARY],className:"yui-picker-hex_summary"});m=new s("li",{id:b[this.ID.R_HEX]});n.appendChild(m);m=new s("li",{id:b[this.ID.G_HEX]});n.appendChild(m);m=new s("li",{id:b[this.ID.B_HEX]});n.appendChild(m);l.appendChild(n);n=new s("div",{id:b[this.ID.HEX_CONTROLS],className:"yui-picker-hex-controls"});n.appendChild(document.createTextNode(r.HEX+" "));m=new u("input",{id:b[this.ID.HEX],className:"yui-picker-hex",size:6,maxlength:6});n.appendChild(m);l.appendChild(n);l=this.get("element");n=new s("div",{id:b[this.ID.SWATCH],className:"yui-picker-swatch"});l.appendChild(n);n=new s("div",{id:b[this.ID.WEBSAFE_SWATCH],className:"yui-picker-websafe-swatch"});l.appendChild(n);},_attachRGBHSV:function(l,b){j.on(this.getElement(l),"keydown",function(n,m){m._rgbFieldKeypress(n,this,b);},this);j.on(this.getElement(l),"keypress",this._numbersOnly,this,true);j.on(this.getElement(l),"blur",function(n,m){m._useFieldValue(n,this,b);},this);},_updateRGB:function(){var b=[this.get(this.OPT.RED),this.get(this.OPT.GREEN),this.get(this.OPT.BLUE)];this.set(this.OPT.RGB,b);this._updateSliders();},_initElements:function(){var p=this.OPT,n=this.get(p.IDS),l=this.get(p.ELEMENTS),b,m,q;for(b in this.ID){if(d.hasOwnProperty(this.ID,b)){n[this.ID[b]]=n[b];}}m=f.get(n[this.ID.PICKER_BG]);if(!m){this._createElements();}else{}for(b in n){if(d.hasOwnProperty(n,b)){m=f.get(n[b]);q=f.generateId(m);n[b]=q;n[n[b]]=q;l[q]=m;}}},initPicker:function(){this._initSliders();this._bindUI();this.syncUI(true);},_initSliders:function(){var b=this.ID,l=this.get(this.OPT.PICKER_SIZE);this.hueSlider=e.getVertSlider(this.getElement(b.HUE_BG),this.getElement(b.HUE_THUMB),0,l);this.pickerSlider=e.getSliderRegion(this.getElement(b.PICKER_BG),this.getElement(b.PICKER_THUMB),0,l,0,l);this.set(this.OPT.ANIMATE,this.get(this.OPT.ANIMATE));},_bindUI:function(){var b=this.ID,l=this.OPT;this.hueSlider.subscribe("change",this._onHueSliderChange,this,true);this.pickerSlider.subscribe("change",this._onPickerSliderChange,this,true);j.on(this.getElement(b.WEBSAFE_SWATCH),"click",function(m){this.setValue(this.get(l.WEBSAFE));},this,true);j.on(this.getElement(b.CONTROLS_LABEL),"click",function(m){this.set(l.SHOW_CONTROLS,!this.get(l.SHOW_CONTROLS));j.preventDefault(m);},this,true);this._attachRGBHSV(b.R,l.RED);this._attachRGBHSV(b.G,l.GREEN);this._attachRGBHSV(b.B,l.BLUE);this._attachRGBHSV(b.H,l.HUE);
this._attachRGBHSV(b.S,l.SATURATION);this._attachRGBHSV(b.V,l.VALUE);j.on(this.getElement(b.HEX),"keydown",function(n,m){m._hexFieldKeypress(n,this,l.HEX);},this);j.on(this.getElement(this.ID.HEX),"keypress",this._hexOnly,this,true);j.on(this.getElement(this.ID.HEX),"blur",function(n,m){m._useFieldValue(n,this,l.HEX);},this);},syncUI:function(b){this.skipAnim=b;this._updateRGB();this.skipAnim=false;},_updateRGBFromHSV:function(){var l=[this.get(this.OPT.HUE),this.get(this.OPT.SATURATION)/100,this.get(this.OPT.VALUE)/100],b=c.hsv2rgb(l);this.set(this.OPT.RGB,b);this._updateSliders();},_updateHex:function(){var o=this.get(this.OPT.HEX),b=o.length,p,n,m;if(b===3){p=o.split("");for(n=0;n<b;n=n+1){p[n]=p[n]+p[n];}o=p.join("");}if(o.length!==6){return false;}m=c.hex2rgb(o);this.setValue(m);},_hideShowEl:function(m,b){var l=(d.isString(m)?this.getElement(m):m);f.setStyle(l,"display",(b)?"":"none");},initAttributes:function(b){b=b||{};h.superclass.initAttributes.call(this,b);this.setAttributeConfig(this.OPT.PICKER_SIZE,{value:b.size||this.DEFAULT.PICKER_SIZE});this.setAttributeConfig(this.OPT.HUE,{value:b.hue||0,validator:d.isNumber});this.setAttributeConfig(this.OPT.SATURATION,{value:b.saturation||0,validator:d.isNumber});this.setAttributeConfig(this.OPT.VALUE,{value:d.isNumber(b.value)?b.value:100,validator:d.isNumber});this.setAttributeConfig(this.OPT.RED,{value:d.isNumber(b.red)?b.red:255,validator:d.isNumber});this.setAttributeConfig(this.OPT.GREEN,{value:d.isNumber(b.green)?b.green:255,validator:d.isNumber});this.setAttributeConfig(this.OPT.BLUE,{value:d.isNumber(b.blue)?b.blue:255,validator:d.isNumber});this.setAttributeConfig(this.OPT.HEX,{value:b.hex||"FFFFFF",validator:d.isString});this.setAttributeConfig(this.OPT.RGB,{value:b.rgb||[255,255,255],method:function(o){this.set(this.OPT.RED,o[0],true);this.set(this.OPT.GREEN,o[1],true);this.set(this.OPT.BLUE,o[2],true);var q=c.websafe(o),p=c.rgb2hex(o),n=c.rgb2hsv(o);this.set(this.OPT.WEBSAFE,q,true);this.set(this.OPT.HEX,p,true);if(n[1]){this.set(this.OPT.HUE,n[0],true);}this.set(this.OPT.SATURATION,Math.round(n[1]*100),true);this.set(this.OPT.VALUE,Math.round(n[2]*100),true);},readonly:true});this.setAttributeConfig(this.OPT.CONTAINER,{value:null,method:function(n){if(n){n.showEvent.subscribe(function(){this.pickerSlider.focus();},this,true);}}});this.setAttributeConfig(this.OPT.WEBSAFE,{value:b.websafe||[255,255,255]});var m=b.ids||d.merge({},this.ID),l;if(!b.ids&&k>1){for(l in m){if(d.hasOwnProperty(m,l)){m[l]=m[l]+k;}}}this.setAttributeConfig(this.OPT.IDS,{value:m,writeonce:true});this.setAttributeConfig(this.OPT.TXT,{value:b.txt||this.TXT,writeonce:true});this.setAttributeConfig(this.OPT.IMAGES,{value:b.images||this.IMAGE,writeonce:true});this.setAttributeConfig(this.OPT.ELEMENTS,{value:{},readonly:true});this.setAttributeConfig(this.OPT.SHOW_CONTROLS,{value:d.isBoolean(b.showcontrols)?b.showcontrols:true,method:function(n){var o=f.getElementsByClassName("bd","div",this.getElement(this.ID.CONTROLS))[0];this._hideShowEl(o,n);this.getElement(this.ID.CONTROLS_LABEL).innerHTML=(n)?this.get(this.OPT.TXT).HIDE_CONTROLS:this.get(this.OPT.TXT).SHOW_CONTROLS;}});this.setAttributeConfig(this.OPT.SHOW_RGB_CONTROLS,{value:d.isBoolean(b.showrgbcontrols)?b.showrgbcontrols:true,method:function(n){this._hideShowEl(this.ID.RGB_CONTROLS,n);}});this.setAttributeConfig(this.OPT.SHOW_HSV_CONTROLS,{value:d.isBoolean(b.showhsvcontrols)?b.showhsvcontrols:false,method:function(n){this._hideShowEl(this.ID.HSV_CONTROLS,n);if(n&&this.get(this.OPT.SHOW_HEX_SUMMARY)){this.set(this.OPT.SHOW_HEX_SUMMARY,false);}}});this.setAttributeConfig(this.OPT.SHOW_HEX_CONTROLS,{value:d.isBoolean(b.showhexcontrols)?b.showhexcontrols:false,method:function(n){this._hideShowEl(this.ID.HEX_CONTROLS,n);}});this.setAttributeConfig(this.OPT.SHOW_WEBSAFE,{value:d.isBoolean(b.showwebsafe)?b.showwebsafe:true,method:function(n){this._hideShowEl(this.ID.WEBSAFE_SWATCH,n);}});this.setAttributeConfig(this.OPT.SHOW_HEX_SUMMARY,{value:d.isBoolean(b.showhexsummary)?b.showhexsummary:true,method:function(n){this._hideShowEl(this.ID.HEX_SUMMARY,n);if(n&&this.get(this.OPT.SHOW_HSV_CONTROLS)){this.set(this.OPT.SHOW_HSV_CONTROLS,false);}}});this.setAttributeConfig(this.OPT.ANIMATE,{value:d.isBoolean(b.animate)?b.animate:true,method:function(n){if(this.pickerSlider){this.pickerSlider.animate=n;this.hueSlider.animate=n;}}});this.on(this.OPT.HUE+"Change",this._updateRGBFromHSV,this,true);this.on(this.OPT.SATURATION+"Change",this._updateRGBFromHSV,this,true);this.on(this.OPT.VALUE+"Change",this._updateRGBFromHSV,this,true);this.on(this.OPT.RED+"Change",this._updateRGB,this,true);this.on(this.OPT.GREEN+"Change",this._updateRGB,this,true);this.on(this.OPT.BLUE+"Change",this._updateRGB,this,true);this.on(this.OPT.HEX+"Change",this._updateHex,this,true);this._initElements();}});YAHOO.widget.ColorPicker=h;})();YAHOO.register("colorpicker",YAHOO.widget.ColorPicker,{version:"2.9.0",build:"2800"});

/********* ../yui/cookie/cookie-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
YAHOO.namespace("util");YAHOO.util.Cookie={_createCookieString:function(B,D,C,A){var F=YAHOO.lang,E=encodeURIComponent(B)+"="+(C?encodeURIComponent(D):D);if(F.isObject(A)){if(A.expires instanceof Date){E+="; expires="+A.expires.toUTCString();}if(F.isString(A.path)&&A.path!==""){E+="; path="+A.path;}if(F.isString(A.domain)&&A.domain!==""){E+="; domain="+A.domain;}if(A.secure===true){E+="; secure";}}return E;},_createCookieHashString:function(B){var D=YAHOO.lang;if(!D.isObject(B)){throw new TypeError("Cookie._createCookieHashString(): Argument must be an object.");}var C=[];for(var A in B){if(D.hasOwnProperty(B,A)&&!D.isFunction(B[A])&&!D.isUndefined(B[A])){C.push(encodeURIComponent(A)+"="+encodeURIComponent(String(B[A])));}}return C.join("&");},_parseCookieHash:function(E){var D=E.split("&"),F=null,C={};if(E.length>0){for(var B=0,A=D.length;B<A;B++){F=D[B].split("=");C[decodeURIComponent(F[0])]=decodeURIComponent(F[1]);}}return C;},_parseCookieString:function(J,A){var K={};if(YAHOO.lang.isString(J)&&J.length>0){var B=(A===false?function(L){return L;}:decodeURIComponent);var H=J.split(/;\s/g),I=null,C=null,E=null;for(var D=0,F=H.length;D<F;D++){E=H[D].match(/([^=]+)=/i);if(E instanceof Array){try{I=decodeURIComponent(E[1]);C=B(H[D].substring(E[1].length+1));}catch(G){}}else{I=decodeURIComponent(H[D]);C="";}K[I]=C;}}return K;},exists:function(A){if(!YAHOO.lang.isString(A)||A===""){throw new TypeError("Cookie.exists(): Cookie name must be a non-empty string.");}var B=this._parseCookieString(document.cookie,true);return B.hasOwnProperty(A);},get:function(B,A){var E=YAHOO.lang,C;if(E.isFunction(A)){C=A;A={};}else{if(E.isObject(A)){C=A.converter;}else{A={};}}var D=this._parseCookieString(document.cookie,!A.raw);if(!E.isString(B)||B===""){throw new TypeError("Cookie.get(): Cookie name must be a non-empty string.");}if(E.isUndefined(D[B])){return null;}if(!E.isFunction(C)){return D[B];}else{return C(D[B]);}},getSub:function(A,C,B){var E=YAHOO.lang,D=this.getSubs(A);if(D!==null){if(!E.isString(C)||C===""){throw new TypeError("Cookie.getSub(): Subcookie name must be a non-empty string.");}if(E.isUndefined(D[C])){return null;}if(!E.isFunction(B)){return D[C];}else{return B(D[C]);}}else{return null;}},getSubs:function(B){var A=YAHOO.lang.isString;if(!A(B)||B===""){throw new TypeError("Cookie.getSubs(): Cookie name must be a non-empty string.");}var C=this._parseCookieString(document.cookie,false);if(A(C[B])){return this._parseCookieHash(C[B]);}return null;},remove:function(B,A){if(!YAHOO.lang.isString(B)||B===""){throw new TypeError("Cookie.remove(): Cookie name must be a non-empty string.");}A=YAHOO.lang.merge(A||{},{expires:new Date(0)});return this.set(B,"",A);},removeSub:function(B,E,A){var F=YAHOO.lang;A=A||{};if(!F.isString(B)||B===""){throw new TypeError("Cookie.removeSub(): Cookie name must be a non-empty string.");}if(!F.isString(E)||E===""){throw new TypeError("Cookie.removeSub(): Subcookie name must be a non-empty string.");}var D=this.getSubs(B);if(F.isObject(D)&&F.hasOwnProperty(D,E)){delete D[E];if(!A.removeIfEmpty){return this.setSubs(B,D,A);}else{for(var C in D){if(F.hasOwnProperty(D,C)&&!F.isFunction(D[C])&&!F.isUndefined(D[C])){return this.setSubs(B,D,A);}}return this.remove(B,A);}}else{return"";}},set:function(B,C,A){var E=YAHOO.lang;A=A||{};if(!E.isString(B)){throw new TypeError("Cookie.set(): Cookie name must be a string.");}if(E.isUndefined(C)){throw new TypeError("Cookie.set(): Value cannot be undefined.");}var D=this._createCookieString(B,C,!A.raw,A);document.cookie=D;return D;},setSub:function(B,D,C,A){var F=YAHOO.lang;if(!F.isString(B)||B===""){throw new TypeError("Cookie.setSub(): Cookie name must be a non-empty string.");}if(!F.isString(D)||D===""){throw new TypeError("Cookie.setSub(): Subcookie name must be a non-empty string.");}if(F.isUndefined(C)){throw new TypeError("Cookie.setSub(): Subcookie value cannot be undefined.");}var E=this.getSubs(B);if(!F.isObject(E)){E={};}E[D]=C;return this.setSubs(B,E,A);},setSubs:function(B,C,A){var E=YAHOO.lang;if(!E.isString(B)){throw new TypeError("Cookie.setSubs(): Cookie name must be a string.");}if(!E.isObject(C)){throw new TypeError("Cookie.setSubs(): Cookie value must be an object.");}var D=this._createCookieString(B,this._createCookieHashString(C),false,A);document.cookie=D;return D;}};YAHOO.register("cookie",YAHOO.util.Cookie,{version:"2.9.0",build:"2800"});

/********* ../yui/datasource/datasource-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){var lang=YAHOO.lang,util=YAHOO.util,Ev=util.Event;util.DataSourceBase=function(oLiveData,oConfigs){if(oLiveData===null||oLiveData===undefined){return;}this.liveData=oLiveData;this._oQueue={interval:null,conn:null,requests:[]};this.responseSchema={};if(oConfigs&&(oConfigs.constructor==Object)){for(var sConfig in oConfigs){if(sConfig){this[sConfig]=oConfigs[sConfig];}}}var maxCacheEntries=this.maxCacheEntries;if(!lang.isNumber(maxCacheEntries)||(maxCacheEntries<0)){maxCacheEntries=0;}this._aIntervals=[];this.createEvent("cacheRequestEvent");this.createEvent("cacheResponseEvent");this.createEvent("requestEvent");this.createEvent("responseEvent");this.createEvent("responseParseEvent");this.createEvent("responseCacheEvent");this.createEvent("dataErrorEvent");this.createEvent("cacheFlushEvent");var DS=util.DataSourceBase;this._sName="DataSource instance"+DS._nIndex;DS._nIndex++;};var DS=util.DataSourceBase;lang.augmentObject(DS,{TYPE_UNKNOWN:-1,TYPE_JSARRAY:0,TYPE_JSFUNCTION:1,TYPE_XHR:2,TYPE_JSON:3,TYPE_XML:4,TYPE_TEXT:5,TYPE_HTMLTABLE:6,TYPE_SCRIPTNODE:7,TYPE_LOCAL:8,ERROR_DATAINVALID:"Invalid data",ERROR_DATANULL:"Null data",_nIndex:0,_nTransactionId:0,_cloneObject:function(o){if(!lang.isValue(o)){return o;}var copy={};if(Object.prototype.toString.apply(o)==="[object RegExp]"){copy=o;}else{if(lang.isFunction(o)){copy=o;}else{if(lang.isArray(o)){var array=[];for(var i=0,len=o.length;i<len;i++){array[i]=DS._cloneObject(o[i]);}copy=array;}else{if(lang.isObject(o)){for(var x in o){if(lang.hasOwnProperty(o,x)){if(lang.isValue(o[x])&&lang.isObject(o[x])||lang.isArray(o[x])){copy[x]=DS._cloneObject(o[x]);}else{copy[x]=o[x];}}}}else{copy=o;}}}}return copy;},_getLocationValue:function(field,context){var locator=field.locator||field.key||field,xmldoc=context.ownerDocument||context,result,res,value=null;try{if(!lang.isUndefined(xmldoc.evaluate)){result=xmldoc.evaluate(locator,context,xmldoc.createNSResolver(!context.ownerDocument?context.documentElement:context.ownerDocument.documentElement),0,null);while(res=result.iterateNext()){value=res.textContent;}}else{xmldoc.setProperty("SelectionLanguage","XPath");result=context.selectNodes(locator)[0];value=result.value||result.text||null;}return value;}catch(e){}},issueCallback:function(callback,params,error,scope){if(lang.isFunction(callback)){callback.apply(scope,params);}else{if(lang.isObject(callback)){scope=callback.scope||scope||window;var callbackFunc=callback.success;if(error){callbackFunc=callback.failure;}if(callbackFunc){callbackFunc.apply(scope,params.concat([callback.argument]));}}}},parseString:function(oData){if(!lang.isValue(oData)){return null;}var string=oData+"";if(lang.isString(string)){return string;}else{return null;}},parseNumber:function(oData){if(!lang.isValue(oData)||(oData==="")){return null;}var number=oData*1;if(lang.isNumber(number)){return number;}else{return null;}},convertNumber:function(oData){return DS.parseNumber(oData);},parseDate:function(oData){var date=null;if(lang.isValue(oData)&&!(oData instanceof Date)){date=new Date(oData);}else{return oData;}if(date instanceof Date){return date;}else{return null;}},convertDate:function(oData){return DS.parseDate(oData);}});DS.Parser={string:DS.parseString,number:DS.parseNumber,date:DS.parseDate};DS.prototype={_sName:null,_aCache:null,_oQueue:null,_aIntervals:null,maxCacheEntries:0,liveData:null,dataType:DS.TYPE_UNKNOWN,responseType:DS.TYPE_UNKNOWN,responseSchema:null,useXPath:false,cloneBeforeCaching:false,toString:function(){return this._sName;},getCachedResponse:function(oRequest,oCallback,oCaller){var aCache=this._aCache;if(this.maxCacheEntries>0){if(!aCache){this._aCache=[];}else{var nCacheLength=aCache.length;if(nCacheLength>0){var oResponse=null;this.fireEvent("cacheRequestEvent",{request:oRequest,callback:oCallback,caller:oCaller});for(var i=nCacheLength-1;i>=0;i--){var oCacheElem=aCache[i];if(this.isCacheHit(oRequest,oCacheElem.request)){oResponse=oCacheElem.response;this.fireEvent("cacheResponseEvent",{request:oRequest,response:oResponse,callback:oCallback,caller:oCaller});if(i<nCacheLength-1){aCache.splice(i,1);this.addToCache(oRequest,oResponse);}oResponse.cached=true;break;}}return oResponse;}}}else{if(aCache){this._aCache=null;}}return null;},isCacheHit:function(oRequest,oCachedRequest){return(oRequest===oCachedRequest);},addToCache:function(oRequest,oResponse){var aCache=this._aCache;if(!aCache){return;}while(aCache.length>=this.maxCacheEntries){aCache.shift();}oResponse=(this.cloneBeforeCaching)?DS._cloneObject(oResponse):oResponse;var oCacheElem={request:oRequest,response:oResponse};aCache[aCache.length]=oCacheElem;this.fireEvent("responseCacheEvent",{request:oRequest,response:oResponse});},flushCache:function(){if(this._aCache){this._aCache=[];this.fireEvent("cacheFlushEvent");}},setInterval:function(nMsec,oRequest,oCallback,oCaller){if(lang.isNumber(nMsec)&&(nMsec>=0)){var oSelf=this;var nId=setInterval(function(){oSelf.makeConnection(oRequest,oCallback,oCaller);},nMsec);this._aIntervals.push(nId);return nId;}else{}},clearInterval:function(nId){var tracker=this._aIntervals||[];for(var i=tracker.length-1;i>-1;i--){if(tracker[i]===nId){tracker.splice(i,1);clearInterval(nId);}}},clearAllIntervals:function(){var tracker=this._aIntervals||[];for(var i=tracker.length-1;i>-1;i--){clearInterval(tracker[i]);}tracker=[];},sendRequest:function(oRequest,oCallback,oCaller){var oCachedResponse=this.getCachedResponse(oRequest,oCallback,oCaller);if(oCachedResponse){DS.issueCallback(oCallback,[oRequest,oCachedResponse],false,oCaller);return null;}return this.makeConnection(oRequest,oCallback,oCaller);},makeConnection:function(oRequest,oCallback,oCaller){var tId=DS._nTransactionId++;this.fireEvent("requestEvent",{tId:tId,request:oRequest,callback:oCallback,caller:oCaller});var oRawResponse=this.liveData;this.handleResponse(oRequest,oRawResponse,oCallback,oCaller,tId);return tId;},handleResponse:function(oRequest,oRawResponse,oCallback,oCaller,tId){this.fireEvent("responseEvent",{tId:tId,request:oRequest,response:oRawResponse,callback:oCallback,caller:oCaller});
var xhr=(this.dataType==DS.TYPE_XHR)?true:false;var oParsedResponse=null;var oFullResponse=oRawResponse;if(this.responseType===DS.TYPE_UNKNOWN){var ctype=(oRawResponse&&oRawResponse.getResponseHeader)?oRawResponse.getResponseHeader["Content-Type"]:null;if(ctype){if(ctype.indexOf("text/xml")>-1){this.responseType=DS.TYPE_XML;}else{if(ctype.indexOf("application/json")>-1){this.responseType=DS.TYPE_JSON;}else{if(ctype.indexOf("text/plain")>-1){this.responseType=DS.TYPE_TEXT;}}}}else{if(YAHOO.lang.isArray(oRawResponse)){this.responseType=DS.TYPE_JSARRAY;}else{if(oRawResponse&&oRawResponse.nodeType&&(oRawResponse.nodeType===9||oRawResponse.nodeType===1||oRawResponse.nodeType===11)){this.responseType=DS.TYPE_XML;}else{if(oRawResponse&&oRawResponse.nodeName&&(oRawResponse.nodeName.toLowerCase()=="table")){this.responseType=DS.TYPE_HTMLTABLE;}else{if(YAHOO.lang.isObject(oRawResponse)){this.responseType=DS.TYPE_JSON;}else{if(YAHOO.lang.isString(oRawResponse)){this.responseType=DS.TYPE_TEXT;}}}}}}}switch(this.responseType){case DS.TYPE_JSARRAY:if(xhr&&oRawResponse&&oRawResponse.responseText){oFullResponse=oRawResponse.responseText;}try{if(lang.isString(oFullResponse)){var parseArgs=[oFullResponse].concat(this.parseJSONArgs);if(lang.JSON){oFullResponse=lang.JSON.parse.apply(lang.JSON,parseArgs);}else{if(window.JSON&&JSON.parse){oFullResponse=JSON.parse.apply(JSON,parseArgs);}else{if(oFullResponse.parseJSON){oFullResponse=oFullResponse.parseJSON.apply(oFullResponse,parseArgs.slice(1));}else{while(oFullResponse.length>0&&(oFullResponse.charAt(0)!="{")&&(oFullResponse.charAt(0)!="[")){oFullResponse=oFullResponse.substring(1,oFullResponse.length);}if(oFullResponse.length>0){var arrayEnd=Math.max(oFullResponse.lastIndexOf("]"),oFullResponse.lastIndexOf("}"));oFullResponse=oFullResponse.substring(0,arrayEnd+1);oFullResponse=eval("("+oFullResponse+")");}}}}}}catch(e1){}oFullResponse=this.doBeforeParseData(oRequest,oFullResponse,oCallback);oParsedResponse=this.parseArrayData(oRequest,oFullResponse);break;case DS.TYPE_JSON:if(xhr&&oRawResponse&&oRawResponse.responseText){oFullResponse=oRawResponse.responseText;}try{if(lang.isString(oFullResponse)){var parseArgs=[oFullResponse].concat(this.parseJSONArgs);if(lang.JSON){oFullResponse=lang.JSON.parse.apply(lang.JSON,parseArgs);}else{if(window.JSON&&JSON.parse){oFullResponse=JSON.parse.apply(JSON,parseArgs);}else{if(oFullResponse.parseJSON){oFullResponse=oFullResponse.parseJSON.apply(oFullResponse,parseArgs.slice(1));}else{while(oFullResponse.length>0&&(oFullResponse.charAt(0)!="{")&&(oFullResponse.charAt(0)!="[")){oFullResponse=oFullResponse.substring(1,oFullResponse.length);}if(oFullResponse.length>0){var objEnd=Math.max(oFullResponse.lastIndexOf("]"),oFullResponse.lastIndexOf("}"));oFullResponse=oFullResponse.substring(0,objEnd+1);oFullResponse=eval("("+oFullResponse+")");}}}}}}catch(e){}oFullResponse=this.doBeforeParseData(oRequest,oFullResponse,oCallback);oParsedResponse=this.parseJSONData(oRequest,oFullResponse);break;case DS.TYPE_HTMLTABLE:if(xhr&&oRawResponse.responseText){var el=document.createElement("div");el.innerHTML=oRawResponse.responseText;oFullResponse=el.getElementsByTagName("table")[0];}oFullResponse=this.doBeforeParseData(oRequest,oFullResponse,oCallback);oParsedResponse=this.parseHTMLTableData(oRequest,oFullResponse);break;case DS.TYPE_XML:if(xhr&&oRawResponse.responseXML){oFullResponse=oRawResponse.responseXML;}oFullResponse=this.doBeforeParseData(oRequest,oFullResponse,oCallback);oParsedResponse=this.parseXMLData(oRequest,oFullResponse);break;case DS.TYPE_TEXT:if(xhr&&lang.isString(oRawResponse.responseText)){oFullResponse=oRawResponse.responseText;}oFullResponse=this.doBeforeParseData(oRequest,oFullResponse,oCallback);oParsedResponse=this.parseTextData(oRequest,oFullResponse);break;default:oFullResponse=this.doBeforeParseData(oRequest,oFullResponse,oCallback);oParsedResponse=this.parseData(oRequest,oFullResponse);break;}oParsedResponse=oParsedResponse||{};if(!oParsedResponse.results){oParsedResponse.results=[];}if(!oParsedResponse.meta){oParsedResponse.meta={};}if(!oParsedResponse.error){oParsedResponse=this.doBeforeCallback(oRequest,oFullResponse,oParsedResponse,oCallback);this.fireEvent("responseParseEvent",{request:oRequest,response:oParsedResponse,callback:oCallback,caller:oCaller});this.addToCache(oRequest,oParsedResponse);}else{oParsedResponse.error=true;this.fireEvent("dataErrorEvent",{request:oRequest,response:oRawResponse,callback:oCallback,caller:oCaller,message:DS.ERROR_DATANULL});}oParsedResponse.tId=tId;DS.issueCallback(oCallback,[oRequest,oParsedResponse],oParsedResponse.error,oCaller);},doBeforeParseData:function(oRequest,oFullResponse,oCallback){return oFullResponse;},doBeforeCallback:function(oRequest,oFullResponse,oParsedResponse,oCallback){return oParsedResponse;},parseData:function(oRequest,oFullResponse){if(lang.isValue(oFullResponse)){var oParsedResponse={results:oFullResponse,meta:{}};return oParsedResponse;}return null;},parseArrayData:function(oRequest,oFullResponse){if(lang.isArray(oFullResponse)){var results=[],i,j,rec,field,data;if(lang.isArray(this.responseSchema.fields)){var fields=this.responseSchema.fields;for(i=fields.length-1;i>=0;--i){if(typeof fields[i]!=="object"){fields[i]={key:fields[i]};}}var parsers={},p;for(i=fields.length-1;i>=0;--i){p=(typeof fields[i].parser==="function"?fields[i].parser:DS.Parser[fields[i].parser+""])||fields[i].converter;if(p){parsers[fields[i].key]=p;}}var arrType=lang.isArray(oFullResponse[0]);for(i=oFullResponse.length-1;i>-1;i--){var oResult={};rec=oFullResponse[i];if(typeof rec==="object"){for(j=fields.length-1;j>-1;j--){field=fields[j];data=arrType?rec[j]:rec[field.key];if(parsers[field.key]){data=parsers[field.key].call(this,data);}if(data===undefined){data=null;}oResult[field.key]=data;}}else{if(lang.isString(rec)){for(j=fields.length-1;j>-1;j--){field=fields[j];data=rec;if(parsers[field.key]){data=parsers[field.key].call(this,data);}if(data===undefined){data=null;}oResult[field.key]=data;
}}}results[i]=oResult;}}else{results=oFullResponse;}var oParsedResponse={results:results};return oParsedResponse;}return null;},parseTextData:function(oRequest,oFullResponse){if(lang.isString(oFullResponse)){if(lang.isString(this.responseSchema.recordDelim)&&lang.isString(this.responseSchema.fieldDelim)){var oParsedResponse={results:[]};var recDelim=this.responseSchema.recordDelim;var fieldDelim=this.responseSchema.fieldDelim;if(oFullResponse.length>0){var newLength=oFullResponse.length-recDelim.length;if(oFullResponse.substr(newLength)==recDelim){oFullResponse=oFullResponse.substr(0,newLength);}if(oFullResponse.length>0){var recordsarray=oFullResponse.split(recDelim);for(var i=0,len=recordsarray.length,recIdx=0;i<len;++i){var bError=false,sRecord=recordsarray[i];if(lang.isString(sRecord)&&(sRecord.length>0)){var fielddataarray=recordsarray[i].split(fieldDelim);var oResult={};if(lang.isArray(this.responseSchema.fields)){var fields=this.responseSchema.fields;for(var j=fields.length-1;j>-1;j--){try{var data=fielddataarray[j];if(lang.isString(data)){if(data.charAt(0)=='"'){data=data.substr(1);}if(data.charAt(data.length-1)=='"'){data=data.substr(0,data.length-1);}var field=fields[j];var key=(lang.isValue(field.key))?field.key:field;if(!field.parser&&field.converter){field.parser=field.converter;}var parser=(typeof field.parser==="function")?field.parser:DS.Parser[field.parser+""];if(parser){data=parser.call(this,data);}if(data===undefined){data=null;}oResult[key]=data;}else{bError=true;}}catch(e){bError=true;}}}else{oResult=fielddataarray;}if(!bError){oParsedResponse.results[recIdx++]=oResult;}}}}}return oParsedResponse;}}return null;},parseXMLResult:function(result){var oResult={},schema=this.responseSchema;try{for(var m=schema.fields.length-1;m>=0;m--){var field=schema.fields[m];var key=(lang.isValue(field.key))?field.key:field;var data=null;if(this.useXPath){data=YAHOO.util.DataSource._getLocationValue(field,result);}else{var xmlAttr=result.attributes.getNamedItem(key);if(xmlAttr){data=xmlAttr.value;}else{var xmlNode=result.getElementsByTagName(key);if(xmlNode&&xmlNode.item(0)){var item=xmlNode.item(0);data=(item)?((item.text)?item.text:(item.textContent)?item.textContent:null):null;if(!data){var datapieces=[];for(var j=0,len=item.childNodes.length;j<len;j++){if(item.childNodes[j].nodeValue){datapieces[datapieces.length]=item.childNodes[j].nodeValue;}}if(datapieces.length>0){data=datapieces.join("");}}}}}if(data===null){data="";}if(!field.parser&&field.converter){field.parser=field.converter;}var parser=(typeof field.parser==="function")?field.parser:DS.Parser[field.parser+""];if(parser){data=parser.call(this,data);}if(data===undefined){data=null;}oResult[key]=data;}}catch(e){}return oResult;},parseXMLData:function(oRequest,oFullResponse){var bError=false,schema=this.responseSchema,oParsedResponse={meta:{}},xmlList=null,metaNode=schema.metaNode,metaLocators=schema.metaFields||{},i,k,loc,v;try{if(this.useXPath){for(k in metaLocators){oParsedResponse.meta[k]=YAHOO.util.DataSource._getLocationValue(metaLocators[k],oFullResponse);}}else{metaNode=metaNode?oFullResponse.getElementsByTagName(metaNode)[0]:oFullResponse;if(metaNode){for(k in metaLocators){if(lang.hasOwnProperty(metaLocators,k)){loc=metaLocators[k];v=metaNode.getElementsByTagName(loc)[0];if(v){v=v.firstChild.nodeValue;}else{v=metaNode.attributes.getNamedItem(loc);if(v){v=v.value;}}if(lang.isValue(v)){oParsedResponse.meta[k]=v;}}}}}xmlList=(schema.resultNode)?oFullResponse.getElementsByTagName(schema.resultNode):null;}catch(e){}if(!xmlList||!lang.isArray(schema.fields)){bError=true;}else{oParsedResponse.results=[];for(i=xmlList.length-1;i>=0;--i){var oResult=this.parseXMLResult(xmlList.item(i));oParsedResponse.results[i]=oResult;}}if(bError){oParsedResponse.error=true;}else{}return oParsedResponse;},parseJSONData:function(oRequest,oFullResponse){var oParsedResponse={results:[],meta:{}};if(lang.isObject(oFullResponse)&&this.responseSchema.resultsList){var schema=this.responseSchema,fields=schema.fields,resultsList=oFullResponse,results=[],metaFields=schema.metaFields||{},fieldParsers=[],fieldPaths=[],simpleFields=[],bError=false,i,len,j,v,key,parser,path;var buildPath=function(needle){var path=null,keys=[],i=0;if(needle){needle=needle.replace(/\[(['"])(.*?)\1\]/g,function(x,$1,$2){keys[i]=$2;return".@"+(i++);}).replace(/\[(\d+)\]/g,function(x,$1){keys[i]=parseInt($1,10)|0;return".@"+(i++);}).replace(/^\./,"");if(!/[^\w\.\$@]/.test(needle)){path=needle.split(".");for(i=path.length-1;i>=0;--i){if(path[i].charAt(0)==="@"){path[i]=keys[parseInt(path[i].substr(1),10)];}}}else{}}return path;};var walkPath=function(path,origin){var v=origin,i=0,len=path.length;for(;i<len&&v;++i){v=v[path[i]];}return v;};path=buildPath(schema.resultsList);if(path){resultsList=walkPath(path,oFullResponse);if(resultsList===undefined){bError=true;}}else{bError=true;}if(!resultsList){resultsList=[];}if(!lang.isArray(resultsList)){resultsList=[resultsList];}if(!bError){if(schema.fields){var field;for(i=0,len=fields.length;i<len;i++){field=fields[i];key=field.key||field;parser=((typeof field.parser==="function")?field.parser:DS.Parser[field.parser+""])||field.converter;path=buildPath(key);if(parser){fieldParsers[fieldParsers.length]={key:key,parser:parser};}if(path){if(path.length>1){fieldPaths[fieldPaths.length]={key:key,path:path};}else{simpleFields[simpleFields.length]={key:key,path:path[0]};}}else{}}for(i=resultsList.length-1;i>=0;--i){var r=resultsList[i],rec={};if(r){for(j=simpleFields.length-1;j>=0;--j){rec[simpleFields[j].key]=(r[simpleFields[j].path]!==undefined)?r[simpleFields[j].path]:r[j];}for(j=fieldPaths.length-1;j>=0;--j){rec[fieldPaths[j].key]=walkPath(fieldPaths[j].path,r);}for(j=fieldParsers.length-1;j>=0;--j){var p=fieldParsers[j].key;rec[p]=fieldParsers[j].parser.call(this,rec[p]);if(rec[p]===undefined){rec[p]=null;}}}results[i]=rec;}}else{results=resultsList;}for(key in metaFields){if(lang.hasOwnProperty(metaFields,key)){path=buildPath(metaFields[key]);
if(path){v=walkPath(path,oFullResponse);oParsedResponse.meta[key]=v;}}}}else{oParsedResponse.error=true;}oParsedResponse.results=results;}else{oParsedResponse.error=true;}return oParsedResponse;},parseHTMLTableData:function(oRequest,oFullResponse){var bError=false;var elTable=oFullResponse;var fields=this.responseSchema.fields;var oParsedResponse={results:[]};if(lang.isArray(fields)){for(var i=0;i<elTable.tBodies.length;i++){var elTbody=elTable.tBodies[i];for(var j=elTbody.rows.length-1;j>-1;j--){var elRow=elTbody.rows[j];var oResult={};for(var k=fields.length-1;k>-1;k--){var field=fields[k];var key=(lang.isValue(field.key))?field.key:field;var data=elRow.cells[k].innerHTML;if(!field.parser&&field.converter){field.parser=field.converter;}var parser=(typeof field.parser==="function")?field.parser:DS.Parser[field.parser+""];if(parser){data=parser.call(this,data);}if(data===undefined){data=null;}oResult[key]=data;}oParsedResponse.results[j]=oResult;}}}else{bError=true;}if(bError){oParsedResponse.error=true;}else{}return oParsedResponse;}};lang.augmentProto(DS,util.EventProvider);util.LocalDataSource=function(oLiveData,oConfigs){this.dataType=DS.TYPE_LOCAL;if(oLiveData){if(YAHOO.lang.isArray(oLiveData)){this.responseType=DS.TYPE_JSARRAY;}else{if(oLiveData.nodeType&&oLiveData.nodeType==9){this.responseType=DS.TYPE_XML;}else{if(oLiveData.nodeName&&(oLiveData.nodeName.toLowerCase()=="table")){this.responseType=DS.TYPE_HTMLTABLE;oLiveData=oLiveData.cloneNode(true);}else{if(YAHOO.lang.isString(oLiveData)){this.responseType=DS.TYPE_TEXT;}else{if(YAHOO.lang.isObject(oLiveData)){this.responseType=DS.TYPE_JSON;}}}}}}else{oLiveData=[];this.responseType=DS.TYPE_JSARRAY;}util.LocalDataSource.superclass.constructor.call(this,oLiveData,oConfigs);};lang.extend(util.LocalDataSource,DS);lang.augmentObject(util.LocalDataSource,DS);util.FunctionDataSource=function(oLiveData,oConfigs){this.dataType=DS.TYPE_JSFUNCTION;oLiveData=oLiveData||function(){};util.FunctionDataSource.superclass.constructor.call(this,oLiveData,oConfigs);};lang.extend(util.FunctionDataSource,DS,{scope:null,makeConnection:function(oRequest,oCallback,oCaller){var tId=DS._nTransactionId++;this.fireEvent("requestEvent",{tId:tId,request:oRequest,callback:oCallback,caller:oCaller});var oRawResponse=(this.scope)?this.liveData.call(this.scope,oRequest,this,oCallback):this.liveData(oRequest,oCallback);if(this.responseType===DS.TYPE_UNKNOWN){if(YAHOO.lang.isArray(oRawResponse)){this.responseType=DS.TYPE_JSARRAY;}else{if(oRawResponse&&oRawResponse.nodeType&&oRawResponse.nodeType==9){this.responseType=DS.TYPE_XML;}else{if(oRawResponse&&oRawResponse.nodeName&&(oRawResponse.nodeName.toLowerCase()=="table")){this.responseType=DS.TYPE_HTMLTABLE;}else{if(YAHOO.lang.isObject(oRawResponse)){this.responseType=DS.TYPE_JSON;}else{if(YAHOO.lang.isString(oRawResponse)){this.responseType=DS.TYPE_TEXT;}}}}}}this.handleResponse(oRequest,oRawResponse,oCallback,oCaller,tId);return tId;}});lang.augmentObject(util.FunctionDataSource,DS);util.ScriptNodeDataSource=function(oLiveData,oConfigs){this.dataType=DS.TYPE_SCRIPTNODE;oLiveData=oLiveData||"";util.ScriptNodeDataSource.superclass.constructor.call(this,oLiveData,oConfigs);};lang.extend(util.ScriptNodeDataSource,DS,{getUtility:util.Get,asyncMode:"allowAll",scriptCallbackParam:"callback",generateRequestCallback:function(id){return"&"+this.scriptCallbackParam+"=YAHOO.util.ScriptNodeDataSource.callbacks["+id+"]";},doBeforeGetScriptNode:function(sUri){return sUri;},makeConnection:function(oRequest,oCallback,oCaller){var tId=DS._nTransactionId++;this.fireEvent("requestEvent",{tId:tId,request:oRequest,callback:oCallback,caller:oCaller});if(util.ScriptNodeDataSource._nPending===0){util.ScriptNodeDataSource.callbacks=[];util.ScriptNodeDataSource._nId=0;}var id=util.ScriptNodeDataSource._nId;util.ScriptNodeDataSource._nId++;var oSelf=this;util.ScriptNodeDataSource.callbacks[id]=function(oRawResponse){if((oSelf.asyncMode!=="ignoreStaleResponses")||(id===util.ScriptNodeDataSource.callbacks.length-1)){if(oSelf.responseType===DS.TYPE_UNKNOWN){if(YAHOO.lang.isArray(oRawResponse)){oSelf.responseType=DS.TYPE_JSARRAY;}else{if(oRawResponse.nodeType&&oRawResponse.nodeType==9){oSelf.responseType=DS.TYPE_XML;}else{if(oRawResponse.nodeName&&(oRawResponse.nodeName.toLowerCase()=="table")){oSelf.responseType=DS.TYPE_HTMLTABLE;}else{if(YAHOO.lang.isObject(oRawResponse)){oSelf.responseType=DS.TYPE_JSON;}else{if(YAHOO.lang.isString(oRawResponse)){oSelf.responseType=DS.TYPE_TEXT;}}}}}}oSelf.handleResponse(oRequest,oRawResponse,oCallback,oCaller,tId);}else{}delete util.ScriptNodeDataSource.callbacks[id];};util.ScriptNodeDataSource._nPending++;var sUri=this.liveData+oRequest+this.generateRequestCallback(id);sUri=this.doBeforeGetScriptNode(sUri);this.getUtility.script(sUri,{autopurge:true,onsuccess:util.ScriptNodeDataSource._bumpPendingDown,onfail:util.ScriptNodeDataSource._bumpPendingDown});return tId;}});lang.augmentObject(util.ScriptNodeDataSource,DS);lang.augmentObject(util.ScriptNodeDataSource,{_nId:0,_nPending:0,callbacks:[]});util.XHRDataSource=function(oLiveData,oConfigs){this.dataType=DS.TYPE_XHR;this.connMgr=this.connMgr||util.Connect;oLiveData=oLiveData||"";util.XHRDataSource.superclass.constructor.call(this,oLiveData,oConfigs);};lang.extend(util.XHRDataSource,DS,{connMgr:null,connXhrMode:"allowAll",connMethodPost:false,connTimeout:0,makeConnection:function(oRequest,oCallback,oCaller){var oRawResponse=null;var tId=DS._nTransactionId++;this.fireEvent("requestEvent",{tId:tId,request:oRequest,callback:oCallback,caller:oCaller});var oSelf=this;var oConnMgr=this.connMgr;var oQueue=this._oQueue;var _xhrSuccess=function(oResponse){if(oResponse&&(this.connXhrMode=="ignoreStaleResponses")&&(oResponse.tId!=oQueue.conn.tId)){return null;}else{if(!oResponse){this.fireEvent("dataErrorEvent",{request:oRequest,response:null,callback:oCallback,caller:oCaller,message:DS.ERROR_DATANULL});DS.issueCallback(oCallback,[oRequest,{error:true}],true,oCaller);return null;
}else{if(this.responseType===DS.TYPE_UNKNOWN){var ctype=(oResponse.getResponseHeader)?oResponse.getResponseHeader["Content-Type"]:null;if(ctype){if(ctype.indexOf("text/xml")>-1){this.responseType=DS.TYPE_XML;}else{if(ctype.indexOf("application/json")>-1){this.responseType=DS.TYPE_JSON;}else{if(ctype.indexOf("text/plain")>-1){this.responseType=DS.TYPE_TEXT;}}}}}this.handleResponse(oRequest,oResponse,oCallback,oCaller,tId);}}};var _xhrFailure=function(oResponse){this.fireEvent("dataErrorEvent",{request:oRequest,response:oResponse,callback:oCallback,caller:oCaller,message:DS.ERROR_DATAINVALID});if(lang.isString(this.liveData)&&lang.isString(oRequest)&&(this.liveData.lastIndexOf("?")!==this.liveData.length-1)&&(oRequest.indexOf("?")!==0)){}oResponse=oResponse||{};oResponse.error=true;DS.issueCallback(oCallback,[oRequest,oResponse],true,oCaller);return null;};var _xhrCallback={success:_xhrSuccess,failure:_xhrFailure,scope:this};if(lang.isNumber(this.connTimeout)){_xhrCallback.timeout=this.connTimeout;}if(this.connXhrMode=="cancelStaleRequests"){if(oQueue.conn){if(oConnMgr.abort){oConnMgr.abort(oQueue.conn);oQueue.conn=null;}else{}}}if(oConnMgr&&oConnMgr.asyncRequest){var sLiveData=this.liveData;var isPost=this.connMethodPost;var sMethod=(isPost)?"POST":"GET";var sUri=(isPost||!lang.isValue(oRequest))?sLiveData:sLiveData+oRequest;var sRequest=(isPost)?oRequest:null;if(this.connXhrMode!="queueRequests"){oQueue.conn=oConnMgr.asyncRequest(sMethod,sUri,_xhrCallback,sRequest);}else{if(oQueue.conn){var allRequests=oQueue.requests;allRequests.push({request:oRequest,callback:_xhrCallback});if(!oQueue.interval){oQueue.interval=setInterval(function(){if(oConnMgr.isCallInProgress(oQueue.conn)){return;}else{if(allRequests.length>0){sUri=(isPost||!lang.isValue(allRequests[0].request))?sLiveData:sLiveData+allRequests[0].request;sRequest=(isPost)?allRequests[0].request:null;oQueue.conn=oConnMgr.asyncRequest(sMethod,sUri,allRequests[0].callback,sRequest);allRequests.shift();}else{clearInterval(oQueue.interval);oQueue.interval=null;}}},50);}}else{oQueue.conn=oConnMgr.asyncRequest(sMethod,sUri,_xhrCallback,sRequest);}}}else{DS.issueCallback(oCallback,[oRequest,{error:true}],true,oCaller);}return tId;}});lang.augmentObject(util.XHRDataSource,DS);util.DataSource=function(oLiveData,oConfigs){oConfigs=oConfigs||{};var dataType=oConfigs.dataType;if(dataType){if(dataType==DS.TYPE_LOCAL){return new util.LocalDataSource(oLiveData,oConfigs);}else{if(dataType==DS.TYPE_XHR){return new util.XHRDataSource(oLiveData,oConfigs);}else{if(dataType==DS.TYPE_SCRIPTNODE){return new util.ScriptNodeDataSource(oLiveData,oConfigs);}else{if(dataType==DS.TYPE_JSFUNCTION){return new util.FunctionDataSource(oLiveData,oConfigs);}}}}}if(YAHOO.lang.isString(oLiveData)){return new util.XHRDataSource(oLiveData,oConfigs);}else{if(YAHOO.lang.isFunction(oLiveData)){return new util.FunctionDataSource(oLiveData,oConfigs);}else{return new util.LocalDataSource(oLiveData,oConfigs);}}};lang.augmentObject(util.DataSource,DS);})();YAHOO.util.Number={format:function(e,k){if(e===""||e===null||!isFinite(e)){return"";}e=+e;k=YAHOO.lang.merge(YAHOO.util.Number.format.defaults,(k||{}));var j=e+"",l=Math.abs(e),b=k.decimalPlaces||0,r=k.thousandsSeparator,f=k.negativeFormat||("-"+k.format),q,p,g,h;if(f.indexOf("#")>-1){f=f.replace(/#/,k.format);}if(b<0){q=l-(l%1)+"";g=q.length+b;if(g>0){q=Number("."+q).toFixed(g).slice(2)+new Array(q.length-g+1).join("0");}else{q="0";}}else{var a=l+"";if(b>0||a.indexOf(".")>0){var d=Math.pow(10,b);q=Math.round(l*d)/d+"";var c=q.indexOf("."),m,o;if(c<0){m=b;o=(Math.pow(10,m)+"").substring(1);if(b>0){q=q+"."+o;}}else{m=b-(q.length-c-1);o=(Math.pow(10,m)+"").substring(1);q=q+o;}}else{q=l.toFixed(b)+"";}}p=q.split(/\D/);if(l>=1000){g=p[0].length%3||3;p[0]=p[0].slice(0,g)+p[0].slice(g).replace(/(\d{3})/g,r+"$1");}return YAHOO.util.Number.format._applyFormat((e<0?f:k.format),p.join(k.decimalSeparator),k);}};YAHOO.util.Number.format.defaults={format:"{prefix}{number}{suffix}",negativeFormat:null,decimalSeparator:".",decimalPlaces:null,thousandsSeparator:""};YAHOO.util.Number.format._applyFormat=function(a,b,c){return a.replace(/\{(\w+)\}/g,function(d,e){return e==="number"?b:e in c?c[e]:"";});};(function(){var a=function(c,e,d){if(typeof d==="undefined"){d=10;}for(;parseInt(c,10)<d&&d>1;d/=10){c=e.toString()+c;}return c.toString();};var b={formats:{a:function(e,c){return c.a[e.getDay()];},A:function(e,c){return c.A[e.getDay()];},b:function(e,c){return c.b[e.getMonth()];},B:function(e,c){return c.B[e.getMonth()];},C:function(c){return a(parseInt(c.getFullYear()/100,10),0);},d:["getDate","0"],e:["getDate"," "],g:function(c){return a(parseInt(b.formats.G(c)%100,10),0);},G:function(f){var g=f.getFullYear();var e=parseInt(b.formats.V(f),10);var c=parseInt(b.formats.W(f),10);if(c>e){g++;}else{if(c===0&&e>=52){g--;}}return g;},H:["getHours","0"],I:function(e){var c=e.getHours()%12;return a(c===0?12:c,0);},j:function(h){var g=new Date(""+h.getFullYear()+"/1/1 GMT");var e=new Date(""+h.getFullYear()+"/"+(h.getMonth()+1)+"/"+h.getDate()+" GMT");var c=e-g;var f=parseInt(c/60000/60/24,10)+1;return a(f,0,100);},k:["getHours"," "],l:function(e){var c=e.getHours()%12;return a(c===0?12:c," ");},m:function(c){return a(c.getMonth()+1,0);},M:["getMinutes","0"],p:function(e,c){return c.p[e.getHours()>=12?1:0];},P:function(e,c){return c.P[e.getHours()>=12?1:0];},s:function(e,c){return parseInt(e.getTime()/1000,10);},S:["getSeconds","0"],u:function(c){var e=c.getDay();return e===0?7:e;},U:function(g){var c=parseInt(b.formats.j(g),10);var f=6-g.getDay();var e=parseInt((c+f)/7,10);return a(e,0);},V:function(g){var f=parseInt(b.formats.W(g),10);var c=(new Date(""+g.getFullYear()+"/1/1")).getDay();var e=f+(c>4||c<=1?0:1);if(e===53&&(new Date(""+g.getFullYear()+"/12/31")).getDay()<4){e=1;}else{if(e===0){e=b.formats.V(new Date(""+(g.getFullYear()-1)+"/12/31"));}}return a(e,0);},w:"getDay",W:function(g){var c=parseInt(b.formats.j(g),10);var f=7-b.formats.u(g);var e=parseInt((c+f)/7,10);
return a(e,0,10);},y:function(c){return a(c.getFullYear()%100,0);},Y:"getFullYear",z:function(f){var e=f.getTimezoneOffset();var c=a(parseInt(Math.abs(e/60),10),0);var g=a(Math.abs(e%60),0);return(e>0?"-":"+")+c+g;},Z:function(c){var e=c.toString().replace(/^.*:\d\d( GMT[+-]\d+)? \(?([A-Za-z ]+)\)?\d*$/,"$2").replace(/[a-z ]/g,"");if(e.length>4){e=b.formats.z(c);}return e;},"%":function(c){return"%";}},aggregates:{c:"locale",D:"%m/%d/%y",F:"%Y-%m-%d",h:"%b",n:"\n",r:"locale",R:"%H:%M",t:"\t",T:"%H:%M:%S",x:"locale",X:"locale"},format:function(g,f,d){f=f||{};if(!(g instanceof Date)){return YAHOO.lang.isValue(g)?g:"";}var h=f.format||"%m/%d/%Y";if(h==="YYYY/MM/DD"){h="%Y/%m/%d";}else{if(h==="DD/MM/YYYY"){h="%d/%m/%Y";}else{if(h==="MM/DD/YYYY"){h="%m/%d/%Y";}}}d=d||"en";if(!(d in YAHOO.util.DateLocale)){if(d.replace(/-[a-zA-Z]+$/,"") in YAHOO.util.DateLocale){d=d.replace(/-[a-zA-Z]+$/,"");}else{d="en";}}var j=YAHOO.util.DateLocale[d];var c=function(l,k){var m=b.aggregates[k];return(m==="locale"?j[k]:m);};var e=function(l,k){var m=b.formats[k];if(typeof m==="string"){return g[m]();}else{if(typeof m==="function"){return m.call(g,g,j);}else{if(typeof m==="object"&&typeof m[0]==="string"){return a(g[m[0]](),m[1]);}else{return k;}}}};while(h.match(/%[cDFhnrRtTxX]/)){h=h.replace(/%([cDFhnrRtTxX])/g,c);}var i=h.replace(/%([aAbBCdegGHIjklmMpPsSuUVwWyYzZ%])/g,e);c=e=undefined;return i;}};YAHOO.namespace("YAHOO.util");YAHOO.util.Date=b;YAHOO.util.DateLocale={a:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],A:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],b:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],B:["January","February","March","April","May","June","July","August","September","October","November","December"],c:"%a %d %b %Y %T %Z",p:["AM","PM"],P:["am","pm"],r:"%I:%M:%S %p",x:"%d/%m/%y",X:"%T"};YAHOO.util.DateLocale["en"]=YAHOO.lang.merge(YAHOO.util.DateLocale,{});YAHOO.util.DateLocale["en-US"]=YAHOO.lang.merge(YAHOO.util.DateLocale["en"],{c:"%a %d %b %Y %I:%M:%S %p %Z",x:"%m/%d/%Y",X:"%I:%M:%S %p"});YAHOO.util.DateLocale["en-GB"]=YAHOO.lang.merge(YAHOO.util.DateLocale["en"],{r:"%l:%M:%S %P %Z"});YAHOO.util.DateLocale["en-AU"]=YAHOO.lang.merge(YAHOO.util.DateLocale["en"]);})();YAHOO.register("datasource",YAHOO.util.DataSource,{version:"2.9.0",build:"2800"});

/********* ../yui/json/json-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){var l=YAHOO.lang,isFunction=l.isFunction,isObject=l.isObject,isArray=l.isArray,_toStr=Object.prototype.toString,Native=(YAHOO.env.ua.caja?window:this).JSON,_UNICODE_EXCEPTIONS=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,_ESCAPES=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,_VALUES=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,_BRACKETS=/(?:^|:|,)(?:\s*\[)+/g,_UNSAFE=/[^\],:{}\s]/,_SPECIAL_CHARS=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,_CHARS={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},UNDEFINED="undefined",OBJECT="object",NULL="null",STRING="string",NUMBER="number",BOOLEAN="boolean",DATE="date",_allowable={"undefined":UNDEFINED,"string":STRING,"[object String]":STRING,"number":NUMBER,"[object Number]":NUMBER,"boolean":BOOLEAN,"[object Boolean]":BOOLEAN,"[object Date]":DATE,"[object RegExp]":OBJECT},EMPTY="",OPEN_O="{",CLOSE_O="}",OPEN_A="[",CLOSE_A="]",COMMA=",",COMMA_CR=",\n",CR="\n",COLON=":",COLON_SP=": ",QUOTE='"';Native=_toStr.call(Native)==="[object JSON]"&&Native;function _char(c){if(!_CHARS[c]){_CHARS[c]="\\u"+("0000"+(+(c.charCodeAt(0))).toString(16)).slice(-4);}return _CHARS[c];}function _revive(data,reviver){var walk=function(o,key){var k,v,value=o[key];if(value&&typeof value==="object"){for(k in value){if(l.hasOwnProperty(value,k)){v=walk(value,k);if(v===undefined){delete value[k];}else{value[k]=v;}}}}return reviver.call(o,key,value);};return typeof reviver==="function"?walk({"":data},""):data;}function _prepare(s){return s.replace(_UNICODE_EXCEPTIONS,_char);}function _isSafe(str){return l.isString(str)&&!_UNSAFE.test(str.replace(_ESCAPES,"@").replace(_VALUES,"]").replace(_BRACKETS,""));}function _parse(s,reviver){s=_prepare(s);if(_isSafe(s)){return _revive(eval("("+s+")"),reviver);}throw new SyntaxError("JSON.parse");}function _type(o){var t=typeof o;return _allowable[t]||_allowable[_toStr.call(o)]||(t===OBJECT?(o?OBJECT:NULL):UNDEFINED);}function _string(s){return QUOTE+s.replace(_SPECIAL_CHARS,_char)+QUOTE;}function _indent(s,space){return s.replace(/^/gm,space);}function _stringify(o,w,space){if(o===undefined){return undefined;}var replacer=isFunction(w)?w:null,format=_toStr.call(space).match(/String|Number/)||[],_date=YAHOO.lang.JSON.dateToString,stack=[],tmp,i,len;if(replacer||!isArray(w)){w=undefined;}if(w){tmp={};for(i=0,len=w.length;i<len;++i){tmp[w[i]]=true;}w=tmp;}space=format[0]==="Number"?new Array(Math.min(Math.max(0,space),10)+1).join(" "):(space||EMPTY).slice(0,10);function _serialize(h,key){var value=h[key],t=_type(value),a=[],colon=space?COLON_SP:COLON,arr,i,keys,k,v;if(isObject(value)&&isFunction(value.toJSON)){value=value.toJSON(key);}else{if(t===DATE){value=_date(value);}}if(isFunction(replacer)){value=replacer.call(h,key,value);}if(value!==h[key]){t=_type(value);}switch(t){case DATE:case OBJECT:break;case STRING:return _string(value);case NUMBER:return isFinite(value)?value+EMPTY:NULL;case BOOLEAN:return value+EMPTY;case NULL:return NULL;default:return undefined;}for(i=stack.length-1;i>=0;--i){if(stack[i]===value){throw new Error("JSON.stringify. Cyclical reference");}}arr=isArray(value);stack.push(value);if(arr){for(i=value.length-1;i>=0;--i){a[i]=_serialize(value,i)||NULL;}}else{keys=w||value;i=0;for(k in keys){if(l.hasOwnProperty(keys,k)){v=_serialize(value,k);if(v){a[i++]=_string(k)+colon+v;}}}}stack.pop();if(space&&a.length){return arr?OPEN_A+CR+_indent(a.join(COMMA_CR),space)+CR+CLOSE_A:OPEN_O+CR+_indent(a.join(COMMA_CR),space)+CR+CLOSE_O;}else{return arr?OPEN_A+a.join(COMMA)+CLOSE_A:OPEN_O+a.join(COMMA)+CLOSE_O;}}return _serialize({"":o},"");}YAHOO.lang.JSON={useNativeParse:!!Native,useNativeStringify:!!Native,isSafe:function(s){return _isSafe(_prepare(s));},parse:function(s,reviver){if(typeof s!=="string"){s+="";}return Native&&YAHOO.lang.JSON.useNativeParse?Native.parse(s,reviver):_parse(s,reviver);},stringify:function(o,w,space){return Native&&YAHOO.lang.JSON.useNativeStringify?Native.stringify(o,w,space):_stringify(o,w,space);},dateToString:function(d){function _zeroPad(v){return v<10?"0"+v:v;}return d.getUTCFullYear()+"-"+_zeroPad(d.getUTCMonth()+1)+"-"+_zeroPad(d.getUTCDate())+"T"+_zeroPad(d.getUTCHours())+COLON+_zeroPad(d.getUTCMinutes())+COLON+_zeroPad(d.getUTCSeconds())+"Z";},stringToDate:function(str){var m=str.match(/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})(?:\.(\d{3}))?Z$/);if(m){var d=new Date();d.setUTCFullYear(m[1],m[2]-1,m[3]);d.setUTCHours(m[4],m[5],m[6],(m[7]||0));return d;}return str;}};YAHOO.lang.JSON.isValid=YAHOO.lang.JSON.isSafe;})();YAHOO.register("json",YAHOO.lang.JSON,{version:"2.9.0",build:"2800"});

/********* ../yui/resize/resize-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){var E=YAHOO.util.Dom,A=YAHOO.util.Event,C=YAHOO.lang;var B=function(F,D){var G={element:F,attributes:D||{}};B.superclass.constructor.call(this,G.element,G.attributes);};B._instances={};B.getResizeById=function(D){if(B._instances[D]){return B._instances[D];}return false;};YAHOO.extend(B,YAHOO.util.Element,{CSS_RESIZE:"yui-resize",CSS_DRAG:"yui-draggable",CSS_HOVER:"yui-resize-hover",CSS_PROXY:"yui-resize-proxy",CSS_WRAP:"yui-resize-wrap",CSS_KNOB:"yui-resize-knob",CSS_HIDDEN:"yui-resize-hidden",CSS_HANDLE:"yui-resize-handle",CSS_STATUS:"yui-resize-status",CSS_GHOST:"yui-resize-ghost",CSS_RESIZING:"yui-resize-resizing",_resizeEvent:null,dd:null,browser:YAHOO.env.ua,_locked:null,_positioned:null,_dds:null,_wrap:null,_proxy:null,_handles:null,_currentHandle:null,_currentDD:null,_cache:null,_active:null,_createProxy:function(){if(this.get("proxy")){this._proxy=document.createElement("div");this._proxy.className=this.CSS_PROXY;this._proxy.style.height=this.get("element").clientHeight+"px";this._proxy.style.width=this.get("element").clientWidth+"px";this._wrap.parentNode.appendChild(this._proxy);}else{this.set("animate",false);}},_createWrap:function(){this._positioned=false;if(this.get("wrap")===false){switch(this.get("element").tagName.toLowerCase()){case"img":case"textarea":case"input":case"iframe":case"select":this.set("wrap",true);break;}}if(this.get("wrap")===true){this._wrap=document.createElement("div");this._wrap.id=this.get("element").id+"_wrap";this._wrap.className=this.CSS_WRAP;if(this.get("element").tagName.toLowerCase()=="textarea"){E.addClass(this._wrap,"yui-resize-textarea");}E.setStyle(this._wrap,"width",this.get("width")+"px");E.setStyle(this._wrap,"height",this.get("height")+"px");E.setStyle(this._wrap,"z-index",this.getStyle("z-index"));this.setStyle("z-index",0);var F=E.getStyle(this.get("element"),"position");E.setStyle(this._wrap,"position",((F=="static")?"relative":F));E.setStyle(this._wrap,"top",E.getStyle(this.get("element"),"top"));E.setStyle(this._wrap,"left",E.getStyle(this.get("element"),"left"));if(E.getStyle(this.get("element"),"position")=="absolute"){this._positioned=true;E.setStyle(this.get("element"),"position","relative");E.setStyle(this.get("element"),"top","0");E.setStyle(this.get("element"),"left","0");}var D=this.get("element").parentNode;D.replaceChild(this._wrap,this.get("element"));this._wrap.appendChild(this.get("element"));}else{this._wrap=this.get("element");if(E.getStyle(this._wrap,"position")=="absolute"){this._positioned=true;}}if(this.get("draggable")){this._setupDragDrop();}if(this.get("hover")){E.addClass(this._wrap,this.CSS_HOVER);}if(this.get("knobHandles")){E.addClass(this._wrap,this.CSS_KNOB);}if(this.get("hiddenHandles")){E.addClass(this._wrap,this.CSS_HIDDEN);}E.addClass(this._wrap,this.CSS_RESIZE);},_setupDragDrop:function(){E.addClass(this._wrap,this.CSS_DRAG);this.dd=new YAHOO.util.DD(this._wrap,this.get("id")+"-resize",{dragOnly:true,useShim:this.get("useShim")});this.dd.on("dragEvent",function(){this.fireEvent("dragEvent",arguments);},this,true);},_createHandles:function(){this._handles={};this._dds={};var G=this.get("handles");for(var F=0;F<G.length;F++){this._handles[G[F]]=document.createElement("div");this._handles[G[F]].id=E.generateId(this._handles[G[F]]);this._handles[G[F]].className=this.CSS_HANDLE+" "+this.CSS_HANDLE+"-"+G[F];var D=document.createElement("div");D.className=this.CSS_HANDLE+"-inner-"+G[F];this._handles[G[F]].appendChild(D);this._wrap.appendChild(this._handles[G[F]]);A.on(this._handles[G[F]],"mouseover",this._handleMouseOver,this,true);A.on(this._handles[G[F]],"mouseout",this._handleMouseOut,this,true);this._dds[G[F]]=new YAHOO.util.DragDrop(this._handles[G[F]],this.get("id")+"-handle-"+G,{useShim:this.get("useShim")});this._dds[G[F]].setPadding(15,15,15,15);this._dds[G[F]].on("startDragEvent",this._handleStartDrag,this._dds[G[F]],this);this._dds[G[F]].on("mouseDownEvent",this._handleMouseDown,this._dds[G[F]],this);}this._status=document.createElement("span");this._status.className=this.CSS_STATUS;document.body.insertBefore(this._status,document.body.firstChild);},_ieSelectFix:function(){return false;},_ieSelectBack:null,_setAutoRatio:function(D){if(this.get("autoRatio")){if(D&&D.shiftKey){this.set("ratio",true);}else{this.set("ratio",this._configs.ratio._initialConfig.value);}}},_handleMouseDown:function(D){if(this._locked){return false;}if(E.getStyle(this._wrap,"position")=="absolute"){this._positioned=true;}if(D){this._setAutoRatio(D);}if(this.browser.ie){this._ieSelectBack=document.body.onselectstart;document.body.onselectstart=this._ieSelectFix;}},_handleMouseOver:function(G){if(this._locked){return false;}E.removeClass(this._wrap,this.CSS_RESIZE);if(this.get("hover")){E.removeClass(this._wrap,this.CSS_HOVER);}var D=A.getTarget(G);if(!E.hasClass(D,this.CSS_HANDLE)){D=D.parentNode;}if(E.hasClass(D,this.CSS_HANDLE)&&!this._active){E.addClass(D,this.CSS_HANDLE+"-active");for(var F in this._handles){if(C.hasOwnProperty(this._handles,F)){if(this._handles[F]==D){E.addClass(D,this.CSS_HANDLE+"-"+F+"-active");break;}}}}E.addClass(this._wrap,this.CSS_RESIZE);},_handleMouseOut:function(G){E.removeClass(this._wrap,this.CSS_RESIZE);if(this.get("hover")&&!this._active){E.addClass(this._wrap,this.CSS_HOVER);}var D=A.getTarget(G);if(!E.hasClass(D,this.CSS_HANDLE)){D=D.parentNode;}if(E.hasClass(D,this.CSS_HANDLE)&&!this._active){E.removeClass(D,this.CSS_HANDLE+"-active");for(var F in this._handles){if(C.hasOwnProperty(this._handles,F)){if(this._handles[F]==D){E.removeClass(D,this.CSS_HANDLE+"-"+F+"-active");break;}}}}E.addClass(this._wrap,this.CSS_RESIZE);},_handleStartDrag:function(G,F){var D=F.getDragEl();if(E.hasClass(D,this.CSS_HANDLE)){if(E.getStyle(this._wrap,"position")=="absolute"){this._positioned=true;}this._active=true;this._currentDD=F;if(this._proxy){this._proxy.style.visibility="visible";this._proxy.style.zIndex="1000";this._proxy.style.height=this.get("element").clientHeight+"px";this._proxy.style.width=this.get("element").clientWidth+"px";
}for(var H in this._handles){if(C.hasOwnProperty(this._handles,H)){if(this._handles[H]==D){this._currentHandle=H;var I="_handle_for_"+H;E.addClass(D,this.CSS_HANDLE+"-"+H+"-active");F.on("dragEvent",this[I],this,true);F.on("mouseUpEvent",this._handleMouseUp,this,true);break;}}}E.addClass(D,this.CSS_HANDLE+"-active");if(this.get("proxy")){var J=E.getXY(this.get("element"));E.setXY(this._proxy,J);if(this.get("ghost")){this.addClass(this.CSS_GHOST);}}E.addClass(this._wrap,this.CSS_RESIZING);this._setCache();this._updateStatus(this._cache.height,this._cache.width,this._cache.top,this._cache.left);this.fireEvent("startResize",{type:"startresize",target:this});}},_setCache:function(){this._cache.xy=E.getXY(this._wrap);E.setXY(this._wrap,this._cache.xy);this._cache.height=this.get("clientHeight");this._cache.width=this.get("clientWidth");this._cache.start.height=this._cache.height;this._cache.start.width=this._cache.width;this._cache.start.top=this._cache.xy[1];this._cache.start.left=this._cache.xy[0];this._cache.top=this._cache.xy[1];this._cache.left=this._cache.xy[0];this.set("height",this._cache.height,true);this.set("width",this._cache.width,true);},_handleMouseUp:function(F){this._active=false;var G="_handle_for_"+this._currentHandle;this._currentDD.unsubscribe("dragEvent",this[G],this,true);this._currentDD.unsubscribe("mouseUpEvent",this._handleMouseUp,this,true);if(this._proxy){this._proxy.style.visibility="hidden";this._proxy.style.zIndex="-1";if(this.get("setSize")){this.resize(F,this._cache.height,this._cache.width,this._cache.top,this._cache.left,true);}else{this.fireEvent("resize",{ev:"resize",target:this,height:this._cache.height,width:this._cache.width,top:this._cache.top,left:this._cache.left});}if(this.get("ghost")){this.removeClass(this.CSS_GHOST);}}if(this.get("hover")){E.addClass(this._wrap,this.CSS_HOVER);}if(this._status){E.setStyle(this._status,"display","none");}if(this.browser.ie){document.body.onselectstart=this._ieSelectBack;}if(this.browser.ie){E.removeClass(this._wrap,this.CSS_RESIZE);}for(var D in this._handles){if(C.hasOwnProperty(this._handles,D)){E.removeClass(this._handles[D],this.CSS_HANDLE+"-active");}}if(this.get("hover")&&!this._active){E.addClass(this._wrap,this.CSS_HOVER);}E.removeClass(this._wrap,this.CSS_RESIZING);E.removeClass(this._handles[this._currentHandle],this.CSS_HANDLE+"-"+this._currentHandle+"-active");E.removeClass(this._handles[this._currentHandle],this.CSS_HANDLE+"-active");if(this.browser.ie){E.addClass(this._wrap,this.CSS_RESIZE);}this._resizeEvent=null;this._currentHandle=null;if(!this.get("animate")){this.set("height",this._cache.height,true);this.set("width",this._cache.width,true);}this.fireEvent("endResize",{ev:"endResize",target:this,height:this._cache.height,width:this._cache.width,top:this._cache.top,left:this._cache.left});},_setRatio:function(K,N,Q,I){var O=K,G=N;if(this.get("ratio")){var P=this._cache.height,H=this._cache.width,F=parseInt(this.get("height"),10),L=parseInt(this.get("width"),10),M=this.get("maxHeight"),R=this.get("minHeight"),D=this.get("maxWidth"),J=this.get("minWidth");switch(this._currentHandle){case"l":K=F*(N/L);K=Math.min(Math.max(R,K),M);N=L*(K/F);Q=(this._cache.start.top-(-((F-K)/2)));I=(this._cache.start.left-(-((L-N))));break;case"r":K=F*(N/L);K=Math.min(Math.max(R,K),M);N=L*(K/F);Q=(this._cache.start.top-(-((F-K)/2)));break;case"t":N=L*(K/F);K=F*(N/L);I=(this._cache.start.left-(-((L-N)/2)));Q=(this._cache.start.top-(-((F-K))));break;case"b":N=L*(K/F);K=F*(N/L);I=(this._cache.start.left-(-((L-N)/2)));break;case"bl":K=F*(N/L);N=L*(K/F);I=(this._cache.start.left-(-((L-N))));break;case"br":K=F*(N/L);N=L*(K/F);break;case"tl":K=F*(N/L);N=L*(K/F);I=(this._cache.start.left-(-((L-N))));Q=(this._cache.start.top-(-((F-K))));break;case"tr":K=F*(N/L);N=L*(K/F);I=(this._cache.start.left);Q=(this._cache.start.top-(-((F-K))));break;}O=this._checkHeight(K);G=this._checkWidth(N);if((O!=K)||(G!=N)){Q=0;I=0;if(O!=K){G=this._cache.width;}if(G!=N){O=this._cache.height;}}}return[O,G,Q,I];},_updateStatus:function(K,G,J,F){if(this._resizeEvent&&(!C.isString(this._resizeEvent))){K=((K===0)?this._cache.start.height:K);G=((G===0)?this._cache.start.width:G);var I=parseInt(this.get("height"),10),D=parseInt(this.get("width"),10);if(isNaN(I)){I=parseInt(K,10);}if(isNaN(D)){D=parseInt(G,10);}var L=(parseInt(K,10)-I);var H=(parseInt(G,10)-D);this._cache.offsetHeight=L;this._cache.offsetWidth=H;if(this.get("status")){E.setStyle(this._status,"display","inline");this._status.innerHTML="<strong>"+parseInt(K,10)+" x "+parseInt(G,10)+"</strong><em>"+((L>0)?"+":"")+L+" x "+((H>0)?"+":"")+H+"</em>";E.setXY(this._status,[A.getPageX(this._resizeEvent)+12,A.getPageY(this._resizeEvent)+12]);}}},lock:function(D){this._locked=true;if(D&&this.dd){E.removeClass(this._wrap,"yui-draggable");this.dd.lock();}return this;},unlock:function(D){this._locked=false;if(D&&this.dd){E.addClass(this._wrap,"yui-draggable");this.dd.unlock();}return this;},isLocked:function(){return this._locked;},reset:function(){this.resize(null,this._cache.start.height,this._cache.start.width,this._cache.start.top,this._cache.start.left,true);return this;},resize:function(M,J,P,Q,H,F,K){if(this._locked){return false;}this._resizeEvent=M;var G=this._wrap,I=this.get("animate"),O=true;if(this._proxy&&!F){G=this._proxy;I=false;}this._setAutoRatio(M);if(this._positioned){if(this._proxy){Q=this._cache.top-Q;H=this._cache.left-H;}}var L=this._setRatio(J,P,Q,H);J=parseInt(L[0],10);P=parseInt(L[1],10);Q=parseInt(L[2],10);H=parseInt(L[3],10);if(Q==0){Q=E.getY(G);}if(H==0){H=E.getX(G);}if(this._positioned){if(this._proxy&&F){if(!I){G.style.top=this._proxy.style.top;G.style.left=this._proxy.style.left;}else{Q=this._proxy.style.top;H=this._proxy.style.left;}}else{if(!this.get("ratio")&&!this._proxy){Q=this._cache.top+-(Q);H=this._cache.left+-(H);}if(Q){if(this.get("minY")){if(Q<this.get("minY")){Q=this.get("minY");}}if(this.get("maxY")){if(Q>this.get("maxY")){Q=this.get("maxY");}}}if(H){if(this.get("minX")){if(H<this.get("minX")){H=this.get("minX");
}}if(this.get("maxX")){if((H+P)>this.get("maxX")){H=(this.get("maxX")-P);}}}}}if(!K){var N=this.fireEvent("beforeResize",{ev:"beforeResize",target:this,height:J,width:P,top:Q,left:H});if(N===false){return false;}}this._updateStatus(J,P,Q,H);if(this._positioned){if(this._proxy&&F){}else{if(Q){E.setY(G,Q);this._cache.top=Q;}if(H){E.setX(G,H);this._cache.left=H;}}}if(J){if(!I){O=true;if(this._proxy&&F){if(!this.get("setSize")){O=false;}}if(O){G.style.height=J+"px";}if((this._proxy&&F)||!this._proxy){if(this._wrap!=this.get("element")){this.get("element").style.height=J+"px";}}}this._cache.height=J;}if(P){this._cache.width=P;if(!I){O=true;if(this._proxy&&F){if(!this.get("setSize")){O=false;}}if(O){G.style.width=P+"px";}if((this._proxy&&F)||!this._proxy){if(this._wrap!=this.get("element")){this.get("element").style.width=P+"px";}}}}if(I){if(YAHOO.util.Anim){var D=new YAHOO.util.Anim(G,{height:{to:this._cache.height},width:{to:this._cache.width}},this.get("animateDuration"),this.get("animateEasing"));if(this._positioned){if(Q){D.attributes.top={to:parseInt(Q,10)};}if(H){D.attributes.left={to:parseInt(H,10)};}}if(this._wrap!=this.get("element")){D.onTween.subscribe(function(){this.get("element").style.height=G.style.height;this.get("element").style.width=G.style.width;},this,true);}D.onComplete.subscribe(function(){this.set("height",J);this.set("width",P);this.fireEvent("resize",{ev:"resize",target:this,height:J,width:P,top:Q,left:H});},this,true);D.animate();}}else{if(this._proxy&&!F){this.fireEvent("proxyResize",{ev:"proxyresize",target:this,height:J,width:P,top:Q,left:H});}else{this.fireEvent("resize",{ev:"resize",target:this,height:J,width:P,top:Q,left:H});}}return this;},_handle_for_br:function(F){var G=this._setWidth(F.e);var D=this._setHeight(F.e);this.resize(F.e,D,G,0,0);},_handle_for_bl:function(G){var H=this._setWidth(G.e,true);var F=this._setHeight(G.e);var D=(H-this._cache.width);this.resize(G.e,F,H,0,D);},_handle_for_tl:function(G){var I=this._setWidth(G.e,true);var F=this._setHeight(G.e,true);var H=(F-this._cache.height);var D=(I-this._cache.width);this.resize(G.e,F,I,H,D);},_handle_for_tr:function(F){var H=this._setWidth(F.e);var D=this._setHeight(F.e,true);var G=(D-this._cache.height);this.resize(F.e,D,H,G,0);},_handle_for_r:function(D){this._dds.r.setYConstraint(0,0);var F=this._setWidth(D.e);this.resize(D.e,0,F,0,0);},_handle_for_l:function(F){this._dds.l.setYConstraint(0,0);var G=this._setWidth(F.e,true);var D=(G-this._cache.width);this.resize(F.e,0,G,0,D);},_handle_for_b:function(F){this._dds.b.setXConstraint(0,0);var D=this._setHeight(F.e);this.resize(F.e,D,0,0,0);},_handle_for_t:function(F){this._dds.t.setXConstraint(0,0);var D=this._setHeight(F.e,true);var G=(D-this._cache.height);this.resize(F.e,D,0,G,0);},_setWidth:function(H,J){var I=this._cache.xy[0],G=this._cache.width,D=A.getPageX(H),F=(D-I);if(J){F=(I-D)+parseInt(this.get("width"),10);}F=this._snapTick(F,this.get("xTicks"));F=this._checkWidth(F);return F;},_checkWidth:function(D){if(this.get("minWidth")){if(D<=this.get("minWidth")){D=this.get("minWidth");}}if(this.get("maxWidth")){if(D>=this.get("maxWidth")){D=this.get("maxWidth");}}return D;},_checkHeight:function(D){if(this.get("minHeight")){if(D<=this.get("minHeight")){D=this.get("minHeight");}}if(this.get("maxHeight")){if(D>=this.get("maxHeight")){D=this.get("maxHeight");}}return D;},_setHeight:function(G,I){var H=this._cache.xy[1],F=this._cache.height,J=A.getPageY(G),D=(J-H);if(I){D=(H-J)+parseInt(this.get("height"),10);}D=this._snapTick(D,this.get("yTicks"));D=this._checkHeight(D);return D;},_snapTick:function(G,F){if(!G||!F){return G;}var H=G;var D=G%F;if(D>0){if(D>(F/2)){H=G+(F-D);}else{H=G-D;}}return H;},init:function(H,F){this._locked=false;this._cache={xy:[],height:0,width:0,top:0,left:0,offsetHeight:0,offsetWidth:0,start:{height:0,width:0,top:0,left:0}};B.superclass.init.call(this,H,F);this.set("setSize",this.get("setSize"));if(F.height){this.set("height",parseInt(F.height,10));}else{var G=this.getStyle("height");if(G=="auto"){this.set("height",parseInt(this.get("element").offsetHeight,10));}}if(F.width){this.set("width",parseInt(F.width,10));}else{var D=this.getStyle("width");if(D=="auto"){this.set("width",parseInt(this.get("element").offsetWidth,10));}}var I=H;if(!C.isString(I)){I=E.generateId(I);}B._instances[I]=this;this._active=false;this._createWrap();this._createProxy();this._createHandles();},getProxyEl:function(){return this._proxy;},getWrapEl:function(){return this._wrap;},getStatusEl:function(){return this._status;},getActiveHandleEl:function(){return this._handles[this._currentHandle];},isActive:function(){return((this._active)?true:false);},initAttributes:function(D){B.superclass.initAttributes.call(this,D);this.setAttributeConfig("useShim",{value:((D.useShim===true)?true:false),validator:YAHOO.lang.isBoolean,method:function(F){for(var G in this._dds){if(C.hasOwnProperty(this._dds,G)){this._dds[G].useShim=F;}}if(this.dd){this.dd.useShim=F;}}});this.setAttributeConfig("setSize",{value:((D.setSize===false)?false:true),validator:YAHOO.lang.isBoolean});this.setAttributeConfig("wrap",{writeOnce:true,validator:YAHOO.lang.isBoolean,value:D.wrap||false});this.setAttributeConfig("handles",{writeOnce:true,value:D.handles||["r","b","br"],validator:function(F){if(C.isString(F)&&F.toLowerCase()=="all"){F=["t","b","r","l","bl","br","tl","tr"];}if(!C.isArray(F)){F=F.replace(/, /g,",");F=F.split(",");}this._configs.handles.value=F;}});this.setAttributeConfig("width",{value:D.width||parseInt(this.getStyle("width"),10),validator:YAHOO.lang.isNumber,method:function(F){F=parseInt(F,10);if(F>0){if(this.get("setSize")){this.setStyle("width",F+"px");}this._cache.width=F;this._configs.width.value=F;}}});this.setAttributeConfig("height",{value:D.height||parseInt(this.getStyle("height"),10),validator:YAHOO.lang.isNumber,method:function(F){F=parseInt(F,10);if(F>0){if(this.get("setSize")){this.setStyle("height",F+"px");}this._cache.height=F;this._configs.height.value=F;
}}});this.setAttributeConfig("minWidth",{value:D.minWidth||15,validator:YAHOO.lang.isNumber});this.setAttributeConfig("minHeight",{value:D.minHeight||15,validator:YAHOO.lang.isNumber});this.setAttributeConfig("maxWidth",{value:D.maxWidth||10000,validator:YAHOO.lang.isNumber});this.setAttributeConfig("maxHeight",{value:D.maxHeight||10000,validator:YAHOO.lang.isNumber});this.setAttributeConfig("minY",{value:D.minY||false});this.setAttributeConfig("minX",{value:D.minX||false});this.setAttributeConfig("maxY",{value:D.maxY||false});this.setAttributeConfig("maxX",{value:D.maxX||false});this.setAttributeConfig("animate",{value:D.animate||false,validator:function(G){var F=true;if(!YAHOO.util.Anim){F=false;}return F;}});this.setAttributeConfig("animateEasing",{value:D.animateEasing||function(){var F=false;if(YAHOO.util.Easing&&YAHOO.util.Easing.easeOut){F=YAHOO.util.Easing.easeOut;}return F;}()});this.setAttributeConfig("animateDuration",{value:D.animateDuration||0.5});this.setAttributeConfig("proxy",{value:D.proxy||false,validator:YAHOO.lang.isBoolean});this.setAttributeConfig("ratio",{value:D.ratio||false,validator:YAHOO.lang.isBoolean});this.setAttributeConfig("ghost",{value:D.ghost||false,validator:YAHOO.lang.isBoolean});this.setAttributeConfig("draggable",{value:D.draggable||false,validator:YAHOO.lang.isBoolean,method:function(F){if(F&&this._wrap&&!this.dd){this._setupDragDrop();}else{if(this.dd){if(F){E.addClass(this._wrap,this.CSS_DRAG);this.dd.DDM.regDragDrop(this.dd,"default");}else{E.removeClass(this._wrap,this.CSS_DRAG);this.dd.unreg();}}}}});this.setAttributeConfig("hover",{value:D.hover||false,validator:YAHOO.lang.isBoolean});this.setAttributeConfig("hiddenHandles",{value:D.hiddenHandles||false,validator:YAHOO.lang.isBoolean});this.setAttributeConfig("knobHandles",{value:D.knobHandles||false,validator:YAHOO.lang.isBoolean});this.setAttributeConfig("xTicks",{value:D.xTicks||false});this.setAttributeConfig("yTicks",{value:D.yTicks||false});this.setAttributeConfig("status",{value:D.status||false,validator:YAHOO.lang.isBoolean});this.setAttributeConfig("autoRatio",{value:D.autoRatio||false,validator:YAHOO.lang.isBoolean});},destroy:function(){for(var F in this._handles){if(C.hasOwnProperty(this._handles,F)){A.purgeElement(this._handles[F]);this._handles[F].parentNode.removeChild(this._handles[F]);}}if(this._proxy){this._proxy.parentNode.removeChild(this._proxy);}if(this._status){this._status.parentNode.removeChild(this._status);}if(this.dd){this.dd.unreg();E.removeClass(this._wrap,this.CSS_DRAG);}if(this._wrap!=this.get("element")){this.setStyle("position",(this._positioned?"absolute":"relative"));this.setStyle("top",E.getStyle(this._wrap,"top"));this.setStyle("left",E.getStyle(this._wrap,"left"));this._wrap.parentNode.replaceChild(this.get("element"),this._wrap);}this.removeClass(this.CSS_RESIZE);delete YAHOO.util.Resize._instances[this.get("id")];for(var D in this){if(C.hasOwnProperty(this,D)){this[D]=null;delete this[D];}}},toString:function(){if(this.get){return"Resize (#"+this.get("id")+")";}return"Resize Utility";}});YAHOO.util.Resize=B;})();YAHOO.register("resize",YAHOO.util.Resize,{version:"2.9.0",build:"2800"});

/********* ../yui/layout/layout-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){var C=YAHOO.util.Dom,A=YAHOO.util.Event,D=YAHOO.lang;var B=function(F,E){if(D.isObject(F)&&!F.tagName){E=F;F=null;}if(D.isString(F)){if(C.get(F)){F=C.get(F);}}if(!F){F=document.body;}var G={element:F,attributes:E||{}};B.superclass.constructor.call(this,G.element,G.attributes);};B._instances={};B.getLayoutById=function(E){if(B._instances[E]){return B._instances[E];}return false;};YAHOO.extend(B,YAHOO.util.Element,{browser:function(){var E=YAHOO.env.ua;E.standardsMode=false;E.secure=false;return E;}(),_units:null,_rendered:null,_zIndex:null,_sizes:null,_setBodySize:function(G){var F=0,E=0;G=((G===false)?false:true);if(this._isBody){F=C.getClientHeight();E=C.getClientWidth();}else{F=parseInt(this.getStyle("height"),10);E=parseInt(this.getStyle("width"),10);if(isNaN(E)){E=this.get("element").clientWidth;}if(isNaN(F)){F=this.get("element").clientHeight;}}if(this.get("minWidth")){if(E<this.get("minWidth")){E=this.get("minWidth");}}if(this.get("minHeight")){if(F<this.get("minHeight")){F=this.get("minHeight");}}if(G){if(F<0){F=0;}if(E<0){E=0;}C.setStyle(this._doc,"height",F+"px");C.setStyle(this._doc,"width",E+"px");}this._sizes.doc={h:F,w:E};this._setSides(G);},_setSides:function(J){var H=((this._units.top)?this._units.top.get("height"):0),G=((this._units.bottom)?this._units.bottom.get("height"):0),I=this._sizes.doc.h,E=this._sizes.doc.w;J=((J===false)?false:true);this._sizes.top={h:H,w:((this._units.top)?E:0),t:0};this._sizes.bottom={h:G,w:((this._units.bottom)?E:0)};var F=(I-(H+G));this._sizes.left={h:F,w:((this._units.left)?this._units.left.get("width"):0)};this._sizes.right={h:F,w:((this._units.right)?this._units.right.get("width"):0),l:((this._units.right)?(E-this._units.right.get("width")):0),t:((this._units.top)?this._sizes.top.h:0)};if(this._units.right&&J){this._units.right.set("top",this._sizes.right.t);if(!this._units.right._collapsing){this._units.right.set("left",this._sizes.right.l);}this._units.right.set("height",this._sizes.right.h,true);}if(this._units.left){this._sizes.left.l=0;if(this._units.top){this._sizes.left.t=this._sizes.top.h;}else{this._sizes.left.t=0;}if(J){this._units.left.set("top",this._sizes.left.t);this._units.left.set("height",this._sizes.left.h,true);this._units.left.set("left",0);}}if(this._units.bottom){this._sizes.bottom.t=this._sizes.top.h+this._sizes.left.h;if(J){this._units.bottom.set("top",this._sizes.bottom.t);this._units.bottom.set("width",this._sizes.bottom.w,true);}}if(this._units.top){if(J){this._units.top.set("width",this._sizes.top.w,true);}}this._setCenter(J);},_setCenter:function(G){G=((G===false)?false:true);var F=this._sizes.left.h;var E=(this._sizes.doc.w-(this._sizes.left.w+this._sizes.right.w));if(G){this._units.center.set("height",F,true);this._units.center.set("width",E,true);this._units.center.set("top",this._sizes.top.h);this._units.center.set("left",this._sizes.left.w);}this._sizes.center={h:F,w:E,t:this._sizes.top.h,l:this._sizes.left.w};},getSizes:function(){return this._sizes;},getUnitById:function(E){return YAHOO.widget.LayoutUnit.getLayoutUnitById(E);},getUnitByPosition:function(E){if(E){E=E.toLowerCase();if(this._units[E]){return this._units[E];}return false;}return false;},removeUnit:function(E){delete this._units[E.get("position")];this.resize();},addUnit:function(G){if(!G.position){return false;}if(this._units[G.position]){return false;}var H=null,J=null;if(G.id){if(C.get(G.id)){H=C.get(G.id);delete G.id;}}if(G.element){H=G.element;}if(!J){J=document.createElement("div");var L=C.generateId();J.id=L;}if(!H){H=document.createElement("div");}C.addClass(H,"yui-layout-wrap");if(this.browser.ie&&!this.browser.standardsMode){J.style.zoom=1;H.style.zoom=1;}if(J.firstChild){J.insertBefore(H,J.firstChild);}else{J.appendChild(H);}this._doc.appendChild(J);var I=false,F=false;if(G.height){I=parseInt(G.height,10);}if(G.width){F=parseInt(G.width,10);}var E={};YAHOO.lang.augmentObject(E,G);E.parent=this;E.wrap=H;E.height=I;E.width=F;var K=new YAHOO.widget.LayoutUnit(J,E);K.on("heightChange",this.resize,{unit:K},this);K.on("widthChange",this.resize,{unit:K},this);K.on("gutterChange",this.resize,{unit:K},this);this._units[G.position]=K;if(this._rendered){this.resize();}return K;},_createUnits:function(){var E=this.get("units");for(var F in E){if(D.hasOwnProperty(E,F)){this.addUnit(E[F]);}}},resize:function(H,G){var E=H;if(E&&E.prevValue&&E.newValue){if(E.prevValue==E.newValue){if(G){if(G.unit){if(!G.unit.get("animate")){H=false;}}}}}H=((H===false)?false:true);if(H){var F=this.fireEvent("beforeResize");if(F===false){H=false;}if(this.browser.ie){if(this._isBody){C.removeClass(document.documentElement,"yui-layout");C.addClass(document.documentElement,"yui-layout");}else{this.removeClass("yui-layout");this.addClass("yui-layout");}}}this._setBodySize(H);if(H){this.fireEvent("resize",{target:this,sizes:this._sizes,event:E});}return this;},_setupBodyElements:function(){this._doc=C.get("layout-doc");if(!this._doc){this._doc=document.createElement("div");this._doc.id="layout-doc";if(document.body.firstChild){document.body.insertBefore(this._doc,document.body.firstChild);}else{document.body.appendChild(this._doc);}}this._createUnits();this._setBodySize();A.on(window,"resize",this.resize,this,true);C.addClass(this._doc,"yui-layout-doc");},_setupElements:function(){this._doc=this.getElementsByClassName("yui-layout-doc")[0];if(!this._doc){this._doc=document.createElement("div");this.get("element").appendChild(this._doc);}this._createUnits();this._setBodySize();C.addClass(this._doc,"yui-layout-doc");},_isBody:null,_doc:null,init:function(F,E){this._zIndex=0;B.superclass.init.call(this,F,E);if(this.get("parent")){this._zIndex=this.get("parent")._zIndex+10;}this._sizes={};this._units={};var G=F;if(!D.isString(G)){G=C.generateId(G);}B._instances[G]=this;},render:function(){this._stamp();var E=this.get("element");if(E&&E.tagName&&(E.tagName.toLowerCase()=="body")){this._isBody=true;C.addClass(document.body,"yui-layout");if(C.hasClass(document.body,"yui-skin-sam")){C.addClass(document.documentElement,"yui-skin-sam");
C.removeClass(document.body,"yui-skin-sam");}this._setupBodyElements();}else{this._isBody=false;this.addClass("yui-layout");this._setupElements();}this.resize();this._rendered=true;this.fireEvent("render");return this;},_stamp:function(){if(document.compatMode=="CSS1Compat"){this.browser.standardsMode=true;}if(window.location.href.toLowerCase().indexOf("https")===0){C.addClass(document.documentElement,"secure");this.browser.secure=true;}},initAttributes:function(E){B.superclass.initAttributes.call(this,E);this.setAttributeConfig("units",{writeOnce:true,validator:YAHOO.lang.isArray,value:E.units||[]});this.setAttributeConfig("minHeight",{value:E.minHeight||false,validator:YAHOO.lang.isNumber});this.setAttributeConfig("minWidth",{value:E.minWidth||false,validator:YAHOO.lang.isNumber});this.setAttributeConfig("height",{value:E.height||false,validator:YAHOO.lang.isNumber,method:function(F){if(F<0){F=0;}this.setStyle("height",F+"px");}});this.setAttributeConfig("width",{value:E.width||false,validator:YAHOO.lang.isNumber,method:function(F){if(F<0){F=0;}this.setStyle("width",F+"px");}});this.setAttributeConfig("parent",{writeOnce:true,value:E.parent||false,method:function(F){if(F){F.on("resize",this.resize,this,true);}}});},destroy:function(){var G=this.get("parent");if(G){G.removeListener("resize",this.resize,this,true);}A.removeListener(window,"resize",this.resize,this,true);this.unsubscribeAll();for(var E in this._units){if(D.hasOwnProperty(this._units,E)){if(this._units[E]){this._units[E].destroy(true);}}}A.purgeElement(this.get("element"),true);this.get("parentNode").removeChild(this.get("element"));delete YAHOO.widget.Layout._instances[this.get("id")];for(var F in this){if(D.hasOwnProperty(this,F)){this[F]=null;delete this[F];}}if(G){G.resize();}},toString:function(){if(this.get){return"Layout #"+this.get("id");}return"Layout";}});YAHOO.widget.Layout=B;})();(function(){var D=YAHOO.util.Dom,C=YAHOO.util.Selector,A=YAHOO.util.Event,E=YAHOO.lang;var B=function(G,F){var H={element:G,attributes:F||{}};B.superclass.constructor.call(this,H.element,H.attributes);};B._instances={};B.getLayoutUnitById=function(F){if(B._instances[F]){return B._instances[F];}return false;};YAHOO.extend(B,YAHOO.util.Element,{STR_CLOSE:"Click to close this pane.",STR_COLLAPSE:"Click to collapse this pane.",STR_EXPAND:"Click to expand this pane.",LOADING_CLASSNAME:"loading",browser:null,_sizes:null,_anim:null,_resize:null,_clip:null,_gutter:null,header:null,body:null,footer:null,_collapsed:null,_collapsing:null,_lastWidth:null,_lastHeight:null,_lastTop:null,_lastLeft:null,_lastScroll:null,_lastCenterScroll:null,_lastScrollTop:null,resize:function(F){var G=this.fireEvent("beforeResize");if(G===false){return this;}if(!this._collapsing||(F===true)){var N=this.get("scroll");this.set("scroll",false);var K=this._getBoxSize(this.header),J=this._getBoxSize(this.footer),L=[this.get("height"),this.get("width")];var H=(L[0]-K[0]-J[0])-(this._gutter.top+this._gutter.bottom),M=L[1]-(this._gutter.left+this._gutter.right);var O=(H+(K[0]+J[0])),I=M;if(this._collapsed&&!this._collapsing){this._setHeight(this._clip,O);this._setWidth(this._clip,I);D.setStyle(this._clip,"top",this.get("top")+this._gutter.top+"px");D.setStyle(this._clip,"left",this.get("left")+this._gutter.left+"px");}else{if(!this._collapsed||(this._collapsed&&this._collapsing)){O=this._setHeight(this.get("wrap"),O);I=this._setWidth(this.get("wrap"),I);this._sizes.wrap.h=O;this._sizes.wrap.w=I;D.setStyle(this.get("wrap"),"top",this._gutter.top+"px");D.setStyle(this.get("wrap"),"left",this._gutter.left+"px");this._sizes.header.w=this._setWidth(this.header,I);this._sizes.header.h=K[0];this._sizes.footer.w=this._setWidth(this.footer,I);this._sizes.footer.h=J[0];D.setStyle(this.footer,"bottom","0px");this._sizes.body.h=this._setHeight(this.body,(O-(K[0]+J[0])));this._sizes.body.w=this._setWidth(this.body,I);D.setStyle(this.body,"top",K[0]+"px");this.set("scroll",N);this.fireEvent("resize");}}}return this;},_setWidth:function(H,G){if(H){var F=this._getBorderSizes(H);G=(G-(F[1]+F[3]));G=this._fixQuirks(H,G,"w");if(G<0){G=0;}D.setStyle(H,"width",G+"px");}return G;},_setHeight:function(H,G){if(H){var F=this._getBorderSizes(H);G=(G-(F[0]+F[2]));G=this._fixQuirks(H,G,"h");if(G<0){G=0;}D.setStyle(H,"height",G+"px");}return G;},_fixQuirks:function(I,L,G){var K=0,H=2;if(G=="w"){K=1;H=3;}if((this.browser.ie<8)&&!this.browser.standardsMode){var F=this._getBorderSizes(I),J=this._getBorderSizes(I.parentNode);if((F[K]===0)&&(F[H]===0)){if((J[K]!==0)&&(J[H]!==0)){L=(L-(J[K]+J[H]));}}else{if((J[K]===0)&&(J[H]===0)){L=(L+(F[K]+F[H]));}}}return L;},_getBoxSize:function(H){var G=[0,0];if(H){if(this.browser.ie&&!this.browser.standardsMode){H.style.zoom=1;}var F=this._getBorderSizes(H);G[0]=H.clientHeight+(F[0]+F[2]);G[1]=H.clientWidth+(F[1]+F[3]);}return G;},_getBorderSizes:function(H){var G=[];H=H||this.get("element");if(this.browser.ie&&!this.browser.standardsMode){H.style.zoom=1;}G[0]=parseInt(D.getStyle(H,"borderTopWidth"),10);G[1]=parseInt(D.getStyle(H,"borderRightWidth"),10);G[2]=parseInt(D.getStyle(H,"borderBottomWidth"),10);G[3]=parseInt(D.getStyle(H,"borderLeftWidth"),10);for(var F=0;F<G.length;F++){if(isNaN(G[F])){G[F]=0;}}return G;},_createClip:function(){if(!this._clip){this._clip=document.createElement("div");this._clip.className="yui-layout-clip yui-layout-clip-"+this.get("position");this._clip.innerHTML='<div class="collapse"></div>';var F=this._clip.firstChild;F.title=this.STR_EXPAND;A.on(F,"click",this.expand,this,true);this.get("element").parentNode.appendChild(this._clip);}},_toggleClip:function(){if(!this._collapsed){var J=this._getBoxSize(this.header),K=this._getBoxSize(this.footer),I=[this.get("height"),this.get("width")];var H=(I[0]-J[0]-K[0])-(this._gutter.top+this._gutter.bottom),F=I[1]-(this._gutter.left+this._gutter.right),G=(H+(J[0]+K[0]));switch(this.get("position")){case"top":case"bottom":this._setWidth(this._clip,F);this._setHeight(this._clip,this.get("collapseSize"));
D.setStyle(this._clip,"left",(this._lastLeft+this._gutter.left)+"px");if(this.get("position")=="bottom"){D.setStyle(this._clip,"top",((this._lastTop+this._lastHeight)-(this.get("collapseSize")-this._gutter.top))+"px");}else{D.setStyle(this._clip,"top",this.get("top")+this._gutter.top+"px");}break;case"left":case"right":this._setWidth(this._clip,this.get("collapseSize"));this._setHeight(this._clip,G);D.setStyle(this._clip,"top",(this.get("top")+this._gutter.top)+"px");if(this.get("position")=="right"){D.setStyle(this._clip,"left",(((this._lastLeft+this._lastWidth)-this.get("collapseSize"))-this._gutter.left)+"px");}else{D.setStyle(this._clip,"left",(this.get("left")+this._gutter.left)+"px");}break;}D.setStyle(this._clip,"display","block");this.setStyle("display","none");}else{D.setStyle(this._clip,"display","none");}},getSizes:function(){return this._sizes;},toggle:function(){if(this._collapsed){this.expand();}else{this.collapse();}return this;},expand:function(){if(!this._collapsed){return this;}var L=this.fireEvent("beforeExpand");if(L===false){return this;}this._collapsing=true;this.setStyle("zIndex",this._zIndex);if(this._anim){this.setStyle("display","none");var F={},H;switch(this.get("position")){case"left":case"right":this.set("width",this._lastWidth,true);this.setStyle("width",this._lastWidth+"px");this.get("parent").resize(false);H=this.get("parent").getSizes()[this.get("position")];this.set("height",H.h,true);var K=H.l;F={left:{to:K}};if(this.get("position")=="left"){F.left.from=(K-H.w);this.setStyle("left",(K-H.w)+"px");}break;case"top":case"bottom":this.set("height",this._lastHeight,true);this.setStyle("height",this._lastHeight+"px");this.get("parent").resize(false);H=this.get("parent").getSizes()[this.get("position")];this.set("width",H.w,true);var J=H.t;F={top:{to:J}};if(this.get("position")=="top"){this.setStyle("top",(J-H.h)+"px");F.top.from=(J-H.h);}break;}this._anim.attributes=F;var I=function(){this.setStyle("display","block");this.resize(true);this._anim.onStart.unsubscribe(I,this,true);};var G=function(){this._collapsing=false;this.setStyle("zIndex",this._zIndex);this.set("width",this._lastWidth);this.set("height",this._lastHeight);this._collapsed=false;this.resize();this.set("scroll",this._lastScroll);if(this._lastScrollTop>0){this.body.scrollTop=this._lastScrollTop;}this._anim.onComplete.unsubscribe(G,this,true);this.fireEvent("expand");};this._anim.onStart.subscribe(I,this,true);this._anim.onComplete.subscribe(G,this,true);this._anim.animate();this._toggleClip();}else{this._collapsing=false;this._toggleClip();this._collapsed=false;this._zIndex=this.getStyle("zIndex");this.setStyle("zIndex",this.get("parent")._zIndex);this.setStyle("display","block");this.set("width",this._lastWidth);this.set("height",this._lastHeight);this.resize();this.set("scroll",this._lastScroll);if(this._lastScrollTop>0){this.body.scrollTop=this._lastScrollTop;}this.fireEvent("expand");}return this;},collapse:function(){if(this._collapsed){return this;}var J=this.fireEvent("beforeCollapse");if(J===false){return this;}if(!this._clip){this._createClip();}this._collapsing=true;var G=this.get("width"),H=this.get("height"),F={};this._lastWidth=G;this._lastHeight=H;this._lastScroll=this.get("scroll");this._lastScrollTop=this.body.scrollTop;this.set("scroll",false,true);this._lastLeft=parseInt(this.get("element").style.left,10);this._lastTop=parseInt(this.get("element").style.top,10);if(isNaN(this._lastTop)){this._lastTop=0;this.set("top",0);}if(isNaN(this._lastLeft)){this._lastLeft=0;this.set("left",0);}this._zIndex=this.getStyle("zIndex");this.setStyle("zIndex",this.get("parent")._zIndex+1);var K=this.get("position");switch(K){case"top":case"bottom":this.set("height",(this.get("collapseSize")+(this._gutter.top+this._gutter.bottom)));F={top:{to:(this.get("top")-H)}};if(K=="bottom"){F.top.to=(this.get("top")+H);}break;case"left":case"right":this.set("width",(this.get("collapseSize")+(this._gutter.left+this._gutter.right)));F={left:{to:-(this._lastWidth)}};if(K=="right"){F.left={to:(this.get("left")+G)};}break;}if(this._anim){this._anim.attributes=F;var I=function(){this._collapsing=false;this._toggleClip();this.setStyle("zIndex",this.get("parent")._zIndex);this._collapsed=true;this.get("parent").resize();this._anim.onComplete.unsubscribe(I,this,true);this.fireEvent("collapse");};this._anim.onComplete.subscribe(I,this,true);this._anim.animate();}else{this._collapsing=false;this.setStyle("display","none");this._toggleClip();this.setStyle("zIndex",this.get("parent")._zIndex);this.get("parent").resize();this._collapsed=true;this.fireEvent("collapse");}return this;},close:function(){this.setStyle("display","none");this.get("parent").removeUnit(this);this.fireEvent("close");if(this._clip){this._clip.parentNode.removeChild(this._clip);this._clip=null;}return this.get("parent");},loadHandler:{success:function(F){this.body.innerHTML=F.responseText;this.resize(true);},failure:function(F){}},dataConnection:null,_loading:false,loadContent:function(){if(YAHOO.util.Connect&&this.get("dataSrc")&&!this._loading&&!this.get("dataLoaded")){this._loading=true;D.addClass(this.body,this.LOADING_CLASSNAME);this.dataConnection=YAHOO.util.Connect.asyncRequest(this.get("loadMethod"),this.get("dataSrc"),{success:function(F){this.loadHandler.success.call(this,F);this.set("dataLoaded",true);this.dataConnection=null;D.removeClass(this.body,this.LOADING_CLASSNAME);this._loading=false;this.fireEvent("load");},failure:function(F){this.loadHandler.failure.call(this,F);this.dataConnection=null;D.removeClass(this.body,this.LOADING_CLASSNAME);this._loading=false;this.fireEvent("loadError",{error:F});},scope:this,timeout:this.get("dataTimeout")});return this.dataConnection;}return false;},init:function(H,G){this._gutter={left:0,right:0,top:0,bottom:0};this._sizes={wrap:{h:0,w:0},header:{h:0,w:0},body:{h:0,w:0},footer:{h:0,w:0}};B.superclass.init.call(this,H,G);this.browser=this.get("parent").browser;var K=H;if(!E.isString(K)){K=D.generateId(K);
}B._instances[K]=this;this.setStyle("position","absolute");this.addClass("yui-layout-unit");this.addClass("yui-layout-unit-"+this.get("position"));var J=this.getElementsByClassName("yui-layout-hd","div")[0];if(J){this.header=J;}var F=this.getElementsByClassName("yui-layout-bd","div")[0];if(F){this.body=F;}var I=this.getElementsByClassName("yui-layout-ft","div")[0];if(I){this.footer=I;}this.on("contentChange",this.resize,this,true);this._lastScrollTop=0;this.set("animate",this.get("animate"));},initAttributes:function(F){B.superclass.initAttributes.call(this,F);this.setAttributeConfig("wrap",{value:F.wrap||null,method:function(G){if(G){var H=D.generateId(G);B._instances[H]=this;}}});this.setAttributeConfig("grids",{value:F.grids||false});this.setAttributeConfig("top",{value:F.top||0,validator:E.isNumber,method:function(G){if(!this._collapsing){this.setStyle("top",G+"px");}}});this.setAttributeConfig("left",{value:F.left||0,validator:E.isNumber,method:function(G){if(!this._collapsing){this.setStyle("left",G+"px");}}});this.setAttributeConfig("minWidth",{value:F.minWidth||false,method:function(G){if(this._resize){this._resize.set("minWidth",G);}},validator:YAHOO.lang.isNumber});this.setAttributeConfig("maxWidth",{value:F.maxWidth||false,method:function(G){if(this._resize){this._resize.set("maxWidth",G);}},validator:YAHOO.lang.isNumber});this.setAttributeConfig("minHeight",{value:F.minHeight||false,method:function(G){if(this._resize){this._resize.set("minHeight",G);}},validator:YAHOO.lang.isNumber});this.setAttributeConfig("maxHeight",{value:F.maxHeight||false,method:function(G){if(this._resize){this._resize.set("maxHeight",G);}},validator:YAHOO.lang.isNumber});this.setAttributeConfig("height",{value:F.height,validator:E.isNumber,method:function(G){if(!this._collapsing){if(G<0){G=0;}this.setStyle("height",G+"px");}}});this.setAttributeConfig("width",{value:F.width,validator:E.isNumber,method:function(G){if(!this._collapsing){if(G<0){G=0;}this.setStyle("width",G+"px");}}});this.setAttributeConfig("zIndex",{value:F.zIndex||false,method:function(G){this.setStyle("zIndex",G);}});this.setAttributeConfig("position",{value:F.position});this.setAttributeConfig("gutter",{value:F.gutter||0,validator:YAHOO.lang.isString,method:function(H){var G=H.split(" ");if(G.length){this._gutter.top=parseInt(G[0],10);if(G[1]){this._gutter.right=parseInt(G[1],10);}else{this._gutter.right=this._gutter.top;}if(G[2]){this._gutter.bottom=parseInt(G[2],10);}else{this._gutter.bottom=this._gutter.top;}if(G[3]){this._gutter.left=parseInt(G[3],10);}else{if(G[1]){this._gutter.left=this._gutter.right;}else{this._gutter.left=this._gutter.top;}}}}});this.setAttributeConfig("parent",{writeOnce:true,value:F.parent||false,method:function(G){if(G){G.on("resize",this.resize,this,true);}}});this.setAttributeConfig("collapseSize",{value:F.collapseSize||25,validator:YAHOO.lang.isNumber});this.setAttributeConfig("duration",{value:F.duration||0.5});this.setAttributeConfig("easing",{value:F.easing||((YAHOO.util&&YAHOO.util.Easing)?YAHOO.util.Easing.BounceIn:"false")});this.setAttributeConfig("animate",{value:((F.animate===false)?false:true),validator:function(){var G=false;if(YAHOO.util.Anim){G=true;}return G;},method:function(G){if(G){this._anim=new YAHOO.util.Anim(this.get("element"),{},this.get("duration"),this.get("easing"));}else{this._anim=false;}}});this.setAttributeConfig("header",{value:F.header||false,method:function(G){if(G===false){if(this.header){D.addClass(this.body,"yui-layout-bd-nohd");this.header.parentNode.removeChild(this.header);this.header=null;}}else{if(!this.header){var I=this.getElementsByClassName("yui-layout-hd","div")[0];if(!I){I=this._createHeader();}this.header=I;}var H=this.header.getElementsByTagName("h2")[0];if(!H){H=document.createElement("h2");this.header.appendChild(H);}H.innerHTML=G;if(this.body){D.removeClass(this.body,"yui-layout-bd-nohd");}}this.fireEvent("contentChange",{target:"header"});}});this.setAttributeConfig("proxy",{writeOnce:true,value:((F.proxy===false)?false:true)});this.setAttributeConfig("body",{value:F.body||false,method:function(I){if(!this.body){var G=this.getElementsByClassName("yui-layout-bd","div")[0];if(G){this.body=G;}else{G=document.createElement("div");G.className="yui-layout-bd";this.body=G;this.get("wrap").appendChild(G);}}if(!this.header){D.addClass(this.body,"yui-layout-bd-nohd");}D.addClass(this.body,"yui-layout-bd-noft");var H=null;if(E.isString(I)){H=D.get(I);}else{if(I&&I.tagName){H=I;}}if(H){var J=D.generateId(H);B._instances[J]=this;this.body.appendChild(H);}else{this.body.innerHTML=I;}this._cleanGrids();this.fireEvent("contentChange",{target:"body"});}});this.setAttributeConfig("footer",{value:F.footer||false,method:function(H){if(H===false){if(this.footer){D.addClass(this.body,"yui-layout-bd-noft");this.footer.parentNode.removeChild(this.footer);this.footer=null;}}else{if(!this.footer){var I=this.getElementsByClassName("yui-layout-ft","div")[0];if(!I){I=document.createElement("div");I.className="yui-layout-ft";this.footer=I;this.get("wrap").appendChild(I);}else{this.footer=I;}}var G=null;if(E.isString(H)){G=D.get(H);}else{if(H&&H.tagName){G=H;}}if(G){this.footer.appendChild(G);}else{this.footer.innerHTML=H;}D.removeClass(this.body,"yui-layout-bd-noft");}this.fireEvent("contentChange",{target:"footer"});}});this.setAttributeConfig("close",{value:F.close||false,method:function(G){if(this.get("position")=="center"){return false;}if(!this.header&&G){this._createHeader();}if(!this.header){return;}var H=this.header?D.getElementsByClassName("close","div",this.header)[0]:null;if(G){if(!this.get("header")){this.set("header","&nbsp;");}if(!H){H=document.createElement("div");H.className="close";this.header.appendChild(H);A.on(H,"click",this.close,this,true);}H.title=this.STR_CLOSE;}else{if(H&&H.parentNode){A.purgeElement(H);H.parentNode.removeChild(H);}}this._configs.close.value=G;this.set("collapse",this.get("collapse"));}});this.setAttributeConfig("collapse",{value:F.collapse||false,method:function(G){if(this.get("position")=="center"){return false;
}if(!this.header&&G){this._createHeader();}if(!this.header){return;}var H=this.header?D.getElementsByClassName("collapse","div",this.header)[0]:null;if(G){if(!this.get("header")){this.set("header","&nbsp;");}if(!H){H=document.createElement("div");this.header.appendChild(H);A.on(H,"click",this.collapse,this,true);}H.title=this.STR_COLLAPSE;H.className="collapse"+((this.get("close"))?" collapse-close":"");}else{if(H&&H.parentNode){A.purgeElement(H);H.parentNode.removeChild(H);}}}});this.setAttributeConfig("scroll",{value:(((F.scroll===true)||(F.scroll===false)||(F.scroll===null))?F.scroll:false),method:function(G){if((G===false)&&!this._collapsed){if(this.body){if(this.body.scrollTop>0){this._lastScrollTop=this.body.scrollTop;}}}if(G===true){this.addClass("yui-layout-scroll");this.removeClass("yui-layout-noscroll");if(this._lastScrollTop>0){if(this.body){this.body.scrollTop=this._lastScrollTop;}}}else{if(G===false){this.removeClass("yui-layout-scroll");this.addClass("yui-layout-noscroll");}else{if(G===null){this.removeClass("yui-layout-scroll");this.removeClass("yui-layout-noscroll");}}}}});this.setAttributeConfig("hover",{writeOnce:true,value:F.hover||false,validator:YAHOO.lang.isBoolean});this.setAttributeConfig("useShim",{value:F.useShim||false,validator:YAHOO.lang.isBoolean,method:function(G){if(this._resize){this._resize.set("useShim",G);}}});this.setAttributeConfig("resize",{value:F.resize||false,validator:function(G){if(YAHOO.util&&YAHOO.util.Resize){return true;}return false;},method:function(G){if(G&&!this._resize){if(this.get("position")=="center"){return false;}var I=false;switch(this.get("position")){case"top":I="b";break;case"bottom":I="t";break;case"right":I="l";break;case"left":I="r";break;}this.setStyle("position","absolute");if(I){this._resize=new YAHOO.util.Resize(this.get("element"),{proxy:this.get("proxy"),hover:this.get("hover"),status:false,autoRatio:false,handles:[I],minWidth:this.get("minWidth"),maxWidth:this.get("maxWidth"),minHeight:this.get("minHeight"),maxHeight:this.get("maxHeight"),height:this.get("height"),width:this.get("width"),setSize:false,useShim:this.get("useShim"),wrap:false});this._resize._handles[I].innerHTML='<div class="yui-layout-resize-knob"></div>';if(this.get("proxy")){var H=this._resize.getProxyEl();H.innerHTML='<div class="yui-layout-handle-'+I+'"></div>';}this._resize.on("startResize",function(J){this._lastScroll=this.get("scroll");this.set("scroll",false);if(this.get("parent")){this.get("parent").fireEvent("startResize");var K=this.get("parent").getUnitByPosition("center");this._lastCenterScroll=K.get("scroll");K.addClass(this._resize.CSS_RESIZING);K.set("scroll",false);}this.fireEvent("startResize");},this,true);this._resize.on("resize",function(J){this.set("height",J.height);this.set("width",J.width);},this,true);this._resize.on("endResize",function(J){this.set("scroll",this._lastScroll);if(this.get("parent")){var K=this.get("parent").getUnitByPosition("center");K.set("scroll",this._lastCenterScroll);K.removeClass(this._resize.CSS_RESIZING);}this.resize();this.fireEvent("endResize");},this,true);}}else{if(this._resize){this._resize.destroy();}}}});this.setAttributeConfig("dataSrc",{value:F.dataSrc});this.setAttributeConfig("loadMethod",{value:F.loadMethod||"GET",validator:YAHOO.lang.isString});this.setAttributeConfig("dataLoaded",{value:false,validator:YAHOO.lang.isBoolean,writeOnce:true});this.setAttributeConfig("dataTimeout",{value:F.dataTimeout||null,validator:YAHOO.lang.isNumber});},_cleanGrids:function(){if(this.get("grids")){var F=C.query("div.yui-b",this.body,true);if(F){D.removeClass(F,"yui-b");}A.onAvailable("yui-main",function(){D.setStyle(C.query("#yui-main"),"margin-left","0");D.setStyle(C.query("#yui-main"),"margin-right","0");});}},_createHeader:function(){var F=document.createElement("div");F.className="yui-layout-hd";if(this.get("firstChild")){this.get("wrap").insertBefore(F,this.get("wrap").firstChild);}else{this.get("wrap").appendChild(F);}this.header=F;return F;},destroy:function(H){if(this._resize){this._resize.destroy();}var G=this.get("parent");this.setStyle("display","none");if(this._clip){this._clip.parentNode.removeChild(this._clip);this._clip=null;}if(!H){G.removeUnit(this);}if(G){G.removeListener("resize",this.resize,this,true);}this.unsubscribeAll();A.purgeElement(this.get("element"),true);this.get("parentNode").removeChild(this.get("element"));delete YAHOO.widget.LayoutUnit._instances[this.get("id")];for(var F in this){if(E.hasOwnProperty(this,F)){this[F]=null;delete this[F];}}return G;},toString:function(){if(this.get){return"LayoutUnit #"+this.get("id")+" ("+this.get("position")+")";}return"LayoutUnit";}});YAHOO.widget.LayoutUnit=B;})();YAHOO.register("layout",YAHOO.widget.Layout,{version:"2.9.0",build:"2800"});

/********* ../yui/logger/logger-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
YAHOO.widget.LogMsg=function(a){this.msg=this.time=this.category=this.source=this.sourceDetail=null;if(a&&(a.constructor==Object)){for(var b in a){if(a.hasOwnProperty(b)){this[b]=a[b];}}}};YAHOO.widget.LogWriter=function(a){if(!a){YAHOO.log("Could not instantiate LogWriter due to invalid source.","error","LogWriter");return;}this._source=a;};YAHOO.widget.LogWriter.prototype.toString=function(){return"LogWriter "+this._sSource;};YAHOO.widget.LogWriter.prototype.log=function(a,b){YAHOO.widget.Logger.log(a,b,this._source);};YAHOO.widget.LogWriter.prototype.getSource=function(){return this._source;};YAHOO.widget.LogWriter.prototype.setSource=function(a){if(!a){YAHOO.log("Could not set source due to invalid source.","error",this.toString());return;}else{this._source=a;}};YAHOO.widget.LogWriter.prototype._source=null;if(!YAHOO.widget.Logger){YAHOO.widget.Logger={loggerEnabled:true,_browserConsoleEnabled:false,categories:["info","warn","error","time","window"],sources:["global"],_stack:[],maxStackEntries:2500,_startTime:new Date().getTime(),_lastTime:null,_windowErrorsHandled:false,_origOnWindowError:null};YAHOO.widget.Logger.log=function(b,f,g){if(this.loggerEnabled){if(!f){f="info";}else{f=f.toLocaleLowerCase();if(this._isNewCategory(f)){this._createNewCategory(f);}}var c="global";var a=null;if(g){var d=g.indexOf(" ");if(d>0){c=g.substring(0,d);a=g.substring(d,g.length);}else{c=g;}if(this._isNewSource(c)){this._createNewSource(c);}}var h=new Date();var j=new YAHOO.widget.LogMsg({msg:b,time:h,category:f,source:c,sourceDetail:a});var i=this._stack;var e=this.maxStackEntries;if(e&&!isNaN(e)&&(i.length>=e)){i.shift();}i.push(j);this.newLogEvent.fire(j);if(this._browserConsoleEnabled){this._printToBrowserConsole(j);}return true;}else{return false;}};YAHOO.widget.Logger.reset=function(){this._stack=[];this._startTime=new Date().getTime();this.loggerEnabled=true;this.log("Logger reset");this.logResetEvent.fire();};YAHOO.widget.Logger.getStack=function(){return this._stack;};YAHOO.widget.Logger.getStartTime=function(){return this._startTime;};YAHOO.widget.Logger.disableBrowserConsole=function(){YAHOO.log("Logger output to the function console.log() has been disabled.");this._browserConsoleEnabled=false;};YAHOO.widget.Logger.enableBrowserConsole=function(){this._browserConsoleEnabled=true;YAHOO.log("Logger output to the function console.log() has been enabled.");};YAHOO.widget.Logger.handleWindowErrors=function(){if(!YAHOO.widget.Logger._windowErrorsHandled){if(window.error){YAHOO.widget.Logger._origOnWindowError=window.onerror;}window.onerror=YAHOO.widget.Logger._onWindowError;YAHOO.widget.Logger._windowErrorsHandled=true;YAHOO.log("Logger handling of window.onerror has been enabled.");}else{YAHOO.log("Logger handling of window.onerror had already been enabled.");}};YAHOO.widget.Logger.unhandleWindowErrors=function(){if(YAHOO.widget.Logger._windowErrorsHandled){if(YAHOO.widget.Logger._origOnWindowError){window.onerror=YAHOO.widget.Logger._origOnWindowError;YAHOO.widget.Logger._origOnWindowError=null;}else{window.onerror=null;}YAHOO.widget.Logger._windowErrorsHandled=false;YAHOO.log("Logger handling of window.onerror has been disabled.");}else{YAHOO.log("Logger handling of window.onerror had already been disabled.");}};YAHOO.widget.Logger.categoryCreateEvent=new YAHOO.util.CustomEvent("categoryCreate",this,true);YAHOO.widget.Logger.sourceCreateEvent=new YAHOO.util.CustomEvent("sourceCreate",this,true);YAHOO.widget.Logger.newLogEvent=new YAHOO.util.CustomEvent("newLog",this,true);YAHOO.widget.Logger.logResetEvent=new YAHOO.util.CustomEvent("logReset",this,true);YAHOO.widget.Logger._createNewCategory=function(a){this.categories.push(a);this.categoryCreateEvent.fire(a);};YAHOO.widget.Logger._isNewCategory=function(b){for(var a=0;a<this.categories.length;a++){if(b==this.categories[a]){return false;}}return true;};YAHOO.widget.Logger._createNewSource=function(a){this.sources.push(a);this.sourceCreateEvent.fire(a);};YAHOO.widget.Logger._isNewSource=function(a){if(a){for(var b=0;b<this.sources.length;b++){if(a==this.sources[b]){return false;}}return true;}};YAHOO.widget.Logger._printToBrowserConsole=function(c){if((window.console&&console.log)||(window.opera&&opera.postError)){var e=c.category;var d=c.category.substring(0,4).toUpperCase();var g=c.time;var f;if(g.toLocaleTimeString){f=g.toLocaleTimeString();}else{f=g.toString();}var h=g.getTime();var b=(YAHOO.widget.Logger._lastTime)?(h-YAHOO.widget.Logger._lastTime):0;YAHOO.widget.Logger._lastTime=h;var a=f+" ("+b+"ms): "+c.source+": ";if(window.console){console.log(a,c.msg);}else{opera.postError(a+c.msg);}}};YAHOO.widget.Logger._onWindowError=function(a,c,b){try{YAHOO.widget.Logger.log(a+" ("+c+", line "+b+")","window");if(YAHOO.widget.Logger._origOnWindowError){YAHOO.widget.Logger._origOnWindowError();}}catch(d){return false;}};YAHOO.widget.Logger.log("Logger initialized");}(function(){var c=YAHOO.widget.Logger,e=YAHOO.util,f=e.Dom,a=e.Event,h=document;function b(i,d){i=h.createElement(i);if(d){for(var j in d){if(d.hasOwnProperty(j)){i[j]=d[j];}}}return i;}function g(i,d){this._sName=g._index;g._index++;this._init.apply(this,arguments);if(this.autoRender!==false){this.render();}}YAHOO.lang.augmentObject(g,{_index:0,ENTRY_TEMPLATE:(function(){return b("pre",{className:"yui-log-entry"});})(),VERBOSE_TEMPLATE:"<p><span class='{category}'>{label}</span> {totalTime}ms (+{elapsedTime}) {localTime}:</p><p>{sourceAndDetail}</p><p>{message}</p>",BASIC_TEMPLATE:"<p><span class='{category}'>{label}</span> {totalTime}ms (+{elapsedTime}) {localTime}: {sourceAndDetail}: {message}</p>"});g.prototype={logReaderEnabled:true,width:null,height:null,top:null,left:null,right:null,bottom:null,fontSize:null,footerEnabled:true,verboseOutput:true,entryFormat:null,newestOnTop:true,outputBuffer:100,thresholdMax:500,thresholdMin:100,isCollapsed:false,isPaused:false,draggable:true,toString:function(){return"LogReader instance"+this._sName;},pause:function(){this.isPaused=true;this._timeout=null;
this.logReaderEnabled=false;if(this._btnPause){this._btnPause.value="Resume";}},resume:function(){this.isPaused=false;this.logReaderEnabled=true;this._printBuffer();if(this._btnPause){this._btnPause.value="Pause";}},render:function(){if(this.rendered){return;}this._initContainerEl();this._initHeaderEl();this._initConsoleEl();this._initFooterEl();this._initCategories();this._initSources();this._initDragDrop();c.newLogEvent.subscribe(this._onNewLog,this);c.logResetEvent.subscribe(this._onReset,this);c.categoryCreateEvent.subscribe(this._onCategoryCreate,this);c.sourceCreateEvent.subscribe(this._onSourceCreate,this);this.rendered=true;this._filterLogs();},destroy:function(){a.purgeElement(this._elContainer,true);this._elContainer.innerHTML="";this._elContainer.parentNode.removeChild(this._elContainer);this.rendered=false;},hide:function(){this._elContainer.style.display="none";},show:function(){this._elContainer.style.display="block";},collapse:function(){this._elConsole.style.display="none";if(this._elFt){this._elFt.style.display="none";}this._btnCollapse.value="Expand";this.isCollapsed=true;},expand:function(){this._elConsole.style.display="block";if(this._elFt){this._elFt.style.display="block";}this._btnCollapse.value="Collapse";this.isCollapsed=false;},getCheckbox:function(d){return this._filterCheckboxes[d];},getCategories:function(){return this._categoryFilters;},showCategory:function(j){var l=this._categoryFilters;if(l.indexOf){if(l.indexOf(j)>-1){return;}}else{for(var d=0;d<l.length;d++){if(l[d]===j){return;}}}this._categoryFilters.push(j);this._filterLogs();var k=this.getCheckbox(j);if(k){k.checked=true;}},hideCategory:function(j){var l=this._categoryFilters;for(var d=0;d<l.length;d++){if(j==l[d]){l.splice(d,1);break;}}this._filterLogs();var k=this.getCheckbox(j);if(k){k.checked=false;}},getSources:function(){return this._sourceFilters;},showSource:function(d){var l=this._sourceFilters;if(l.indexOf){if(l.indexOf(d)>-1){return;}}else{for(var j=0;j<l.length;j++){if(d==l[j]){return;}}}l.push(d);this._filterLogs();var k=this.getCheckbox(d);if(k){k.checked=true;}},hideSource:function(d){var l=this._sourceFilters;for(var j=0;j<l.length;j++){if(d==l[j]){l.splice(j,1);break;}}this._filterLogs();var k=this.getCheckbox(d);if(k){k.checked=false;}},clearConsole:function(){this._timeout=null;this._buffer=[];this._consoleMsgCount=0;var d=this._elConsole;d.innerHTML="";},setTitle:function(d){this._title.innerHTML=this.html2Text(d);},getLastTime:function(){return this._lastTime;},formatMsg:function(i){var d=this.entryFormat||(this.verboseOutput?g.VERBOSE_TEMPLATE:g.BASIC_TEMPLATE),j={category:i.category,label:i.category.substring(0,4).toUpperCase(),sourceAndDetail:i.sourceDetail?i.source+" "+i.sourceDetail:i.source,message:this.html2Text(i.msg||i.message||"")};if(i.time&&i.time.getTime){j.localTime=i.time.toLocaleTimeString?i.time.toLocaleTimeString():i.time.toString();j.elapsedTime=i.time.getTime()-this.getLastTime();j.totalTime=i.time.getTime()-c.getStartTime();}var k=g.ENTRY_TEMPLATE.cloneNode(true);if(this.verboseOutput){k.className+=" yui-log-verbose";}k.innerHTML=d.replace(/\{(\w+)\}/g,function(l,m){return(m in j)?j[m]:"";});return k;},html2Text:function(d){if(d){d+="";return d.replace(/&/g,"&#38;").replace(/</g,"&#60;").replace(/>/g,"&#62;");}return"";},_sName:null,_buffer:null,_consoleMsgCount:0,_lastTime:null,_timeout:null,_filterCheckboxes:null,_categoryFilters:null,_sourceFilters:null,_elContainer:null,_elHd:null,_elCollapse:null,_btnCollapse:null,_title:null,_elConsole:null,_elFt:null,_elBtns:null,_elCategoryFilters:null,_elSourceFilters:null,_btnPause:null,_btnClear:null,_init:function(d,i){this._buffer=[];this._filterCheckboxes={};this._lastTime=c.getStartTime();if(i&&(i.constructor==Object)){for(var j in i){if(i.hasOwnProperty(j)){this[j]=i[j];}}}this._elContainer=f.get(d);YAHOO.log("LogReader initialized",null,this.toString());},_initContainerEl:function(){if(!this._elContainer||!/div$/i.test(this._elContainer.tagName)){this._elContainer=h.body.insertBefore(b("div"),h.body.firstChild);f.addClass(this._elContainer,"yui-log-container");}f.addClass(this._elContainer,"yui-log");var k=this._elContainer.style,d=["width","right","top","fontSize"],l,j;for(j=d.length-1;j>=0;--j){l=d[j];if(this[l]){k[l]=this[l];}}if(this.left){k.left=this.left;k.right="auto";}if(this.bottom){k.bottom=this.bottom;k.top="auto";}if(YAHOO.env.ua.opera){h.body.style+="";}},_initHeaderEl:function(){if(this._elHd){a.purgeElement(this._elHd,true);this._elHd.innerHTML="";}this._elHd=b("div",{className:"yui-log-hd"});f.generateId(this._elHd,"yui-log-hd"+this._sName);this._elCollapse=b("div",{className:"yui-log-btns"});this._btnCollapse=b("input",{type:"button",className:"yui-log-button",value:"Collapse"});a.on(this._btnCollapse,"click",this._onClickCollapseBtn,this);this._title=b("h4",{innerHTML:"Logger Console"});this._elCollapse.appendChild(this._btnCollapse);this._elHd.appendChild(this._elCollapse);this._elHd.appendChild(this._title);this._elContainer.appendChild(this._elHd);},_initConsoleEl:function(){if(this._elConsole){a.purgeElement(this._elConsole,true);this._elConsole.innerHTML="";}this._elConsole=b("div",{className:"yui-log-bd"});if(this.height){this._elConsole.style.height=this.height;}this._elContainer.appendChild(this._elConsole);},_initFooterEl:function(){if(this.footerEnabled){if(this._elFt){a.purgeElement(this._elFt,true);this._elFt.innerHTML="";}this._elFt=b("div",{className:"yui-log-ft"});this._elBtns=b("div",{className:"yui-log-btns"});this._btnPause=b("input",{type:"button",className:"yui-log-button",value:"Pause"});a.on(this._btnPause,"click",this._onClickPauseBtn,this);this._btnClear=b("input",{type:"button",className:"yui-log-button",value:"Clear"});a.on(this._btnClear,"click",this._onClickClearBtn,this);this._elCategoryFilters=b("div",{className:"yui-log-categoryfilters"});this._elSourceFilters=b("div",{className:"yui-log-sourcefilters"});this._elBtns.appendChild(this._btnPause);this._elBtns.appendChild(this._btnClear);
this._elFt.appendChild(this._elBtns);this._elFt.appendChild(this._elCategoryFilters);this._elFt.appendChild(this._elSourceFilters);this._elContainer.appendChild(this._elFt);}},_initDragDrop:function(){if(e.DD&&this.draggable&&this._elHd){var d=new e.DD(this._elContainer);d.setHandleElId(this._elHd.id);this._elHd.style.cursor="move";}},_initCategories:function(){this._categoryFilters=[];var k=c.categories;for(var d=0;d<k.length;d++){var i=k[d];this._categoryFilters.push(i);if(this._elCategoryFilters){this._createCategoryCheckbox(i);}}},_initSources:function(){this._sourceFilters=[];var k=c.sources;for(var i=0;i<k.length;i++){var d=k[i];this._sourceFilters.push(d);if(this._elSourceFilters){this._createSourceCheckbox(d);}}},_createCategoryCheckbox:function(l){if(this._elFt){var k=b("span",{className:"yui-log-filtergrp"}),j=f.generateId(null,"yui-log-filter-"+l+this._sName),d=b("input",{id:j,className:"yui-log-filter-"+l,type:"checkbox",category:l}),i=b("label",{htmlFor:j,className:l,innerHTML:l});a.on(d,"click",this._onCheckCategory,this);this._filterCheckboxes[l]=d;k.appendChild(d);k.appendChild(i);this._elCategoryFilters.appendChild(k);d.checked=true;}},_createSourceCheckbox:function(d){if(this._elFt){var l=b("span",{className:"yui-log-filtergrp"}),k=f.generateId(null,"yui-log-filter-"+d+this._sName),i=b("input",{id:k,className:"yui-log-filter-"+d,type:"checkbox",source:d}),j=b("label",{htmlFor:k,className:d,innerHTML:d});a.on(i,"click",this._onCheckSource,this);this._filterCheckboxes[d]=i;l.appendChild(i);l.appendChild(j);this._elSourceFilters.appendChild(l);i.checked=true;}},_filterLogs:function(){if(this._elConsole!==null){this.clearConsole();this._printToConsole(c.getStack());}},_printBuffer:function(){this._timeout=null;if(this._elConsole!==null){var j=this.thresholdMax;j=(j&&!isNaN(j))?j:500;if(this._consoleMsgCount<j){var d=[];for(var k=0;k<this._buffer.length;k++){d[k]=this._buffer[k];}this._buffer=[];this._printToConsole(d);}else{this._filterLogs();}if(!this.newestOnTop){this._elConsole.scrollTop=this._elConsole.scrollHeight;}}},_printToConsole:function(r){var k=r.length,v=h.createDocumentFragment(),y=[],z=this.thresholdMin,l=this._sourceFilters.length,w=this._categoryFilters.length,t,q,p,o,u;if(isNaN(z)||(z>this.thresholdMax)){z=0;}t=(k>z)?(k-z):0;for(q=t;q<k;q++){var n=false,s=false,x=r[q],d=x.source,m=x.category;for(p=0;p<l;p++){if(d==this._sourceFilters[p]){s=true;break;}}if(s){for(p=0;p<w;p++){if(m==this._categoryFilters[p]){n=true;break;}}}if(n){if(this._consoleMsgCount===0){this._lastTime=x.time.getTime();}o=this.formatMsg(x);if(typeof o==="string"){y[y.length]=o;}else{v.insertBefore(o,this.newestOnTop?v.firstChild||null:null);}this._consoleMsgCount++;this._lastTime=x.time.getTime();}}if(y.length){y.splice(0,0,this._elConsole.innerHTML);this._elConsole.innerHTML=this.newestOnTop?y.reverse().join(""):y.join("");}else{if(v.firstChild){this._elConsole.insertBefore(v,this.newestOnTop?this._elConsole.firstChild||null:null);}}},_onCategoryCreate:function(k,j,d){var i=j[0];d._categoryFilters.push(i);if(d._elFt){d._createCategoryCheckbox(i);}},_onSourceCreate:function(k,j,d){var i=j[0];d._sourceFilters.push(i);if(d._elFt){d._createSourceCheckbox(i);}},_onCheckCategory:function(d,i){var j=this.category;if(!this.checked){i.hideCategory(j);}else{i.showCategory(j);}},_onCheckSource:function(d,i){var j=this.source;if(!this.checked){i.hideSource(j);}else{i.showSource(j);}},_onClickCollapseBtn:function(d,i){if(!i.isCollapsed){i.collapse();}else{i.expand();}},_onClickPauseBtn:function(d,i){if(!i.isPaused){i.pause();}else{i.resume();}},_onClickClearBtn:function(d,i){i.clearConsole();},_onNewLog:function(k,j,d){var i=j[0];d._buffer.push(i);if(d.logReaderEnabled===true&&d._timeout===null){d._timeout=setTimeout(function(){d._printBuffer();},d.outputBuffer);}},_onReset:function(j,i,d){d._filterLogs();}};YAHOO.widget.LogReader=g;})();YAHOO.register("logger",YAHOO.widget.Logger,{version:"2.9.0",build:"2800"});

/********* ../yui/tabview/tabview-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){var b=YAHOO.util,c=b.Dom,i=b.Event,g=window.document,k="active",d="activeIndex",f="activeTab",e="disabled",a="contentEl",h="element",j=function(m,l){l=l||{};if(arguments.length==1&&!YAHOO.lang.isString(m)&&!m.nodeName){l=m;m=l.element||null;}if(!m&&!l.element){m=this._createTabViewElement(l);}j.superclass.constructor.call(this,m,l);};YAHOO.extend(j,b.Element,{CLASSNAME:"yui-navset",TAB_PARENT_CLASSNAME:"yui-nav",CONTENT_PARENT_CLASSNAME:"yui-content",_tabParent:null,_contentParent:null,addTab:function(n,o){var p=this.get("tabs"),s=this._tabParent,q=this._contentParent,l=n.get(h),m=n.get(a),t=this.get(d),r;if(!p){this._queue[this._queue.length]=["addTab",arguments];return false;}r=this.getTab(o);o=(o===undefined)?p.length:o;p.splice(o,0,n);if(r){s.insertBefore(l,r.get(h));if(m){q.appendChild(m);}}else{s.appendChild(l);if(m){q.appendChild(m);}}if(!n.get(k)){n.set("contentVisible",false,true);if(o<=t){this.set(d,t+1,true);}}else{this.set(f,n,true);this.set("activeIndex",o,true);}this._initTabEvents(n);},_initTabEvents:function(l){l.addListener(l.get("activationEvent"),l._onActivate,this,l);l.addListener("activationEventChange",l._onActivationEventChange,this,l);},_removeTabEvents:function(l){l.removeListener(l.get("activationEvent"),l._onActivate,this,l);l.removeListener("activationEventChange",l._onActivationEventChange,this,l);},DOMEventHandler:function(q){var r=i.getTarget(q),t=this._tabParent,s=this.get("tabs"),n,m,l;if(c.isAncestor(t,r)){for(var o=0,p=s.length;o<p;o++){m=s[o].get(h);l=s[o].get(a);if(r==m||c.isAncestor(m,r)){n=s[o];break;}}if(n){n.fireEvent(q.type,q);}}},getTab:function(l){return this.get("tabs")[l];},getTabIndex:function(p){var m=null,o=this.get("tabs");for(var n=0,l=o.length;n<l;++n){if(p==o[n]){m=n;break;}}return m;},removeTab:function(o){var n=this.get("tabs").length,l=this.get(d),m=this.getTabIndex(o);if(o===this.get(f)){if(n>1){if(m+1===n){this.set(d,m-1);}else{this.set(d,m+1);}}else{this.set(f,null);}}else{if(m<l){this.set(d,l-1,true);}}this._removeTabEvents(o);this._tabParent.removeChild(o.get(h));this._contentParent.removeChild(o.get(a));this._configs.tabs.value.splice(m,1);o.fireEvent("remove",{type:"remove",tabview:this});},toString:function(){var l=this.get("id")||this.get("tagName");return"TabView "+l;},contentTransition:function(m,l){if(m){m.set("contentVisible",true);}if(l){l.set("contentVisible",false);}},initAttributes:function(l){j.superclass.initAttributes.call(this,l);if(!l.orientation){l.orientation="top";}var n=this.get(h);if(!this.hasClass(this.CLASSNAME)){this.addClass(this.CLASSNAME);}this.setAttributeConfig("tabs",{value:[],readOnly:true});this._tabParent=this.getElementsByClassName(this.TAB_PARENT_CLASSNAME,"ul")[0]||this._createTabParent();this._contentParent=this.getElementsByClassName(this.CONTENT_PARENT_CLASSNAME,"div")[0]||this._createContentParent();this.setAttributeConfig("orientation",{value:l.orientation,method:function(o){var p=this.get("orientation");this.addClass("yui-navset-"+o);if(p!=o){this.removeClass("yui-navset-"+p);}if(o==="bottom"){this.appendChild(this._tabParent);}}});this.setAttributeConfig(d,{value:l.activeIndex,validator:function(q){var o=true,p;if(q){p=this.getTab(q);if(p&&p.get(e)){o=false;}}return o;}});this.setAttributeConfig(f,{value:l[f],method:function(p){var o=this.get(f);if(p){p.set(k,true);}if(o&&o!==p){o.set(k,false);}if(o&&p!==o){this.contentTransition(p,o);}else{if(p){p.set("contentVisible",true);}}},validator:function(p){var o=true;if(p&&p.get(e)){o=false;}return o;}});this.on("activeTabChange",this._onActiveTabChange);this.on("activeIndexChange",this._onActiveIndexChange);if(this._tabParent){this._initTabs();}this.DOM_EVENTS.submit=false;this.DOM_EVENTS.focus=false;this.DOM_EVENTS.blur=false;this.DOM_EVENTS.change=false;for(var m in this.DOM_EVENTS){if(YAHOO.lang.hasOwnProperty(this.DOM_EVENTS,m)){this.addListener.call(this,m,this.DOMEventHandler);}}},deselectTab:function(l){if(this.getTab(l)===this.get(f)){this.set(f,null);}},selectTab:function(l){this.set(f,this.getTab(l));},_onActiveTabChange:function(n){var l=this.get(d),m=this.getTabIndex(n.newValue);if(l!==m){if(!(this.set(d,m))){this.set(f,n.prevValue);}}},_onActiveIndexChange:function(l){if(l.newValue!==this.getTabIndex(this.get(f))){if(!(this.set(f,this.getTab(l.newValue)))){this.set(d,l.prevValue);}}},_initTabs:function(){var q=c.getChildren(this._tabParent),o=c.getChildren(this._contentParent),n=this.get(d),r,m,s;for(var p=0,l=q.length;p<l;++p){m={};if(o[p]){m.contentEl=o[p];}r=new YAHOO.widget.Tab(q[p],m);this.addTab(r);if(r.hasClass(r.ACTIVE_CLASSNAME)){s=r;}}if(n!=undefined){this.set(f,this.getTab(n));}else{this._configs[f].value=s;this._configs[d].value=this.getTabIndex(s);}},_createTabViewElement:function(l){var m=g.createElement("div");if(this.CLASSNAME){m.className=this.CLASSNAME;}return m;},_createTabParent:function(l){var m=g.createElement("ul");if(this.TAB_PARENT_CLASSNAME){m.className=this.TAB_PARENT_CLASSNAME;}this.get(h).appendChild(m);return m;},_createContentParent:function(l){var m=g.createElement("div");if(this.CONTENT_PARENT_CLASSNAME){m.className=this.CONTENT_PARENT_CLASSNAME;}this.get(h).appendChild(m);return m;}});YAHOO.widget.TabView=j;})();(function(){var d=YAHOO.util,i=d.Dom,l=YAHOO.lang,m="activeTab",j="label",g="labelEl",q="content",c="contentEl",o="element",p="cacheData",b="dataSrc",h="dataLoaded",a="dataTimeout",n="loadMethod",f="postData",k="disabled",e=function(s,r){r=r||{};if(arguments.length==1&&!l.isString(s)&&!s.nodeName){r=s;s=r.element;}if(!s&&!r.element){s=this._createTabElement(r);}this.loadHandler={success:function(t){this.set(q,t.responseText);},failure:function(t){}};e.superclass.constructor.call(this,s,r);this.DOM_EVENTS={};};YAHOO.extend(e,YAHOO.util.Element,{LABEL_TAGNAME:"em",ACTIVE_CLASSNAME:"selected",HIDDEN_CLASSNAME:"yui-hidden",ACTIVE_TITLE:"active",DISABLED_CLASSNAME:k,LOADING_CLASSNAME:"loading",dataConnection:null,loadHandler:null,_loading:false,toString:function(){var r=this.get(o),s=r.id||r.tagName;
return"Tab "+s;},initAttributes:function(r){r=r||{};e.superclass.initAttributes.call(this,r);this.setAttributeConfig("activationEvent",{value:r.activationEvent||"click"});this.setAttributeConfig(g,{value:r[g]||this._getLabelEl(),method:function(s){s=i.get(s);var t=this.get(g);if(t){if(t==s){return false;}t.parentNode.replaceChild(s,t);this.set(j,s.innerHTML);}}});this.setAttributeConfig(j,{value:r.label||this._getLabel(),method:function(t){var s=this.get(g);if(!s){this.set(g,this._createLabelEl());}s.innerHTML=t;}});this.setAttributeConfig(c,{value:r[c]||document.createElement("div"),method:function(s){s=i.get(s);var t=this.get(c);if(t){if(t===s){return false;}if(!this.get("selected")){i.addClass(s,this.HIDDEN_CLASSNAME);}t.parentNode.replaceChild(s,t);this.set(q,s.innerHTML);}}});this.setAttributeConfig(q,{value:r[q]||this.get(c).innerHTML,method:function(s){this.get(c).innerHTML=s;}});this.setAttributeConfig(b,{value:r.dataSrc});this.setAttributeConfig(p,{value:r.cacheData||false,validator:l.isBoolean});this.setAttributeConfig(n,{value:r.loadMethod||"GET",validator:l.isString});this.setAttributeConfig(h,{value:false,validator:l.isBoolean,writeOnce:true});this.setAttributeConfig(a,{value:r.dataTimeout||null,validator:l.isNumber});this.setAttributeConfig(f,{value:r.postData||null});this.setAttributeConfig("active",{value:r.active||this.hasClass(this.ACTIVE_CLASSNAME),method:function(s){if(s===true){this.addClass(this.ACTIVE_CLASSNAME);this.set("title",this.ACTIVE_TITLE);}else{this.removeClass(this.ACTIVE_CLASSNAME);this.set("title","");}},validator:function(s){return l.isBoolean(s)&&!this.get(k);}});this.setAttributeConfig(k,{value:r.disabled||this.hasClass(this.DISABLED_CLASSNAME),method:function(s){if(s===true){this.addClass(this.DISABLED_CLASSNAME);}else{this.removeClass(this.DISABLED_CLASSNAME);}},validator:l.isBoolean});this.setAttributeConfig("href",{value:r.href||this.getElementsByTagName("a")[0].getAttribute("href",2)||"#",method:function(s){this.getElementsByTagName("a")[0].href=s;},validator:l.isString});this.setAttributeConfig("contentVisible",{value:r.contentVisible,method:function(s){if(s){i.removeClass(this.get(c),this.HIDDEN_CLASSNAME);if(this.get(b)){if(!this._loading&&!(this.get(h)&&this.get(p))){this._dataConnect();}}}else{i.addClass(this.get(c),this.HIDDEN_CLASSNAME);}},validator:l.isBoolean});},_dataConnect:function(){if(!d.Connect){return false;}i.addClass(this.get(c).parentNode,this.LOADING_CLASSNAME);this._loading=true;this.dataConnection=d.Connect.asyncRequest(this.get(n),this.get(b),{success:function(r){this.loadHandler.success.call(this,r);this.set(h,true);this.dataConnection=null;i.removeClass(this.get(c).parentNode,this.LOADING_CLASSNAME);this._loading=false;},failure:function(r){this.loadHandler.failure.call(this,r);this.dataConnection=null;i.removeClass(this.get(c).parentNode,this.LOADING_CLASSNAME);this._loading=false;},scope:this,timeout:this.get(a)},this.get(f));},_createTabElement:function(r){var v=document.createElement("li"),s=document.createElement("a"),u=r.label||null,t=r.labelEl||null;s.href=r.href||"#";v.appendChild(s);if(t){if(!u){u=this._getLabel();}}else{t=this._createLabelEl();}s.appendChild(t);return v;},_getLabelEl:function(){return this.getElementsByTagName(this.LABEL_TAGNAME)[0];},_createLabelEl:function(){var r=document.createElement(this.LABEL_TAGNAME);return r;},_getLabel:function(){var r=this.get(g);if(!r){return undefined;}return r.innerHTML;},_onActivate:function(u,t){var s=this,r=false;d.Event.preventDefault(u);if(s===t.get(m)){r=true;}t.set(m,s,r);},_onActivationEventChange:function(s){var r=this;if(s.prevValue!=s.newValue){r.removeListener(s.prevValue,r._onActivate);r.addListener(s.newValue,r._onActivate,this,r);}}});YAHOO.widget.Tab=e;})();YAHOO.register("tabview",YAHOO.widget.TabView,{version:"2.9.0",build:"2800"});

/********* ../yui/treeview/treeview-min.js *********/
/*
Copyright (c) 2011, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.com/yui/license.html
version: 2.9.0
*/
(function(){var d=YAHOO.util.Dom,b=YAHOO.util.Event,f=YAHOO.lang,e=YAHOO.widget;YAHOO.widget.TreeView=function(h,g){if(h){this.init(h);}if(g){this.buildTreeFromObject(g);}else{if(f.trim(this._el.innerHTML)){this.buildTreeFromMarkup(h);}}};var c=e.TreeView;c.prototype={id:null,_el:null,_nodes:null,locked:false,_expandAnim:null,_collapseAnim:null,_animCount:0,maxAnim:2,_hasDblClickSubscriber:false,_dblClickTimer:null,currentFocus:null,singleNodeHighlight:false,_currentlyHighlighted:null,setExpandAnim:function(g){this._expandAnim=(e.TVAnim.isValid(g))?g:null;},setCollapseAnim:function(g){this._collapseAnim=(e.TVAnim.isValid(g))?g:null;},animateExpand:function(i,j){if(this._expandAnim&&this._animCount<this.maxAnim){var g=this;var h=e.TVAnim.getAnim(this._expandAnim,i,function(){g.expandComplete(j);});if(h){++this._animCount;this.fireEvent("animStart",{"node":j,"type":"expand"});h.animate();}return true;}return false;},animateCollapse:function(i,j){if(this._collapseAnim&&this._animCount<this.maxAnim){var g=this;var h=e.TVAnim.getAnim(this._collapseAnim,i,function(){g.collapseComplete(j);});if(h){++this._animCount;this.fireEvent("animStart",{"node":j,"type":"collapse"});h.animate();}return true;}return false;},expandComplete:function(g){--this._animCount;this.fireEvent("animComplete",{"node":g,"type":"expand"});},collapseComplete:function(g){--this._animCount;this.fireEvent("animComplete",{"node":g,"type":"collapse"});},init:function(i){this._el=d.get(i);this.id=d.generateId(this._el,"yui-tv-auto-id-");this.createEvent("animStart",this);this.createEvent("animComplete",this);this.createEvent("collapse",this);this.createEvent("collapseComplete",this);this.createEvent("expand",this);this.createEvent("expandComplete",this);this.createEvent("enterKeyPressed",this);this.createEvent("clickEvent",this);this.createEvent("focusChanged",this);var g=this;this.createEvent("dblClickEvent",{scope:this,onSubscribeCallback:function(){g._hasDblClickSubscriber=true;}});this.createEvent("labelClick",this);this.createEvent("highlightEvent",this);this._nodes=[];c.trees[this.id]=this;this.root=new e.RootNode(this);var h=e.LogWriter;if(this._initEditor){this._initEditor();}},buildTreeFromObject:function(g){var h=function(q,n){var m,r,l,k,p,j,o;for(m=0;m<n.length;m++){r=n[m];if(f.isString(r)){l=new e.TextNode(r,q);}else{if(f.isObject(r)){k=r.children;delete r.children;p=r.type||"text";delete r.type;switch(f.isString(p)&&p.toLowerCase()){case"text":l=new e.TextNode(r,q);break;case"menu":l=new e.MenuNode(r,q);break;case"html":l=new e.HTMLNode(r,q);break;default:if(f.isString(p)){j=e[p];}else{j=p;}if(f.isObject(j)){for(o=j;o&&o!==e.Node;o=o.superclass.constructor){}if(o){l=new j(r,q);}else{}}else{}}if(k){h(l,k);}}else{}}}};if(!f.isArray(g)){g=[g];}h(this.root,g);},buildTreeFromMarkup:function(i){var h=function(j){var n,q,m=[],l={},k,o;for(n=d.getFirstChild(j);n;n=d.getNextSibling(n)){switch(n.tagName.toUpperCase()){case"LI":k="";l={expanded:d.hasClass(n,"expanded"),title:n.title||n.alt||null,className:f.trim(n.className.replace(/\bexpanded\b/,""))||null};q=n.firstChild;if(q.nodeType==3){k=f.trim(q.nodeValue.replace(/[\n\t\r]*/g,""));if(k){l.type="text";l.label=k;}else{q=d.getNextSibling(q);}}if(!k){if(q.tagName.toUpperCase()=="A"){l.type="text";l.label=q.innerHTML;l.href=q.href;l.target=q.target;l.title=q.title||q.alt||l.title;}else{l.type="html";var p=document.createElement("div");p.appendChild(q.cloneNode(true));l.html=p.innerHTML;l.hasIcon=true;}}q=d.getNextSibling(q);switch(q&&q.tagName.toUpperCase()){case"UL":case"OL":l.children=h(q);break;}if(YAHOO.lang.JSON){o=n.getAttribute("yuiConfig");if(o){o=YAHOO.lang.JSON.parse(o);l=YAHOO.lang.merge(l,o);}}m.push(l);break;case"UL":case"OL":l={type:"text",label:"",children:h(q)};m.push(l);break;}}return m;};var g=d.getChildrenBy(d.get(i),function(k){var j=k.tagName.toUpperCase();return j=="UL"||j=="OL";});if(g.length){this.buildTreeFromObject(h(g[0]));}else{}},_getEventTargetTdEl:function(h){var i=b.getTarget(h);while(i&&!(i.tagName.toUpperCase()=="TD"&&d.hasClass(i.parentNode,"ygtvrow"))){i=d.getAncestorByTagName(i,"td");}if(f.isNull(i)){return null;}if(/\bygtv(blank)?depthcell/.test(i.className)){return null;}if(i.id){var g=i.id.match(/\bygtv([^\d]*)(.*)/);if(g&&g[2]&&this._nodes[g[2]]){return i;}}return null;},_onClickEvent:function(j){var h=this,l=this._getEventTargetTdEl(j),i,k,g=function(m){i.focus();if(m||!i.href){i.toggle();try{b.preventDefault(j);}catch(n){}}};if(!l){return;}i=this.getNodeByElement(l);if(!i){return;}k=b.getTarget(j);if(d.hasClass(k,i.labelStyle)||d.getAncestorByClassName(k,i.labelStyle)){this.fireEvent("labelClick",i);}if(this._closeEditor){this._closeEditor(false);}if(/\bygtv[tl][mp]h?h?/.test(l.className)){g(true);}else{if(this._dblClickTimer){window.clearTimeout(this._dblClickTimer);this._dblClickTimer=null;}else{if(this._hasDblClickSubscriber){this._dblClickTimer=window.setTimeout(function(){h._dblClickTimer=null;if(h.fireEvent("clickEvent",{event:j,node:i})!==false){g();}},200);}else{if(h.fireEvent("clickEvent",{event:j,node:i})!==false){g();}}}}},_onDblClickEvent:function(g){if(!this._hasDblClickSubscriber){return;}var h=this._getEventTargetTdEl(g);if(!h){return;}if(!(/\bygtv[tl][mp]h?h?/.test(h.className))){this.fireEvent("dblClickEvent",{event:g,node:this.getNodeByElement(h)});if(this._dblClickTimer){window.clearTimeout(this._dblClickTimer);this._dblClickTimer=null;}}},_onMouseOverEvent:function(g){var h;if((h=this._getEventTargetTdEl(g))&&(h=this.getNodeByElement(h))&&(h=h.getToggleEl())){h.className=h.className.replace(/\bygtv([lt])([mp])\b/gi,"ygtv$1$2h");}},_onMouseOutEvent:function(g){var h;if((h=this._getEventTargetTdEl(g))&&(h=this.getNodeByElement(h))&&(h=h.getToggleEl())){h.className=h.className.replace(/\bygtv([lt])([mp])h\b/gi,"ygtv$1$2");}},_onKeyDownEvent:function(l){var n=b.getTarget(l),k=this.getNodeByElement(n),j=k,g=YAHOO.util.KeyListener.KEY;switch(l.keyCode){case g.UP:do{if(j.previousSibling){j=j.previousSibling;}else{j=j.parent;
}}while(j&&!j._canHaveFocus());if(j){j.focus();}b.preventDefault(l);break;case g.DOWN:do{if(j.nextSibling){j=j.nextSibling;}else{j.expand();j=(j.children.length||null)&&j.children[0];}}while(j&&!j._canHaveFocus);if(j){j.focus();}b.preventDefault(l);break;case g.LEFT:do{if(j.parent){j=j.parent;}else{j=j.previousSibling;}}while(j&&!j._canHaveFocus());if(j){j.focus();}b.preventDefault(l);break;case g.RIGHT:var i=this,m,h=function(o){i.unsubscribe("expandComplete",h);m(o);};m=function(o){do{if(o.isDynamic()&&!o.childrenRendered){i.subscribe("expandComplete",h);o.expand();o=null;break;}else{o.expand();if(o.children.length){o=o.children[0];}else{o=o.nextSibling;}}}while(o&&!o._canHaveFocus());if(o){o.focus();}};m(j);b.preventDefault(l);break;case g.ENTER:if(k.href){if(k.target){window.open(k.href,k.target);}else{window.location(k.href);}}else{k.toggle();}this.fireEvent("enterKeyPressed",k);b.preventDefault(l);break;case g.HOME:j=this.getRoot();if(j.children.length){j=j.children[0];}if(j._canHaveFocus()){j.focus();}b.preventDefault(l);break;case g.END:j=j.parent.children;j=j[j.length-1];if(j._canHaveFocus()){j.focus();}b.preventDefault(l);break;case 107:case 187:if(l.shiftKey){k.parent.expandAll();}else{k.expand();}break;case 109:case 189:if(l.shiftKey){k.parent.collapseAll();}else{k.collapse();}break;default:break;}},render:function(){var g=this.root.getHtml(),h=this.getEl();h.innerHTML=g;if(!this._hasEvents){b.on(h,"click",this._onClickEvent,this,true);b.on(h,"dblclick",this._onDblClickEvent,this,true);b.on(h,"mouseover",this._onMouseOverEvent,this,true);b.on(h,"mouseout",this._onMouseOutEvent,this,true);b.on(h,"keydown",this._onKeyDownEvent,this,true);}this._hasEvents=true;},getEl:function(){if(!this._el){this._el=d.get(this.id);}return this._el;},regNode:function(g){this._nodes[g.index]=g;},getRoot:function(){return this.root;},setDynamicLoad:function(g,h){this.root.setDynamicLoad(g,h);},expandAll:function(){if(!this.locked){this.root.expandAll();}},collapseAll:function(){if(!this.locked){this.root.collapseAll();}},getNodeByIndex:function(h){var g=this._nodes[h];return(g)?g:null;},getNodeByProperty:function(j,h){for(var g in this._nodes){if(this._nodes.hasOwnProperty(g)){var k=this._nodes[g];if((j in k&&k[j]==h)||(k.data&&h==k.data[j])){return k;}}}return null;},getNodesByProperty:function(k,j){var g=[];for(var h in this._nodes){if(this._nodes.hasOwnProperty(h)){var l=this._nodes[h];if((k in l&&l[k]==j)||(l.data&&j==l.data[k])){g.push(l);}}}return(g.length)?g:null;},getNodesBy:function(j){var g=[];for(var h in this._nodes){if(this._nodes.hasOwnProperty(h)){var k=this._nodes[h];if(j(k)){g.push(k);}}}return(g.length)?g:null;},getNodeByElement:function(i){var j=i,g,h=/ygtv([^\d]*)(.*)/;do{if(j&&j.id){g=j.id.match(h);if(g&&g[2]){return this.getNodeByIndex(g[2]);}}j=j.parentNode;if(!j||!j.tagName){break;}}while(j.id!==this.id&&j.tagName.toLowerCase()!=="body");return null;},getHighlightedNode:function(){return this._currentlyHighlighted;},removeNode:function(h,g){if(h.isRoot()){return false;}var i=h.parent;if(i.parent){i=i.parent;}this._deleteNode(h);if(g&&i&&i.childrenRendered){i.refresh();}return true;},_removeChildren_animComplete:function(g){this.unsubscribe(this._removeChildren_animComplete);this.removeChildren(g.node);},removeChildren:function(g){if(g.expanded){if(this._collapseAnim){this.subscribe("animComplete",this._removeChildren_animComplete,this,true);e.Node.prototype.collapse.call(g);return;}g.collapse();}while(g.children.length){this._deleteNode(g.children[0]);}if(g.isRoot()){e.Node.prototype.expand.call(g);}g.childrenRendered=false;g.dynamicLoadComplete=false;g.updateIcon();},_deleteNode:function(g){this.removeChildren(g);this.popNode(g);},popNode:function(k){var l=k.parent;var h=[];for(var j=0,g=l.children.length;j<g;++j){if(l.children[j]!=k){h[h.length]=l.children[j];}}l.children=h;l.childrenRendered=false;if(k.previousSibling){k.previousSibling.nextSibling=k.nextSibling;}if(k.nextSibling){k.nextSibling.previousSibling=k.previousSibling;}if(this.currentFocus==k){this.currentFocus=null;}if(this._currentlyHighlighted==k){this._currentlyHighlighted=null;}k.parent=null;k.previousSibling=null;k.nextSibling=null;k.tree=null;delete this._nodes[k.index];},destroy:function(){if(this._destroyEditor){this._destroyEditor();}var h=this.getEl();b.removeListener(h,"click");b.removeListener(h,"dblclick");b.removeListener(h,"mouseover");b.removeListener(h,"mouseout");b.removeListener(h,"keydown");for(var g=0;g<this._nodes.length;g++){var j=this._nodes[g];if(j&&j.destroy){j.destroy();}}h.innerHTML="";this._hasEvents=false;},toString:function(){return"TreeView "+this.id;},getNodeCount:function(){return this.getRoot().getNodeCount();},getTreeDefinition:function(){return this.getRoot().getNodeDefinition();},onExpand:function(g){},onCollapse:function(g){},setNodesProperty:function(g,i,h){this.root.setNodesProperty(g,i);if(h){this.root.refresh();}},onEventToggleHighlight:function(h){var g;if("node" in h&&h.node instanceof e.Node){g=h.node;}else{if(h instanceof e.Node){g=h;}else{return false;}}g.toggleHighlight();return false;}};var a=c.prototype;a.draw=a.render;YAHOO.augment(c,YAHOO.util.EventProvider);c.nodeCount=0;c.trees=[];c.getTree=function(h){var g=c.trees[h];return(g)?g:null;};c.getNode=function(h,i){var g=c.getTree(h);return(g)?g.getNodeByIndex(i):null;};c.FOCUS_CLASS_NAME="ygtvfocus";})();(function(){var b=YAHOO.util.Dom,c=YAHOO.lang,a=YAHOO.util.Event;YAHOO.widget.Node=function(f,e,d){if(f){this.init(f,e,d);}};YAHOO.widget.Node.prototype={index:0,children:null,tree:null,data:null,parent:null,depth:-1,expanded:false,multiExpand:true,renderHidden:false,childrenRendered:false,dynamicLoadComplete:false,previousSibling:null,nextSibling:null,_dynLoad:false,dataLoader:null,isLoading:false,hasIcon:true,iconMode:0,nowrap:false,isLeaf:false,contentStyle:"",contentElId:null,enableHighlight:true,highlightState:0,propagateHighlightUp:false,propagateHighlightDown:false,className:null,_type:"Node",init:function(g,f,d){this.data={};
this.children=[];this.index=YAHOO.widget.TreeView.nodeCount;++YAHOO.widget.TreeView.nodeCount;this.contentElId="ygtvcontentel"+this.index;if(c.isObject(g)){for(var e in g){if(g.hasOwnProperty(e)){if(e.charAt(0)!="_"&&!c.isUndefined(this[e])&&!c.isFunction(this[e])){this[e]=g[e];}else{this.data[e]=g[e];}}}}if(!c.isUndefined(d)){this.expanded=d;}this.createEvent("parentChange",this);if(f){f.appendChild(this);}},applyParent:function(e){if(!e){return false;}this.tree=e.tree;this.parent=e;this.depth=e.depth+1;this.tree.regNode(this);e.childrenRendered=false;for(var f=0,d=this.children.length;f<d;++f){this.children[f].applyParent(this);}this.fireEvent("parentChange");return true;},appendChild:function(e){if(this.hasChildren()){var d=this.children[this.children.length-1];d.nextSibling=e;e.previousSibling=d;}this.children[this.children.length]=e;e.applyParent(this);if(this.childrenRendered&&this.expanded){this.getChildrenEl().style.display="";}return e;},appendTo:function(d){return d.appendChild(this);},insertBefore:function(d){var f=d.parent;if(f){if(this.tree){this.tree.popNode(this);}var e=d.isChildOf(f);f.children.splice(e,0,this);if(d.previousSibling){d.previousSibling.nextSibling=this;}this.previousSibling=d.previousSibling;this.nextSibling=d;d.previousSibling=this;this.applyParent(f);}return this;},insertAfter:function(d){var f=d.parent;if(f){if(this.tree){this.tree.popNode(this);}var e=d.isChildOf(f);if(!d.nextSibling){this.nextSibling=null;return this.appendTo(f);}f.children.splice(e+1,0,this);d.nextSibling.previousSibling=this;this.previousSibling=d;this.nextSibling=d.nextSibling;d.nextSibling=this;this.applyParent(f);}return this;},isChildOf:function(e){if(e&&e.children){for(var f=0,d=e.children.length;f<d;++f){if(e.children[f]===this){return f;}}}return -1;},getSiblings:function(){var d=this.parent.children.slice(0);for(var e=0;e<d.length&&d[e]!=this;e++){}d.splice(e,1);if(d.length){return d;}return null;},showChildren:function(){if(!this.tree.animateExpand(this.getChildrenEl(),this)){if(this.hasChildren()){this.getChildrenEl().style.display="";}}},hideChildren:function(){if(!this.tree.animateCollapse(this.getChildrenEl(),this)){this.getChildrenEl().style.display="none";}},getElId:function(){return"ygtv"+this.index;},getChildrenElId:function(){return"ygtvc"+this.index;},getToggleElId:function(){return"ygtvt"+this.index;},getEl:function(){return b.get(this.getElId());},getChildrenEl:function(){return b.get(this.getChildrenElId());},getToggleEl:function(){return b.get(this.getToggleElId());},getContentEl:function(){return b.get(this.contentElId);},collapse:function(){if(!this.expanded){return;}var d=this.tree.onCollapse(this);if(false===d){return;}d=this.tree.fireEvent("collapse",this);if(false===d){return;}if(!this.getEl()){this.expanded=false;}else{this.hideChildren();this.expanded=false;this.updateIcon();}d=this.tree.fireEvent("collapseComplete",this);},expand:function(f){if(this.isLoading||(this.expanded&&!f)){return;}var d=true;if(!f){d=this.tree.onExpand(this);if(false===d){return;}d=this.tree.fireEvent("expand",this);}if(false===d){return;}if(!this.getEl()){this.expanded=true;return;}if(!this.childrenRendered){this.getChildrenEl().innerHTML=this.renderChildren();}else{}this.expanded=true;this.updateIcon();if(this.isLoading){this.expanded=false;return;}if(!this.multiExpand){var g=this.getSiblings();for(var e=0;g&&e<g.length;++e){if(g[e]!=this&&g[e].expanded){g[e].collapse();}}}this.showChildren();d=this.tree.fireEvent("expandComplete",this);},updateIcon:function(){if(this.hasIcon){var d=this.getToggleEl();if(d){d.className=d.className.replace(/\bygtv(([tl][pmn]h?)|(loading))\b/gi,this.getStyle());}}d=b.get("ygtvtableel"+this.index);if(d){if(this.expanded){b.replaceClass(d,"ygtv-collapsed","ygtv-expanded");}else{b.replaceClass(d,"ygtv-expanded","ygtv-collapsed");}}},getStyle:function(){if(this.isLoading){return"ygtvloading";}else{var e=(this.nextSibling)?"t":"l";var d="n";if(this.hasChildren(true)||(this.isDynamic()&&!this.getIconMode())){d=(this.expanded)?"m":"p";}return"ygtv"+e+d;}},getHoverStyle:function(){var d=this.getStyle();if(this.hasChildren(true)&&!this.isLoading){d+="h";}return d;},expandAll:function(){var d=this.children.length;for(var e=0;e<d;++e){var f=this.children[e];if(f.isDynamic()){break;}else{if(!f.multiExpand){break;}else{f.expand();f.expandAll();}}}},collapseAll:function(){for(var d=0;d<this.children.length;++d){this.children[d].collapse();this.children[d].collapseAll();}},setDynamicLoad:function(d,e){if(d){this.dataLoader=d;this._dynLoad=true;}else{this.dataLoader=null;this._dynLoad=false;}if(e){this.iconMode=e;}},isRoot:function(){return(this==this.tree.root);},isDynamic:function(){if(this.isLeaf){return false;}else{return(!this.isRoot()&&(this._dynLoad||this.tree.root._dynLoad));}},getIconMode:function(){return(this.iconMode||this.tree.root.iconMode);},hasChildren:function(d){if(this.isLeaf){return false;}else{return(this.children.length>0||(d&&this.isDynamic()&&!this.dynamicLoadComplete));}},toggle:function(){if(!this.tree.locked&&(this.hasChildren(true)||this.isDynamic())){if(this.expanded){this.collapse();}else{this.expand();}}},getHtml:function(){this.childrenRendered=false;return['<div class="ygtvitem" id="',this.getElId(),'">',this.getNodeHtml(),this.getChildrenHtml(),"</div>"].join("");},getChildrenHtml:function(){var d=[];d[d.length]='<div class="ygtvchildren" id="'+this.getChildrenElId()+'"';if(!this.expanded||!this.hasChildren()){d[d.length]=' style="display:none;"';}d[d.length]=">";if((this.hasChildren(true)&&this.expanded)||(this.renderHidden&&!this.isDynamic())){d[d.length]=this.renderChildren();}d[d.length]="</div>";return d.join("");},renderChildren:function(){var d=this;if(this.isDynamic()&&!this.dynamicLoadComplete){this.isLoading=true;this.tree.locked=true;if(this.dataLoader){setTimeout(function(){d.dataLoader(d,function(){d.loadComplete();});},10);}else{if(this.tree.root.dataLoader){setTimeout(function(){d.tree.root.dataLoader(d,function(){d.loadComplete();
});},10);}else{return"Error: data loader not found or not specified.";}}return"";}else{return this.completeRender();}},completeRender:function(){var e=[];for(var d=0;d<this.children.length;++d){e[e.length]=this.children[d].getHtml();}this.childrenRendered=true;return e.join("");},loadComplete:function(){this.getChildrenEl().innerHTML=this.completeRender();if(this.propagateHighlightDown){if(this.highlightState===1&&!this.tree.singleNodeHighlight){for(var d=0;d<this.children.length;d++){this.children[d].highlight(true);}}else{if(this.highlightState===0||this.tree.singleNodeHighlight){for(d=0;d<this.children.length;d++){this.children[d].unhighlight(true);}}}}this.dynamicLoadComplete=true;this.isLoading=false;this.expand(true);this.tree.locked=false;},getAncestor:function(e){if(e>=this.depth||e<0){return null;}var d=this.parent;while(d.depth>e){d=d.parent;}return d;},getDepthStyle:function(d){return(this.getAncestor(d).nextSibling)?"ygtvdepthcell":"ygtvblankdepthcell";},getNodeHtml:function(){var e=[];e[e.length]='<table id="ygtvtableel'+this.index+'" border="0" cellpadding="0" cellspacing="0" class="ygtvtable ygtvdepth'+this.depth;e[e.length]=" ygtv-"+(this.expanded?"expanded":"collapsed");if(this.enableHighlight){e[e.length]=" ygtv-highlight"+this.highlightState;}if(this.className){e[e.length]=" "+this.className;}e[e.length]='"><tr class="ygtvrow">';for(var d=0;d<this.depth;++d){e[e.length]='<td class="ygtvcell '+this.getDepthStyle(d)+'"><div class="ygtvspacer"></div></td>';}if(this.hasIcon){e[e.length]='<td id="'+this.getToggleElId();e[e.length]='" class="ygtvcell ';e[e.length]=this.getStyle();e[e.length]='"><a href="#" class="ygtvspacer">&#160;</a></td>';}e[e.length]='<td id="'+this.contentElId;e[e.length]='" class="ygtvcell ';e[e.length]=this.contentStyle+' ygtvcontent" ';e[e.length]=(this.nowrap)?' nowrap="nowrap" ':"";e[e.length]=" >";e[e.length]=this.getContentHtml();e[e.length]="</td></tr></table>";return e.join("");},getContentHtml:function(){return"";},refresh:function(){this.getChildrenEl().innerHTML=this.completeRender();if(this.hasIcon){var d=this.getToggleEl();if(d){d.className=d.className.replace(/\bygtv[lt][nmp]h*\b/gi,this.getStyle());}}},toString:function(){return this._type+" ("+this.index+")";},_focusHighlightedItems:[],_focusedItem:null,_canHaveFocus:function(){return this.getEl().getElementsByTagName("a").length>0;},_removeFocus:function(){if(this._focusedItem){a.removeListener(this._focusedItem,"blur");this._focusedItem=null;}var d;while((d=this._focusHighlightedItems.shift())){b.removeClass(d,YAHOO.widget.TreeView.FOCUS_CLASS_NAME);}},focus:function(){var f=false,d=this;if(this.tree.currentFocus){this.tree.currentFocus._removeFocus();}var e=function(g){if(g.parent){e(g.parent);g.parent.expand();}};e(this);b.getElementsBy(function(g){return(/ygtv(([tl][pmn]h?)|(content))/).test(g.className);},"td",d.getEl().firstChild,function(h){b.addClass(h,YAHOO.widget.TreeView.FOCUS_CLASS_NAME);if(!f){var g=h.getElementsByTagName("a");if(g.length){g=g[0];g.focus();d._focusedItem=g;a.on(g,"blur",function(){d.tree.fireEvent("focusChanged",{oldNode:d.tree.currentFocus,newNode:null});d.tree.currentFocus=null;d._removeFocus();});f=true;}}d._focusHighlightedItems.push(h);});if(f){this.tree.fireEvent("focusChanged",{oldNode:this.tree.currentFocus,newNode:this});this.tree.currentFocus=this;}else{this.tree.fireEvent("focusChanged",{oldNode:d.tree.currentFocus,newNode:null});this.tree.currentFocus=null;this._removeFocus();}return f;},getNodeCount:function(){for(var d=0,e=0;d<this.children.length;d++){e+=this.children[d].getNodeCount();}return e+1;},getNodeDefinition:function(){if(this.isDynamic()){return false;}var g,d=c.merge(this.data),f=[];if(this.expanded){d.expanded=this.expanded;}if(!this.multiExpand){d.multiExpand=this.multiExpand;}if(this.renderHidden){d.renderHidden=this.renderHidden;}if(!this.hasIcon){d.hasIcon=this.hasIcon;}if(this.nowrap){d.nowrap=this.nowrap;}if(this.className){d.className=this.className;}if(this.editable){d.editable=this.editable;}if(!this.enableHighlight){d.enableHighlight=this.enableHighlight;}if(this.highlightState){d.highlightState=this.highlightState;}if(this.propagateHighlightUp){d.propagateHighlightUp=this.propagateHighlightUp;}if(this.propagateHighlightDown){d.propagateHighlightDown=this.propagateHighlightDown;}d.type=this._type;for(var e=0;e<this.children.length;e++){g=this.children[e].getNodeDefinition();if(g===false){return false;}f.push(g);}if(f.length){d.children=f;}return d;},getToggleLink:function(){return"return false;";},setNodesProperty:function(d,g,f){if(d.charAt(0)!="_"&&!c.isUndefined(this[d])&&!c.isFunction(this[d])){this[d]=g;}else{this.data[d]=g;}for(var e=0;e<this.children.length;e++){this.children[e].setNodesProperty(d,g);}if(f){this.refresh();}},toggleHighlight:function(){if(this.enableHighlight){if(this.highlightState==1){this.unhighlight();}else{this.highlight();}}},highlight:function(e){if(this.enableHighlight){if(this.tree.singleNodeHighlight){if(this.tree._currentlyHighlighted){this.tree._currentlyHighlighted.unhighlight(e);}this.tree._currentlyHighlighted=this;}this.highlightState=1;this._setHighlightClassName();if(!this.tree.singleNodeHighlight){if(this.propagateHighlightDown){for(var d=0;d<this.children.length;d++){this.children[d].highlight(true);}}if(this.propagateHighlightUp){if(this.parent){this.parent._childrenHighlighted();}}}if(!e){this.tree.fireEvent("highlightEvent",this);}}},unhighlight:function(e){if(this.enableHighlight){this.tree._currentlyHighlighted=null;this.highlightState=0;this._setHighlightClassName();if(!this.tree.singleNodeHighlight){if(this.propagateHighlightDown){for(var d=0;d<this.children.length;d++){this.children[d].unhighlight(true);}}if(this.propagateHighlightUp){if(this.parent){this.parent._childrenHighlighted();}}}if(!e){this.tree.fireEvent("highlightEvent",this);}}},_childrenHighlighted:function(){var f=false,e=false;if(this.enableHighlight){for(var d=0;d<this.children.length;d++){switch(this.children[d].highlightState){case 0:e=true;
break;case 1:f=true;break;case 2:f=e=true;break;}}if(f&&e){this.highlightState=2;}else{if(f){this.highlightState=1;}else{this.highlightState=0;}}this._setHighlightClassName();if(this.propagateHighlightUp){if(this.parent){this.parent._childrenHighlighted();}}}},_setHighlightClassName:function(){var d=b.get("ygtvtableel"+this.index);if(d){d.className=d.className.replace(/\bygtv-highlight\d\b/gi,"ygtv-highlight"+this.highlightState);}}};YAHOO.augment(YAHOO.widget.Node,YAHOO.util.EventProvider);})();YAHOO.widget.RootNode=function(a){this.init(null,null,true);this.tree=a;};YAHOO.extend(YAHOO.widget.RootNode,YAHOO.widget.Node,{_type:"RootNode",getNodeHtml:function(){return"";},toString:function(){return this._type;},loadComplete:function(){this.tree.draw();},getNodeCount:function(){for(var a=0,b=0;a<this.children.length;a++){b+=this.children[a].getNodeCount();}return b;},getNodeDefinition:function(){for(var c,a=[],b=0;b<this.children.length;b++){c=this.children[b].getNodeDefinition();if(c===false){return false;}a.push(c);}return a;},collapse:function(){},expand:function(){},getSiblings:function(){return null;},focus:function(){}});(function(){var b=YAHOO.util.Dom,c=YAHOO.lang,a=YAHOO.util.Event;YAHOO.widget.TextNode=function(f,e,d){if(f){if(c.isString(f)){f={label:f};}this.init(f,e,d);this.setUpLabel(f);}};YAHOO.extend(YAHOO.widget.TextNode,YAHOO.widget.Node,{labelStyle:"ygtvlabel",labelElId:null,label:null,title:null,href:null,target:"_self",_type:"TextNode",setUpLabel:function(d){if(c.isString(d)){d={label:d};}else{if(d.style){this.labelStyle=d.style;}}this.label=d.label;this.labelElId="ygtvlabelel"+this.index;},getLabelEl:function(){return b.get(this.labelElId);},getContentHtml:function(){var d=[];d[d.length]=this.href?"<a":"<span";d[d.length]=' id="'+c.escapeHTML(this.labelElId)+'"';d[d.length]=' class="'+c.escapeHTML(this.labelStyle)+'"';if(this.href){d[d.length]=' href="'+c.escapeHTML(this.href)+'"';d[d.length]=' target="'+c.escapeHTML(this.target)+'"';}if(this.title){d[d.length]=' title="'+c.escapeHTML(this.title)+'"';}d[d.length]=" >";d[d.length]=c.escapeHTML(this.label);d[d.length]=this.href?"</a>":"</span>";return d.join("");},getNodeDefinition:function(){var d=YAHOO.widget.TextNode.superclass.getNodeDefinition.call(this);if(d===false){return false;}d.label=this.label;if(this.labelStyle!="ygtvlabel"){d.style=this.labelStyle;}if(this.title){d.title=this.title;}if(this.href){d.href=this.href;}if(this.target!="_self"){d.target=this.target;}return d;},toString:function(){return YAHOO.widget.TextNode.superclass.toString.call(this)+": "+this.label;},onLabelClick:function(){return false;},refresh:function(){YAHOO.widget.TextNode.superclass.refresh.call(this);var d=this.getLabelEl();d.innerHTML=this.label;if(d.tagName.toUpperCase()=="A"){d.href=this.href;d.target=this.target;}}});})();YAHOO.widget.MenuNode=function(c,b,a){YAHOO.widget.MenuNode.superclass.constructor.call(this,c,b,a);this.multiExpand=false;};YAHOO.extend(YAHOO.widget.MenuNode,YAHOO.widget.TextNode,{_type:"MenuNode"});(function(){var b=YAHOO.util.Dom,c=YAHOO.lang,a=YAHOO.util.Event;var d=function(h,g,f,e){if(h){this.init(h,g,f);this.initContent(h,e);}};YAHOO.widget.HTMLNode=d;YAHOO.extend(d,YAHOO.widget.Node,{contentStyle:"ygtvhtml",html:null,_type:"HTMLNode",initContent:function(f,e){this.setHtml(f);this.contentElId="ygtvcontentel"+this.index;if(!c.isUndefined(e)){this.hasIcon=e;}},setHtml:function(f){this.html=(c.isObject(f)&&"html" in f)?f.html:f;var e=this.getContentEl();if(e){if(f.nodeType&&f.nodeType==1&&f.tagName){e.innerHTML="";}else{e.innerHTML=this.html;}}},getContentHtml:function(){if(typeof this.html==="string"){return this.html;}else{d._deferredNodes.push(this);if(!d._timer){d._timer=window.setTimeout(function(){var e;while((e=d._deferredNodes.pop())){e.getContentEl().appendChild(e.html);}d._timer=null;},0);}return"";}},getNodeDefinition:function(){var e=d.superclass.getNodeDefinition.call(this);if(e===false){return false;}e.html=this.html;return e;}});d._deferredNodes=[];d._timer=null;})();(function(){var b=YAHOO.util.Dom,c=YAHOO.lang,a=YAHOO.util.Event,d=YAHOO.widget.Calendar;YAHOO.widget.DateNode=function(g,f,e){YAHOO.widget.DateNode.superclass.constructor.call(this,g,f,e);};YAHOO.extend(YAHOO.widget.DateNode,YAHOO.widget.TextNode,{_type:"DateNode",calendarConfig:null,fillEditorContainer:function(g){var h,f=g.inputContainer;if(c.isUndefined(d)){b.replaceClass(g.editorPanel,"ygtv-edit-DateNode","ygtv-edit-TextNode");YAHOO.widget.DateNode.superclass.fillEditorContainer.call(this,g);return;}if(g.nodeType!=this._type){g.nodeType=this._type;g.saveOnEnter=false;g.node.destroyEditorContents(g);g.inputObject=h=new d(f.appendChild(document.createElement("div")));if(this.calendarConfig){h.cfg.applyConfig(this.calendarConfig,true);h.cfg.fireQueue();}h.selectEvent.subscribe(function(){this.tree._closeEditor(true);},this,true);}else{h=g.inputObject;}g.oldValue=this.label;h.cfg.setProperty("selected",this.label,false);var i=h.cfg.getProperty("DATE_FIELD_DELIMITER");var e=this.label.split(i);h.cfg.setProperty("pagedate",e[h.cfg.getProperty("MDY_MONTH_POSITION")-1]+i+e[h.cfg.getProperty("MDY_YEAR_POSITION")-1]);h.cfg.fireQueue();h.render();h.oDomContainer.focus();},getEditorValue:function(f){if(c.isUndefined(d)){return f.inputElement.value;}else{var h=f.inputObject,g=h.getSelectedDates()[0],e=[];e[h.cfg.getProperty("MDY_DAY_POSITION")-1]=g.getDate();e[h.cfg.getProperty("MDY_MONTH_POSITION")-1]=g.getMonth()+1;e[h.cfg.getProperty("MDY_YEAR_POSITION")-1]=g.getFullYear();return e.join(h.cfg.getProperty("DATE_FIELD_DELIMITER"));}},displayEditedValue:function(g,e){var f=e.node;f.label=g;f.getLabelEl().innerHTML=g;},getNodeDefinition:function(){var e=YAHOO.widget.DateNode.superclass.getNodeDefinition.call(this);if(e===false){return false;}if(this.calendarConfig){e.calendarConfig=this.calendarConfig;}return e;}});})();(function(){var e=YAHOO.util.Dom,f=YAHOO.lang,b=YAHOO.util.Event,d=YAHOO.widget.TreeView,c=d.prototype;d.editorData={active:false,whoHasIt:null,nodeType:null,editorPanel:null,inputContainer:null,buttonsContainer:null,node:null,saveOnEnter:true,oldValue:undefined};
c.validator=null;c._initEditor=function(){this.createEvent("editorSaveEvent",this);this.createEvent("editorCancelEvent",this);};c._nodeEditing=function(m){if(m.fillEditorContainer&&m.editable){var i,k,l,j,h=d.editorData;h.active=true;h.whoHasIt=this;if(!h.nodeType){h.editorPanel=i=this.getEl().appendChild(document.createElement("div"));e.addClass(i,"ygtv-label-editor");i.tabIndex=0;l=h.buttonsContainer=i.appendChild(document.createElement("div"));e.addClass(l,"ygtv-button-container");j=l.appendChild(document.createElement("button"));e.addClass(j,"ygtvok");j.innerHTML=" ";j=l.appendChild(document.createElement("button"));e.addClass(j,"ygtvcancel");j.innerHTML=" ";b.on(l,"click",function(q){var r=b.getTarget(q),o=d.editorData,p=o.node,n=o.whoHasIt;if(e.hasClass(r,"ygtvok")){b.stopEvent(q);n._closeEditor(true);}if(e.hasClass(r,"ygtvcancel")){b.stopEvent(q);n._closeEditor(false);}});h.inputContainer=i.appendChild(document.createElement("div"));e.addClass(h.inputContainer,"ygtv-input");b.on(i,"keydown",function(q){var p=d.editorData,n=YAHOO.util.KeyListener.KEY,o=p.whoHasIt;switch(q.keyCode){case n.ENTER:b.stopEvent(q);if(p.saveOnEnter){o._closeEditor(true);}break;case n.ESCAPE:b.stopEvent(q);o._closeEditor(false);break;}});}else{i=h.editorPanel;}h.node=m;if(h.nodeType){e.removeClass(i,"ygtv-edit-"+h.nodeType);}e.addClass(i," ygtv-edit-"+m._type);e.setStyle(i,"display","block");e.setXY(i,e.getXY(m.getContentEl()));i.focus();m.fillEditorContainer(h);return true;}};c.onEventEditNode=function(h){if(h instanceof YAHOO.widget.Node){h.editNode();}else{if(h.node instanceof YAHOO.widget.Node){h.node.editNode();}}return false;};c._closeEditor=function(j){var h=d.editorData,i=h.node,k=true;if(!i||!h.active){return;}if(j){k=h.node.saveEditorValue(h)!==false;}else{this.fireEvent("editorCancelEvent",i);}if(k){e.setStyle(h.editorPanel,"display","none");h.active=false;i.focus();}};c._destroyEditor=function(){var h=d.editorData;if(h&&h.nodeType&&(!h.active||h.whoHasIt===this)){b.removeListener(h.editorPanel,"keydown");b.removeListener(h.buttonContainer,"click");h.node.destroyEditorContents(h);document.body.removeChild(h.editorPanel);h.nodeType=h.editorPanel=h.inputContainer=h.buttonsContainer=h.whoHasIt=h.node=null;h.active=false;}};var g=YAHOO.widget.Node.prototype;g.editable=false;g.editNode=function(){this.tree._nodeEditing(this);};g.fillEditorContainer=null;g.destroyEditorContents=function(h){b.purgeElement(h.inputContainer,true);h.inputContainer.innerHTML="";};g.saveEditorValue=function(h){var j=h.node,k,i=j.tree.validator;k=this.getEditorValue(h);if(f.isFunction(i)){k=i(k,h.oldValue,j);if(f.isUndefined(k)){return false;}}if(this.tree.fireEvent("editorSaveEvent",{newValue:k,oldValue:h.oldValue,node:j})!==false){this.displayEditedValue(k,h);}};g.getEditorValue=function(h){};g.displayEditedValue=function(i,h){};var a=YAHOO.widget.TextNode.prototype;a.fillEditorContainer=function(i){var h;if(i.nodeType!=this._type){i.nodeType=this._type;i.saveOnEnter=true;i.node.destroyEditorContents(i);i.inputElement=h=i.inputContainer.appendChild(document.createElement("input"));}else{h=i.inputElement;}i.oldValue=this.label;h.value=this.label;h.focus();h.select();};a.getEditorValue=function(h){return h.inputElement.value;};a.displayEditedValue=function(j,h){var i=h.node;i.label=j;i.getLabelEl().innerHTML=j;};a.destroyEditorContents=function(h){h.inputContainer.innerHTML="";};})();YAHOO.widget.TVAnim=function(){return{FADE_IN:"TVFadeIn",FADE_OUT:"TVFadeOut",getAnim:function(b,a,c){if(YAHOO.widget[b]){return new YAHOO.widget[b](a,c);}else{return null;}},isValid:function(a){return(YAHOO.widget[a]);}};}();YAHOO.widget.TVFadeIn=function(a,b){this.el=a;this.callback=b;};YAHOO.widget.TVFadeIn.prototype={animate:function(){var e=this;var d=this.el.style;d.opacity=0.1;d.filter="alpha(opacity=10)";d.display="";var c=0.4;var b=new YAHOO.util.Anim(this.el,{opacity:{from:0.1,to:1,unit:""}},c);b.onComplete.subscribe(function(){e.onComplete();});b.animate();},onComplete:function(){this.callback();},toString:function(){return"TVFadeIn";}};YAHOO.widget.TVFadeOut=function(a,b){this.el=a;this.callback=b;};YAHOO.widget.TVFadeOut.prototype={animate:function(){var d=this;var c=0.4;var b=new YAHOO.util.Anim(this.el,{opacity:{from:1,to:0.1,unit:""}},c);b.onComplete.subscribe(function(){d.onComplete();});b.animate();},onComplete:function(){var a=this.el.style;a.display="none";a.opacity=1;a.filter="alpha(opacity=100)";this.callback();},toString:function(){return"TVFadeOut";}};YAHOO.register("treeview",YAHOO.widget.TreeView,{version:"2.9.0",build:"2800"});

/********* ebx_utils.js *********/
/*
 * Copyright TIBCO Software Inc. 2001-2021. All rights reserved.
 */

/** START EBX_Utils * */

// this is just for IE8; it can be removed when IE8 will no more be supported
// piece of code found on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim
if (!String.prototype.trim) {
  String.prototype.trim = function () {
    return this.replace(/^\s+|\s+$/gm, '');
  };
}

var EBX_PageId = undefined;

function EBX_Utils() {

}

EBX_Utils.keyCodes = {
  LEFT_MOUSE_BUTTON: 1,

  BACKSPACE: 8,
  TAB: 9,
  ENTER: 13,

  SHIFT: 16,
  CTRL: 17,
  ALT: 18,

  PAUSE: 19,
  CAPS_LOCK: 20,

  ESCAPE: 27,

  SPACE: 32,

  PAGE_UP: 33,
  PAGE_DOWN: 34,
  END: 35,
  HOME: 36,

  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40,

  DELETE: 46,

  KEY_V: 86,

  WIN_KEY: 91,
  WIN_MENU: 93,
  NUMPAD_PLUS: 107,
  NUMPAD_MINUS: 109,
  F1: 112,
  F2: 113,
  F3: 114,
  F4: 115,
  F5: 116,
  F6: 117,
  F7: 118,
  F8: 119,
  F9: 120,
  F10: 121,
  F11: 122,
  F12: 123,

  NUM_LOCK: 145,
  SCROLL_LOCK: 145,

  LETTER_C: 67,
  LETTER_V: 86
};

// return true if pressed key is F1 ... F12
EBX_Utils.isFunctionKey = function (keyCode) {
  if (keyCode >= 112 && keyCode <= 123) {
    return true;
  }
  return false;
};
EBX_Utils.isArrowKey = function (keyCode) {
  if (keyCode >= 37 && keyCode <= 40) {
    return true;
  }
  return false;
};

EBX_Utils.getTargetElement = function (event) {
  if (EBX_LayoutManager.isIE) {
    return event.srcElement;
  } else {
    return event.target;
  }
};

EBX_Utils.arrayContains = function (array, item) {
  var array_length = array.length;
  for (var i = 0; i < array_length; i++) {
    if (array[i] === item) {
      return true;
    }
  }
  return false;
};

EBX_Utils.indexOf = function (array, item) {
  if (Array.indexOf) {
    return array.indexOf(item);
  }

  var array_length = array.length;
  for (var i = 0; i < array_length; i++) {
    if (array[i] === item) {
      return i;
    }
  }
  return -1;
};

EBX_Utils.map = function map(array, callback) {
  if (array.map) {
    return array.map(callback);
  }

  var length = array.length;
  var result = new Array(length);

  for (var i = 0; i < length; i++) {
    result[i] = callback(array[i], i, array);
  }

  return result;
};

EBX_Utils.filter = function filter(array, callback) {
  if (array.filter) {
    return array.filter(callback);
  }

  var length = array.length;
  var result = [];

  for (var i = 0; i < length; i++) {
    var item = array[i];
    if (callback(item, i, array)) {
      result.push(item);
    }
  }

  return result;
};

EBX_Utils.filterObject = function filter(object, callback) {
  var result = {};

  for (var key in object) {
    if (!object.hasOwnProperty(key)) {
      continue;
    }

    var value = object[key];
    if (callback(value, key, object)) {
      result[key] = value;
    }
  }

  return result;
};

EBX_Utils.forEach = function forEach(array, callback) {
  if (array.forEach) {
    return array.forEach(callback);
  }

  var length = array.length;

  for (var i = 0; i < length; i++) {
    callback(array[i], i, array);
  }
};

EBX_Utils.isArray = function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }

  return Object.prototype.toString.call(arg) === '[object Array]';
};

EBX_Utils.childElementCount = function (element) {
  if (EBX_LayoutManager.isIE8 === false) {
    return element.childElementCount;
  }

  var child = EBX_Utils.firstElementChild(element);
  if (child === null) {
    return 0;
  }
  var i = 1;

  while ((child = EBX_Utils.nextElementSibling(child)) !== null) {
    i++;
  }
  return i;
};

/* DO NOT CHANGE : HTML/CSS Standard */
EBX_Utils.CSSClassSeparator = " ";

EBX_Utils.matchCSSClass = function (element, cssClass) {
  if (element.className === undefined || element.className === null || element.className.split === undefined) {
    return false;
  }

  return EBX_Utils.arrayContains(element.className.split(EBX_Utils.CSSClassSeparator), cssClass);
};

EBX_Utils.addCSSClass = function (element, cssClass) {
  if (element.className === undefined || element.className === null) {
    return false;
  }

  if (!EBX_Utils.matchCSSClass(element, cssClass)) {
    if (element.className !== "") {
      element.className += EBX_Utils.CSSClassSeparator;
    }
    element.className += cssClass;
  }

  return true;
};

EBX_Utils.removeCSSClass = function (element, cssClass) {
  if (element.className === undefined || element.className === null) {
    return false;
  }
  if (cssClass === undefined || cssClass === null || cssClass === "") {
    return false;
  }
  if (!EBX_Utils.matchCSSClass(element, cssClass)) {
    return true;
  }

  element.className = EBX_Utils.getCSSClassWithOneRemoved(element.className, cssClass);

  return true;
};
EBX_Utils.getCSSClassWithOneRemoved = function (className, cssClassToRemove) {
  var ret = "";

  var classes = className.split(EBX_Utils.CSSClassSeparator);
  var classes_length = classes.length;
  for (var i = 0; i < classes_length; i++) {
    if (classes[i] !== "" && classes[i] !== cssClassToRemove) {
      if (i !== 0) {
        ret += EBX_Utils.CSSClassSeparator;
      }
      ret += classes[i];
    }
  }

  return ret;
};

EBX_Utils.getFirstDirectChildMatchingCSSClass = function (element, cssClass) {
  var child = element.firstChild;
  if (child === null) {
    return null;
  }
  do {
    if (EBX_Utils.matchCSSClass(child, cssClass)) {
      return child;
    }
  } while ((child = child.nextSibling));

  return null;
};

EBX_Utils.getFirstRecursiveChildMatchingCSSClass = function (element, cssClass) {
  return element.querySelector("." + cssClass);
};

EBX_Utils.getRecursiveChildrenMatchingCSSClass = function (element, cssClass) {
  var result, i, len, children;

  result = element.querySelectorAll("." + cssClass);

  // use a static array instead of a risky and variable (and not performant) NodeList
  children = [];

  for (i = 0, len = result.length; i < len; i++) {
    children.push(result[i]);
  }

  return children;
};

EBX_Utils.getAllChildFormElements = function (element) {
  var result, i, len, children;

  result = element.querySelectorAll("input,select,textarea,button");

  // use a static array instead of a risky and variable (and not performant) NodeList
  children = [];

  for (i = 0, len = result.length; i < len; i++) {
    // copy only elements having a name parameter
    if (result[i].name !== undefined) {
      children.push(result[i]);
    }
  }

  return children;
};

EBX_Utils.getFirstParentMatchingCSSClass = function (element, cssClass) {
  var parent = element.parentNode;
  while (parent !== null) {
    if (EBX_Utils.matchCSSClass(parent, cssClass)) {
      return parent;
    } else {
      parent = parent.parentNode;
    }
  }
  return null;
};
EBX_Utils.getFirstParentMatchingTagName = function (element, tagName) {
  var parent = element.parentNode;
  while (parent !== null) {
    if (parent.tagName !== undefined && parent.tagName.toLowerCase() == tagName.toLowerCase()) {
      return parent;
    } else {
      parent = parent.parentNode;
    }
  }
  return null;
};
EBX_Utils.hasParentMatchingId = function (element, id) {
  var parent = element.parentNode;
  while (parent !== null) {
    if (parent.id === id) {
      return true;
    } else {
      parent = parent.parentNode;
    }
  }
  return false;
};

EBX_Utils.getFirstDirectChildMatchingTagName = function (element, tagName) {
  var child = element.firstChild;
  if (child === null) {
    return null;
  }
  do {
    /* some nodes are not elements (but text for example) */
    if (child.tagName !== undefined) {
      if (child.tagName.toLowerCase() == tagName.toLowerCase()) {
        return child;
      }
    }
  } while ((child = child.nextSibling));

  return null;
};
EBX_Utils.getFirstRecursiveChildMatchingTagName = function (element, tagName) {
  var findAmongDirectChildren = EBX_Utils.getFirstDirectChildMatchingTagName(element, tagName);

  if (findAmongDirectChildren !== null) {
    return findAmongDirectChildren;
  }

  var child = element.firstChild;
  if (child === null) {
    return null;
  }
  do {
    findAmongDirectChildren = EBX_Utils.getFirstRecursiveChildMatchingTagName(child, tagName);
    if (findAmongDirectChildren !== null) {
      return findAmongDirectChildren;
    }
  } while ((child = child.nextSibling));

  return null;
};

EBX_Utils.nextElementSibling = function (element) {
  while (element.nextSibling !== null) {
    if (element.nextSibling.nodeType === 1) {
      return element.nextSibling;
    }
    element = element.nextSibling;
  }
  return null;
};

EBX_Utils.previousElementSibling = function (element) {
  while (element.previousSibling !== null) {
    if (element.previousSibling.nodeType === 1) {
      return element.previousSibling;
    }
    element = element.previousSibling;
  }
  return null;
};

EBX_Utils.firstElementChild = function (element) {
  if (element.firstChild === null) {
    return null;
  }
  if (element.firstChild.nodeType === 1) {
    return element.firstChild;
  }
  element = element.firstChild;
  while (element.nextSibling !== null) {
    if (element.nextSibling.nodeType === 1) {
      return element.nextSibling;
    }
    element = element.nextSibling;
  }
  return null;
};
EBX_Utils.lastElementChild = function (element) {
  if (element.lastChild === null) {
    return null;
  }
  if (element.lastChild.nodeType === 1) {
    return element.lastChild;
  }
  element = element.lastChild;
  while (element.previousSibling !== null) {
    if (element.previousSibling.nodeType === 1) {
      return element.previousSibling;
    }
    element = element.previousSibling;
  }
  return null;
};

EBX_Utils.getIndex = function (element) {
  var ret = 0;
  var child = EBX_Utils.firstElementChild(element.parentNode);
  do {
    if (child === element) {
      return ret;
    }
    ret++;
  } while ((child = EBX_Utils.nextElementSibling(child)) !== null);
  return -1;
};

EBX_Utils.getElementChildAtIndex = function (element, index) {
  var child = EBX_Utils.firstElementChild(element);
  for (var i = 0; i < index && child !== null; i++) {
    child = EBX_Utils.nextElementSibling(child);
  }
  return child;
};

EBX_Utils.isFullyDisplayed = function (element) {
  var elementRegion = YAHOO.util.Dom.getRegion(element);

  var topRightElement = document.elementFromPoint(elementRegion.right - 1, elementRegion.top + 1);
  if (topRightElement === null || (topRightElement !== element && !EBX_Utils.isChildOf(topRightElement, element))) {
    return false;
  }
  /* is it really useful to test all 4 points? the diagonal is enough in most of cases...?
   var bottomRightElement = document.elementFromPoint(elementRegion.right - 1, elementRegion.bottom - 1);
   if (bottomRightElement === null || (bottomRightElement !== element && !EBX_Utils.isChildOf(bottomRightElement, element))) {
   return false;
   }
   */
  var bottomLeftElement = document.elementFromPoint(elementRegion.left + 1, elementRegion.bottom - 1);
  if (bottomLeftElement === null || (bottomLeftElement !== element && !EBX_Utils.isChildOf(bottomLeftElement,
      element))) {
    return false;
  }
  /*
   var topLeftElement = document.elementFromPoint(elementRegion.left + 1, elementRegion.top + 1);
   if (topLeftElement === null || (topLeftElement !== element && !EBX_Utils.isChildOf(topLeftElement, element))) {
   return false;
   }
   */
  return true;
};

EBX_Utils.isChildOf = function (child, element) {
  var parent = child.parentNode;
  while (parent !== null) {
    if (parent === element) {
      return true;
    } else {
      parent = parent.parentNode;
    }
  }
  return false;
};

EBX_Utils.getIFrameContentDocumentOrNull = function (iFrameEl) {
  try {
    return iFrameEl.contentDocument;
  } catch (e) {
    return null;
  }
};

EBX_Utils.getElementByIdInSubSessionIFrameRecursively = function (id) {
  var documentEl = document;
  var element = null;
  while (element === null) {
    if (documentEl.getElementById("ebx_SubSessioniFrame") === null) {
      return null;
    }
    documentEl = EBX_Utils.getIFrameContentDocumentOrNull(documentEl.getElementById("ebx_SubSessioniFrame"));
    if (documentEl === null) {
      // iframeDocument null is the case of unreachable iframe document for security reasons
      return null;
    }
    element = documentEl.getElementById(id);
  }
  return element;
};

EBX_Utils.getSubSessionIFrame = function () {
  return document.getElementById("ebx_SubSessioniFrame");
};

EBX_Utils.removeLast = function (str, strToRemove) {
  return str.substring(0, str.lastIndexOf(strToRemove));
};

EBX_Utils.hScrollHeight = null;
EBX_Utils.vScrollWidth = null;

EBX_Utils.getHScrollHeight = function () {
  if (EBX_Utils.hScrollHeight === null) {
    EBX_Utils.initScrollSizes();
  }
  return EBX_Utils.hScrollHeight;
};
EBX_Utils.getVScrollWidth = function () {
  if (EBX_Utils.vScrollWidth === null) {
    EBX_Utils.initScrollSizes();
  }
  return EBX_Utils.vScrollWidth;
};

EBX_Utils.initScrollSizes = function () {
  var containerEl = document.createElement("div");
  containerEl.style.position = "fixed";
  containerEl.style.top = "0";
  containerEl.style.left = "200%";
  containerEl.style.width = "100px";
  containerEl.style.height = "100px";
  containerEl.style.overflow = "auto";

  var contentEl = document.createElement("div");
  contentEl.style.width = "200px";
  contentEl.style.height = "200px";

  containerEl.appendChild(contentEl);

  document.body.appendChild(containerEl);

  EBX_Utils.hScrollHeight = 100 - containerEl.clientHeight;
  EBX_Utils.vScrollWidth = 100 - containerEl.clientWidth;

  document.body.removeChild(containerEl);
};

EBX_Utils.getOffsetParentPositionAbsolute = function (element) {
  /* create a div gauge */
  var gauge = document.createElement("div");
  gauge.style.position = "absolute";
  gauge.style.visibility = "hidden";
  gauge.innerHTML = "gauge";

  element.parentNode.appendChild(gauge);

  var ret = gauge.offsetParent;

  /* destroy div gauge */
  gauge.parentNode.removeChild(gauge);

  return ret;
};
EBX_Utils.getOffsetTopPositionAbsolute = function (element) {
  var offsetParentPositionAbsolute = EBX_Utils.getOffsetParentPositionAbsolute(element);
  return EBX_Utils.getOffsetTopRelativeToContainer(element, offsetParentPositionAbsolute);
};
EBX_Utils.getOffsetLeftPositionAbsolute = function (element) {
  var offsetParentPositionAbsolute = EBX_Utils.getOffsetParentPositionAbsolute(element);
  return EBX_Utils.getOffsetLeftRelativeToContainer(element, offsetParentPositionAbsolute);
};
EBX_Utils.getOffsetTopRelativeToContainer = function (element, elementContainer) {
  var ret = element.offsetTop;
  var tmpOffsetParent = element.offsetParent;
  while (tmpOffsetParent !== undefined && tmpOffsetParent != elementContainer) {
    ret += tmpOffsetParent.offsetTop;
    tmpOffsetParent = tmpOffsetParent.offsetParent;
  }

  return ret;
};
EBX_Utils.getOffsetLeftRelativeToContainer = function (element, elementContainer) {
  var ret = element.offsetLeft;
  var tmpOffsetParent = element.offsetParent;
  while (tmpOffsetParent !== null && tmpOffsetParent != elementContainer) {
    ret += tmpOffsetParent.offsetLeft;
    tmpOffsetParent = tmpOffsetParent.offsetParent;
  }

  return ret;
};

EBX_Utils.returnTrue = function () {
  return true;
};
EBX_Utils.returnFalse = function () {
  return false;
};

EBX_Utils.clearSelection = function () {
  if (document.selection && document.selection.empty) {
    document.selection.empty();
  } else if (window.getSelection) {
    var sel = window.getSelection();
    sel.removeAllRanges();
  }
};

EBX_Utils.launchRequestInTopFrame = function (requestURL) {
  if (!EBX_LayoutManager.isEmbedded()) {
    window.location.href = requestURL;
    return;
  }

  ebx_getContainerWindow(window).parent.EBX_Utils.launchRequestInTopFrame(requestURL);
};

/** END EBX_Utils * */

/** START EBX_Logger * */

function EBX_Logger() {

}

EBX_Logger.error = YAHOO.widget.Logger.categories[2];
EBX_Logger.warn = YAHOO.widget.Logger.categories[1];
EBX_Logger.info = YAHOO.widget.Logger.categories[0];

EBX_Logger.serverSeverity = [];
EBX_Logger.serverSeverity[EBX_Logger.error] = "E";
EBX_Logger.serverSeverity[EBX_Logger.warn] = "W";
EBX_Logger.serverSeverity[EBX_Logger.info] = "I";

EBX_Logger.LoggerWriter = new YAHOO.widget.LogWriter("EBX_Logger");
EBX_Logger.LogReader = false;

EBX_Logger.init = function () {
  if (EBX_LayoutManager.isEmbedded()) {
    return;
  }
  EBX_Logger.LogReader = new YAHOO.widget.LogReader();
  EBX_Logger.LogReader.verboseOutput = false;
  EBX_Logger.LogReader.hideSource("LogReader");
  EBX_Logger.LogReader.hideSource("global");
  EBX_Logger.LogReader.hide();
};

EBX_Logger.show = function () {
  if (!EBX_Logger.LogReader) {
    return;
  }

  EBX_Logger.LogReader.show();
};
EBX_Logger.hide = function () {
  if (!EBX_Logger.LogReader) {
    return;
  }

  EBX_Logger.LogReader.hide();
};

/**
 * @param message
 *            the message to log
 * @param level
 *            EBX_Logger.error or EBX_Logger.warn or EBX_Logger.info
 */
EBX_Logger.log = function (message, level) {
  EBX_Logger.LoggerWriter.log(message, level);
  EBX_Logger.sendLogToServer(message, level);
};

EBX_Logger.sendLogToServer = function (message, level) {
  if (EBX_Logger.logThisLevel(level)) {
    var url = EBX_Constants.getRequestLink(EBX_Constants.ajaxLogEvent);

    var data = EBX_Constants.ajaxLogSeverity + "=" + EBX_Logger.serverSeverity[level];
    data += "&";
    data += EBX_Constants.ajaxLogMsg + "=" + encodeURIComponent(message);

    YAHOO.util.Connect.asyncRequest('POST', url, {}, data);
  }
};
EBX_Logger.sendLogToServerLevel = EBX_Logger.error;
EBX_Logger.logThisLevel = function (level) {
  if (EBX_Logger.sendLogToServerLevel === undefined) {
    return false;
  }

  if (EBX_Logger.sendLogToServerLevel === EBX_Logger.info) {
    if (level == EBX_Logger.info || level == EBX_Logger.warn || level == EBX_Logger.error) {
      return true;
    }
  }

  if (EBX_Logger.sendLogToServerLevel === EBX_Logger.warn) {
    if (level == EBX_Logger.warn || level == EBX_Logger.error) {
      return true;
    }
  }

  if (EBX_Logger.sendLogToServerLevel === EBX_Logger.error) {
    if (level == EBX_Logger.error) {
      return true;
    }
  }

  return false;
};

YAHOO.util.Event.onDOMReady(EBX_Logger.init);

/** END EBX_Logger * */

function EBX_DebugTools() {

}

EBX_DebugTools.init = function () {
  YAHOO.util.Event.addListener(document.body, "dblclick", EBX_DebugTools.dblclickOnBody, null, null);
};

EBX_DebugTools.dblclickOnBody = function (event) {
  if (event.clientX < 10 && event.clientY < 10 && event.altKey === true && event.ctrlKey === true && event.shiftKey
      === true) {
    EBX_DebugTools.promptToolsList();
  }
};

EBX_DebugTools.toolList = [];

EBX_DebugTools.promptToolsList = function () {
  var text, i, len, tool, code;

  text = [];
  text.push("Debug tools:");

  // build the list of tools
  for (i = 0, len = EBX_DebugTools.toolList.length; i < len; i++) {
    tool = EBX_DebugTools.toolList[i];
    text.push((i + 1) + ". " + tool[0]);
  }

  code = prompt(text.join("\n"));

  // cancel button
  if (code === null) {
    return;
  }

  tool = EBX_DebugTools.toolList[code - 1];
  if (tool !== undefined) {
    tool[1].call();
    return;
  }

  // other hidden cases
  switch (code) {
    case "Something else":
      ebx_alert("There is no easter egg here.\nIt's a professional web application.");
      break;

    default:
      ebx_alert("Sorry, unknown code.");
  }
};

/*START HorizontalRuler */
EBX_DebugTools.horizontalRulerEl = null;
EBX_DebugTools.showHorizontalRuler = function () {
  if (EBX_DebugTools.horizontalRulerEl === null) {
    EBX_DebugTools.horizontalRulerEl = document.createElement("div");
    EBX_DebugTools.horizontalRulerEl.style.position = "fixed";
    EBX_DebugTools.horizontalRulerEl.style.borderTop = "1px solid black";
    EBX_DebugTools.horizontalRulerEl.style.borderBottom = "1px solid black";
    EBX_DebugTools.horizontalRulerEl.style.opacity = "0.3";
    EBX_DebugTools.horizontalRulerEl.style.height = "1px";
    EBX_DebugTools.horizontalRulerEl.style.left = "0";
    EBX_DebugTools.horizontalRulerEl.style.width = "100%";
    document.body.appendChild(EBX_DebugTools.horizontalRulerEl);
  }

  EBX_DebugTools.horizontalRulerEl.style.display = "";

  YAHOO.util.Event.addListener(document.body, "mousemove", EBX_DebugTools.horizontalRulerFollowMouse, null, null);
  EBX_Loader.stackKeyListener(EBX_Utils.keyCodes.ESCAPE, EBX_DebugTools.hideHorizontalRuler);
};
EBX_DebugTools.horizontalRulerFollowMouse = function (event) {
  // Math.round because IE 10+ gives a decimal position, but it's better to have a stepper ruler to check aligns on pixel grid
  EBX_DebugTools.horizontalRulerEl.style.top = Math.round(event.clientY) - 10 + "px";
};
EBX_DebugTools.hideHorizontalRuler = function () {
  EBX_DebugTools.horizontalRulerEl.style.display = "none";
  YAHOO.util.Event.removeListener(document.body, "mousemove", EBX_DebugTools.horizontalRulerFollowMouse);
  EBX_Loader.removeKeyListener(EBX_Utils.keyCodes.ESCAPE, EBX_DebugTools.hideHorizontalRuler);
};

EBX_DebugTools.toolList.push(["Horizontal ruler", EBX_DebugTools.showHorizontalRuler]);
/*END HorizontalRuler */

/*START VerticalRuler */
EBX_DebugTools.verticalRulerEl = null;
EBX_DebugTools.showVerticalRuler = function () {
  if (EBX_DebugTools.verticalRulerEl === null) {
    EBX_DebugTools.verticalRulerEl = document.createElement("div");
    EBX_DebugTools.verticalRulerEl.style.position = "fixed";
    EBX_DebugTools.verticalRulerEl.style.borderLeft = "1px solid black";
    EBX_DebugTools.verticalRulerEl.style.borderRight = "1px solid black";
    EBX_DebugTools.verticalRulerEl.style.opacity = "0.3";
    EBX_DebugTools.verticalRulerEl.style.width = "1px";
    EBX_DebugTools.verticalRulerEl.style.top = "0";
    EBX_DebugTools.verticalRulerEl.style.height = "100%";
    document.body.appendChild(EBX_DebugTools.verticalRulerEl);
  }

  EBX_DebugTools.verticalRulerEl.style.display = "";

  YAHOO.util.Event.addListener(document.body, "mousemove", EBX_DebugTools.verticalRulerFollowMouse, null, null);
  EBX_Loader.stackKeyListener(EBX_Utils.keyCodes.ESCAPE, EBX_DebugTools.hideVerticalRuler);
};
EBX_DebugTools.verticalRulerFollowMouse = function (event) {
  EBX_DebugTools.verticalRulerEl.style.left = event.clientX - 10 + "px";
};
EBX_DebugTools.hideVerticalRuler = function () {
  EBX_DebugTools.verticalRulerEl.style.display = "none";
  YAHOO.util.Event.removeListener(document.body, "mousemove", EBX_DebugTools.verticalRulerFollowMouse);
  EBX_Loader.removeKeyListener(EBX_Utils.keyCodes.ESCAPE, EBX_DebugTools.hideVerticalRuler);
};

EBX_DebugTools.toolList.push(["Vertical ruler", EBX_DebugTools.showVerticalRuler]);
/*END VerticalRuler */

/*START VerticalRulerLarge */
EBX_DebugTools.verticalRulerLargeEl = null;
EBX_DebugTools.showVerticalRulerLarge = function () {
  if (EBX_DebugTools.verticalRulerLargeEl === null) {
    EBX_DebugTools.verticalRulerLargeEl = document.createElement("div");
    EBX_DebugTools.verticalRulerLargeEl.style.position = "fixed";
    EBX_DebugTools.verticalRulerLargeEl.style.borderLeft = "3px double grey";
    EBX_DebugTools.verticalRulerLargeEl.style.borderRight = "3px double grey";
    EBX_DebugTools.verticalRulerLargeEl.style.opacity = "0.5";
    EBX_DebugTools.verticalRulerLargeEl.style.padding = "0 1px";
    EBX_DebugTools.verticalRulerLargeEl.style.top = "0";
    //		EBX_DebugTools.verticalRulerLargeEl.style.width = "5px";
    EBX_DebugTools.verticalRulerLargeEl.style.height = "100%";

    var verticalRulerChildEl = document.createElement("div");
    verticalRulerChildEl.style.backgroundColor = "black";
    verticalRulerChildEl.style.width = "1px";
    verticalRulerChildEl.style.height = "100%";
    //		verticalRulerChildEl.style.borderLeft = "3px double red";
    //		verticalRulerChildEl.style.borderRight = "3px double red";

    EBX_DebugTools.verticalRulerLargeEl.appendChild(verticalRulerChildEl);

    document.body.appendChild(EBX_DebugTools.verticalRulerLargeEl);
  }

  EBX_DebugTools.verticalRulerLargeEl.style.display = "";

  YAHOO.util.Event.addListener(document.body, "mousemove", EBX_DebugTools.verticalRulerLargeFollowMouse, null, null);
  EBX_Loader.stackKeyListener(EBX_Utils.keyCodes.ESCAPE, EBX_DebugTools.hideVerticalRulerLarge);
};
EBX_DebugTools.verticalRulerLargeFollowMouse = function (event) {
  EBX_DebugTools.verticalRulerLargeEl.style.left = event.clientX - 20 + "px";
};
EBX_DebugTools.hideVerticalRulerLarge = function () {
  EBX_DebugTools.verticalRulerLargeEl.style.display = "none";
  YAHOO.util.Event.removeListener(document.body, "mousemove", EBX_DebugTools.verticalRulerLargeFollowMouse);
  EBX_Loader.removeKeyListener(EBX_Utils.keyCodes.ESCAPE, EBX_DebugTools.hideVerticalRulerLarge);
};

EBX_DebugTools.toolList.push(["Vertical ruler Large", EBX_DebugTools.showVerticalRulerLarge]);
/** END VerticalRulerLarge */

/** START debug tools * */

YAHOO.util.Event.onDOMReady(EBX_DebugTools.init);

/** END debug tools * */

/** START Constants * */
function EBX_Constants() {

}

EBX_Constants.getRequestLink = function (eventName, parameterMap) {
  var requestLink = EBX_Constants.baseURLForRequest + eventName;

  if (parameterMap !== undefined) {
    var map = parameterMap.getMap();
    for (var key in map) {
      requestLink += "&" + key + "=" + map[key];
    }
  }
  return requestLink;
};

/** END Constants * */

/** START Map * */

function EBX_Map() {
  this.map = [];

  this.put = function (key, val) {
    this.map[key] = val;
  };

  this.get = function (key) {
    return this.map[key];
  };

  this.getMap = function () {
    return this.map;
  };

  this.isKeyExists = function (key) {
    return this.map[key] !== undefined;
  };
}

/** END Map * */

EBX_Utils.focusDummyInputToSolveIEFocusBugOnModalClose = function () {

  var dummyId = "ebx_dummyInputToSolveIEFocusBugOnModalClose";
  var dummyInput = document.getElementById(dummyId);

  if (dummyInput === null) {
    dummyInput = document.createElement("input");
    dummyInput.setAttribute('id', dummyId);
    dummyInput.setAttribute('type', 'text');
    dummyInput.setAttribute('style', 'position:fixed; left:-20px; right:-20px; width:10px;');
  }

  document.body.appendChild(dummyInput);

  dummyInput.focus();
  dummyInput.select();
};

EBX_Utils.invisibleMaskClassName = "ebx_InvisibleMask";
EBX_Utils.interactivMaskClassName = "ebx_InteractivMask";
EBX_Utils.tooltipClassName = "ebx_Tooltip";
EBX_Utils.tooltipArrowClassName = "ebx_TooltipArrow";
EBX_Utils.tooltipTopClassName = "ebx_TooltipTop";
EBX_Utils.tooltipBottomClassName = "ebx_TooltipBottom";

// This variable indicates if the close button is displayed on the edge of a modal.
// In the case of legacy, this button is always on the edge regardless of the modal size.
// In the case of Hybrid Mode, the close button should not be displayed on the edge of large modal.
EBX_Utils.isCloseButtonOnPopupEdge = "ebx_CloseButtonOnPopupEdge";

EBX_Utils.internalPopupId = "ebx_InternalPopup";
EBX_Utils.internalPopupMinWidth = 200;
EBX_Utils.internalPopupMinHeight = 100;
EBX_Utils.currentInternalPopup = null;

EBX_Utils.isInternalPopup_CloseCallIsMadeByParent = false;
EBX_Utils.isInternalPopup_WaitingForChildToCloseMyself = false;

EBX_Utils.closeInternalPopupReturnState_OK_closed = 1;
EBX_Utils.closeInternalPopupReturnState_KO_blockedByUser = 2;
EBX_Utils.closeInternalPopupReturnState_KO_waitingForPageReload = 3;

EBX_Utils.disableInternalPopupMessage = null;

EBX_Utils.submitInInternalPopup = function (frameName, url, postData) {
  var form = document.createElement("form");
  form.setAttribute("method", "post");
  form.setAttribute("action", url);
  form.setAttribute("target", frameName);
  form.setAttribute("style", "display:none;");

  //CP-17769: have to save reference aside in case some field names override form methods.
  // For more details, see https://developer.mozilla.org/fr/docs/Web/API/HTMLFormElement, quotes :
  // > Named inputs are added to their owner form instance as properties, and can overwrite
  // > native properties if they share the same name (eg a form with an input named action
  // > will have its action property return that input instead of the form's action HTML attribute).
  var formSubmit = form.submit;
  var formAppendChild = form.appendChild;

  if (postData) {
    for (var key in postData) {
      if (postData.hasOwnProperty(key)) {
        var value = postData[key];

        var createInput = (function (key) {
          return function (item) {
            var input = document.createElement("input");

            input.setAttribute("name", key);
            input.setAttribute("value", item);

            formAppendChild.call(form, input);
          };
        })(key);

        if (Array.isArray(value)) {
          EBX_Utils.forEach(value, createInput);
        } else {
          createInput(value);
        }

      }
    }
  }

  document.body.appendChild(form);
  formSubmit.call(form);
  document.body.removeChild(form);
};

EBX_Utils.openInternalPopupInParentWindow = function (url, width, height, options) {
  EBX_Utils.internalPopupHandler.EBX_Utils.openInternalPopup(url, width, height, options, window);
};

EBX_Utils.internalPopupReferrer = window;
EBX_Utils.openInternalPopup = function (url, width, height, options, referrer) {
  if (EBX_Utils.disableInternalPopupMessage !== null && ((options === undefined) || (options !== undefined
      && !options.isSystem))) {
    ebx_alert(EBX_Utils.disableInternalPopupMessage);
    return;
  }

  if (EBX_Utils.internalPopupHandler !== window) {
    EBX_Utils.openInternalPopupInParentWindow(url, width, height, options);
    return;
  }

  if (referrer == null) {
    referrer = window;
  }

  EBX_Utils.internalPopupReferrer = referrer;

  var isCentered = true;
  var isDimmed = true;
  var isResizable = true;
  var isCloseButtonDisplayed = true;
  var isResizeRestrainedToMinSize = false;
  var contextElement = null;
  var postData = null;
  var isCloseButtonOnPopupEdge = true;

  if (options !== undefined) {

    if (options.contextElement !== undefined) {
      contextElement = options.contextElement;
    }

    // having a context element causes isCenter turned to off
    if (options.isCentered === false || contextElement !== null) {
      isCentered = false;
    }

    // having a isCenter turned to off causes isResizable turned to off
    // because the resize feature is a special-dynamic-mirror-resize-amazing-behavior
    if (options.isResizable === false || isCentered === false) {
      isResizable = false;
    }

    if (options.isDimmed === false) {
      isDimmed = false;
    }

    if (options.isCloseButtonDisplayed === false) {
      isCloseButtonDisplayed = false;
    }

    if (options.isResizeRestrainedToMinSize === true) {
      isResizeRestrainedToMinSize = true;
    }

    if (options.postData != null) {
      postData = options.postData;
    }

    if (options.isCloseButtonOnPopupEdge != null) {
      isCloseButtonOnPopupEdge = options.isCloseButtonOnPopupEdge;
    }
  }

  var constrainToViewport = true, x = null, y = null;
  var setInteractiveMask = false;

  // if one of width or height is not correct or not defined, iframe is resized to fill the workspace.
  if (isNaN(parseInt(width)) || isNaN(parseInt(height))) {
    url += EBX_Utils.openInternalPopupURLSuffix;
    url += EBX_Utils.openInternalPopupWorkspaceMode;

    // update new-ui breadcrumb to be sure the popup can be closed
    var pageStack = EBX_Utils.getCurrentPageStack();
    pageStack.push({
      pageId: "__tmp__",
      isLoading: true
    });

    EBX_Utils.notifyContextChange(
        undefined,
        undefined,
        pageStack);

    // large size special configuration
    isResizable = false;
    constrainToViewport = false;
    setInteractiveMask = true;
    isCentered = false;

    var bounds = EBX_Utils.getBoundsOfInternalPopupToFitWindow();

    x = bounds.x;
    y = bounds.y;
    width = bounds.width;
    height = bounds.height;

    YAHOO.util.Event.addListener(window, "resize", EBX_Utils.autoResizeInternalPopupToFitWindowWithDelay);
  } else {
    url += EBX_Utils.openInternalPopupModalMode;

    var maxWidth = parseInt(document.body.offsetWidth) - 2 * YAHOO.widget.Overlay.VIEWPORT_OFFSET;
    var maxHeight = parseInt(document.body.offsetHeight) - 2 * YAHOO.widget.Overlay.VIEWPORT_OFFSET;

    if (width > maxWidth) {
      width = maxWidth;
    }
    if (height > maxHeight) {
      height = maxHeight;
    }
  }

  // convert URL parameters to post data
  (function () {
    var fullPostData = {};
    // we accept postData to be a boolean or an object containing data to post
    if (postData) {
      if (typeof postData === "object") {
        for (var key in postData) {
          if (!postData.hasOwnProperty(key)) {
            continue;
          }

          var value = postData[key];
          if (Array.isArray(value)) {
            fullPostData[key] = value;
          } else {
            fullPostData[key] = [value];
          }
        }
      }

      /*
       * This function splits the given string in two, on the first appearance of the separator.
       * This is to be opposed to the built-in split which either splits the given string while there
       * is a separator. The built-in version can have a limit but this is applied only after the whole
       * string has been split and won't return the remaining as a whole if it contains the separator.
       * Builtin: "a/b/c/d".split("/", 2)
       *   => ["a", "b"]
       * This version: split("a/b/c/d", "/")
       *   => ["a", "b/c/d"]
       */
      function split(s, separator) {
        var index = s.indexOf(separator);
        if (index >= 0) {
          return [
            s.substring(0, index),
            s.substring(index + 1)
          ];
        }

        return [s];
      }

      var urlSplit = split(url, "?");
      url = urlSplit[0];
      var paramString = urlSplit[1];

      if (paramString != null && paramString.length > 0) {
        var paramStrings = paramString.split("&");

        for (var i in paramStrings) {
          var s = paramStrings[i];
          if (s.length === 0) {
            continue;
          }

          var parts = split(s, "=");
          var paramName = decodeURIComponent(parts[0]);
          var paramValue = parts[1];
          if (paramValue == null) {
            paramValue = "";
          }

          var postValue = fullPostData[paramName];
          if (postValue == null) {
            postValue = [];
            fullPostData[paramName] = postValue;
          }

          paramValue = paramValue.replace(/\+/g, "%20");
          paramValue = decodeURIComponent(paramValue);
          postValue.push(paramValue);
        }
      }

      postData = fullPostData;
    } else {
      postData = null;
    }
  })();

  EBX_Utils.currentInternalPopup = new YAHOO.widget.Panel(EBX_Utils.internalPopupId, {
    visible: false,
    draggable: false,
    fixedcenter: isCentered,
    modal: true,
    close: isCloseButtonDisplayed,
    constraintoviewport: constrainToViewport,
    width: width + "px",
    height: height + "px",
    x: x,
    y: y
  });

  EBX_Utils.currentInternalPopup._doClose = function (e) {
    var iframeEl = document.getElementById(this.ebx_iframeId); // iframe can be legacy or New UI.
    if (!iframeEl.contentWindow.EBX_Utils) { // EBX_Utils is defined for legacy or New UI iframes.
      // iFrame has already been reset.
      iframeEl = null;
    } else {
      // Check if legacy iFrame is surrounded by a New UI iFrame.
      var legacyComponentId = iframeEl.contentWindow.EBX_Utils.EBX_LEGACY_COMPONENT_ID;
      if (legacyComponentId) {
        // May be null if iFrame was already removed by React.
        iframeEl = iframeEl.contentWindow.document.getElementById(legacyComponentId); // iframe can only be legacy.
        if (iframeEl && !iframeEl.contentWindow.EBX_Loader) {  // EBX_Loader is defined only for legacy iframes.
          // iframe has already been reset.
          iframeEl = null;
        }
      }
    }

    if (iframeEl) {
      // ask to child iFrame to close its internal popup before
      var closeReturnState = null;
      try {
        iframeEl.contentWindow.EBX_Utils.isInternalPopup_CloseCallIsMadeByParent = true;
        closeReturnState = iframeEl.contentWindow.EBX_Utils.closeInternalPopup();
      } catch (e) {
        closeReturnState = EBX_Utils.closeInternalPopupReturnState_OK_closed;
      }
      if (closeReturnState !== EBX_Utils.closeInternalPopupReturnState_OK_closed) {
        if (closeReturnState === EBX_Utils.closeInternalPopupReturnState_KO_waitingForPageReload) {
          // recursive relay
          EBX_Utils.isInternalPopup_WaitingForChildToCloseMyself = true;
        }
        return closeReturnState;
      }

      // check unload before changing the src or destroy the iFrame
      var unLoadResult = undefined;
      try {
        unLoadResult = iframeEl.contentWindow.EBX_Loader.onbeforeunload();
      } catch (e) {
      }
      if (unLoadResult !== undefined) {
        if (confirm(unLoadResult + "\n" + EBX_LocalizedMessage.confirmLine2Popup) === false) {
          return EBX_Utils.closeInternalPopupReturnState_KO_blockedByUser;
        }
      }

      // no modification, or the user wants to discard them
      // so delete the onbeforeunload before unload the iFrame
      try {
        iframeEl.contentWindow.onbeforeunload = undefined;
      } catch (e) {
      }

      // if the iframe has a actionClosePopup, call it
      var actionClosePopup = null;
      try {
        actionClosePopup = iframeEl.contentWindow.EBX_Loader.actionClosePopup;
      } catch (e) {
      }
      if (actionClosePopup !== null) {
        iframeEl.contentWindow.setTimeout(actionClosePopup, 0);
        // page reload will call parent.EBX_Utils.closeInternalPopup() when it will be ready
        // in this case, the current window have an internal popup shall close itself
        // by calling parent.EBX_Utils.closeInternalPopup()
        EBX_Utils.isInternalPopup_WaitingForChildToCloseMyself = true;
        return EBX_Utils.closeInternalPopupReturnState_KO_waitingForPageReload;
      }

      // if the iFrame has a urlLogout, navigate on it
      var urlLogout = null;
      try {
        urlLogout = iframeEl.contentWindow.EBX_Loader.urlLogout;
      } catch (e) {
      }
      if (urlLogout !== null) {
        if (iframeEl.src) {
          iframeEl.src = urlLogout;
        } else { // <object>
          iframeEl.data = urlLogout;
        }
        // page reload will call parent.EBX_Utils.closeInternalPopup() when it will be ready
        // in this case, the current window have an internal popup shall close itself
        // by calling parent.EBX_Utils.closeInternalPopup()
        EBX_Utils.isInternalPopup_WaitingForChildToCloseMyself = true;
        return EBX_Utils.closeInternalPopupReturnState_KO_waitingForPageReload;
      }
    }  // iframeEl

    if (e !== undefined) {
      YAHOO.util.Event.preventDefault(e);
    }
    YAHOO.util.Event.removeListener(window, "resize", EBX_Utils.autoResizeInternalPopupToFitWindowWithDelay);
    this.destroy();

    if (EBX_Utils.isInternalPopup_WaitingForChildToCloseMyself === true
        && EBX_Utils.isInternalPopup_CloseCallIsMadeByParent === true) {
      // case when the close of current window was waiting for the refresh of child (or myself)
      var closeResult = parent.EBX_Utils.closeInternalPopup();

      // reset value (useful for top window)
      EBX_Utils.isInternalPopup_WaitingForChildToCloseMyself = false;
      EBX_Utils.isInternalPopup_CloseCallIsMadeByParent = false;
      if (closeResult == EBX_Utils.closeInternalPopupReturnState_KO_blockedByUser) {
        // notify newUI of cancellation of waiting
        EBX_Utils.notifyCloseChildCancelledByUser()
      }
    }

    // #13328 [UMBRELLA] Focus problems on Internet Explorer
    if (EBX_LayoutManager.isIE || EBX_LayoutManager.browser == "IE") {
      EBX_Utils.focusDummyInputToSolveIEFocusBugOnModalClose();
    }

    //Check that there is at least one APV compatible field, we update all nodes modified by a sub session
    if (Object.getOwnPropertyNames(EBX_FormNodeIndex.nodes).length !== 0) {
      referrer.EBX_FormPresenter.updateFromSubSession();
    }

    //Do not make redirection when closing
    if (!EBX_LayoutManager.isAnMDMComponent()) {
      EBX_Utils.notifyContextChange(
          undefined,
          window.EBX_HybridModeDisplayedContextInfo,
          EBX_Utils.getCurrentPageStack());
    }

    return EBX_Utils.closeInternalPopupReturnState_OK_closed;
  };

  EBX_Utils.currentInternalPopup.ebx_iframeId = EBX_Utils.internalPopupId + "_frame";
  var frameName = ebx_getContainerWindow().name;
  if (!frameName) {
    frameName = EBX_Utils.currentInternalPopup.ebx_iframeId;
  } else {
    frameName += "_0";
  }

  var tmpInnerHTML = [];
  tmpInnerHTML.push("<iframe");
  tmpInnerHTML.push(" id='", EBX_Utils.currentInternalPopup.ebx_iframeId, "'");
  tmpInnerHTML.push(" name='", frameName, "'");
  tmpInnerHTML.push(" src='", (postData == null) ? url : "about:blank", "'");
  tmpInnerHTML.push(" width='100%'");
  tmpInnerHTML.push(" height='100%'");
  tmpInnerHTML.push(" align='middle'");
  tmpInnerHTML.push(" scrolling='auto'");
  tmpInnerHTML.push(" frameborder='0'>");
  tmpInnerHTML.push("</iframe>");
  EBX_Utils.currentInternalPopup.setBody(tmpInnerHTML.join(""));

  EBX_Utils.currentInternalPopup.render(document.body);
  if (contextElement !== null) {
    EBX_Utils.currentInternalPopup.cfg.setProperty('context', [contextElement, 'tl', 'bl']);
  }

  if (postData != null) {
    EBX_Utils.submitInInternalPopup(frameName, url, postData);
  }

  EBX_Utils.currentInternalPopup.show();

  var mask = document.getElementById(EBX_Utils.internalPopupId + "_mask");

  if (isDimmed === false) {
    EBX_Utils.addCSSClass(mask, EBX_Utils.invisibleMaskClassName);
  }
  if (setInteractiveMask === true) {
    EBX_Utils.addCSSClass(mask, EBX_Utils.interactivMaskClassName);
  }

  if (isCloseButtonOnPopupEdge) {
    var popup = document.getElementById(EBX_Utils.internalPopupId);
    EBX_Utils.addCSSClass(popup, EBX_Utils.isCloseButtonOnPopupEdge);
  }

  // close when click on back
  YAHOO.util.Event.addListener(mask, "click", EBX_Utils.closeInternalPopup, null, null);
  mask.title = EBX_LocalizedMessage.innerPopup_returnToThisScreen;

  if (isResizable === true) {
    var resize = new YAHOO.util.Resize(EBX_Utils.internalPopupId, {
      handles: ["br"],
      useShim: true,
      minHeight: EBX_Utils.internalPopupMinHeight,
      minWidth: EBX_Utils.internalPopupMinWidth,
      proxy: true
    });
    resize.originalHeight = height;
    resize.originalWidth = width;
    resize.originalLeft = EBX_Utils.currentInternalPopup.element.offsetLeft;
    resize.originalTop = EBX_Utils.currentInternalPopup.element.offsetTop;

    resize.on("startResize", function (args) {

      var D = YAHOO.util.Dom;

      var clientRegion = D.getClientRegion();
      var elRegion = D.getRegion(this.element);

      resize.set("maxWidth", clientRegion.right - elRegion.left - YAHOO.widget.Overlay.VIEWPORT_OFFSET);
      resize.set("maxHeight", clientRegion.bottom - elRegion.top - YAHOO.widget.Overlay.VIEWPORT_OFFSET);

      var minWidth = EBX_Utils.internalPopupMinWidth;
      var minHeight = EBX_Utils.internalPopupMinHeight;
      if (isResizeRestrainedToMinSize) {
        minWidth = width;
        minHeight = height;
      }

      resize.set("minWidth", (clientRegion.width + minWidth) / 2 - elRegion.left);
      resize.set("minHeight", (clientRegion.height + minHeight) / 2 - elRegion.top);
    }, EBX_Utils.currentInternalPopup, true);

    resize.on("proxyResize", function (args) {
      var proxy = resize._proxy;
      var panelHeight = args.height;
      var panelWidth = args.width;

      var heightDiff = panelHeight - resize.originalHeight;
      var widthDiff = panelWidth - resize.originalWidth;

      var targetHeight = resize.originalHeight + heightDiff * 2;
      var targetLeft = resize.originalLeft - widthDiff;
      var targetWidth = resize.originalWidth + widthDiff * 2;
      var targetTop = resize.originalTop - heightDiff;

      proxy.style.left = targetLeft + "px";
      proxy.style.top = targetTop + "px";
      proxy.style.width = targetWidth + "px";
      proxy.style.height = targetHeight + "px";
    }, null, true);

    resize.on("endResize", function (args) {
      var panelHeight = args.height;
      var panelWidth = args.width;

      var heightDiff = panelHeight - resize.originalHeight;
      var widthDiff = panelWidth - resize.originalWidth;

      var targetHeight = resize.originalHeight + heightDiff * 2;
      var targetWidth = resize.originalWidth + widthDiff * 2;

      this.cfg.setProperty("height", targetHeight + "px");
      this.cfg.setProperty("width", targetWidth + "px");
      this.moveTo(resize.originalLeft - widthDiff, resize.originalTop - heightDiff);

      args.target.originalHeight = targetHeight;
      args.target.originalWidth = targetWidth;
      args.target.originalLeft = resize.originalLeft - widthDiff;
      args.target.originalTop = resize.originalTop - heightDiff;
    }, EBX_Utils.currentInternalPopup, true);
  }
};

EBX_Utils.previousResizeInternalPopupTimeout = null;

EBX_Utils.autoResizeInternalPopupToFitWindowWithDelay = function () {
  if (!EBX_LayoutManager.delayResizeBodyLayout) {
    EBX_Utils.autoResizeInternalPopupToFitWindow();
    return;
  }

  if (EBX_Utils.previousResizeInternalPopupTimeout !== null) {
    window.clearTimeout(EBX_Utils.previousResizeInternalPopupTimeout);
  }
  EBX_Utils.previousResizeInternalPopupTimeout = window
      .setTimeout(EBX_Utils.autoResizeInternalPopupToFitWindow, EBX_Utils.InternalPopupResizeDelay);
};

EBX_Utils.autoResizeInternalPopupToFitWindow = function () {
  if (EBX_Utils.currentInternalPopup === null || EBX_Utils.currentInternalPopup.cfg === null) {
    return;
  }

  var bounds = EBX_Utils.getBoundsOfInternalPopupToFitWindow();

  EBX_Utils.currentInternalPopup.cfg.setProperty("height", bounds.height + "px");
  EBX_Utils.currentInternalPopup.cfg.setProperty("width", bounds.width + "px");
};

EBX_Utils.getBoundsOfInternalPopupToFitWindow = function () {
  var bounds = {};

  if (window.EBX_HybridModePageInfo !== undefined) {
    // Component is displayed in hybrid mode.
    bounds.width = parseInt(document.body.offsetWidth);
    bounds.height = parseInt(document.body.offsetHeight);
    bounds.x = 0;
    bounds.y = 0;
    return bounds;
  }

  var popupMarginTop = null;

  if (EBX_LayoutManager.isHeaderPaneDisplayed()) {
    popupMarginTop = 40;
  }

  if (popupMarginTop === null) {
    var workspaceTitleH2 = EBX_LayoutManager.getWorkspaceTitleH2();

    if (workspaceTitleH2 !== null) {
      popupMarginTop = workspaceTitleH2.offsetHeight;
    }
  }

  // extra fallback powa:
  // if the header pane is not displayed and if the workspace title does not exist,
  // maybe the workspace is an iFrame, probably with EBX® and no header pane, but a workspace title,
  // so set an approximation of workspace title usual height
  if (popupMarginTop === null) {
    if (EBX_Utils.matchCSSClass(document.body, "ebx_density_10")) {
      popupMarginTop = 48;
    } else if (EBX_Utils.matchCSSClass(document.body, "ebx_density_20")) {
      popupMarginTop = 70;
    } else {
      // throw in the towel!
      popupMarginTop = 0;
    }
  }

  var isEmbedded = EBX_LayoutManager.isEmbedded({
    considersEBXPerspectiveAsNotEBX: true
  });

  if (isEmbedded) {
    bounds.width = parseInt(document.body.offsetWidth);
    bounds.height = parseInt(document.body.offsetHeight - popupMarginTop);
    bounds.x = 0;
    bounds.y = popupMarginTop;
  } else {
    bounds.width = parseInt(document.body.offsetWidth - 20); // 20 = 2x10 for left + right margin
    bounds.height = parseInt(document.body.offsetHeight - (popupMarginTop + 10)); // 10 for bottom margin
    bounds.x = 10;
    bounds.y = popupMarginTop;
  }

  return bounds;
};

EBX_Utils.closeInternalPopup = function () {
  if (EBX_Utils.currentInternalPopup !== null && EBX_Utils.currentInternalPopup.body !== null) {
    return EBX_Utils.currentInternalPopup._doClose();
  }
  // search subsession iframe
  subSessionIFrame = EBX_Utils.getSubSessionIFrame();
  if (subSessionIFrame !== null && subSessionIFrame.contentWindow.body !== null) {
    return EBX_Utils._doCloseSubSession(subSessionIFrame);
  }
  return EBX_Utils.closeInternalPopupReturnState_OK_closed;
};

EBX_Utils._doCloseSubSession = function (iframeEl) {
  if (!iframeEl.contentWindow.EBX_Utils) { // EBX_Utils is defined for legacy or New UI iframes.
    // iFrame has already been reset.
    iframeEl = null;
  } else {
    // Check if legacy iFrame is surrounded by a New UI iFrame.
    var legacyComponentId = iframeEl.contentWindow.EBX_Utils.EBX_LEGACY_COMPONENT_ID;
    if (legacyComponentId) {
      // May be null if iFrame was already removed by React.
      iframeEl = iframeEl.contentWindow.document.getElementById(legacyComponentId); // iframe can only be legacy.
      if (iframeEl && !iframeEl.contentWindow.EBX_Loader) {  // EBX_Loader is defined only for legacy iframes.
        // iframe has already been reset.
        iframeEl = null;
      }
    }
  }
  if (iframeEl) {
    // ask to child iFrame to close its internal popup before
    var closeReturnState = null;
    try {
      iframeEl.contentWindow.EBX_Utils.isInternalPopup_CloseCallIsMadeByParent = true;
      closeReturnState = iframeEl.contentWindow.EBX_Utils.closeInternalPopup();
    } catch (e) {
      closeReturnState = EBX_Utils.closeInternalPopupReturnState_OK_closed;
    }
    if (closeReturnState !== EBX_Utils.closeInternalPopupReturnState_OK_closed) {
      if (closeReturnState === EBX_Utils.closeInternalPopupReturnState_KO_waitingForPageReload) {
        // recursive relay
        EBX_Utils.isInternalPopup_WaitingForChildToCloseMyself = true;
      }
      return closeReturnState;
    }

    // check unload before changing the src or destroy the iFrame
    var unLoadResult = undefined;
    try {
      unLoadResult = iframeEl.contentWindow.EBX_Loader.onbeforeunload();
    } catch (e) {
    }
    if (unLoadResult !== undefined) {
      if (confirm(unLoadResult + "\n" + EBX_LocalizedMessage.confirmLine2Popup) === false) {
        return EBX_Utils.closeInternalPopupReturnState_KO_blockedByUser;
      }
    }

    // no modification, or the user wants to discard them
    // so delete the onbeforeunload before unload the iFrame
    try {
      iframeEl.contentWindow.onbeforeunload = undefined;
      iframeEl.contentWindow.EBX_Loader.onbeforeunload = function () {
      };
    } catch (e) {
      console.error(e)
    }

    if (EBX_Utils.getCurrentPageStack().length === 1) {
      // should not close root subsession in workflow
      EBX_Utils.isInternalPopup_WaitingForChildToCloseMyself = false;
      EBX_Utils.isInternalPopup_CloseCallIsMadeByParent = false;
      return EBX_Utils.closeInternalPopupReturnState_OK_closed;
    }

    // simply clear iframe src for subsession
    if (iframeEl.src) {
      iframeEl.src = "about:blank";
    } else {
      iframeEl.data = "about:blank"
    }
  }  // iframeEl

  YAHOO.util.Event.removeListener(window, "resize", EBX_Utils.autoResizeInternalPopupToFitWindowWithDelay);
  //this.destroy();

  if (EBX_Utils.isInternalPopup_WaitingForChildToCloseMyself === true
      && EBX_Utils.isInternalPopup_CloseCallIsMadeByParent === true) {
    // case when the close of current window was waiting for the refresh of child (or myself)
    //var closeResult = parent.EBX_Utils.closeInternalPopup();
    EBX_Utils.notifyContextChange(
        undefined,
        undefined,
        EBX_Utils.getCurrentPageStack());

    // reset value (useful for top window)
    EBX_Utils.isInternalPopup_WaitingForChildToCloseMyself = false;
    EBX_Utils.isInternalPopup_CloseCallIsMadeByParent = false;
  }

  // #13328 [UMBRELLA] Focus problems on Internet Explorer
  if (EBX_LayoutManager.isIE || EBX_LayoutManager.browser == "IE") {
    EBX_Utils.focusDummyInputToSolveIEFocusBugOnModalClose();
  }

  //Check that there is at least one APV compatible field, we update all nodes modified by a sub session
  if (Object.getOwnPropertyNames(EBX_FormNodeIndex.nodes).length !== 0) {
    EBX_FormPresenter.updateFromSubSession();
  }

  //Do not make redirection when closing
  EBX_Utils.notifyContextChange(
      undefined,
      undefined,
      EBX_Utils.getCurrentPageStack());

  return EBX_Utils.closeInternalPopupReturnState_OK_closed;
};

EBX_Utils.isForcedClose = false;

EBX_Utils.closeSelf = function () {
  var closePopupReturnState = EBX_Utils.closeInternalPopup();
  if (closePopupReturnState !== EBX_Utils.closeInternalPopupReturnState_OK_closed) {
    return closePopupReturnState;
  }

  // considers that the page is not fully loader, so it can be closed
  //  (the user was not able to modify form data, neither open a child popup)
  if (window.EBX_Loader == null) {
    return EBX_Utils.closeInternalPopupReturnState_OK_closed;
  }

  var message = EBX_Loader.onbeforeunload();

  if (message == null) {
    return EBX_Utils.closeInternalPopupReturnState_OK_closed;
  }

  if (confirm(message)) {
    EBX_Utils.isForcedClose = true;
    return EBX_Utils.closeInternalPopupReturnState_OK_closed;
  }

  return EBX_Utils.closeInternalPopupReturnState_KO_blockedByUser;
};

EBX_Utils.openInternalPopupExportResult = function (url) {
  EBX_Utils.openInternalPopup(url, 500, 250, {
    isCloseButtonDisplayed: false
  });
};
EBX_Utils.openInternalPopupWithSize = function (url, width, height, options) {
  EBX_Utils.openInternalPopup(url, width, height, options);
};
EBX_Utils.openInternalPopupMediumSize = function (url) {
  EBX_Utils.openInternalPopup(url, 800, 400);
};
EBX_Utils.openInternalPopupMediumSizeHostedClose = function (url, options) {
  var actualOptions;
  if (!options) {
    actualOptions = {
      isCloseButtonDisplayed: false
    };
  } else {
    actualOptions = {};
    for (var key in options) {
      if (!options.hasOwnProperty(key)) {
        continue;
      }

      actualOptions[key] = options[key];
    }

    actualOptions.isCloseButtonDisplayed = false;
  }

  EBX_Utils.openInternalPopup(url, 800, 400, actualOptions);
};
EBX_Utils.openInternalPopupLargeSize = function (url) {
  //
  EBX_Utils.openInternalPopup(url, null, null, {
    isCloseButtonOnPopupEdge: false
  });
};
EBX_Utils.openInternalPopupLargeSizeHostedClose = function (url, isSystem, postData) {

  EBX_Utils.openInternalPopup(url, null, null, {
    isCloseButtonDisplayed: false,
    isSystem: (isSystem !== undefined) ? isSystem : false,
    postData: postData
  });
};

// This method is called in hybrid mode when a popup opens.
EBX_Utils.onHybridOpenPanel = function () {
  EBX_Utils.onHybridPanelChange();
};

// This method is called in hybrid mode when an error occurs and legacy session should not be reused.
EBX_Utils.onHybridError = function (stateId, isLoggedIn) {
  var windowsStack = EBX_Utils.getWindowStackToHybridParentFrame();
  if (!windowsStack) {
    // Not in hybrid mode.
    return;
  }

  var callback = windowsStack[0]["EBX_HybridModeOnError"];
  if (!callback) {
    // No callback defined.
    return;
  }

  var data = {
    stateId: stateId,
    isLoggedIn: isLoggedIn
  }

  callback(JSON.stringify(data));
};

// This method is called in hybrid mode to get current and all parent iframe windows.
EBX_Utils.getWindowStackToHybridParentFrame = (function () {
  var windowStack = undefined;

  /**
   * Please keep in sync with LegacyComponent.getWindowStackToHybridParentFrame().
   */
  function getWindowStackToHybridParentFrame() {
    var ret = [];

    var win = window;

    do {
      if (!EBX_Utils.isWindowOnSameDomain(win)) {
        return null;
      }

      if (win.EBX_Utils["isHybridNotificationDisabled"]) {
        return null;
      }

      ret.push(win);
      if (win["EBX_HybridModeOnContextChange"]) {
        return ret.reverse();
      }

      if (win == win.top) {
        return null;
      }

      win = win.parent;
    } while (true);
  }

  return function () {
    if (windowStack === undefined) {
      windowStack = getWindowStackToHybridParentFrame();
    }

    return windowStack;
  };
})();

/**
 *
 * @param window {Window}
 * @return {boolean}
 */
EBX_Utils.isWindowOnSameDomain = function (window) {
  try {
    window.document;
    return true;
  } catch (e) {
    return false;
  }
};

window.EBX_HybridModeRootContextInfo = undefined;
window.EBX_HybridModeDisplayedContextInfo = undefined;
window.EBX_HybridModePageInfo = undefined;

// In hybrid mode, sets all titles. If not in hybrid mode does nothing.
EBX_Utils.onHybridPanelChange = function () {
  EBX_Utils.notifyContextChange(
      window.EBX_HybridModeRootContextInfo,
      window.EBX_HybridModeDisplayedContextInfo,
      EBX_Utils.getCurrentPageStack());
};

EBX_Utils.notifyContextChange = function (rootContext, displayedContext, pageStack) {
  var windowsStack = EBX_Utils.getWindowStackToHybridParentFrame();
  if (!windowsStack) {
    // Not in hybrid mode.
    return;
  }

  var callback = windowsStack[0]["EBX_HybridModeOnContextChange"];
  if (!callback) {
    // No callback defined.
    return;
  }
  var data = {
    rootContext: rootContext,
    displayedContext: displayedContext,
    pageStack: pageStack,
    pageId: window.EBX_PageId
  };

  callback(JSON.stringify(data));
};

EBX_Utils.notifyCloseChildCancelledByUser = function () {
  var windowsStack = EBX_Utils.getWindowStackToHybridParentFrame();
  if (!windowsStack) {
    // Not in hybrid mode.
    return;
  }

  var callback = windowsStack[0]["EBX_HybridModeOnCloseChildCancelledByUser"];
  if (!callback) {
    // No callback defined.
    return;
  }

  callback();
};

/**
 * Please keep in sync with LegacyComponent.getCurrentPageStack().
 */
EBX_Utils.getCurrentPageStack = function () {
  var windowsStack = EBX_Utils.getWindowStackToHybridParentFrame();
  if (windowsStack == null) {
    return [];
  }

  var pages = [];

  for (var i in windowsStack) {
    var win = windowsStack[i];

    if (win.EBX_HybridModePageInfo) {
      win.EBX_HybridModePageInfo.pageId = win.EBX_PageId;
      pages.push(win.EBX_HybridModePageInfo);
    }
  }

  return pages;
};

// This method is called in hybrid mode to get the legacy window using its page id.
EBX_Utils.getHybridFrameWindowByPageId = function (pageId) {
  if (!pageId) {
    console.error("Page id cannot by undefined or null.");
    return;
  }

  var win = window;

  // Find legacy top window. Current window is any window in the stack of legacy windows.
  while (!win.parent["EBX_HybridModeOnContextChange"]) {
    if (win == win.top) {
      console.error("Cannot find top legacy window.");
      return;
    }

    win = win.parent;
  }

  // Find the window using pageId.
  win = EBX_Utils.getChildPageMatching(win, function (window) {
    return window.EBX_PageId === pageId;
  });

  return win;
};

EBX_Utils.getChildPageMatching = function (window, predicate) {
  if (window.EBX_Utils == null) {
    return;
  }

  if (predicate(window)) {
    return window;
  }

  var children = window.document.getElementsByTagName("iframe");
  for (var childId = 0; childId < children.length; childId++) {
    var contentWindow = children[childId].contentWindow;

    var matchingChild = EBX_Utils.getChildPageMatching(contentWindow, predicate);
    if (matchingChild != null) {
      return matchingChild;
    }
  }

  children = window.document.getElementsByTagName("object");
  for (childId = 0; childId < children.length; childId++) {
    contentWindow = children[childId].contentWindow;
    if (contentWindow == null) {
      continue;
    }

    matchingChild = EBX_Utils.getChildPageMatching(contentWindow, predicate);
    if (matchingChild != null) {
      return matchingChild;
    }
  }
};

// Closes a popup.
EBX_Utils.closePopupByPageId = function (pageId) {
  var win = EBX_Utils.getHybridFrameWindowByPageId(pageId);
  if (win == null) {
    return EBX_Utils.closeInternalPopupReturnState_OK_closed;
  }

  return win.EBX_Utils.closeInternalPopup();
}

// Changes content of an iframe.
EBX_Utils.setLocationByPageId = function (pageId, url) {
  var win = EBX_Utils.getHybridFrameWindowByPageId(pageId);
  if (win == null) {
    return;
  }

  win.location = url;
}

/**
 * Returns true if current density applied is DisplayDensity.COMPACT.
 */
EBX_Utils.isDisplayDensityCompact = function () {
  // ebx_display_density_is_compact is initialized by server.
  // noinspection JSUnresolvedVariable
  return ebx_display_density_is_compact;
};

EBX_Utils.processSynchronizedEvent = function (type, params) {
  var event;
  var clickElement;
  switch (type) {
    case "MouseEvent":
      event = window.document.createEvent("MouseEvent");
      event.initMouseEvent(params.typeArg, params.canBubbleArg, params.cancelableArg, window, params.detailArg,
          params.screenXArg, params.screenYArg,
          params.clientXArg, params.clientYArg, params.ctrlKeyArg, params.altKeyArg, params.shiftKeyArg,
          params.metaKeyArg, params.buttonArg,
          params.relatedTargetArg);
      clickElement = window.document.body; // dispatch event from the root
      clickElement.dispatchEvent(event);
      break;
    default:
      console.error("Unknown synchronized event type:", type);
      break;
  }
};

EBX_Utils.cancelRequest = function (cancelableRequestID) {
  var url = EBX_Constants.ajaxCancelRequest;
  url += EBX_Constants.ajaxCancelRequestParamCancelableID + encodeURIComponent(cancelableRequestID);

  new YAHOO.util.XHRDataSource().sendRequest(url, null);
};

// See doc in index.d.ts
EBX_Utils.createHighlightTooltip = function createHighlightTooltip(elementToAttach, options) {
  var tooltipElement;

  var text = (options && options.text) || "?";
  var position = (options && options.position) || "top";
  var displayed = (options && options.displayed) || false;

  var clearTransition;

  function remove() {
    if (tooltipElement == null) {
      return;
    }

    tooltipElement.parentElement.removeChild(tooltipElement);
    tooltipElement = null;
  }

  function show() {
    if (tooltipElement == null) {
      return;
    }
    if (displayed) {
      return;
    }

    refresh();
    displayed = true;

    if (clearTransition != null) {
      clearTransition();
    }

    requestAnimationFrame(function () {
      tooltipElement.style.display = "";
      requestAnimationFrame(function () {
        tooltipElement.style.opacity = 1;
        tooltipElement.style.transform = "";
      });
    });
  }

  function hide() {
    if (tooltipElement == null) {
      return;
    }
    if (!displayed) {
      return;
    }

    displayed = false;
    tooltipElement.style.opacity = 0;
    tooltipElement.style.transform = "scale(0)";

    var timeoutId = setTimeout(function () {
      tooltipElement.style.display = "none";
      clearTransition = null;
    }, 200);

    clearTransition = function () {
      clearTimeout(timeoutId);
      clearTransition = null;
    }
  }

  function toggle() {
    if (displayed) {
      hide();
    } else {
      show();
    }
  }

  function setText(newText) {
    text = newText;

    refresh();
  }

  function setPosition(newPosition) {
    position = newPosition;

    refresh();
  }

  function refresh() {
    if (tooltipElement == null) {
      return;
    }

    // text
    EBX_Utils.forEach(tooltipElement.childNodes, function (child) {
      if (child.nodeType === Node.TEXT_NODE) {
        tooltipElement.removeChild(child);
      }
    });

    var textElement = document.createTextNode(text);
    tooltipElement.appendChild(textElement);

    // position
    var contentRect = elementToAttach.getBoundingClientRect();

    var style = tooltipElement.style;
    style.top = null;
    style.bottom = null;
    style.left = (contentRect.left - 5) + "px";

    EBX_Utils.removeCSSClass(tooltipElement, EBX_Utils.tooltipTopClassName);
    EBX_Utils.removeCSSClass(tooltipElement, EBX_Utils.tooltipBottomClassName);

    switch (position) {
      case "top":
        style.bottom = (document.documentElement.clientHeight - contentRect.top + 10) + "px";
        EBX_Utils.addCSSClass(tooltipElement, EBX_Utils.tooltipTopClassName);
        break;
      case "bottom":
        style.top = (contentRect.bottom + 10) + "px";
        EBX_Utils.addCSSClass(tooltipElement, EBX_Utils.tooltipBottomClassName);
        break;
    }
  }

  // create tooltip
  {
    tooltipElement = document.createElement("div");
    EBX_Utils.addCSSClass(tooltipElement, EBX_Utils.tooltipClassName);

    // create arrow
    {
      var arrowElement = document.createElement("div");
      EBX_Utils.addCSSClass(arrowElement, EBX_Utils.tooltipArrowClassName);

      tooltipElement.appendChild(arrowElement);
    }

    refresh();
    displayed = !displayed;
    if (!displayed) {
      show();
    } else {
      hide();
    }

    document.body.appendChild(tooltipElement);
  }

  return {
    remove: remove,
    show: show,
    hide: hide,
    toggle: toggle,
    setText: setText,
    setPosition: setPosition
  };
};

EBX_Utils.TooltipHolder = function () {
  this.tooltips = [];
  this.hideTimeout = null;

  this.addTooltip = function (element, tooltipOptions, onBeforeShow, onBeforeHide) {
    if (element == null) {
      return;
    }

    var tooltip = EBX_Utils.createHighlightTooltip(element, tooltipOptions);

    this.tooltips.push({
      tooltip: tooltip,
      onBeforeShow: onBeforeShow ? function () {
        return onBeforeShow(element);
      } : EBX_Utils.returnTrue,
      onBeforeHide: onBeforeHide ? function () {
        return onBeforeHide(element);
      } : EBX_Utils.returnTrue
    });
  }.bind(this);

  this.showAll = function (delay) {
    EBX_Utils.forEach(this.tooltips, function (tooltip) {
      if (tooltip.onBeforeShow()) {
        tooltip.tooltip.show();
      }
    });

    if (this.hideTimeout != null) {
      window.clearTimeout(this.hideTimeout);
    }

    if (delay != null) {
      this.hideTimeout = window.setTimeout(this.hideAll, delay);
    } else {
      this.hideTimeout = null;
    }
  }.bind(this);

  this.hideAll = function () {
    EBX_Utils.forEach(this.tooltips, function (tooltip) {
      if (tooltip.onBeforeHide()) {
        tooltip.tooltip.hide();
      }
    });

    if (this.hideTimeout != null) {
      window.clearTimeout(this.hideTimeout);
    }

    this.hideTimeout = null;
  }.bind(this);
};

/**
 * Notifies parent to refresh its dataspace tree if visible.
 */
EBX_Utils.invalidateDataspaceTree = function () {
  var windowsStack = EBX_Utils.getWindowStackToHybridParentFrame();
  if (!windowsStack) {
    return;
  }
  var callback = windowsStack[0]["EBX_HybridInvalidateDataspaceTree"];
  if (!callback) {
    return;
  }
  callback();
};


/**
 * Current field padding bottom which depends of the density applied.
 *
 * Set by server.
 */
EBX_Utils.FieldVerticalPadding;
/**
 * Horizontal padding in fields.
 * Set by server
 */
EBX_Utils.FieldHorizontalPadding;

EBX_Utils.notifySidebar = function (type, data) {
  var windowsStack = EBX_Utils.getWindowStackToHybridParentFrame();
  if (!windowsStack) {
    // Not in hybrid mode.
    return;
  }

  var callback = windowsStack[0]["EBX_HybridModeOnSidebarEvent"];
  if (!callback) {
    // No callback defined.
    return;
  }

  if (data != null) {
    callback(type, JSON.stringify(data));
  } else {
    callback(type, data);
  }
};

/**
 * Indicates whether a targetString begins with a substring. Both strings are supplied as arguments.
 * @param aTargetString {string}
 * @param aSubstring {string}
 * @return {boolean}
 */
EBX_Utils.stringStartsWith = function (aTargetString, aSubstring) {
  return aTargetString != null && aTargetString.indexOf(aSubstring) === 0;
};

EBX_Utils.debounce = function (f, interval, zis) {
  var timeout = null;
  interval = interval || 300;

  return function () {
    var zis = zis || this;
    var args = arguments;

    function functionToApply() {
      f.apply(zis, args);
    }

    clearTimeout(timeout);
    timeout = setTimeout(functionToApply, interval);
  }
};

/**
 * Temporary annotation to disable methods.
 */
EBX_Utils.Disabled = function (defaultResult) {
  return function (target, name, descriptor) {
    descriptor.value = function () {
      console.groupCollapsed("Calling disabled method: " + name);
      console.trace();
      console.groupEnd();
      return defaultResult;
    }
  }
};

(function () {
  function shallowComparator(o0, o1) {
    if (o0 === o1) {
      return true;
    }
    if (o0 == null || o1 == null) {
      return false;
    }

    var type = typeof o0;
    if (type !== typeof o1) {
      return false;
    }

    if (type === "object") {
      return shallowObjectComparator(o0, o1);
    }

    return false;
  }

  function shallowObjectComparator(o0, o1) {
    var o0Keys = Object.getOwnPropertyNames(o0);
    var o1Keys = Object.getOwnPropertyNames(o1);

    if (o0Keys.length !== o1Keys.length) {
      return false;
    }

    for (var i in o0Keys) {
      var key = o0Keys[i];
      if (o1Keys.indexOf(key) === -1) {
        return false;
      }

      if (o0[key] !== o1[key]) {
        return false;
      }
    }

    return true;
  }

  EBX_Utils.memoize = function (f) {
    var hasResult = false;
    var cachedParams;
    var cachedResult;

    return function (params) {
      if (!hasResult || !shallowComparator(cachedParams, params)) {
        hasResult = true;
        cachedParams = params;
        cachedResult = f(params);
      }

      return cachedResult;
    }
  };
})();

(function () {
  EBX_Utils.createElement = function createElement(name, attributes) {
    var children = [];
    for (var i = 2; i < arguments.length; i++) {
      children.push(arguments[i]);
    }

    var tag = document.createElement(name);

    if (attributes) {
      for (var key in attributes) {
        if (!attributes.hasOwnProperty(key)) {
          continue;
        }

        var value = attributes[key];

        if (typeof value === "function") {
          if (key.indexOf("on") === 0) {
            key = key.substr(2);
          }
          tag.addEventListener(key, value);
        } else {
          tag.setAttribute(key, value);
        }
      }
    }

    appendChildren(tag, children);

    return tag;
  };

  EBX_Utils.createDiv = makeCreateSpecificTag("div");
  EBX_Utils.createButton = makeCreateSpecificTag("button");

  function appendChildren(element, children) {
    if (!children) {
      return;
    }

    if (Array.isArray(children)) {
      EBX_Utils.forEach(children, function (child) {
        appendChildren(element, child);
      })
    } else if (typeof children === "string") {
      var child = document.createTextNode(children);
      element.appendChild(child);
    } else {
      element.appendChild(children);
    }
  }

  function makeCreateSpecificTag(name) {
    return function (attributes) {
      var args = [name];
      for (var i = 0; i < arguments.length; i++) {
        args.push(arguments[i]);
      }

      return EBX_Utils.createElement.apply(null, args);
    }
  }
})();

/********* ebx_common.js *********/
function ebx_openURL(url) {
	var openWindowHasFailed = false;
	var openedWindow = null;

	var url = url.trim();

	if (url.length > 0) {
		// default old values
		var height = 400, width = 400;
		if (EBX_LayoutManager.lastWorkspaceSizeComputed !== null) {
			height = EBX_LayoutManager.lastWorkspaceSizeComputed.h;
			width = EBX_LayoutManager.lastWorkspaceSizeComputed.w;
		}
		try {
			if(ebx_openURL_inNewWindow === false) {
				openedWindow = window.open(ebx_resolvePreviewURL(url), "_blank");
			} else {
				openedWindow = window.open(ebx_resolvePreviewURL(url), null, "height=" + height + ",width=" + width
				+ ",status=yes,toolbar=no,menubar=no,resizable=yes,scrollbars=yes,location=no");
			}


			if ((EBX_LayoutManager.browser === "Chrome" || EBX_LayoutManager.browser === "Safari") && openedWindow === null) {
				// IE seems to return null to window.open, even if the page is successfully loaded
				// Chrome and Safari don't care about the try catch: the error is displayed in the console and the catch block is never executed
				openWindowHasFailed = true;
			}
		} catch (ex) {
			openWindowHasFailed = true;
		}
	} else {
		// Should we display an error in case of empty URL?
		// previous behavior is no
		//		openWindowHasFailed = true;
	}

	if (openWindowHasFailed === true) {
    var escapedUrl = url
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;");

		var errorMessage = EBX_LocalizedMessage.openURLInNewWindow_urlError;
    errorMessage = errorMessage.replace(new RegExp(ebx_openURL_error_URLPattern, 'g'), escapedUrl);

		ebx_alert(errorMessage);
	}
}

function ebx_resolvePreviewURL(url) {
	if (url.indexOf("/") == 0) {
		return url;
	}
	if (url.indexOf(".") == 0) {
		return url;
	}
	if (url.indexOf("://") > 0) {
		return url;
	}
	if (url.indexOf(":\\") > 0) {
		return url;
	}
	// allow raw data previews
	if (url.indexOf("data:") == 0) {
		return url;
	}

	return "http://" + url;
}

/**
 * ****************************************** Table sort criteria
 * *****************************************
 */
var EBX_TABLE_SORT_ALL_SORTABLE_FIELDS = new Array();
var ebx_tableSort_sortedFields = new Array();

var EBX_TABLE_SORT_ASCENDING_LABEL;
var EBX_TABLE_SORT_DESCENDING_LABEL;
var EBX_TABLE_SORT_ASCENDING_KEY;
var EBX_TABLE_SORT_DESCENDING_KEY;
var EBX_TABLE_SORT_MOVE_UP_BUTTON_ID;
var EBX_TABLE_SORT_MOVE_DOWN_BUTTON_ID;

var EBX_TABLE_SORT_PARAMETER_NAME;

function EBX_TableSortCriterion(nodePath, nodeLabel, sortOrder) {
	this.onNodePath = nodePath;
	this.onNodeLabel = nodeLabel;
	this.onSortOrder = sortOrder;

	this.isSortedAscending = function() {
		if (this.onSortOrder == EBX_TABLE_SORT_ASCENDING_KEY) {
			return true;
		}
		return false;
	};
}

function ebx_tableSort_clearSelect(selectToClear) {
	for (var i = selectToClear.length - 1; i >= 0; i--) {
		var achild = selectToClear.options[i];
		selectToClear.removeChild(achild);
	}
}

function ebx_tableSort_populateSortedList() {
	var sortedList = document.getElementById('onSortedList');
	if (!sortedList) {
		return;
	}

	var selectedIndex = sortedList.selectedIndex;
	ebx_tableSort_clearSelect(sortedList);

	for (var i = 0; i < ebx_tableSort_sortedFields.length; i++) {
		var aCriterion = ebx_tableSort_sortedFields[i];
		var newOption = document.createElement('option');
		newOption.value = aCriterion.onNodePath;
		if (aCriterion.isSortedAscending()) {
			newOption.text = aCriterion.onNodeLabel + ' ( ' + EBX_TABLE_SORT_ASCENDING_LABEL + ' )';
		} else {
			newOption.text = aCriterion.onNodeLabel + ' ( ' + EBX_TABLE_SORT_DESCENDING_LABEL + ' )';
		}
		sortedList.options.add(newOption);
	}
	sortedList.selectedIndex = selectedIndex;

	ebx_tableSort_displayMoveButtons();
}

function ebx_tableSort_isSorted(nodePath) {
	return this.ebx_tableSort_getCriterionForPath(nodePath) != null;
}

function ebx_tableSort_getCriterionForPath(aPath) {
	for (var i = 0; i < ebx_tableSort_sortedFields.length; i++) {
		var aCriterion = ebx_tableSort_sortedFields[i];
		if (aCriterion.onNodePath == aPath) {
			return aCriterion;
		}
	}
	return null;
}

function ebx_tableSort_populateSortableList() {
	var sortableList = document.getElementById('onSortableList');
	if (!sortableList) {
		return;
	}
	ebx_tableSort_clearSelect(sortableList);

	for (var i = 0; i < EBX_TABLE_SORT_ALL_SORTABLE_FIELDS.length; i++) {
		var aField = EBX_TABLE_SORT_ALL_SORTABLE_FIELDS[i];
		if (ebx_tableSort_isSorted(aField[0])) {
			continue;
		}
		var newOption = document.createElement('option');
		newOption.value = aField[0];
		newOption.text = aField[1];
		sortableList.options.add(newOption);
	}
}

function ebx_tableSort_addCriterion() {
	var sortableList = document.getElementById('onSortableList');
	if (sortableList.selectedIndex == -1) {
		return;
	}

	var nodeToAdd = sortableList.options[sortableList.selectedIndex];
	ebx_tableSort_sortedFields[ebx_tableSort_sortedFields.length] = new EBX_TableSortCriterion(nodeToAdd.value, nodeToAdd.innerHTML,
			EBX_TABLE_SORT_ASCENDING_KEY);
	ebx_tableSort_displaySorted();
	ebx_tableSort_updateResult();
}

function ebx_tableSort_removeSelectedCriterion() {
	var sortedList = document.getElementById('onSortedList');
	if (sortedList.selectedIndex == -1) {
		return;
	}

	var nodeToRemove = sortedList.options[sortedList.selectedIndex];
	ebx_tableSort_sortedFields.splice(sortedList.selectedIndex, 1);
	sortedList.removeChild(nodeToRemove);
	ebx_tableSort_displayMoveButtons();

	ebx_tableSort_updateResult();
}

function ebx_tableSort_sortAscending() {
	var sortedList = document.getElementById('onSortedList');
	if (sortedList.selectedIndex == -1) {
		return;
	}

	var optionToUpdate = sortedList.options[sortedList.selectedIndex];
	var criterion = this.ebx_tableSort_getCriterionForPath(optionToUpdate.value);
	if (!criterion) {
		return;
	}
	criterion.onSortOrder = EBX_TABLE_SORT_ASCENDING_KEY;
	this.ebx_tableSort_displaySorted();

	ebx_tableSort_updateResult();
}

function ebx_tableSort_sortDescending() {
	var sortedList = document.getElementById('onSortedList');
	if (sortedList.selectedIndex == -1) {
		return;
	}

	var optionToUpdate = sortedList.options[sortedList.selectedIndex];
	var criterion = this.ebx_tableSort_getCriterionForPath(optionToUpdate.value);
	if (!criterion) {
		return;
	}
	criterion.onSortOrder = EBX_TABLE_SORT_DESCENDING_KEY;
	this.ebx_tableSort_displaySorted();

	ebx_tableSort_updateResult();
}

function ebx_tableSort_moveSelectedUp() {
	var sortedList = document.getElementById('onSortedList');
	var currentIndex = sortedList.selectedIndex;
	if (currentIndex == -1) {
		return;
	}

	if (currentIndex == 0) {
		return;
	}

	var criterionToMoveUp = ebx_tableSort_sortedFields[currentIndex];
	var criterionToMoveDown = ebx_tableSort_sortedFields[currentIndex - 1];

	var part1 = ebx_tableSort_sortedFields.slice(0, currentIndex - 1);
	part1.push(criterionToMoveUp);
	part1.push(criterionToMoveDown);
	var part2 = ebx_tableSort_sortedFields.slice(currentIndex + 1);

	ebx_tableSort_sortedFields = part1.concat(part2);
	ebx_tableSort_displaySorted();
	sortedList.selectedIndex = currentIndex - 1;
	ebx_tableSort_displayMoveButtons();

	ebx_tableSort_updateResult();
}

function ebx_tableSort_moveSelectedDown() {
	var sortedList = document.getElementById('onSortedList');
	var currentIndex = sortedList.selectedIndex;
	if (currentIndex == -1) {
		return;
	}

	if (currentIndex == sortedList.options.length - 1) {
		return;
	}

	var criterionToMoveDown = ebx_tableSort_sortedFields[currentIndex];
	var criterionToMoveUp = ebx_tableSort_sortedFields[currentIndex + 1];

	var part1 = ebx_tableSort_sortedFields.slice(0, currentIndex);
	part1.push(criterionToMoveUp);
	part1.push(criterionToMoveDown);
	var part2 = ebx_tableSort_sortedFields.slice(currentIndex + 2);

	ebx_tableSort_sortedFields = part1.concat(part2);
	ebx_tableSort_displaySorted();
	sortedList.selectedIndex = currentIndex + 1;
	ebx_tableSort_displayMoveButtons();

	ebx_tableSort_updateResult();
}

function ebx_tableSort_displaySortable() {
	var sortable = document.getElementById('onSortable');
	var sorted = document.getElementById('onSorted');
	ebx_tableSort_populateSortableList();
	sortable.style.display = '';
	sorted.style.display = 'none';
}

function ebx_tableSort_displayMoveButtons() {
	if (ebx_tableSort_sortedFields.length <= 1) {
		EBX_ButtonUtils.setButtonDisabled(document.getElementById(EBX_TABLE_SORT_MOVE_UP_BUTTON_ID), true);
		EBX_ButtonUtils.setButtonDisabled(document.getElementById(EBX_TABLE_SORT_MOVE_DOWN_BUTTON_ID), true);
		return;
	}

	var sortedList = document.getElementById('onSortedList');

	if (sortedList.selectedIndex == -1) {
		EBX_ButtonUtils.setButtonDisabled(document.getElementById(EBX_TABLE_SORT_MOVE_UP_BUTTON_ID), true);
		EBX_ButtonUtils.setButtonDisabled(document.getElementById(EBX_TABLE_SORT_MOVE_DOWN_BUTTON_ID), true);
		return;
	}

	if (sortedList.selectedIndex == 0) {
		EBX_ButtonUtils.setButtonDisabled(document.getElementById(EBX_TABLE_SORT_MOVE_UP_BUTTON_ID), true);
		EBX_ButtonUtils.setButtonDisabled(document.getElementById(EBX_TABLE_SORT_MOVE_DOWN_BUTTON_ID), false);
		return;
	}

	if (sortedList.selectedIndex == sortedList.options.length - 1) {
		EBX_ButtonUtils.setButtonDisabled(document.getElementById(EBX_TABLE_SORT_MOVE_UP_BUTTON_ID), false);
		EBX_ButtonUtils.setButtonDisabled(document.getElementById(EBX_TABLE_SORT_MOVE_DOWN_BUTTON_ID), true);
		return;
	}

	EBX_ButtonUtils.setButtonDisabled(document.getElementById(EBX_TABLE_SORT_MOVE_UP_BUTTON_ID), false);
	EBX_ButtonUtils.setButtonDisabled(document.getElementById(EBX_TABLE_SORT_MOVE_DOWN_BUTTON_ID), false);
}

function ebx_tableSort_updateResult() {
	var resultInputField = document.getElementById(EBX_TABLE_SORT_PARAMETER_NAME);
	var newResult = "";
	for (var i = 0; i < ebx_tableSort_sortedFields.length; i++) {
		newResult += ebx_tableSort_sortedFields[i].onNodePath + ":" + ebx_tableSort_sortedFields[i].onSortOrder;
		if (i != ebx_tableSort_sortedFields.length - 1) {
			newResult += ";";
		}
	}
	resultInputField.value = newResult;
	return newResult;
}

function ebx_tableSort_displaySorted() {
	var sortable = document.getElementById('onSortable');
	var sorted = document.getElementById('onSorted');
	ebx_tableSort_populateSortedList();
	sortable.style.display = 'none';
	sorted.style.display = '';
}

/**
 * ****************************************** Table sort criteria
 * *****************************************
 */

//START *************************** Button and menu actions ********************************/
function ebx_actionMenuExecute(actionURL, tableName, activationConstraintsArray, aConfirmationMessage, isJSAction, actionLabel) {
	if (!ebx_actionCheckConstraints(tableName, activationConstraintsArray, actionLabel))
		return;

	var jsCmd = actionURL;
	if (!isJSAction) {
		jsCmd = "window.location = \"" + actionURL + "\";";
	}

	if (aConfirmationMessage != null) {
		ebx_confirm({
			question: aConfirmationMessage,
			jsCommandYes: jsCmd
		});
		return;
	}

	window.setTimeout(jsCmd, 0);
}

//TODO ycl/cch : dirty fix for 5.7.1 GP
var isHierarchyApplied = false;
function ebx_actionCheckConstraints(tableName, activationConstraintsArray, actionLabel) {
	var nbSelectedRecord;
	//TODO ycl refactor this since a data set or data space service should not look for a table.
    if (EBX_AjaxTable.isTableExists(tableName)) {
        nbSelectedRecord = EBX_AjaxTable.getSelectedRecordsNumber(tableName);
    } else if (isHierarchyApplied) {
        nbSelectedRecord = onNbSelectedRecord;
    } else {
        nbSelectedRecord = 0;
    }

    var isAny = false;
	var isTable = false;
	var Xs = [];
	for (var i = 0, len = activationConstraintsArray.length; i < len; i++) {
		if (activationConstraintsArray[i] === -1) {
			isAny = true;
		}
		if (activationConstraintsArray[i] === 0) {
			isTable = true;
		}
		if (activationConstraintsArray[i] > 0) {
			Xs.push(activationConstraintsArray[i]);
		}
	}

	//If at least one record must be selected
	if (isAny) {
		//No selected records means an error must be raised
		if (nbSelectedRecord == 0) {
			//Except if the service is also activated on table
			if (isTable)
				return true;

			//Display error message
			ebx_alert(actionLabel, "<p>" + ebx_table_action_error_qty_oneOrMore + "</p>");
			return false;
		}

		//At least a record is selected then everything is OK.
		return true;
	}

	//If there is an activation constraints with a fixed number of selected record
	if (Xs.length > 0) {
		//No error must be raised if no record is selected and the service is activated on table
		if (nbSelectedRecord === 0 && isTable) {
			return true;
		}

		//If one of the activation constraint is the same than the number of selected records => No error must be raised
		if (EBX_Utils.arrayContains(Xs, nbSelectedRecord)) {
			return true;
		}

		//Adapt error message to the number of required records.
		if (Xs.length === 1) {
			if (Xs[0] === 1) {
				ebx_alert(actionLabel, "<p>" + ebx_table_action_error_qty_onlyOne + "</p>");
			} else {
				ebx_alert(actionLabel, "<p>" + Xs[0] + " " + ebx_table_action_error_qty_number + "</p>");
			}
		} else {
			var alertBody = [];
			alertBody.push("<p>");
			alertBody.push(ebx_table_action_error_qty_numberList);
			alertBody.push("</p>");
			alertBody.push("<ul>");
			for (i = 0, len = Xs.length; i < len; i++) {
				alertBody.push("<li>");
				alertBody.push(Xs[i]);
				alertBody.push("</li>");
			}
			alertBody.push("</ul>");
			ebx_alert(actionLabel, alertBody.join(""));
		}
		return false;
	}

	return true;
}
//END *************************** Table Actions ********************************/

/********* ebx_event.js *********/
var EBX_Events = (function() {
	"use strict";
	
	return {
		on: addEventListener,
		off: removeEventListener,
		trigger: dispatchEvent
	};
	
	function addEventListener(target, event, callback) {
		if (!target) {
			target = this;
		}
		
		var allListeners = target.EBX_Listeners;
		if (allListeners === undefined) {
			allListeners = {};
			target.EBX_Listeners = allListeners;
		}
		
		var eventListeners = allListeners[event];
		if (eventListeners === undefined) {
			eventListeners = [];
			allListeners[event] = eventListeners;
		}
		
		if (!EBX_Utils.arrayContains(eventListeners, callback)) {
			eventListeners.push(callback);
		}
	}
	
	function removeEventListener(target, event, callback) {
		if (!target) {
			target = this;
		}
		
		var allListeners = target.EBX_Listeners;
		if (allListeners === undefined) {
			return;
		}
		
		var eventListeners = allListeners[event];
		if (eventListeners === undefined) {
			return;
		}
		
		allListeners[event] = EBX_Utils.filter(eventListeners, function(element) {
			return element !== callback;
		});
	}
	
	function dispatchEvent(target, event, data) {
		dispatchEventOnTarget(target, target, event, data);
		dispatchEventOnTarget(this, target, event, data);
	}
	
	function dispatchEventOnTarget(listenerHolder, target, event, data) {
		if (!listenerHolder) {
			return;
		}
		
		var allListeners = listenerHolder.EBX_Listeners;
		if (allListeners === undefined) {
			return;
		}
		
		var eventListeners = allListeners[event];
		if (eventListeners === undefined) {
			return;
		}
		
		EBX_Utils.forEach(eventListeners, function(callback) {
			callback({
				target: target,
				event: event,
				data: data
			});
		});
	}
	
})();

/********* ebx_ajax_read.js *********/
/**
 * Add default XHR header to avoid caching AJAX Request on IE
 */
YAHOO.util.Connect._default_headers["If-Modified-Since"] = "Tue, 29 Nov 1966 20:50:00 GMT";

// EBX_Ajax function (limited to read only and display html)
function EBX_Ajax() {
	var onXMLHttpRequest = false;

	var finished = true;
	var onTargetObject = null;

	this.setFinished = function(hasFinished) {
		finished = hasFinished;
	};

	this.hasFinished = function() {
		return finished;
	};

	this.setReadyStateChangeObject = function(anObject) {
		if (!anObject instanceof EBX_AbstractAjaxResponseManager) {
			EBX_Logger.log("EBX_Ajax.setReadyStateChangeObject: Given object must implement Javascript prototype [EBX_AbstractAjaxResponseManager]",
					EBX_Logger.error);
			return;
		}
		onTargetObject = anObject;
	};

	this.execute = function(anUrl) {
		this.setFinished(false);
		if (onTargetObject === null) {
			return;
		}

		if (window.XMLHttpRequest) {
			try {
				onXMLHttpRequest = new XMLHttpRequest();
			} catch (e) {}
		} else if (window.ActiveXObject) {
			try {
				onXMLHttpRequest = new ActiveXObject("Msxml2.XMLHTTP");
			} catch (e) {
				try {
					onXMLHttpRequest = new ActiveXObject("Microsoft.XMLHTTP");
				} catch (e) {}
			}
		}

		if (!onXMLHttpRequest) {
			return false;
		}

		onXMLHttpRequest.abort();

		onXMLHttpRequest.onreadystatechange = function() {
			if (onXMLHttpRequest.readyState == 4) {
				var status = 400;
				try {
					status = onXMLHttpRequest.status;
				} catch (e) {}
				switch (status) {
					case 200:
						if (onTargetObject) {
							onTargetObject.onReadyStateChangeFunction();
						}
						break;
					// The real timeout code is 408 but Mozilla don't manage it correctly (do retry...).
					// The "Unauthorized" response code is not so far from a Timeout in this context.
					// (ex: "Request unauthorized because of session timeout")
					case 401:
						if (onTargetObject) {
							onTargetObject.onManageTimeoutResponse();
						}
						break;
					//Case of obsolete AJAX request. => do nothing
					case 204:
						break;

					default:
						if (onTargetObject) {
							onTargetObject.onManageErrorResponse();
						}
						break;
				}
			}
		};

		// Mantis #6349: POST method in ajax requests.
		// GET
		/*
		onXMLHttpRequest.open("GET", anUrl, true);
		//Prevent IE from getting back request response from cache...Force request revalidation.
		onXMLHttpRequest.setRequestHeader("If-Modified-Since", "Tue, 29 Nov 1966 20:50:00 GMT");
		onXMLHttpRequest.send("");
		EBX_Logger.log("EBX_Ajax.execute: Request send at url [" + anUrl + "]", EBX_Logger.info);
		*/

		// POST
		var questionMarkPos = anUrl.indexOf("?");
		var url = anUrl.substring(0, questionMarkPos);
		var params = anUrl.substring(questionMarkPos + 1, anUrl.length);
		onXMLHttpRequest.open("POST", url, true);

		//Send the proper header information along with the request
		onXMLHttpRequest.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

		//Prevent IE from getting back request response from cache...Force request revalidation.
		onXMLHttpRequest.setRequestHeader("If-Modified-Since", "Tue, 29 Nov 1966 20:50:00 GMT");
		onXMLHttpRequest.send(params);
		EBX_Logger.log("EBX_Ajax.execute: Request send at url [" + url + "] with params [" + params + "]", EBX_Logger.info);
	};

	this.getReadyState = function() {
		return onXMLHttpRequest.readyState;
	};
	this.getResponseXML = function() {
		return onXMLHttpRequest.responseXML;
	};
	this.getResponseText = function() {
		return onXMLHttpRequest.responseText;
	};
}

//Prototype definition to get back ajax response and call the good object which will
//properly manage the response. This prototype defines abstract methods which must be implemented.
//All Ajax functionnalities in EBX® must implement this prototype !!
//@see com.onwbp.orchestra.manager.ui.subcomponent.ajax.AjaxResponseDocumentBuilder
function EBX_AbstractAjaxResponseManager() {
	//this.ajaxObject;
	this.successfullyComplete = true;

	//Available response codes.
	this.responseCodeOK_RequestResponse = 1;
	this.responseCodeOK_OptionsList = 2;
	this.responseCodeOK_JSONDoc = 3;

	this.responseCodeKO_Other = 10;
	this.responseCodeKO_Timeout = 11;

	//Abstract method which manage response document if the response code is the one expected.
	//Must return true if all happens as expected, false otherwise.
	this.onExecuteIfOK = function(responseXML, root) {
		EBX_Logger.log("EBX_AbstractAjaxResponseManager.onExecuteIfOK: Ajax object must implement method [ onExecuteIfOK(responseXML, root) ]",
				EBX_Logger.error);
		return false;
	};

	//Abstract method which manage response document if the response code is not the one expected.
	this.onExecuteIfKO = function(responseXML) {
		EBX_Logger.log("EBX_AbstractAjaxResponseManager.onExecuteIfKO: Ajax object must implement method [ onExecuteIfKO(responseXML, root) ]",
				EBX_Logger.error);
	};

	//Return the expected OK response code.
	//Must be overwritten by all sub-Classes.
	this.onGetExceptedResponseCode = function(callerId) {
		return this.responseCodeOK_RequestResponse;
	};

	//Standard method which launch the ajax request. Should not be overwritten.
	this.onExecute = function(url) {
		this.successfullyComplete = false;
		this.ajaxObject = new EBX_Ajax();
		this.ajaxObject.setReadyStateChangeObject(this);
		this.ajaxObject.execute(url.replace(/&amp;/g, "&"));
	};

	//Standard method which get back XML response and execute the proper function.
	//Should not be overwritten. See "onExecuteIfOK(responseXML, root)" and "onExecuteIfKO(responseXML)".
	this.onReadyStateChangeFunction = function() {
		if (this.ajaxObject.getReadyState() != 4) {
			return;
		}
		var responseXML = this.ajaxObject.getResponseXML();
		if (responseXML) {
			var root = responseXML.getElementsByTagName('ebxAjaxResponse')[0];
			if (root) {
				var responseStatus = root.attributes.getNamedItem('status').nodeValue;
				var callerEl = root.attributes.getNamedItem('callerId');
				var callerID = null;
				if (callerEl) {
					callerID = callerEl.nodeValue;
				}

				var expectedResponseCode = this.onGetExceptedResponseCode(callerID);
				if (this.onCheckExpectedResponseCode(expectedResponseCode)) {
					if (responseStatus == this.responseCodeKO_Timeout) {
						this.onManageTimeoutResponse();
						return;
					}
					if (responseStatus == expectedResponseCode) {
						this.successfullyComplete = this.onExecuteIfOK(responseXML, root);
						var responseJSArray = root.getElementsByTagName('responseJS');
						if (responseJSArray.length !== 0) {
							window.setTimeout(responseJSArray[0].firstChild.nodeValue, 0);
						}
					} else {
						if (responseStatus == this.responseCodeKO_Other) {
							this.onDisplayMessages(responseXML);
							this.onExecuteIfKO(responseXML);
							return;
						}
					}
				}
				this.onDisplayMessages(responseXML);
			}
		}
		if (!this.successfullyComplete) {
			this.onExecuteIfKO(responseXML);
		}
	};

	this.onIsSuccessfullyComplete = function() {
		return this.successfullyComplete;
	};

	//Check if given expected response code is valid according to this object constants.
	//TODO Find a way to synchronize these constants with those in Java class "AjaxResponseDocumentBuilder"
	this.onCheckExpectedResponseCode = function(aResponseCode) {
		switch (aResponseCode) {
			case this.responseCodeOK_JSONDoc:
				return true;

			case this.responseCodeOK_RequestResponse:
				return true;

			case this.responseCodeOK_OptionsList:
				return true;

			case this.responseCodeKO_Other:
				return true;

			case this.responseCodeKO_Timeout:
				return true;

			default:
				EBX_Logger.log("EBX_AbstractAjaxResponseManager.onCheckExpectedResponseCode: Unknown response code [" + aResponseCode
						+ "]. Response text: [ " + this.getResponseText() + " ]", EBX_Logger.error);
				return false;
		}
	};

	//An Ajax response document can contain "messages" element which contain one or more message.
	//This function add all messages in the onMessagesManager according to their severity and if they
	// must be displayed (hidden message attribute). Once added, the message manager will display new messages
	// starting by the higher severity (ERROR then WARNING then INFO).
	this.onDisplayMessages = function(responseXML) {
		if (!responseXML) {
			return;
		}

		var root = responseXML.getElementsByTagName('ebxAjaxResponse')[0];
		if (!root) {
			return;
		}

		var messages = root.getElementsByTagName('messages')[0];
		if (!messages) {
			return;
		}

		var messagesList = messages.getElementsByTagName('message');
		for ( var i = 0; i < messagesList.length; i++) {
			this.onDisplayMessage(messagesList[i]);
		}
	};

	//This function add given message to the message manager for the proper severity (message's attribute).
	// @see onDisplayMessages(responseXML)
	this.onDisplayMessage = function(message) {
		if (!message) {
			return;
		}

		var severity = message.attributes.getNamedItem('severity').nodeValue;
		var isHidden = eval(message.attributes.getNamedItem('hidden').nodeValue);
		if (isHidden) {
			// already managed and logged by the server in AjaxResponseDocumentBuilder.setErrorDocument
			/*
			 if (EBX_UserMessageManager.INFO === severity)
			 EBX_Logger.log(message.firstChild.data, EBX_Logger.info);
			 if (EBX_UserMessageManager.WARNING === severity)
			 EBX_Logger.log(message.firstChild.data, EBX_Logger.warn);
			 if (EBX_UserMessageManager.ERROR === severity)
			 EBX_Logger.log(message.firstChild.data, EBX_Logger.error);
			 return;
			 */
		}

		EBX_UserMessageManager.addMessage(message.firstChild.data, severity);
	};

	//Manage an HTTP error response (not an EBX_Ajax error response document, see "onExecuteIfKO(...)" for that)
	this.onManageErrorResponse = function() {};

	this.onManageTimeoutResponse = function() {
		EBX_Logger.log("EBX_AbstractAjaxResponseManager.onManageTimeoutResponse: Time out", EBX_Logger.warn);
		EBX_Loader.gotoTimeoutPage();
	};

	this.getResponseText = function() {
		return this.ajaxObject.getResponseText();
	};

}

/********* ebx_bundle.js *********/
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var i=t();for(var n in i)("object"==typeof exports?exports:e)[n]=i[n]}}(window,(function(){return function(e){var t={};function i(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}return i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)i.d(n,s,function(t){return e[t]}.bind(null,s));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=20)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(2),s=i(3),r=i(4),o=i(23),l=i(25),a=i(26),d=i(30),u=i(7),c=i(31),h=i(32),p=i(33),m=i(10),g=i(34),f=i(35),b=i(13),E=function(){};t.EBX_Table_Config=E;var C=function(){this.buttonOpenRegister=[],this.buttonFirstRegister=[],this.buttonPreviousRegister=[],this.buttonNextRegister=[],this.buttonLastRegister=[],this.tableByToolbar={},this.toolbarsByTable={},this.pageReportRegister=[],this.selectReportRegister=[]},_=function(){function e(){this.external=new S,this.update=new b.Table_PartsContainer}return e.prototype.isEmpty=function(){return!this.hasUpdatePart()&&!this.hasCreatePart()},e.prototype.hasUpdatePart=function(){return 0!==this.update.getNumberOfRowsDisplayed()},e.prototype.hasCreatePart=function(){return void 0!==this.create},e}(),S=function(){},v=function(){},y=function(){function e(e){this.tdElement=e,this.tableLZ=null,this.isPlacedInFixedContainerLZ=null,this.isPlacedInTheCreatePartLZ=null}return e.prototype.getTable=function(){return null===this.tableLZ&&(this.tableLZ=this.tdElement.parentElement.parentElement.parentElement),this.tableLZ},e.prototype.isPlacedInFixedContainer=function(){return null===this.isPlacedInFixedContainerLZ&&(this.isPlacedInFixedContainerLZ=EBX_Utils.matchCSSClass(this.getTable(),b.Table_PartsContainer.FIXED_TABLE_CSS_CLASS)),this.isPlacedInFixedContainerLZ},e.prototype.isPlacedInTheCreatePart=function(){return null===this.isPlacedInTheCreatePartLZ&&(this.isPlacedInTheCreatePartLZ=EBX_Utils.matchCSSClass(this.getTable().parentElement.parentElement.parentElement,b.Table_Element_Create.WRAPPER_CSS_CLASS)),this.isPlacedInTheCreatePartLZ},e}();t.Cell=y;var B=function(){function e(e){this.className=e}return e.NORMAL=new e("ebx_tvStateNormal"),e.DRAWING=new e("ebx_tvAlmostReady"),e.EMPTY=new e("ebx_tvStateEmpty"),e.CANCELLED=new e("ebx_tvStateCancelled"),e.ERROR=new e("ebx_tvStateError"),e.LOADING=new e("ebx_tvStateLoading"),e.LOADING_LONG=new e("ebx_tvStateLoadingLong"),e.LOGOUT=new e("ebx_tvStateLogout"),e.FORBIDDEN=new e("ebx_tvStateForbidden"),e}();t.EBX_Table_State=B;var x=function(){function e(e,t,i,n){var s=this;this.element=new _,this.tooltipHolder=new EBX_Utils.TooltipHolder,this.scroll=new g.Scroll(this),this.isTableReady=!1,this.dataSource=new v,this.currentTdMouseOver=null,this.showCancelHintTooltips=function(){s.tooltipHolder.showAll(EBX_Utils.cancel_delayBeforeTooltipsDisappear)},this.hideCancelHintTooltips=function(){s.tooltipHolder.hideAll()},this.tableName=e,this.sncParameter=t,this.containerId=e+"_container",this.fixedScrollerWrapperId=e+"_fixedScrollerWrapper",this.fixedScrollerId=e+"_fixedScroller",this.mainScrollerId=e+"_mainScroller",this.selectAndSortMenuButtonId=e+"_selectAndSortMenuButton",this.isRecordSelectionEnabled=n.isRecordSelectionEnabled,this.isOpenRecordEnabled=n.isOpenRecordEnabled,this.isOpenRecordSimpleClick=n.isOpenRecordSimpleClick,this.isWorkspaceTable=n.isWorkspaceTable,this.isDisplayingAdvancedSort=n.isDisplayingAdvancedSort,this.containerCSSClasses=n.containerCSSClasses,this.isOpenInPopup=n.isOpenInPopup,this.openInPopupURL=n.openInPopupURL,this.isEditionMode=n.isEditionMode,this.isInitialQueryEnabled=n.isInitialQueryEnabled,this.state=B.LOADING,this.element.update.clearRowsProperties(),this.isTableInit=!1,this.functionsToCallWhenTableIsInit=[],this.isTableReady=!1,this.functionsToCallWhenTableIsReady=[],this.copyModule=new l.GridEdit_CopyModule(this),this.pagination=new p.Pagination(this),this.resizeModule=new m.Resize(this),this.header=new c.Header(this,i,e,n.isSelectColumnEnabled),this.content=new o.Content(this),this.selection=new f.Table_Selection(this),this.grid_selection=new d.GridEdit_Selection(this),this.navigation=new h.NavigationRouter(this,this.selection,this.grid_selection),this.gridEditModule=new a.GridEdit(this)}return e.prototype.init=function(){e.initBrowsersGaps(),this.content.init(),this.isWorkspaceTable?YAHOO.util.Event.onContentReady(this.containerId,this.initDisplay,this,!0):EBX_Form.launchCmdWhenAllParentHidingContainersAreVisible(document.getElementById(this.containerId),'EBX_AjaxTable.initDisplay("'+this.tableName+'")'),this.selection.init(),this.dataSource.setColumnWidth=new YAHOO.util.XHRDataSource(e.constants.setColumnWidthRequest),this.dataSource.initAllColumnWidths=new YAHOO.util.XHRDataSource(e.constants.initAllColumnWidthsRequest),this.isEditionMode&&this.gridEditModule.init(),this.pagination.init(),this.grid_selection.init(),this.copyModule.init()},e.prototype.initDisplay=function(){this.isInitialQueryEnabled?(this.isTableReady=!1,this.setState(B.LOADING)):this.setState(B.CANCELLED),this.isInitialQueryEnabled&&this.content.refreshCurrentPage(),this.scroll.init(),this.initContainer(),this.initInternalElements(),this.initPluggedComponents(),this.initColumns(),this.initTablesStructures(),this.resizeModule.resizeContainers(),this.addListeners(),this.endTableInit(),this.isInitialQueryEnabled||(this.isTableReady=!0,this.onTableIsReady(),this.showCancelHintTooltips())},e.prototype.initContainer=function(){this.element.container=document.getElementById(this.containerId),this.resizeModule.initContainer()},e.prototype.initInternalElements=function(){this.header.initInternalElements(),this.element.update.fixed.scrollWrapper=document.getElementById(this.fixedScrollerWrapperId),this.element.update.fixed.scroll=document.getElementById(this.fixedScrollerId),this.element.update.main.scroll=document.getElementById(this.mainScrollerId);var t=document.getElementById("ebx_WorkspaceAdvancedSearch");this.element.selectAndSortMenuButton=document.getElementById(this.selectAndSortMenuButtonId),this.isDisplayingAdvancedSort&&this.tooltipHolder.addTooltip(this.element.selectAndSortMenuButton,{text:e.messages.table_sort_cancelTooltip,position:"top"},(function(e){return EBX_Utils.addCSSClass(e,"ebx_tvSelectAndSortMenuButton_highlightable"),EBX_Utils.addCSSClass(e,"ebx_tvSelectAndSortMenuButton_highlighted"),!0}),(function(e){return EBX_Utils.removeCSSClass(e,"ebx_tvSelectAndSortMenuButton_highlighted"),setTimeout((function(){EBX_Utils.removeCSSClass(e,"ebx_tvSelectAndSortMenuButton_highlightable")}),200),!0})),this.tooltipHolder.addTooltip(document.getElementById("ebx_AdvancedSearchQuickSearch"),{text:e.messages.table_quickSearch_cancelTooltip,position:"bottom"},(function(e){return(null==t||!EBX_Utils.matchCSSClass(t,"ebx_AdvancedSearchPaneOpened"))&&(e.focus(),!0)}));var i=document.getElementById("ebx_AdvancedSearchExpandCollapse");null!=i&&(this.tooltipHolder.addTooltip(i,{text:e.messages.table_advancedSearch_cancelTooltip,position:"bottom"},(function(){return null!=t&&!EBX_Utils.matchCSSClass(t,"ebx_AdvancedSearchPaneOpened")})),i.addEventListener("click",this.hideCancelHintTooltips)),this.element.messageContainer=EBX_Utils.getFirstDirectChildMatchingCSSClass(this.element.container,"ebx_tvMessageContainer"),this.element.messageEmpty=EBX_Utils.getFirstDirectChildMatchingCSSClass(this.element.container,"ebx_tvMessageEmpty"),this.isEditionMode&&this.gridEditModule.initInternalElements()},e.prototype.initPluggedComponents=function(){this.selection.registerPluggedComponents(),this.pagination.registerPluggedComponents()},e.prototype.initColumns=function(){this.header.initColumns(),-1===this.resizeModule.size.fixedColumnsWidth?this.element.update.fixed.scrollWrapper.style.width="0":this.element.update.fixed.scrollWrapper.style.width=this.resizeModule.size.fixedColumnsWidth+"px",this.element.update.fixed.scroll.style.width=this.resizeModule.size.fixedColumnsWidth+50+"px",this.element.update.main.scroll.style.width=this.resizeModule.size.containerWidth-this.resizeModule.size.fixedColumnsWidth+"px",this.scroll.refreshScrollUpdateHeight(this.resizeModule.size)},e.prototype.initTablesStructures=function(){this.element.update.fixed.table=document.createElement("table"),this.element.update.fixed.table.className=b.Table_PartsContainer.FIXED_TABLE_CSS_CLASS,this.element.update.fixed.table.appendChild(document.createElement("tbody")),this.element.update.fixed.scroll.appendChild(this.element.update.fixed.table),this.element.update.fixed.scrollMaker=document.createElement("div"),this.element.update.fixed.scrollMaker.className="ebx_tvScrollMaker",this.element.update.fixed.scroll.appendChild(this.element.update.fixed.scrollMaker),this.element.update.main.table=document.createElement("table"),this.element.update.main.table.className=b.Table_PartsContainer.MAIN_TABLE_CSS_CLASS,this.element.update.main.table.appendChild(document.createElement("tbody")),this.element.update.main.scroll.appendChild(this.element.update.main.table),this.element.update.main.scrollMaker=document.createElement("div"),this.element.update.main.scrollMaker.className="ebx_tvScrollMaker",this.element.update.main.scroll.appendChild(this.element.update.main.scrollMaker)},e.prototype.addListeners=function(){this.resizeModule.addListeners(),this.header.addListeners(),this.content.addListeners(this.element.container),this.scroll.addListenerTo(this.element.update),this.navigation.addListeners(this.element.update),this.isEditionMode&&this.gridEditModule.addListeners(),this.isDisplayingAdvancedSort&&this.element.selectAndSortMenuButton.addEventListener("click",this.hideCancelHintTooltips)},e.prototype.endTableInit=function(){for(var e;this.functionsToCallWhenTableIsInit.length>0;)(e=this.functionsToCallWhenTableIsInit.shift()).fn.call(e.scope,e.arg);this.isTableInit=!0},e.prototype.callFunctionWhenTableIsInit=function(e,t,i){void 0===i&&(i=this),this.isTableInit?e.call(i,t):this.functionsToCallWhenTableIsInit.push({fn:e,arg:t,scope:i})},e.prototype.callFunctionWhenTableIsReady=function(e,t,i){void 0===i&&(i=this),this.isTableReady?e.call(i,t):this.functionsToCallWhenTableIsReady.push({fn:e,arg:t,scope:i})},e.prototype.setState=function(e){this.state=e,this.refreshContainerCSSClasses()},e.prototype.getState=function(){return this.state},e.prototype.refreshContainerCSSClasses=function(){if(void 0!==this.element.container){var e=[];this.element.hasUpdatePart()||e.push("ebx_tvEmptyUpdatePart"),this.scroll.refreshContainerCSSClasses(e),0!==this.resizeModule.size.fixedColumnsWidth&&-1!==this.resizeModule.size.fixedColumnsWidth||e.push("ebx_tvContainerNoFixedColumn"),this.resizeModule.refreshContainerCSSClasses(e),e.push(this.state.className),this.state!==B.NORMAL||this.isTableReady||e.push(B.DRAWING.className),this.element.container.className=this.containerCSSClasses+" "+e.join(" ")}},e.prototype.dblclickOnTableListener=function(e,t){this.isEditionMode&&this.gridEditModule.editCellFromEvent(e,t)},e.prototype.mouseoverTableListener=function(e,t){!this.isEditionMode||EBX_Utils.matchCSSClass(EBX_Utils.getTargetElement(e),u.SelectionRangeMask.CSS_MASK)||this.gridEditModule.displaySeverityMessagePanel(EBX_Utils.getTargetElement(e),t)},e.prototype.mouseoutTableListener=function(e,t){if(this.isEditionMode){var i=this,n=EBX_Utils.getTargetElement(e);this.currentTdMouseOver_HideTimeout=window.setTimeout((function(){i.gridEditModule.hideSeverityMessagePanel(n,t)}),50)}else;},e.prototype.focusCellFromEvent=function(t,i,n){var s=2===n.detail;if(YAHOO.util.Event.stopEvent(n),"tbody"!==t.tagName.toLowerCase()&&"tr"!==t.tagName.toLowerCase()){var r=e.getParentTdElement(t,i);this.grid_selection.focusCell(new y(r))}else s&&null!==this.grid_selection.currentTdFocused&&this.gridEditModule.editCurrentCellFocus()},e.prototype.getTdElFromPath=function(e){var t=this.gridEditModule.widgetsByPath[e];if(void 0===t)return null;var i=t.gridCoords.colIndex;i++;var n=0;this.header.isSeverityColumnDisplayed&&(n=1);var s,r=n+this.gridEditModule.fixedColumnsWidgetIndexOffset+i;return r-n<this.gridEditModule.mainColumnsWidgetIndexOffset?(s=t.isForCreate?this.element.create.fixed.table:this.element.update.fixed.table,r++):(s=t.isForCreate?this.element.create.main.table:this.element.update.main.table,r-=this.gridEditModule.mainColumnsWidgetIndexOffset+n),s.rows[t.gridCoords.lineIndex].cells[r]},e.prototype.notifyWidgetIsLoaded=function(){null!==this.gridEditModule.onWidgetLoadedHandler&&this.gridEditModule.onWidgetLoadedHandler()},e.prototype.findFirstElementFocusableIn=function(e){if(null===e)return null;var t=!0;if("INPUT"!==e.tagName&&"BUTTON"!==e.tagName&&(t=!1),t&&EBX_Utils.matchCSSClass(e,"ebx_focusCatcher")&&(t=!1),t&&e.offsetWidth<=0&&(t=!1),t&&e.disabled&&(t=!1),t&&-1===e.tabIndex&&(t=!1),t)return e;for(var i=e.childNodes,n=i.length,s=0;!t&&s<n;)t=this.findFirstElementFocusableIn(i[s]),s++;return t},e.prototype.getCurrentCellFocused=function(){return null===this.grid_selection.currentTdFocused?null:new y(this.grid_selection.currentTdFocused)},e.prototype.notifyCreatedRecordIsFullyLoaded=function(e,t,i){EBX_FormPresenter.receive(t),this.gridEditModule.receiveAPVResponse("create",null,t),null===i||this.gridEditModule.currentWidgetEdited||this.gridEditModule.requestEditCell(new y(this.getTdElFromPath(i)))},e.prototype.triggerRefresh=function(){EBX_Events.trigger(this,e.events.refresh)},e.prototype.triggerSelectionChange=function(){EBX_Events.trigger(this,e.events.selectionChange)},e.prototype.isForCreate=function(e){return void 0!==this.element.create&&(e===this.element.create.fixed.table||e===this.element.create.main.table)},e.prototype.isInAFixedContainer=function(e){return e===this.element.update.fixed.table||this.element.hasCreatePart()&&e===this.element.create.fixed.table},e.prototype.getCellAt=function(e,t){var i,n=t<this.gridEditModule.mainColumnsWidgetIndexOffset,s=this.element.hasCreatePart()&&e<this.element.create.getNumberOfRowsDisplayed(),r=0;if(this.header.isSeverityColumnDisplayed&&r--,s)i=n?this.element.create.fixed.table.rows[e].cells[t-this.gridEditModule.fixedColumnsWidgetIndexOffset-r]:this.element.create.main.table.rows[e].cells[t-this.gridEditModule.mainColumnsWidgetIndexOffset];else{var o=0;this.element.hasCreatePart()&&(o=this.element.create.getNumberOfRowsDisplayed()),i=n?this.element.update.fixed.table.rows[e-o].cells[t-this.gridEditModule.fixedColumnsWidgetIndexOffset-r]:this.element.update.main.table.rows[e-o].cells[t-this.gridEditModule.mainColumnsWidgetIndexOffset]}return new y(i)},e.prototype.resetContent=function(){this.selection.reset(),this.element.update.clearRowsProperties(),this.pagination.updatePageReport(),this.pagination.updateButtonsState(),this.header.updateSortFlags(),this.header.updateSeverityColumn(),this.element.isEmpty()&&(this.isTableReady=!0,this.setState(B.EMPTY)),this.triggerRefresh()},e.prototype.refreshCellIndexes=function(){this.element.hasCreatePart()?(this.lastFixedCellIndex=this.element.create.fixed.table.rows.item(0).cells.length-1,this.lastMainCellIndex=this.element.create.main.table.rows.item(0).cells.length-1):this.element.hasUpdatePart()?(this.lastFixedCellIndex=this.element.update.fixed.table.rows.item(0).cells.length-1,this.lastMainCellIndex=this.element.update.main.table.rows.item(0).cells.length-1):(this.lastFixedCellIndex=-1,this.lastMainCellIndex=-1)},e.prototype.onTableIsReady=function(){for(var e;this.functionsToCallWhenTableIsReady.length>0;)(e=this.functionsToCallWhenTableIsReady.shift()).fn.call(e.scope,e.arg);this.isTableReady=!0},e.getParentTdElement=function(e,t){var i=e;for("td"!==i.tagName.toLowerCase()&&(i=EBX_Utils.getFirstParentMatchingTagName(i,"TD"));null!==i&&i.parentNode.parentNode.parentNode!==t;)i=EBX_Utils.getFirstParentMatchingTagName(i,"TD");return i},e.getCellFromEventTargetElement=function(e,t){var i;if("TBODY"===e.tagName||"TR"===e.tagName||EBX_Utils.matchCSSClass(e,u.SelectionRangeMask.CSS_MASK))return null;for(i="TD"===e.tagName?e:EBX_Utils.getFirstParentMatchingTagName(e,"TD");i.parentNode.parentNode.parentNode!==t;)i=EBX_Utils.getFirstParentMatchingTagName(i,"TD");return i},e.initAPVListeners=function(e){for(var t=0,i=EBX_Utils.getRecursiveChildrenMatchingCSSClass(e,EBX_Form.APVElementCSSClass);t<i.length;t++){var n=i[t];EBX_FormPresenter.addAPVElementListener(n)}},e.initBrowsersGaps=function(){null===r.EBX_AjaxTable_UIConstants.minWidthIssueGap&&("firefox"===EBX_LayoutManager.browser.toLowerCase()&&EBX_LayoutManager.browserMajorVersion<17?r.EBX_AjaxTable_UIConstants.minWidthIssueGap=-r.EBX_AjaxTable_UIConstants.minWidthColumn:r.EBX_AjaxTable_UIConstants.minWidthIssueGap=0)},e.createAndRegisterTable=function(t,i,n,s){if(void 0===e.AjaxTableRegister[t]){var r=new e(t,i,n,s);r.init(),e.AjaxTableRegister[t]=r}},e.initDisplay=function(t){e.AjaxTableRegister[t].initDisplay()},e.registerOpenButton=function(t,i){void 0===e.pluggedComponentRegister.buttonOpenRegister[t]&&(e.pluggedComponentRegister.buttonOpenRegister[t]=[]),e.pluggedComponentRegister.buttonOpenRegister[t].push(i)},e.registerFirstButton=function(t,i){void 0===e.pluggedComponentRegister.buttonFirstRegister[t]&&(e.pluggedComponentRegister.buttonFirstRegister[t]=[]),e.pluggedComponentRegister.buttonFirstRegister[t].push(i)},e.registerPreviousButton=function(t,i){void 0===e.pluggedComponentRegister.buttonPreviousRegister[t]&&(e.pluggedComponentRegister.buttonPreviousRegister[t]=[]),e.pluggedComponentRegister.buttonPreviousRegister[t].push(i)},e.registerNextButton=function(t,i){void 0===e.pluggedComponentRegister.buttonNextRegister[t]&&(e.pluggedComponentRegister.buttonNextRegister[t]=[]),e.pluggedComponentRegister.buttonNextRegister[t].push(i)},e.registerLastButton=function(t,i){void 0===e.pluggedComponentRegister.buttonLastRegister[t]&&(e.pluggedComponentRegister.buttonLastRegister[t]=[]),e.pluggedComponentRegister.buttonLastRegister[t].push(i)},e.registerToolbar=function(t,i){e.pluggedComponentRegister.tableByToolbar[i]=t;var n=e.pluggedComponentRegister.toolbarsByTable[t];n||(n=[],e.pluggedComponentRegister.toolbarsByTable[t]=n),n.push(i)},e.getTableNameFromToolbarName=function(t){return e.pluggedComponentRegister.tableByToolbar[t]},e.getToolbarNamesFromTableName=function(t){return e.pluggedComponentRegister.toolbarsByTable[t]},e.registerPageReport=function(t,i){void 0===e.pluggedComponentRegister.pageReportRegister[t]&&(e.pluggedComponentRegister.pageReportRegister[t]=[]),e.pluggedComponentRegister.pageReportRegister[t].push(i)},e.registerSelectReport=function(t,i){void 0===e.pluggedComponentRegister.selectReportRegister[t]&&(e.pluggedComponentRegister.selectReportRegister[t]=[]),e.pluggedComponentRegister.selectReportRegister[t].push(i)},e.gotoFirstPage=function(t){void 0!==e.AjaxTableRegister[t]?e.AjaxTableRegister[t].pagination.goToFirstPage():EBX_Logger.log("EBX_AjaxTable.gotoFirstPage: Table with name "+t+" is not registered.",EBX_Logger.error)},e.gotoPreviousPage=function(t){void 0!==e.AjaxTableRegister[t]?e.AjaxTableRegister[t].pagination.goToPreviousPage():EBX_Logger.log("EBX_AjaxTable.gotoPreviousPage: Table with name "+t+" is not registered.",EBX_Logger.error)},e.gotoNextPage=function(t){void 0!==e.AjaxTableRegister[t]?e.AjaxTableRegister[t].pagination.goToNextPage():EBX_Logger.log("EBX_AjaxTable.gotoNextPage: Table with name "+t+" is not registered.",EBX_Logger.error)},e.gotoLastPage=function(t){void 0!==e.AjaxTableRegister[t]?e.AjaxTableRegister[t].pagination.goToLastPage():EBX_Logger.log("EBX_AjaxTable.gotoLastPage: Table with name "+t+" is not registered.",EBX_Logger.error)},e.selectCurrentPage=function(t){void 0!==e.AjaxTableRegister[t]?e.AjaxTableRegister[t].selection.selectCurrentPage():EBX_Logger.log("EBX_AjaxTable.selectCurrentPage: Table with name "+t+" is not registered.",EBX_Logger.error)},e.unselectCurrentPage=function(t){void 0!==e.AjaxTableRegister[t]?e.AjaxTableRegister[t].selection.unselectCurrentPage():EBX_Logger.log("EBX_AjaxTable.unselectCurrentPage: Table with name "+t+" is not registered.",EBX_Logger.error)},e.selectAllRecords=function(t){void 0!==e.AjaxTableRegister[t]?e.AjaxTableRegister[t].selection.selectAllRecords():EBX_Logger.log("EBX_AjaxTable.selectAllRecords: Table with name "+t+" is not registered.",EBX_Logger.error)},e.unselectAllRecords=function(t){void 0!==e.AjaxTableRegister[t]?e.AjaxTableRegister[t].selection.unselectAllRecords():EBX_Logger.log("EBX_AjaxTable.unselectAllRecords: Table with name "+t+" is not registered.",EBX_Logger.error)},e.openCurrentFocusedRecord=function(t){void 0!==e.AjaxTableRegister[t]?e.AjaxTableRegister[t].selection.openCurrentFocusedRecord():EBX_Logger.log("EBX_AjaxTable.openCurrentFocusedRecord: Table with name "+t+" is not registered.",EBX_Logger.error)},e.setNewPageSize=function(t,i,n,s){void 0!==e.AjaxTableRegister[t]?e.AjaxTableRegister[t].pagination.sendRequestSetTablePageSize(i,n,s):EBX_Logger.log("EBX_AjaxTable.setNewPageSize: Table with name "+t+" is not registered.",EBX_Logger.error)},e.computeSize=function(t,i){void 0!==e.AjaxTableRegister[t]?e.AjaxTableRegister[t].pagination.sendRequestComputeTableSize(i):EBX_Logger.log("EBX_AjaxTable.setNewPageSize: Table with name "+t+" is not registered.",EBX_Logger.error)},e.isTableExists=function(t){return void 0!==e.AjaxTableRegister[t]},e.refreshCurrentPage=function(t,i){void 0===i&&(i=!1),void 0!==e.AjaxTableRegister[t]?e.AjaxTableRegister[t].content.refreshCurrentPage(i):EBX_Logger.log("EBX_AjaxTable.refreshCurrentPage: Table with name "+t+" is not registered.",EBX_Logger.error)},e.getSelectedRecordsNumber=function(t){if(void 0!==e.AjaxTableRegister[t]){var i=e.AjaxTableRegister[t].content.rawResponse;return null==i?0:i.meta.selectedNumber}EBX_Logger.log("EBX_AjaxTable.getSelectedRecordsNumber: Table with name "+t+" is not registered.",EBX_Logger.error)},e.hasPreviousPage=function(t){if(void 0!==e.AjaxTableRegister[t]){var i=e.AjaxTableRegister[t].content.rawResponse;return null!=i&&i.meta.hasPreviousPage}EBX_Logger.log("EBX_AjaxTable.hasPreviousPage: Table with name "+t+" is not registered.",EBX_Logger.error)},e.hasNextPage=function(t){if(void 0!==e.AjaxTableRegister[t]){var i=e.AjaxTableRegister[t].content.rawResponse;return null!=i&&i.meta.hasNextPage}EBX_Logger.log("EBX_AjaxTable.hasNextPage: Table with name "+t+" is not registered.",EBX_Logger.error)},e.hasChangeSet=function(t){if(void 0!==e.AjaxTableRegister[t]){var i=e.AjaxTableRegister[t].content.rawResponse;return null!=i&&i.meta.hasChangeSet}EBX_Logger.log("EBX_AjaxTable.hasChangeSet: Table with name "+t+" is not registered.",EBX_Logger.error)},e.isTableFullSizeUnknown=function(t){if(void 0!==e.AjaxTableRegister[t]){var i=e.AjaxTableRegister[t].content.rawResponse;return null==i||i.meta.fullSizeUnknown}EBX_Logger.log("EBX_AjaxTable.isTableFullSizeUnknown: Table with name "+t+" is not registered.",EBX_Logger.error)},e.isMassUpdateEnabled=function(t){return e.hasChangeSet(t)},e.toggleSortByRelevancy=function(){void 0!==e.AjaxTableRegister[EBX_AdvancedSearch.ajaxTableName]?e.isSortedByRelevancy(EBX_AdvancedSearch.ajaxTableName,EBX_AdvancedSearch.state)?window.location.href=e.constants.resetSortRequestLink:n.AdvancedSearchActions.applySearch(!0):EBX_Logger.log("EBX_AjaxTable.toggleSortByRelevancy: Table with name "+EBX_AdvancedSearch.ajaxTableName+" is not registered.",EBX_Logger.error)},e.isSortedByRelevancy=function(t,i){var n=e.AjaxTableRegister[t];if(void 0!==n)return!!i&&(!!s.AdvancedSearchModel.isSearchApplied(i)&&0===n.content.rawResponse.meta.sortState[0].length);EBX_Logger.log("EBX_AjaxTable.isSortedByRelevancy: Table with name "+t+" is not registered.",EBX_Logger.error)},e.isSortableByRelevancy=function(t,i){var n=e.AjaxTableRegister[t];if(void 0!==n){if(i){var r=n.content.rawResponse;return null!=r&&(s.AdvancedSearchModel.isSearchApplied(i)&&r.meta.isSortableByRelevancy)}return!1}EBX_Logger.log("EBX_AjaxTable.isSortedByRelevancy: Table with name "+t+" is not registered.",EBX_Logger.error)},e.messages=new r.LocalizedMessages,e.constants=new r.ConstantsFromServer,e.AjaxTableRegister={},e.widgetContainerTable={},e.maxIntPowerForBitwiseOperation=31,e.pluggedComponentRegister=new C,e.events={refresh:"EBX_AjaxTable.refresh",selectionChange:"EBX_AjaxTable.selectionChange"},e}();t.EBX_AjaxTable=x},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});!function(e){var t=[],i=[],n=[],s=!1;function r(){if(!s&&0!==n.length){s=!0;try{for(var e=EBX_AdvancedSearch.state;n.length>0;){var t=n;n=[],EBX_Utils.forEach(t,(function(t){var n=o(i);e=n(t,e)}))}if(e!==EBX_AdvancedSearch.state){var l={previousState:EBX_AdvancedSearch.state,nextState:e};EBX_Events.trigger(null,"EVENT_DATA_UPDATE",l),EBX_AdvancedSearch.state=e}}finally{s=!1,n.length>0&&setTimeout(r)}}}e.registerReducer=function(e){t=t.concat([e])},e.unregisterReducer=function(e){t=EBX_Utils.filter(t,(function(t){return t!==e}))},e.registerMiddleware=function(e){i=i.concat([e])},e.unregisterMiddleware=function(e){i=EBX_Utils.filter(i,(function(t){return t!==e}))},e.registerStateListener=function(e){var t=function(t){e(t.data.nextState,t.data.previousState)};e.__wrapperEVENT_DATA_UPDATE=t,EBX_Events.on(null,"EVENT_DATA_UPDATE",t)},e.unregisterStateListener=function(e){var t=e.__wrapperEVENT_DATA_UPDATE;null!=t&&(EBX_Events.off(null,"EVENT_DATA_UPDATE",t),delete e.__wrapperEVENT_DATA_UPDATE)},e.sendAction=function(e,t){null!=window.EBX_AdvancedSearch&&(n.push({name:e,param:t}),s||1!==n.length||setTimeout(r))};var o=EBX_Utils.memoize((function(e){for(var i=function(e,i){return function(e,i,n){var s=i;return EBX_Utils.forEach(t,(function(t){s=t(e,s,n)})),s}(e.name,i,e.param)},n=function(e){var t;t=i,i=function(i,n){return e(t,i,n)}},s=0,r=e;s<r.length;s++){n(r[s])}return i}))}(t.AdvancedSearch||(t.AdvancedSearch={}))},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(1);!function(e){function t(e){return function(t){n.AdvancedSearch.sendAction(e,t)}}function i(e){return function(){n.AdvancedSearch.sendAction(e,void 0)}}var s,r,o,l,a,d,u,c,h,p,m,g,f,b,E,C,_,S,v,y,B,x,w,I,T,R;!function(e){e.NAME="togglePanel"}(s=e.TogglePanel||(e.TogglePanel={})),e.togglePanel=t(s.NAME),function(e){e.NAME="fetchCriterion_success"}(r=e.FetchCriterion_success||(e.FetchCriterion_success={})),e.fetchCriterion_success=t(r.NAME),function(e){e.NAME="removeCriterion"}(o=e.RemoveCriterion||(e.RemoveCriterion={})),e.removeCriterion=t(o.NAME),function(e){e.NAME="selectColumn"}(l=e.SelectColumn||(e.SelectColumn={})),e.selectColumn=t(l.NAME),function(e){e.NAME="selectColumn_success"}(a=e.SelectColumn_success||(e.SelectColumn_success={})),e.selectColumn_success=t(a.NAME),function(e){e.NAME="toggleLineActivation"}(d=e.ToggleLineActivation||(e.ToggleLineActivation={})),e.toggleLineActivation=t(d.NAME),function(e){e.NAME="setAllLinesActivation"}(u=e.SetAllLinesActivation||(e.SetAllLinesActivation={})),e.setAllLinesActivation=t(u.NAME),function(e){e.NAME="updateQuickSearch"}(c=e.UpdateQuickSearch||(e.UpdateQuickSearch={})),e.updateQuickSearch=t(c.NAME),function(e){e.NAME="clearQuickSearch"}(h=e.ClearQuickSearch||(e.ClearQuickSearch={})),e.clearQuickSearch=i(h.NAME),function(e){e.NAME="applySearch"}(p=e.ApplySearch||(e.ApplySearch={})),e.applySearch=t(p.NAME),function(e){e.NAME="setFetchingData"}(m=e.SetFetchingData||(e.SetFetchingData={})),e.setFetchingData=i(m.NAME),function(e){e.NAME="setFetchingData_success"}(g=e.SetFetchingData_success||(e.SetFetchingData_success={})),e.setFetchingData_success=i(g.NAME),function(e){e.NAME="setFetchingData_cancel"}(f=e.SetFetchingData_cancel||(e.SetFetchingData_cancel={})),e.setFetchingData_cancel=i(f.NAME),function(e){e.NAME="setFetchingData_uncertain"}(b=e.SetFetchingData_uncertain||(e.SetFetchingData_uncertain={})),e.setFetchingData_uncertain=i(b.NAME),function(e){e.NAME="selectOperator"}(E=e.SelectOperator||(e.SelectOperator={})),e.selectOperator=t(E.NAME),function(e){e.NAME="selectOperator_success"}(C=e.SelectOperator_success||(e.SelectOperator_success={})),e.selectOperator_success=t(C.NAME),function(e){e.NAME="initOperator"}(_=e.InitOperator||(e.InitOperator={})),e.initOperator=t(_.NAME),function(e){e.NAME="setValue"}(S=e.SetValue||(e.SetValue={})),e.setValue=t(S.NAME),function(e){e.NAME="initCurrentFilter"}(v=e.InitCurrentFilter||(e.InitCurrentFilter={})),e.initCurrentFilter=t(v.NAME),function(e){e.NAME="saveCurrentFilter"}(y=e.SaveCurrentFilter||(e.SaveCurrentFilter={})),e.saveCurrentFilter=i(y.NAME),function(e){e.NAME="saveCurrentFilter_success"}(B=e.SaveCurrentFilter_success||(e.SaveCurrentFilter_success={})),e.saveCurrentFilter_success=i(B.NAME),function(e){e.NAME="loadFilter"}(x=e.LoadFilter||(e.LoadFilter={})),e.loadFilter=t(x.NAME),function(e){e.NAME="loadFilter_success"}(w=e.LoadFilter_success||(e.LoadFilter_success={})),e.loadFilter_success=t(w.NAME),function(e){e.NAME="loadFilter_failure"}(I=e.LoadFilter_failure||(e.LoadFilter_failure={})),e.loadFilter_failure=i(I.NAME),function(e){e.NAME="deleteFilter"}(T=e.DeleteFilter||(e.DeleteFilter={})),e.deleteFilter=t(T.NAME),function(e){e.NAME="deleteFilter_success"}(R=e.DeleteFilter_success||(e.DeleteFilter_success={})),e.deleteFilter_success=i(R.NAME)}(t.AdvancedSearchActions||(t.AdvancedSearchActions={}))},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return e._countActivatedCriteria=function(e){for(var t=0,i=Object.keys(e),n=0;n<i.length;n++)e[i[n]].isActivated&&t++;return t},e._getNumberOfActivatedCriteria=EBX_Utils.memoize(e._countActivatedCriteria),e.getNumberOfActivatedCriteria=function(t){return e._getNumberOfActivatedCriteria(t.filter.criterionByLineId)},e._getNumberOfAppliedCriteria=EBX_Utils.memoize(e._countActivatedCriteria),e.getNumberOfAppliedCriteria=function(t){var i=t.appliedFilter;return null==i?0:e._getNumberOfAppliedCriteria(i.criterionByLineId)},e._isSearchEnabled=EBX_Utils.memoize((function(e){if(e.fetchingData)return!1;if(null==e.appliedFilter)return!0;if(e.appliedFilter===e.filter)return!1;var t=e.filter.criterionByLineId;for(var i in t){var n=t[i];if(n.isActivated){if(n.hasError)return!1;var o=n.operand;if(void 0===o)return!0;if(null===o)return!1;if(""===o)return!1;if(Array.isArray(o)&&0===o.length)return!1}}if(e.filter.quickSearch!==e.appliedFilter.quickSearch)return!0;var l=s(e.filter),a=s(e.appliedFilter);if(l.criteria.length!==a.criteria.length)return!0;for(var i in l.criteria)if(!r(l.criteria[i],a.criteria[i]))return!0;return!1})),e.isSearchEnabled=function(t){return e._isSearchEnabled({fetchingData:t.fetchingData,appliedFilter:t.appliedFilter,filter:t.filter})},e._isSaveEnabled=EBX_Utils.memoize((function(t){var i=t.quickSearch,n=t.criterionByLineId,s=t.allCriteriaIds;if(e._hasError(t))return!1;for(var r=0,o=0,l=s;o<l.length;o++){n[l[o]].isActivated&&r++}return""!==i||r>0})),e.isSaveEnabled=function(t){return e._isSaveEnabled(t.filter)},e.operandEquals=function(e,t){return e===t||null!=e&&null!=t&&(e instanceof Date&&t instanceof Date?e.getTime()===t.getTime():!(!Array.isArray(e)||!Array.isArray(t))&&o(e,t))},e._isSearchApplied=EBX_Utils.memoize((function(e){var t=e.appliedFilter;if(null==t)return!1;var i=t.quickSearch;if(null!=i&&i.length>0)return!0;for(var n=0,s=t.allCriteriaIds;n<s.length;n++){var r=s[n];if(t.criterionByLineId[r].isActivated)return!0}return!1})),e.isSearchApplied=function(t){return e._isSearchApplied({appliedFilter:t.appliedFilter})},e._hasError=EBX_Utils.memoize((function(e){for(var t=e.allCriteriaIds,i=e.criterionByLineId,n=0,s=t;n<s.length;n++){var r=i[s[n]];if(r.isActivated){var o=r.operand;if(r.hasError||null===o||""===o)return!0;if(Array.isArray(o)&&0===o.length)return!0}}return!1})),e.hasError=function(t){return e._hasError({allCriteriaIds:t.filter.allCriteriaIds,criterionByLineId:t.filter.criterionByLineId})},e._hasValidationCriterion=EBX_Utils.memoize((function(e){for(var t=e.allCriteriaIds,i=e.criterionByLineId,n=0,s=t;n<s.length;n++){var r=i[s[n]];if(r.isActivated&&0===r.field.indexOf(EBX_AdvancedSearch.parameters.validationTargetPrefix))return!0}return!1})),e.hasValidationCriterion=function(t){return e._hasValidationCriterion({allCriteriaIds:t.filter.allCriteriaIds,criterionByLineId:t.filter.criterionByLineId})},e}();function s(e){if(null==e)return{quickSearch:"",criteria:[]};var t=[],i=function(i){var n=e.criterionByLineId[i];n.isActivated&&t.push({field:n.field,operator:n.operator,operand:n.operand,hasError:n.hasError})};function n(e,t){return e===t?0:null==e?-1:null==t?1:(""+e).localeCompare(""+t)}return EBX_Utils.forEach(e.allCriteriaIds,i),null!=e.additionalCriterionId&&i(e.additionalCriterionId),t=t.sort((function(e,t){var i=n(e.field,t.field);return 0!=i||0!=(i=n(e.operator,t.operator))||0!=(i=n(e.operand,t.operand))?i:0})),{quickSearch:e.quickSearch,criteria:t}}function r(e,t){if(e===t)return!0;if(e.field!==t.field)return!1;if(e.operator!==t.operator)return!1;var i=e.operand,s=t.operand;return i===s||n.operandEquals(i,s)}function o(e,t){if(e.length!==t.length)return!1;for(var i in e)if(!n.operandEquals(e[i],t[i]))return!1;return!0}t.AdvancedSearchModel=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){};t.ConstantsFromServer=n;var s=function(){function e(){}return e.lineMinHeight=40,e.statusColumnWidth=49,e.minWidthColumn=41,e.minWidthIssueGap=null,e}();t.EBX_AjaxTable_UIConstants=s;var r=function(){};t.LocalizedMessages=r},function(e,t,i){"use strict";var n,s=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])},function(e,t){function i(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});Object.defineProperty(t,"__esModule",{value:!0});var r=function(e){function t(t,i){var n=e.call(this,t)||this;return n.responseType=YAHOO.util.DataSource.TYPE_JSON,n.responseSchema=i,n}return s(t,e),t}(YAHOO.util.XHRDataSource);t.YUI_XHRDataSourceJSON=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return e.compiledStateIndexInResultLine=0,e.keyIndexInResultLine=1,e.firstColumnContentIndexInResultLine=2,e.compiledRowStateIndexSelected=0,e.compiledRowStateIndexSeverity=1,e.compiledRowStateIndexInheritance=2,e.compiledRowStateSelected="1",e}();t.AjaxResponseRecordConstants=n},function(e,t,i){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Solid=0]="Solid",e[e.Outline=1]="Outline",e[e.Dotted=2]="Dotted"}(n=t.SelectionBorderStyle||(t.SelectionBorderStyle={}));var s,r=function(){function e(e,t,i){this.table=e,this.style=t,this.range=i,this.borders=[],this.visible=!1}return e.prototype.draw=function(){this.visible=!0;var e=this.range.getTopLeftCell(),t=this.range.getTopRightCell(),i=this.range.getBottomLeftCell(),n=this.range.getBottomRightCell();e&&(this.drawTransverseHorizontalBorder(s.Top,e,t),this.drawTransverseHorizontalBorder(s.Bottom,i,n),this.drawTransverseVerticalBorder(s.Left,e,i),this.drawTransverseVerticalBorder(s.Right,t,n))},e.prototype.isVisible=function(){return this.visible},e.prototype.drawTransverseHorizontalBorder=function(t,i,n){var r,o,l;r=i.isPlacedInTheCreatePart()?this.table.element.create:this.table.element.update;var a=this.isRangeInSameTable();i.isPlacedInFixedContainer()?(o=r.fixed,l=r.main):(o=r.main,l=r.fixed);var d=i.tdElement.offsetTop;t===s.Bottom&&(d+=i.tdElement.offsetHeight);var u=i.tdElement.offsetLeft+1;if(a){var c=n.tdElement.offsetLeft+n.tdElement.offsetWidth;this.borders.push(e.drawBorder(o,t,this.style,d,u,c))}else{c=o.table.offsetWidth;var h=e.drawBorder(o,t,this.style,d,u,c);this.borders.push(h);var p=n.tdElement.offsetLeft+n.tdElement.offsetWidth;if(this.borders.push(e.drawBorder(l,t,this.style,d,0,p)),this.isRangeInSameContainer()){if(t===s.Top){var m=this.range.getBottomLeftCell().tdElement;this.addVerticalBorderOnScroll(h,l,p,c,d,m.offsetTop+m.offsetHeight)}}else t===s.Top?this.addVerticalBorderOnScroll(h,l,p,c,d,o.table.offsetHeight):this.addVerticalBorderOnScroll(h,l,p,c,0,d)}},e.prototype.addVerticalBorderOnScroll=function(t,i,r,o,a,d){if(!EBX_LayoutManager.isIE8&&!EBX_LayoutManager.isIE9){var u=function(i,l){l.scrollLeft>r?t.borderOnScroll.displayedBorder||(t.borderOnScroll.displayedBorder=e.drawBorder(t.associatedTable,s.Right,n.Dotted,o,a,d)):t.borderOnScroll.displayedBorder&&(e.removeBorderFromDisplay(t.borderOnScroll.displayedBorder),t.borderOnScroll.displayedBorder=null)};YAHOO.util.Event.addListener(i.scroll,"scroll",u,i.scroll,this),t.borderOnScroll=new l(i.scroll,u)}},e.prototype.drawTransverseVerticalBorder=function(t,i,n){var r=i.isPlacedInTheCreatePart()?this.table.element.create:this.table.element.update,o=n.isPlacedInTheCreatePart()?this.table.element.create:this.table.element.update,l=this.isRangeInSameContainer(),a=i.isPlacedInFixedContainer()?r.fixed:r.main,d=i.isPlacedInFixedContainer()?o.fixed:o.main,u=i.tdElement.offsetLeft+1;t===s.Right&&(u+=i.tdElement.offsetWidth-1);var c=i.tdElement.offsetTop;if(l){var h=n.tdElement.offsetTop+n.tdElement.offsetHeight;this.borders.push(e.drawBorder(a,t,this.style,u,c,h))}else{h=a.table.offsetHeight;this.borders.push(e.drawBorder(a,t,this.style,u,c,h));var p=n.tdElement.offsetTop+n.tdElement.offsetHeight,m=e.drawBorder(d,t,this.style,u,0,p);if(this.borders.push(m),this.isRangeInSameTable()){if(t===s.Left){var g=this.range.getBottomLeftCell().tdElement;this.addHorizontalBorderOnScroll(m,this.table.element.create.wrapper,c,u,g.offsetLeft+g.offsetWidth)}}else t===s.Left?this.addHorizontalBorderOnScroll(m,this.table.element.create.wrapper,c,u,a.table.offsetWidth):this.addHorizontalBorderOnScroll(m,this.table.element.create.wrapper,c,0,u)}},e.prototype.addHorizontalBorderOnScroll=function(t,i,r,o,a){if(!EBX_LayoutManager.isIE8&&!EBX_LayoutManager.isIE9){var d=function(i,l){l.scrollTop+l.offsetHeight<r?t.borderOnScroll.displayedBorder||(t.borderOnScroll.displayedBorder=e.drawBorder(t.associatedTable,s.Bottom,n.Dotted,1,o+1,a)):t.borderOnScroll.displayedBorder&&(e.removeBorderFromDisplay(t.borderOnScroll.displayedBorder),t.borderOnScroll.displayedBorder=null)};YAHOO.util.Event.addListener(i,"scroll",d,i,this),t.borderOnScroll=new l(i,d)}},e.drawBorder=function(t,i,r,l,a,d){var u="",c="",h="";switch(r){case n.Outline:u="dashed",h="2px";break;case n.Dotted:u="dotted",h="1px";break;default:u="solid",h="1px"}var p=e.getSpecialBorderOffset(i,r,l);switch(i){case s.Top:c="top :"+(l-p)+"px; left : "+(a-1)+"px; width : "+(d-a)+"px",h="border-top-width :"+h;break;case s.Bottom:c="top :"+(l-1)+"px; left : "+(a-1)+"px; width : "+(d-a)+"px",h="border-bottom-width :"+h;break;case s.Left:c="left :"+(l-1-p)+"px; top : "+a+"px; height : "+(d-a)+"px",h="border-left-width :"+h;break;case s.Right:c="left :"+(l-1)+"px; top : "+a+"px; height : "+(d-a)+"px",h="border-right-width :"+h}var m="\n            <div class='"+e.CSS_MASK+"' style='\n                "+c+"; border-width: 0; "+h+";\n                position: absolute; border-style: "+u+";'\n            >\n            </div>",g=document.createElement("div");return g.innerHTML=m,t.scroll.appendChild(EBX_Utils.firstElementChild(g)),new o(t,EBX_Utils.lastElementChild(t.scroll))},e.prototype.hide=function(){this.visible=!1;for(var t=0,i=this.borders.length;t<i;t++)e.removeBorderFromDisplay(this.borders[t]);this.borders=[]},e.getSpecialBorderOffset=function(e,t,i){return t===n.Outline&&e===s.Top||t===n.Outline&&e===s.Left?1:t===n.Solid&&e===s.Left&&0===i?-1:0},e.removeBorderFromDisplay=function(e){e.associatedTable.scroll.removeChild(e.element),e.borderOnScroll&&e.borderOnScroll.remove()},e.prototype.isRangeInSameContainer=function(){var e=this.range.getTopLeftCell(),t=this.range.getBottomLeftCell();return(e.isPlacedInTheCreatePart()?this.table.element.create:this.table.element.update)===(t.isPlacedInTheCreatePart()?this.table.element.create:this.table.element.update)},e.prototype.isRangeInSameTable=function(){var e=this.range.getTopLeftCell(),t=this.range.getTopRightCell();return e.isPlacedInFixedContainer()===t.isPlacedInFixedContainer()},e.CSS_MASK="ebx_selection_border",e}();t.SelectionRangeMask=r,function(e){e[e.Top=0]="Top",e[e.Right=1]="Right",e[e.Bottom=2]="Bottom",e[e.Left=3]="Left"}(s||(s={}));var o=function(e,t){this.associatedTable=e,this.element=t,this.borderOnScroll=null},l=function(){function e(e,t){this.scrollElement=e,this.eventHandler=t,this.displayedBorder=null}return e.prototype.remove=function(){this.displayedBorder&&(r.removeBorderFromDisplay(this.displayedBorder),this.displayedBorder=null),YAHOO.util.Event.removeListener(this.scrollElement,"scroll",this.eventHandler)},e}()},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(15),s=function(){function e(){}return e.CreateWidget=function(t,i,s,r,o,l){var a=new n.EBX_ModelElementSelector(t,i,s,r,o,l);return e.mapWidget[t]=a,a},e.GetWidget=function(t){return e.mapWidget[t]},e.AddValueChangeHandler=function(t,i){var n=e.valueChangeHandlers[t];n||(e.valueChangeHandlers[t]=[],n=e.valueChangeHandlers[t]),n.push(i),this.valueChangeHandlers[t]=n},e.NotifyValueChange=function(t,i){var n=e.valueChangeHandlers[t];if(n)for(var s=0;s<n.length;s++)n[s](i)},e.SetError=function(t,i){var n=e.GetWidget(t);if(n){var s=new EBX_ValidationMessage;s.errors=[i],n.setError(s)}},e.mapWidget={},e.valueChangeHandlers={},e}();t.EBX_ModelElementSelector_Registry=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){}return e.prototype.setValue=function(e){return!1},e.prototype.getValue=function(){},e.prototype.serialize=function(){return""},e.prototype.setPastedValue=function(e){},e.prototype.getCopyValue=function(){return this.getValue()},e}();t.EBX_FormNodeEditor_Missing=n,window.EBX_FormNodeEditor_Missing=n;var s=function(){function e(e,t){this.inputWrapperEl=e,this.args=t}return e.prototype.setValue=function(e){return this.getInput().value=e,!0},e.prototype.getValue=function(){return this.getInput().value},e.prototype.serialize=function(){return encodeURIComponent(this.getInput().name)+"="+encodeURIComponent(this.getInput().value)},e.prototype.getInput=function(){return void 0===this.inputElement&&(this.inputElement=EBX_Utils.getFirstDirectChildMatchingTagName(this.inputWrapperEl,"input")),this.inputElement},e.prototype.setPastedValue=function(e){this.setValue(e.getDisplayedString())},e.prototype.getCopyValue=function(){return this.getValue()},e}();t.EBX_FormNodeEditor_TextInput=s,window.EBX_FormNodeEditor_TextInput=s;var r=function(){function e(e,t){this.inputWrapperEl=e,this.args=t}return e.prototype.setValue=function(e){return this.getInput().value=e,!0},e.prototype.getValue=function(){return this.getInput().value},e.prototype.serialize=function(){return encodeURIComponent(this.getInput().name)+"="+encodeURIComponent(this.getInput().value)},e.prototype.getInput=function(){return void 0===this.textAreaElement&&(this.textAreaElement=EBX_Utils.getFirstRecursiveChildMatchingTagName(this.inputWrapperEl,"textarea")),this.textAreaElement},e.prototype.getCopyValue=function(){return this.getValue()},e.prototype.setPastedValue=function(e){this.setValue(e.getDisplayedString())},e.prototype.enableControlEnterToCRLF=function(){var e=this.getInput();e.addEventListener("keydown",(function(t){if(t.keyCode===EBX_Utils.keyCodes.ENTER&&t.ctrlKey){var i=e.selectionStart;e.value=e.value.slice(0,i)+"\n"+e.value.slice(e.selectionEnd),e.selectionStart=i+1,e.selectionEnd=i+1,t.preventDefault(),t.stopPropagation()}}))},e}();t.EBX_FormNodeEditor_TextArea=r,window.EBX_FormNodeEditor_TextArea=r;var o=function(){function e(e,t){this.inputWrapperEl=e,this.id=t}return e.prototype.setValue=function(e){return void 0===EBX_Form.APVHTMLEditorIdEditor[this.id]||null===EBX_Form.APVHTMLEditorIdEditor[this.id]?(this.getTextarea().value=e,!0):(EBX_Form.APVHTMLEditorIdEditor[this.id].setData(e),!0)},e.prototype.getValue=function(){return void 0===EBX_Form.APVHTMLEditorIdEditor[this.id]||null===EBX_Form.APVHTMLEditorIdEditor[this.id]?this.getTextarea().value:EBX_Form.APVHTMLEditorIdEditor[this.id].getData()},e.prototype.serialize=function(){return encodeURIComponent(this.getTextarea().name)+"="+encodeURIComponent(this.getValue())},e.prototype.getTextarea=function(){return void 0===this.textareaElement&&(this.textareaElement=EBX_Utils.getFirstRecursiveChildMatchingTagName(this.inputWrapperEl,"textarea")),this.textareaElement},e.prototype.getCopyValue=function(){return this.getValue()},e.prototype.setPastedValue=function(e){this.setValue(e.getDisplayedString())},e}();t.EBX_FormNodeEditor_HTML=o,window.EBX_FormNodeEditor_HTML=o;var l=function(){function e(e,t){this.inputWrapperEl=e,this.lastRdoBtnDeclaredId=t}return e.prototype.setValue=function(e){return this.setInnerValue(e,!1)},e.prototype.setValueForUser=function(e){return this.setInnerValue(e,!0)},e.prototype.setInnerValue=function(e,t){var i=this.getRdoBtns(),n=i.length,s=!1;if(null!==e)for(;n--;){(r=i[n]).value===""+e&&(t&&r.click(),r.checked=!0,s=!0)}if(null===e||!s)for(n=i.length;n--;){var r;(r=i[n]).checked&&r.click(),r.checked=!1}return s||null===e},e.prototype.getValue=function(){for(var e=this.getRdoBtns(),t=e.length;t--;){var i=e[t];if(i.checked)return i.value}return null},e.prototype.serialize=function(){for(var e=this.getRdoBtns(),t=e.length;t--;){var i=e[t];if(i.checked)return encodeURIComponent(i.name)+"="+encodeURIComponent(i.value)}return""},e.prototype.getRdoBtns=function(){if(void 0===this.rdoBtnElements){var e=document.getElementById(this.lastRdoBtnDeclaredId);this.rdoBtnElements=e.form.elements[e.getAttribute("name")],void 0!==this.rdoBtnElements.parentNode&&(this.rdoBtnElements=[this.rdoBtnElements])}return this.rdoBtnElements},e.prototype.getCopyValue=function(){return this.getValue()},e.prototype.setPastedValue=function(e){this.setValueForUser(e.getValue())},e}();t.EBX_FormNodeEditor_RdoBtn=l,window.EBX_FormNodeEditor_RdoBtn=l;var a=function(){function e(e,t){this.inputWrapperEl=e,this.isEmptyButtonEnabled=t}return e.prototype.setValue=function(e){var t=this.getRdoBtns(),i=t.length,n=!1;if(null!==e)for(;i--;){(s=t[i]).value===""+e&&(s.checked=!0,n=!0,this.isEmptyButtonEnabled&&EBX_Form.refreshEmptyButtonFromRadioButton(s.name,!1))}if(null===e||!n)if(this.isEmptyButtonEnabled)EBX_Form.emptyRadioButtonGroup(t[0].name,!1);else for(i=t.length;i--;){var s;(s=t[i]).checked&&s.click(),s.checked=!1}return n||null===e},e.prototype.getValue=function(){for(var e=this.getRdoBtns(),t=e.length;t--;){var i=e[t];if(i.checked)return i.value}return null},e.prototype.serialize=function(){for(var e=this.getRdoBtns(),t=e.length;t--;){var i=e[t];if(i.checked)return encodeURIComponent(i.name)+"="+encodeURIComponent(i.value)}return""},e.prototype.getRdoBtns=function(){if(void 0===this.rdoBtnElements){this.rdoBtnElements=[];for(var e=this.inputWrapperEl.getElementsByTagName("INPUT"),t=e.length;t--;){var i=e[t];"radio"===i.type&&this.rdoBtnElements.push(i)}}return this.rdoBtnElements},e.prototype.getCopyValue=function(){return this.getValue()},e.prototype.setPastedValue=function(e){this.setValue(e.getValue())},e}();t.EBX_FormNodeEditor_RdoBtnGrp=a,window.EBX_FormNodeEditor_RdoBtnGrp=a;var d=function(){function e(e,t){this.inputWrapperEl=e,this.lastCkbDeclaredId=t}return e.prototype.setValue=function(e){null===e&&(e=[]),Array.isArray(e)||(e=[e?""+e:e]);for(var t=this.getCkbs(),i=t.length;i--;){var n=t[i];n.checked=EBX_Utils.arrayContains(e,n.value)}return!0},e.prototype.getValue=function(){for(var e=[],t=this.getCkbs(),i=t.length;i--;){var n=t[i];n.checked&&e.push(n.value)}return e},e.prototype.serialize=function(){for(var e=[],t=this.getCkbs(),i=t.length;i--;){var n=t[i];n.checked&&e.push(encodeURIComponent(n.name)+"="+encodeURIComponent(n.value))}return e.join("&")},e.prototype.getCkbs=function(){if(void 0===this.ckbsElements){var e=document.getElementById(this.lastCkbDeclaredId);this.ckbsElements=e.form.elements[e.getAttribute("name")],void 0!==this.ckbsElements.parentNode&&(this.ckbsElements=[this.ckbsElements])}return this.ckbsElements},e.prototype.getCopyValue=function(){return this.getValue().join("#CKB_SEP#")},e.prototype.setPastedValue=function(e){var t=e.getValue().split("#CKB_SEP#");this.setValue(t)},e}();t.EBX_FormNodeEditor_Ckb=d,window.EBX_FormNodeEditor_Ckb=d;var u=function(){function e(e,t){this.inputWrapperEl=e,this.ckbGrpParentId=t}return e.prototype.setValue=function(e){null===e&&(e=[]);for(var t=this.getCkbs(),i=t.length;i--;){var n=t[i];n.checked=EBX_Utils.arrayContains(e,n.value)}return EBX_FormWidgets.checkboxGroupRefreshSelectAll(t[0],!1),!0},e.prototype.getValue=function(){for(var e=[],t=this.getCkbs(),i=t.length;i--;){var n=t[i];n.checked&&e.push(n.value)}return e},e.prototype.serialize=function(){for(var e=[],t=this.getCkbs(),i=t.length;i--;){var n=t[i];n.checked&&e.push(encodeURIComponent(n.name)+"="+encodeURIComponent(n.value))}return e.join("&")},e.prototype.getCkbs=function(){if(void 0===this.ckbsElements){this.ckbsElements=[];var e=document.getElementById(this.ckbGrpParentId),t=e.getElementsByTagName("INPUT"),i=EBX_Utils.getFirstRecursiveChildMatchingCSSClass(e,EBX_FormWidgets.checkboxGroupSelectAllCSSClass),n=void 0;n=null===i?null:i.getElementsByTagName("INPUT")[0];for(var s=t.length;s--;){var r=t[s];r!==n&&"checkbox"===r.type&&this.ckbsElements.push(r)}}return this.ckbsElements},e.prototype.getCopyValue=function(){return this.getValue().join("#CKB_SEP#")},e.prototype.setPastedValue=function(e){var t=e.getValue().split("#CKB_SEP#");this.setValue(t)},e}();t.EBX_FormNodeEditor_CkbGrp=u,window.EBX_FormNodeEditor_CkbGrp=u;var c=function(){function e(e,t){this.inputWrapperEl=e,this.args=t,this.invalidDateInput=null,this.invalidDateInputElem=null}return e.prototype.getContainer=function(){return EBX_Utils.getFirstDirectChildMatchingCSSClass(this.inputWrapperEl,e.InputsDateContainerCSSClass)},e.prototype.setValue=function(e){var t=""+e;if(this.clearInvalidInput(),null===e)return EBX_Form.emptyDateInputs(this.args.mainName,!1),!0;if("string"==typeof e){var i=/^([+-]?\d+)-(\d{1,2})-(\d{1,2})(?:T(\d{1,2}):(\d{1,2}):(\d{1,2})(?:.(\d{1,3}).*)?)?$/.exec(e);if(null!=i){var n=function(e){var t=i[e];if(null!=t)return parseInt(t,10)},s=n(1),r=n(2),o=n(3),l=n(4),a=n(5),d=n(6),u=n(7);return EBX_Form.fillTimeDateFields(this.args.mainName,!1,s,r,o,l,a,d,u),!0}}return e.constructor!==Date&&(e=new Date(e)),isNaN(e.valueOf())?(this.invalidDateInput=t,this.invalidDateInputElem=document.createElement("input"),this.invalidDateInputElem.hidden=!0,this.invalidDateInputElem.name=this.getRawInputParamName(),this.invalidDateInputElem.value=this.invalidDateInput,this.invalidDateInputElem.style.display="none",this.invalidDateInputElem.style.visibility="hidden",EBX_Form.emptyDateInputs(this.args.mainName,!1),this.getContainer().appendChild(this.invalidDateInputElem),!1):(EBX_Form.fillTimeDate(this.args.mainName,e,!1),!0)},e.prototype.clearInvalidInput=function(){this.invalidDateInput=null,null!==this.invalidDateInputElem&&(this.getContainer().removeChild(this.invalidDateInputElem),this.invalidDateInputElem=null)},e.prototype.getValue=function(){if(null!==this.invalidDateInput)return this.invalidDateInput;var e,t,i,n,s,r,o,l=this.args.mainName;e="";var a=document.getElementById(l+EBX_Form.dateSuffixes.year);null!==a&&(e=a.value),t="";var d=document.getElementById(l+EBX_Form.dateSuffixes.month);null===d||isNaN(parseInt(d.value,10))||(t=parseInt(d.value,null)-1),i="";var u=document.getElementById(l+EBX_Form.dateSuffixes.day);null!==u&&(i=u.value),n="";var c=document.getElementById(l+EBX_Form.dateSuffixes.hour);null!==c&&(n=c.value),s="";var h=document.getElementById(l+EBX_Form.dateSuffixes.minute);null!==h&&(s=h.value),r="";var p=document.getElementById(l+EBX_Form.dateSuffixes.second);null!==p&&(r=p.value),o="";var m=document.getElementById(l+EBX_Form.dateSuffixes.milliSecond);return null!==m&&(o=m.value),0===(e+t+i+n+s+r+o).length?null:new Date(e,t,i,n,s,r,o)},e.prototype.serialize=function(){var t=[];null!==this.invalidDateInput&&t.push(encodeURIComponent(this.getRawInputParamName())+"="+encodeURIComponent(this.invalidDateInput));var i=EBX_Utils.getFirstDirectChildMatchingCSSClass(this.inputWrapperEl,e.InputsDateContainerCSSClass),n=EBX_Utils.firstElementChild(i);do{void 0!==n.name&&t.push(encodeURIComponent(n.name)+"="+encodeURIComponent(n.value))}while(null!==(n=EBX_Utils.nextElementSibling(n)));return t.join("&")},e.prototype.setPastedValue=function(e){this.setValue(e.getDisplayedString())},e.prototype.getCopyValue=function(){return""+this.getValue()},e.prototype.getRawInputParamName=function(){return this.args.mainName+"_rawInput"},e.InputsDateContainerCSSClass="ebx_InputsDateContainer",e}();t.EBX_FormNodeEditor_DateInput=c,window.EBX_FormNodeEditor_DateInput=c;var h=function(e,t){this.key=e,this.label=t},p=function(){function e(e){this.inputWrapperEl=e}return e.prototype.setValue=function(e){var t=this.getInput();return null===e?(EBX_Form.emptyFacetEnum(t.id,!1),!0):(t.value=e.key,this.getLabel().value=e.label,EBX_Form.refreshEmptyButtonFromFacetEnumField(t,!1),!0)},e.prototype.getValue=function(){return this.getInput().value===ebx_nullValueForFacetEnum?null:{key:this.getInput().value,label:this.getLabel().value}},e.prototype.serialize=function(){var e=this.getInput();return encodeURIComponent(e.name)+"="+encodeURIComponent(e.value)},e.prototype.getInput=function(){return void 0===this.inputElement&&(this.inputElement=EBX_Utils.getFirstDirectChildMatchingTagName(this.inputWrapperEl,"input")),this.inputElement},e.prototype.getLabel=function(){return void 0===this.labelElement&&(this.labelElement=EBX_Utils.nextElementSibling(this.getInput())),this.labelElement},e.prototype.setPastedValue=function(e){var t=new h(e.getValue(),e.getDisplayedString());this.setValue(t)},e.prototype.getCopyValue=function(){return this.getValue().key},e}();t.EBX_FormNodeEditor_FEC=p,window.EBX_FormNodeEditor_FEC=p;var m=function(){};t.EBX_ISS_Value=m;var g=function(){function e(e){this.inputWrapperEl=e,this.paramLabel=this.getInput().name+"_label"}return e.prototype.setValue=function(t){var i=this.getLabel();if(null===t||t.key===ebx_nullValueForFacetEnum)return i.className="ebx_ValueND",null!==this.getEmptyButton()&&EBX_Utils.addCSSClass(this.getEmptyButton(),EBX_FormWidgets.emptyButtonHidden_CSSClass),EBX_ISS.mapIdPreviewURL[i.id]=void 0,null!==this.getPreviewButton()&&EBX_ButtonUtils.setButtonDisabled(this.getPreviewButton(),!0),this.getInput().value=ebx_nullValueForFacetEnum,i.value=EBX_FACET_ENUMERATION_LABEL_NULL_VALUE,!0;if(!0!==t.labelLoaded){var n=[];return n.push(EBX_ISS.sendingRequest),n.push("&",EBX_ISS.requestParam_ajaxComponentIndex,"=",encodeURIComponent(EBX_ISS.mapIdAjaxComponentIndex[i.id])),n.push("&",EBX_ISS.requestParam_key,"=",encodeURIComponent(t.key)),EBX_ISS.dataSource.sendRequest(n.join(""),{success:this.receiveSuccess,failure:e.receiveFailure,scope:this,argument:t}),!1}if(null!==this.getEmptyButton()?(i.className=EBX_FormWidgets.inputWithEmptyButton_CSSClass,EBX_Utils.removeCSSClass(this.getEmptyButton(),EBX_FormWidgets.emptyButtonHidden_CSSClass)):i.className="",void 0===t.previewURL||null===t.previewURL?EBX_ISS.mapIdPreviewURL[i.id]=void 0:EBX_ISS.mapIdPreviewURL[i.id]=t.previewURL,null!==this.getPreviewButton()){var s=void 0!==EBX_ISS.mapIdPreviewURL[i.id];EBX_ButtonUtils.setButtonDisabled(this.getPreviewButton(),!s)}return this.getInput().value=t.key,i.value=t.label,!0},e.prototype.getValue=function(){return this.getInput().value===ebx_nullValueForFacetEnum?null:{key:this.getInput().value,label:this.getLabel().value,previewURL:EBX_ISS.mapIdPreviewURL[this.getLabel().id],labelLoaded:!0}},e.prototype.serialize=function(){var e=this.getInput(),t=encodeURIComponent(e.name)+"="+encodeURIComponent(e.value);return t+="&"+encodeURIComponent(this.paramLabel)+"="+encodeURIComponent(this.getLabel().value)},e.prototype.getInput=function(){return void 0===this.inputElement&&(this.inputElement=EBX_Utils.getFirstRecursiveChildMatchingTagName(this.inputWrapperEl,"input")),this.inputElement},e.prototype.getLabel=function(){return void 0===this.labelElement&&(this.labelElement=EBX_Utils.nextElementSibling(this.getInput())),this.labelElement},e.prototype.getEmptyButton=function(){return void 0===this.emptyButton&&(this.emptyButton=EBX_Utils.getFirstRecursiveChildMatchingCSSClass(this.inputWrapperEl,"ebx_Empty")),this.emptyButton},e.prototype.getPreviewButton=function(){return void 0===this.previewButton&&(this.previewButton=EBX_Utils.getFirstDirectChildMatchingCSSClass(this.inputWrapperEl,"ebx_Open")),this.previewButton},e.prototype.receiveSuccess=function(e,t,i){if(0!==t.results.length){var n=t.results[0];n.labelLoaded=!0,this.setValue(n)}else i.labelLoaded=!0,this.setValue(i);EBX_FormPresenter.stackElementForValidation(this.getLabel())},e.prototype.setPastedValue=function(e){var t=new m;t.key=e.getValue(),t.label=e.getDisplayedString(),t.labelLoaded=!0,this.setValue(t)},e.prototype.getCopyValue=function(){return this.getInput().value},e.receiveFailure=function(e,t,i){401===t.status&&EBX_Loader.gotoTimeoutPage()},e.notifyInputPositionChanged=function(){EBX_ISS.notifyInputPositionChanged()},e}();t.EBX_FormNodeEditor_ISS=g,window.EBX_FormNodeEditor_ISS=g;var f=function(){function e(e,t){this.inputWrapperEl=e,this.args=t}return e.prototype.setValue=function(e){Array.isArray(e)||(e=[e]);var t=this.getInput(),i=t.id,n=EBX_Utils.map(this.getValue(),(function(e){return e.key}));null==e&&(e=[]);var s=document.createElement("select"),r=document.createElement("ul"),o=[];return EBX_Utils.forEach(e,(function(e){var t,l="";n.indexOf(e.key)<0&&(l+=" "+EBX_LCB.freshlyAddedCSSClass),e.key===ebx_nullValueForFacetEnum&&(l+=" ebx_ValueND"),s.appendChild(EBX_Utils.createElement("option",{value:e.key,selected:!0},e.key));var a=document.createElement("textarea");a.innerHTML=e.labelForDisplay,0===(t=a.value).trim().length&&(t=" ");var d=void 0,u=void 0,c=EBX_LCB.previewButton[i];void 0!==c&&void 0!==e.previewURL&&(u=e.previewURL,(h=document.createElement("div")).innerHTML=c,d=h.children[0]);o.push(u);var h,p=void 0,m=EBX_LCB.deleteButton[i];null!=m&&((h=document.createElement("div")).innerHTML=m,p=h.children[0]);r.appendChild(EBX_Utils.createElement("li",{class:l},t,EBX_Utils.createElement("div",{class:EBX_LCB.lineActionsCSSClass},d,p)))})),t.innerHTML=s.innerHTML,document.getElementById(EBX_LCB.listId[i]).innerHTML=r.innerHTML,void 0!==EBX_LCB.previewURLs[i]&&(EBX_LCB.previewURLs[i]=o),!0},e.prototype.getValue=function(){for(var e=this.getInput(),t=e.children,i=document.getElementById(EBX_LCB.listId[this.getValuesSelectId()]).children,n=[],s=0;s<e.childElementCount;s++){var r=t[s],o=i[s];n.push({key:r.value,labelForDisplay:o.innerText})}return n},e.prototype.getValuesSelectId=function(){return this.getInput().id},e.prototype.serialize=function(){var e=this.getInput();return EBX_Utils.map(this.getValue(),(function(t){return encodeURIComponent(e.name)+"="+encodeURIComponent(t.key)})).join("&")},e.prototype.getInput=function(){return void 0===this.inputElement&&(this.inputElement=EBX_Utils.getFirstRecursiveChildMatchingTagName(this.inputWrapperEl,"select")),this.inputElement},e.prototype.setPastedValue=function(e){},e.prototype.getCopyValue=function(){return""},e}();t.EBX_FormNodeEditor_LCB=f,window.EBX_FormNodeEditor_LCB=f;var b=function(){function e(e,t){this.inputWrapperEl=e,this.args=t}return e.prototype.setValue=function(e){return null===e&&(e=ebx_nullValueForFacetEnum),this.getInput().value=e,!0},e.prototype.getValue=function(){var e=this.getInput();return e.value===ebx_nullValueForFacetEnum?null:e.value},e.prototype.serialize=function(){return encodeURIComponent(this.getInput().name)+"="+encodeURIComponent(this.getInput().value)},e.prototype.getInput=function(){return void 0===this.inputElement&&(this.inputElement=EBX_Utils.getFirstDirectChildMatchingTagName(this.inputWrapperEl,"select")),this.inputElement},e.prototype.setPastedValue=function(e){this.setValue(e.getValue())},e.prototype.getCopyValue=function(){return this.getValue()},e}();t.EBX_FormNodeEditor_DropDownBox=b,window.EBX_FormNodeEditor_DropDownBox=b;var E=function(){function e(e,t){this.inputWrapperEl=e,this.args=t}return e.prototype.setValue=function(e){var t,i,n,s,r=this.getInput(),o=r.options;for(i=o.length;i--;)o[i].selected=!1;for(t=e.length;t--;)for(n=e[t],i=o.length;i--;)(s=o[i]).value===n&&(s.selected=!0);return EBX_FormWidgets.selectMultipleRefreshSelectAll(r,!1),!0},e.prototype.getValue=function(){var e,t,i,n,s=[],r=this.getInput();for(e=0,t=r.options.length;e<t;e++)(i=r.options[e]).selected&&(n="",n=i.hasAttribute?i.hasAttribute("value")?i.value:i.text:i.attributes.value.specified?i.value:i.text,s.push(n));return s},e.prototype.serialize=function(){var e,t,i,n,s=[],r=this.getInput();for(e=0,i=r.options.length;e<i;e++)(t=r.options[e]).selected&&(n="",n=t.hasAttribute?t.hasAttribute("value")?t.value:t.text:t.attributes.value.specified?t.value:t.text,s.push(encodeURIComponent(r.name)+"="+encodeURIComponent(n)));return s.join("&")},e.prototype.getInput=function(){return void 0===this.inputElement&&(this.inputElement=EBX_Utils.getFirstRecursiveChildMatchingTagName(this.inputWrapperEl,"select")),this.inputElement},e.prototype.getCopyValue=function(){return this.getValue().join("#DDM_SEP#")},e.prototype.setPastedValue=function(e){var t=e.getValue().split("#DDM_SEP#");this.setValue(t)},e}();t.EBX_FormNodeEditor_DropDownBoxMultiple=E,window.EBX_FormNodeEditor_DropDownBoxMultiple=E;var C=function(){function e(e,t){this.inputWrapperEl=e,this.previewColorId=t}return e.prototype.setValue=function(e){return this.getInput().value=e,EBX_ColorPicker.updatePreviewForWidget(e,this.previewColorId),!0},e.prototype.getValue=function(){return this.getInput().value},e.prototype.serialize=function(){return encodeURIComponent(this.getInput().name)+"="+encodeURIComponent(this.getInput().value)},e.prototype.getInput=function(){return void 0===this.inputElement&&("input"===this.inputWrapperEl.tagName.toLowerCase()?this.inputElement=this.inputWrapperEl:this.inputElement=EBX_Utils.getFirstRecursiveChildMatchingTagName(this.inputWrapperEl,"input")),this.inputElement},e.prototype.getCopyValue=function(){return this.getValue()},e.prototype.setPastedValue=function(e){this.setValue(e.getDisplayedString())},e}();t.EBX_FormNodeEditor_ColorPicker=C,window.EBX_FormNodeEditor_ColorPicker=C;var _=function(){function e(e,t){this.value=t}return e.prototype.setValue=function(e){return!1},e.prototype.getValue=function(){return this.value},e.prototype.serialize=function(){return""},e.prototype.getCopyValue=function(){return this.getValue()},e.prototype.setPastedValue=function(e){},e}();t.EBX_FormNodeEditor_ReadOnly=_,window.EBX_FormNodeEditor_ReadOnly=_},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(0),s=function(){this.createHeight=0,this.createResizeHandleHeight=0};t.Size=s;var r=function(){function e(e){this.table=e,this.size=new s,this.isAutoHeight=!1,this.sizeToUseWhenTableIsInit=null}return e.prototype.initContainer=function(){if(this.isYUIResize=!1,this.table.isWorkspaceTable){var t=EBX_LayoutManager.workspaceLayout.getUnitByPosition(EBX_LayoutManager.workspaceUnits.center.position).getSizes();this.size.containerWidth=t.body.w,this.size.containerHeight=t.body.h,this.table.element.container.style.width=this.size.containerWidth+"px",this.table.element.container.style.height=this.size.containerHeight+"px"}else if(this.table.isEditionMode){this.size.containerWidth=EBX_LayoutManager.lastWorkspaceSizeWithoutFormBottomBarComputed.w,this.size.containerHeight=EBX_LayoutManager.lastWorkspaceSizeWithoutFormBottomBarComputed.h;var i=EBX_Form.getFormBody();i.style.overflow="hidden",i.style.padding="0";var n=EBX_Form.getFirstValidationReportFound(i);null!==n&&(n.style.display="none"),e.enableFormWorkspaceResizeListener(this,!1),this.table.callFunctionWhenTableIsReady(this.table.gridEditModule.initWhenTableIsReady,null,this.table.gridEditModule)}else this.isWidgetFullSizeTab=this.isAssociationNodeAloneInWorkspaceTabContent(),this.isWidgetFullSizeTab?(this.size.containerWidth=this.table.element.container.offsetWidth-2*EBX_LayoutManager.getWorkspaceContentMarginHorizontal(),this.size.containerHeight=this.table.element.container.offsetHeight,e.disableWorkspaceTabOverflow(this),e.enableFormWorkspaceResizeListener(this,!1)):(this.isWidgetAvailableWidthAutoHeight=!0,this.isWidgetAvailableWidthAutoHeight?(this.size.containerWidth=this.table.element.container.offsetWidth,this.size.containerHeight=this.table.element.container.offsetHeight,this.table.element.compactTableShadow=document.createElement("div"),this.table.element.compactTableShadow.className="ebx_tvCompactTableShadow",this.table.element.container.insertBefore(this.table.element.compactTableShadow,this.table.element.container.firstChild),this.isAutoHeight=!0,this.table.callFunctionWhenTableIsReady(this.resizeContainers,null,this),e.enableFormWorkspaceResizeListener(this,!0)):(this.size.containerWidth=this.table.element.container.offsetWidth,this.size.containerHeight=this.table.element.container.offsetHeight,this.yui_resize=new YAHOO.util.Resize(this.table.element.container,{handles:["br"],proxy:!0,ghost:!0,setSize:!1}),this.yui_resize.getProxyEl().className+=" ebx_tvContainerResizeProxy",this.yui_resize.set("minWidth",e.minWidth),this.yui_resize.set("minHeight",e.minHeight),this.yui_resize.subscribe("endResize",this.endResizeListener,null,this),this.isYUIResize=!0))},e.prototype.isAssociationNodeAloneInWorkspaceTabContent=function(){if(!1===EBX_Utils.matchCSSClass(this.table.element.container.parentElement,"ebx_AssociationNodeTable"))return!1;var e=EBX_Utils.getFirstParentMatchingCSSClass(this.table.element.container,EBX_Form.WorkspaceFormTabContentCSSClass);if(null===e)return!1;var t=this.table.element.container.parentElement.parentElement.parentElement.parentElement.parentElement===e&&EBX_Utils.matchCSSClass(this.table.element.container.parentElement.parentElement.parentElement,EBX_Form.InputClassName),i=!1;if(this.table.element.container.parentElement.parentElement.parentElement===e){var n=EBX_Utils.childElementCount(e);(1===n||2===n&&EBX_Utils.getFirstDirectChildMatchingCSSClass(e,"ebx_form_bottom_bar_spacer"))&&(i=!0)}return t||i},e.prototype.addListeners=function(){this.table.isWorkspaceTable&&EBX_LayoutManager.workspaceLayout.addListener("resize",this.resizeFromYUILayout,null,this)},e.prototype.resizeFromYUILayout=function(e){var t=e.sizes.center.h,i=e.sizes.center.w;this.resize(i,t)},e.prototype.formWorkspaceResizeListener=function(e,t){this.sizeToUseWhenTableIsInit=e,this.sizeWithoutFormBottomBarToUseWhenTableIsInit=t,this.table.callFunctionWhenTableIsInit(this.resizeWhenTableIsInit,null,this)},e.prototype.resizeWhenTableIsInit=function(){if(null!==this.sizeToUseWhenTableIsInit){if(this.table.isEditionMode){if(null==this.sizeWithoutFormBottomBarToUseWhenTableIsInit)return;this.resize(this.sizeWithoutFormBottomBarToUseWhenTableIsInit.w,this.sizeWithoutFormBottomBarToUseWhenTableIsInit.h)}if(this.isWidgetFullSizeTab)this.resizeFromAssociationNodeFullTab(this.sizeToUseWhenTableIsInit);else{if(this.isWidgetAvailableWidthAutoHeight){var e=this.size.containerHeight;return this.isAutoHeight&&(e=this.getAutoHeight()),void this.resizeFromSuperContainerAvailableWidth(e)}this.sizeToUseWhenTableIsInit=null,this.sizeWithoutFormBottomBarToUseWhenTableIsInit=null}}},e.prototype.resizeFromAssociationNodeFullTab=function(e){void 0===this.table.element.external.associationNodeTableToolbar&&(this.table.element.external.associationNodeTableToolbar=EBX_Utils.getFirstDirectChildMatchingCSSClass(this.table.element.container.parentElement,"ebx_AssociationNodeTableToolbar"));var t=e.w,i=e.h;i-=this.table.element.external.associationNodeTableToolbar.offsetHeight;var n=this.size.containerWidth;this.resize(t,i),this.size.containerWidth!==n&&this.resizeFromAssociationNodeFullTab(e)},e.prototype.getAutoHeight=function(){var t=this.size.headerHeight,i=this.table.getState();return i===n.EBX_Table_State.NORMAL?t+=this.table.element.update.getLinesHeightsSum():i!==n.EBX_Table_State.EMPTY&&i!==n.EBX_Table_State.CANCELLED||(t+=this.table.element.messageEmpty.offsetHeight),this.table.scroll.hasHorizontalScrollbarVisible()&&(t+=this.table.scroll.hScrollHeight),t<e.minHeight&&(t=e.minHeight),t},e.prototype.prepareTableToAutoWidth=function(){var e=this.size.containerHeight;this.isAutoHeight&&(e=this.getAutoHeight()),this.resize(0,e)},e.prototype.resizeFromSuperContainerAvailableWidth=function(e){void 0===this.table.element.external.superContainerToFillWidth&&(this.table.element.external.superContainerToFillWidth=this.table.element.container.parentElement.parentElement.parentElement,this.isInAFormLineInput=EBX_Utils.getFirstParentMatchingCSSClass(this.table.element.container,EBX_Form.InputClassName)===this.table.element.external.superContainerToFillWidth);var t=this.table.element.external.superContainerToFillWidth.clientWidth;if(this.isInAFormLineInput){t-=2*EBX_Form.InputPadding;var i=EBX_Form.getFormScrollingContainer(this.table.element.external.superContainerToFillWidth);if(this.table.element.external.superContainerToFillWidth.parentElement.parentElement.parentElement.parentElement===i)!1===i.scrollHeight>i.clientHeight&&(t-=this.table.scroll.vScrollWidth)}this.resize(t,e)},e.prototype.endResizeListener=function(e){this.resize(e.width+2,e.height+2)},e.prototype.resize=function(t,i){void 0!==t&&void 0!==i&&(t<e.minWidth&&(t=e.minWidth),i<e.minHeight&&(i=e.minHeight),this.table.element.container.style.width=t+"px",this.table.element.container.style.height=i+"px",this.size.containerWidth=t,this.size.containerHeight=i),this.size.createHeight>this.getCreateMaxHeight()&&(this.size.createHeight=this.getCreateMaxHeight()),this.table.scroll.refreshScrollUpdateHeight(this.size),this.resizeContainers(),e.resizeToolbar(),EBX_Events.trigger(this,"resize",{width:t,height:i})},e.prototype.resizeContainers=function(){var t,i,n,s=this.table.header.columnDefinitions[this.table.nbFixedColumns-1].cumulativeWidth;if(this.size.fixedColumnsWidth=s,this.size.fixedColumnsWidth+e.mainContainerMinWidth>this.size.containerWidth&&(this.size.fixedColumnsWidth=this.size.containerWidth-e.mainContainerMinWidth),i=this.size.containerWidth-this.size.fixedColumnsWidth,this.table.element.hasCreatePart()&&(this.table.element.create.fixed.scrollWrapper.style.height=this.table.element.create.getLinesHeightsSum()+"px",this.table.element.create.main.scrollWrapper.style.height=this.table.element.create.getLinesHeightsSum()+"px"),this.table.scroll.refreshScrollProperties(this.size),this.isAutoHeight&&(n=this.getAutoHeight())!==this.size.containerHeight)this.resize(this.size.containerWidth,n);else{if(0,this.table.header.elements.fixedContainer.style.height=this.size.headerHeight+0+"px",this.table.header.elements.mainContainerWrapper.style.height=this.size.headerHeight+0+"px",this.table.header.elements.mainContainer.style.height=this.size.headerHeight+0+"px",this.table.header.elements.fixed.rows.item(0).style.height=this.size.headerHeight+0+"px",this.table.header.elements.main.rows.item(0).style.height=this.size.headerHeight+0+"px",this.table.scroll.fixedColumnsHasHScroll?(this.table.element.update.fixed.scroll.style.height=this.table.scroll.mainScrollerHeight+"px",this.table.element.update.fixed.scroll.style.overflowX="scroll"):(this.table.element.update.fixed.scroll.style.height=this.table.scroll.mainScrollerHeight-this.table.scroll.currentScrollbarHeight+"px",this.table.element.update.fixed.scroll.style.overflowX="hidden"),this.table.scroll.mainScrollerHasVScroll||this.table.scroll.fixedColumnsHasHScroll?this.table.element.update.fixed.scroll.style.overflow="":this.table.element.update.fixed.scroll.style.overflow="hidden",this.table.scroll.mainScrollerHasVScroll||this.table.scroll.mainScrollerHasHScroll?this.table.element.update.main.scroll.style.overflow="":this.table.element.update.main.scroll.style.overflow="hidden",this.table.isEditionMode){var r=EBX_Form.getWorkspaceFormBottomBarHeight();this.table.element.update.fixed.scrollMaker.style.height=r+"px",this.table.element.update.main.scrollMaker.style.height=r+"px",EBX_Form.letScrollbarDisplay(this.table.scroll.fixedColumnsHasHScroll||this.table.scroll.mainScrollerHasHScroll,this.table.scroll.mainScrollerHasVScroll)}if(t=0,this.table.scroll.hasScrollbarVisible()){if(i-=2,this.table.isWorkspaceTable){var o=EBX_LayoutManager.workspaceLayout.getUnitByPosition(EBX_LayoutManager.workspaceUnits.filters.position);!1!==o&&0===o.getSizes().body.w&&i++}t=1}else this.size.fixedColumnsWidth++,i--;var l,a;this.size.fixedColumnsWidth+t===-1?(this.table.header.elements.fixedContainer.style.width="0",l="0"):(this.table.header.elements.fixedContainer.style.width=this.size.fixedColumnsWidth+t+"px",l=this.size.fixedColumnsWidth+t+"px"),this.table.header.elements.mainContainerWrapper.style.width=i+"px",this.table.element.update.fixed.scrollWrapper.style.width=l,this.table.element.hasCreatePart()&&(this.table.element.create.fixed.scrollWrapper.style.width=l),a=this.size.fixedColumnsWidth+t+this.table.scroll.currentScrollbarWidth===-1?"0":this.size.fixedColumnsWidth+t+this.table.scroll.currentScrollbarWidth+"px",this.table.element.update.fixed.scroll.style.width=a,this.table.element.hasCreatePart()&&(this.table.element.create.fixed.scroll.style.width=this.size.fixedColumnsWidth+t+this.table.scroll.vScrollWidth+"px"),this.table.element.update.main.scroll.style.width=i+1+"px",this.table.element.hasCreatePart()&&(this.table.element.create.main.scrollWrapper.style.width=i-this.table.scroll.currentScrollbarWidth+1+"px",this.table.element.create.main.scroll.style.width=i-this.table.scroll.currentScrollbarWidth+"px",this.table.scroll.createScrollerHasVScroll=this.size.createHeight<this.table.element.create.getLinesHeightsSum());var d=this.table.header.columnDefinitions[this.table.header.columnDefinitions.length-1].cumulativeWidth;if(d<0&&(d=0),this.table.element.hasCreatePart()){var u=this.size.fixedColumnsWidth+d;u<this.size.containerWidth?this.table.element.create.resize.style.width=u+"px":this.table.element.create.resize.style.width=""}this.table.header.elements.mainContainer.style.width=i-this.table.scroll.currentScrollbarWidth+"px",this.table.element.hasUpdatePart()&&!this.table.element.isEmpty()||(this.table.element.update.fixed.scrollMaker.style.width=s+t+"px",this.table.element.update.main.scrollMaker.style.width=d+"px"),this.size.containerHeight<e.heightBelowTableIsSmall?this.table.element.messageContainer.style.paddingTop="0":this.table.element.messageContainer.style.paddingTop=this.size.headerHeight+"px",this.table.element.messageEmpty.style.marginTop=this.size.headerHeight+"px",this.table.scroll.hasScrollbarVisible()?(this.table.element.messageContainer.style.width=this.size.containerWidth+"px",this.table.element.messageContainer.style.height=this.size.headerHeight+this.table.scroll.mainScrollerHeight+"px",this.table.element.messageEmpty.style.width=this.size.containerWidth+"px"):(this.table.element.messageContainer.style.width=this.size.fixedColumnsWidth+this.table.header.columnDefinitions[this.table.header.columnDefinitions.length-1].cumulativeWidth+"px",this.table.element.messageContainer.style.height=this.size.headerHeight+this.table.element.update.getLinesHeightsSum()+"px",this.table.element.messageEmpty.style.width=this.size.fixedColumnsWidth+this.table.header.columnDefinitions[this.table.header.columnDefinitions.length-1].cumulativeWidth+"px"),this.table.element.compactTableShadow&&(this.table.element.compactTableShadow.style.height=this.size.containerHeight+"px",this.table.element.compactTableShadow.style.width=this.size.fixedColumnsWidth+this.table.header.columnDefinitions[this.table.header.columnDefinitions.length-1].cumulativeWidth+"px"),this.table.refreshContainerCSSClasses(),this.table.header.alignResizeKnob(this.table.nbFixedColumns-1),this.table.isEditionMode&&this.table.gridEditModule.resizeWidgetContainer(),this.table.scroll.refreshScrollPosition()}},e.prototype.refreshContainerCSSClasses=function(t){this.isYUIResize&&t.push("yui-resize"),this.size.containerHeight<e.heightBelowTableIsSmall&&t.push("ebx_tvSmallHeight"),this.isAutoHeight&&t.push("ebx_tvAutoHeight")},e.resizeToolbar=function(){var e=document.getElementById("ebx_WorkspaceToolbar");if(null!=e){var t=document.getElementById("ebx_WorkspaceToolbarCenter");if(null!=t){var i=e.offsetWidth;i>1e3?EBX_Utils.matchCSSClass(t,"ebx_ToolsAlignCenterCompressed")&&EBX_Utils.removeCSSClass(t,"ebx_ToolsAlignCenterCompressed"):EBX_Utils.matchCSSClass(t,"ebx_ToolsAlignCenterCompressed")||EBX_Utils.addCSSClass(t,"ebx_ToolsAlignCenterCompressed"),i>=700&&i<900?EBX_Utils.matchCSSClass(t,"ebx_ToolsAlignCenterIntermediateShort")||EBX_Utils.addCSSClass(t,"ebx_ToolsAlignCenterIntermediateShort"):EBX_Utils.matchCSSClass(t,"ebx_ToolsAlignCenterIntermediateShort")&&EBX_Utils.removeCSSClass(t,"ebx_ToolsAlignCenterIntermediateShort"),i>=900&&i<1e3?EBX_Utils.matchCSSClass(t,"ebx_ToolsAlignCenterIntermediateLarge")||EBX_Utils.addCSSClass(t,"ebx_ToolsAlignCenterIntermediateLarge"):EBX_Utils.matchCSSClass(t,"ebx_ToolsAlignCenterIntermediateLarge")&&EBX_Utils.removeCSSClass(t,"ebx_ToolsAlignCenterIntermediateLarge");var n=document.getElementById("ebx_WorkspaceAdvancedSearch");null!=n&&(i<1125?EBX_Utils.matchCSSClass(n,"ebx_AdvancedSearchPaneCompressed")||EBX_Utils.addCSSClass(n,"ebx_AdvancedSearchPaneCompressed"):EBX_Utils.matchCSSClass(n,"ebx_AdvancedSearchPaneCompressed")&&EBX_Utils.removeCSSClass(n,"ebx_AdvancedSearchPaneCompressed"))}}},e.prototype.getCreateMaxHeight=function(){var e=this.table.resizeModule.size.containerHeight-this.table.resizeModule.size.headerHeight-50;return e<0&&(e=0),e},e.prototype.getCreateMaxHeightForAutoExpand=function(){return.5*Math.round(this.table.resizeModule.size.containerHeight-this.table.resizeModule.size.headerHeight)},e.enableFormWorkspaceResizeListener=function(t,i){!1===e.formWorkspaceResizeListenerEnabled&&(EBX_LayoutManager.resizeWorkspaceListeners.push(e.formWorkspaceResizeListener),e.formWorkspaceResizeListenerEnabled=!0),i?e.tablesNeedToBeSmallWithOthersToComputeWidthListeningWorkspaceResize.push(t):e.tablesListeningWorkspaceResize.push(t),null!==EBX_LayoutManager.lastWorkspaceSizeComputed&&t.formWorkspaceResizeListener(EBX_LayoutManager.lastWorkspaceSizeComputed,EBX_LayoutManager.lastWorkspaceSizeWithoutFormBottomBarComputed)},e.formWorkspaceResizeListener=function(t,i){var n;for(n=e.tablesListeningWorkspaceResize.length-1;n>=0;n--)e.tablesListeningWorkspaceResize[n].formWorkspaceResizeListener(t,i);for(n=e.tablesNeedToBeSmallWithOthersToComputeWidthListeningWorkspaceResize.length-1;n>=0;n--)e.tablesNeedToBeSmallWithOthersToComputeWidthListeningWorkspaceResize[n].prepareTableToAutoWidth();for(n=e.tablesNeedToBeSmallWithOthersToComputeWidthListeningWorkspaceResize.length-1;n>=0;n--)e.tablesNeedToBeSmallWithOthersToComputeWidthListeningWorkspaceResize[n].formWorkspaceResizeListener(t)},e.disableWorkspaceTabOverflow=function(e){var t=EBX_Utils.getFirstParentMatchingCSSClass(e.table.element.container,EBX_Form.WorkspaceFormTabContentCSSClass);null!==t&&(t.style.overflow="hidden")},e.mainContainerMinWidth=100,e.heightBelowTableIsSmall=100,e.formWorkspaceResizeListenerEnabled=!1,e.tablesListeningWorkspaceResize=[],e.tablesNeedToBeSmallWithOthersToComputeWidthListeningWorkspaceResize=[],e.minWidth=200,e.minHeight=50,e}();t.Resize=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return e.PREFIX_WIDGET="ebx_mes_",e.DIRTY=e.PREFIX_WIDGET+"dirty",e.ICONED=e.PREFIX_WIDGET+"iconed",e.LOADED=e.PREFIX_WIDGET+"loaded",e.EMPTY=e.PREFIX_WIDGET+"empty",e.OPENED=e.PREFIX_WIDGET+"open",e.TREE_CTN=e.PREFIX_WIDGET+"tree_ctn",e.ID_TREE_CTN=e.TREE_CTN+"_",e.TREE=e.PREFIX_WIDGET+"tree",e.ID_TREE=e.TREE+"_",e.LOADING=e.PREFIX_WIDGET+"loading",e.BODY=e.PREFIX_WIDGET+"body",e.ID_BODY=e.BODY+"_",e.ITEM_HELP=e.PREFIX_WIDGET+"item_help",e.NOT_SELECTED=e.PREFIX_WIDGET+"not_selected",e.HAS_EMPTY=e.PREFIX_WIDGET+"input_has_empty_button",e.HIDDEN=e.PREFIX_WIDGET+"hidden",e.ICON=e.PREFIX_WIDGET+"icon",e.ID_BUTT_LIST=e.PREFIX_WIDGET+"display_list_",e.ITEM_CTN=e.PREFIX_WIDGET+"item_ctn",e}();t.ModelElementSelector_CSS=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(3),s=function(){function e(){}return e.updateNoSearchIcon=function(){var e=document.getElementsByClassName("ebx_NoSearch");if(null!=e)for(var t=n.AdvancedSearchModel.isSearchApplied(EBX_AdvancedSearch.state),i=0;i<e.length;i++){var s=e[i];t?EBX_Utils.addCSSClass(s,"ebx_NoSearch_Show"):EBX_Utils.removeCSSClass(s,"ebx_NoSearch_Show")}},e.addIncorrectFilterMessage=function(){EBX_UserMessageManager.addMessage(EBX_AdvancedSearch.messages.incorrectFilter,EBX_UserMessageManager.ERROR)},e}();t.AdvancedSearchPane=s},function(e,t,i){"use strict";var n,s=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])},function(e,t){function i(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});Object.defineProperty(t,"__esModule",{value:!0});var r=i(28),o=i(29),l=function(){function e(){this.main=new o.Table_Element_Main,this.fixed=new o.Table_Element_WithScrollWrapper,this.rowsDisplayedLength=0}return e.prototype.clearRowsProperties=function(){this.currentRowsProperties=[],this.rowsDisplayedLength=0,this.linesHeightsSum=0},e.prototype.getRowProperty=function(e){return this.currentRowsProperties[e]},e.prototype.getNumberOfRowsDisplayed=function(){return this.rowsDisplayedLength},e.prototype.getLinesHeightsSum=function(){return this.linesHeightsSum},e.prototype.setLinesHeightsSum=function(e){this.linesHeightsSum=e},e.prototype.clearRowProperty=function(e){this.currentRowsProperties[e]={}},e.prototype.incrementNumberOfRowDisplayed=function(){this.rowsDisplayedLength++},e.FIXED_TABLE_CSS_CLASS="ebx_tvFixed",e.MAIN_TABLE_CSS_CLASS="ebx_tvMain",e}();t.Table_PartsContainer=l;var a=function(e){function t(t){var i=e.call(this)||this;return i.table=t,i.main=new o.Table_Element_WithScrollWrapper,i}return s(t,e),t.prototype.buildTableForCreationIfAbsent=function(){var e=this.table.element.create;e.wrapper=document.createElement("div"),e.wrapper.className=t.WRAPPER_CSS_CLASS,e.fixed.scrollWrapper=document.createElement("div"),e.fixed.scrollWrapper.className="ebx_tvFixedScrollerWrapper",e.fixed.scrollWrapper.style.width=this.table.resizeModule.size.fixedColumnsWidth+"px",e.fixed.scroll=document.createElement("div"),e.fixed.scroll.className="ebx_tvFixedScroller",e.fixed.scroll.style.width=this.table.resizeModule.size.fixedColumnsWidth+50+"px",e.fixed.table=document.createElement("table"),e.fixed.table.className=l.FIXED_TABLE_CSS_CLASS,e.fixed.table.appendChild(document.createElement("tbody")),e.fixed.scrollMaker=document.createElement("div"),e.fixed.scrollMaker.className="ebx_tvScrollMaker",e.fixed.scroll.appendChild(e.fixed.table),e.fixed.scroll.appendChild(e.fixed.scrollMaker),e.fixed.scrollWrapper.appendChild(e.fixed.scroll),e.main.scrollWrapper=document.createElement("div"),e.main.scrollWrapper.className="ebx_tvMainScrollerWrapper",e.main.scrollWrapper.style.width=this.table.resizeModule.size.containerWidth-this.table.resizeModule.size.fixedColumnsWidth+"px",e.main.scroll=document.createElement("div"),e.main.scroll.className="ebx_tvMainScroller",e.main.scroll.style.width=this.table.resizeModule.size.containerWidth-this.table.resizeModule.size.fixedColumnsWidth+"px",e.main.table=document.createElement("table"),e.main.table.className=l.MAIN_TABLE_CSS_CLASS,e.main.table.appendChild(document.createElement("tbody")),e.main.scrollMaker=document.createElement("div"),e.main.scrollMaker.className="ebx_tvScrollMaker",e.main.scroll.appendChild(e.main.table),e.main.scroll.appendChild(e.main.scrollMaker),e.main.scrollWrapper.appendChild(e.main.scroll),e.wrapper.appendChild(e.fixed.scrollWrapper),e.wrapper.appendChild(e.main.scrollWrapper),this.table.element.container.insertBefore(e.wrapper,this.table.element.update.fixed.scrollWrapper),e.resize=document.createElement("div"),e.resize.className="ebx_tvResizerForCreate",e.resizeHandle=document.createElement("div"),e.resizeHandle.className="ebx_tvResizerDragForCreate",e.resize.appendChild(e.resizeHandle),this.table.element.container.insertBefore(e.resize,this.table.element.update.fixed.scrollWrapper),this.table.scroll.addListenerTo(e),YAHOO.util.Event.addListener(this.table.element.create.wrapper,"scroll",this.table.gridEditModule.synchronizePositionOfCurrentWidgetEditedWithScroll,null,this.table.gridEditModule),YAHOO.util.Event.addListener(e.fixed.table,"click",this.table.navigation.clickOnTableListener,e.fixed.table,this.table.navigation),YAHOO.util.Event.addListener(e.main.table,"click",this.table.navigation.clickOnTableListener,e.main.table,this.table.navigation),YAHOO.util.Event.addListener(e.fixed.table,"dblclick",this.table.dblclickOnTableListener,e.fixed.table,this.table),YAHOO.util.Event.addListener(e.main.table,"dblclick",this.table.dblclickOnTableListener,e.main.table,this.table),YAHOO.util.Event.addListener(e.fixed.table,"mouseover",this.table.mouseoverTableListener,e.fixed.table,this.table),YAHOO.util.Event.addListener(e.main.table,"mouseover",this.table.mouseoverTableListener,e.main.table,this.table),YAHOO.util.Event.addListener(e.fixed.table,"mouseout",this.table.mouseoutTableListener,e.fixed.table,this.table),YAHOO.util.Event.addListener(e.main.table,"mouseout",this.table.mouseoutTableListener,e.main.table,this.table),e.clearRowsProperties(),this.table.resizeModule.size.createResizeHandleHeight=5,this.resizeCreate=new r.Table_ResizeCreate(this.table),this.resizeCreate.init()},t.WRAPPER_CSS_CLASS="ebx_tvWrapperForCreate",t}(l);t.Table_Element_Create=a},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.CONTAINER_ID="ebx_workspaceTable_container"}(t.HierarchyWidgetConstants||(t.HierarchyWidgetConstants={}))},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(8),s=i(11),r=i(16),o=i(17),l=i(41),a=function(){function e(e,t,i,n,l,a){var d=this;this.id=e,this.path=i,this.isAjaxPrevalidationOn=l,this.lastValidValue=null,this.input=null,this.icon=null,this.container=null,this.emptyButton=null,this.helpInputButton=null,this.helpInputButtonContainer=null,this.listButton=null,this.onFormCtnScroll=null,this.onTreeSelect=function(e){EBX_FormNodeIndex.getFormNode(d.path).setValue(e)},this.showPanel=function(){var e=function(){var e=d.input.value!==d.getNotDefinedLabel()&&d.input.value!==(d.lastValidValue?d.lastValidValue.label:"");d.panelObj.showPanelAndRefreshTree(e?d.input.value:null)};if(d.panelObj.isVisible())e();else{EBX_Utils.addCSSClass(d.input,s.ModelElementSelector_CSS.OPENED),EBX_LayoutManager.bodyLayout.addListener("resize",d.hidePanelAndResetValue,null,null),EBX_LayoutManager.bodyLayout.addListener("click",d.hidePanelAndResetValue,null,null);var t=EBX_Form.getFormScrollingContainer(d.input);t.fixedScrollTop=t.scrollTop,t.fixedScrollLeft=t.scrollLeft,e(),EBX_ButtonUtils.setStateToToggleButton(d.listButton,!0),d.onFormCtnScroll=function(){t.scrollTop=t.fixedScrollTop,t.scrollLeft=t.fixedScrollLeft},YAHOO.util.Event.addListener(t,"scroll",d.onFormCtnScroll)}},this.hidePanel=function(){EBX_LayoutManager.bodyLayout.removeListener("resize",d.hidePanelAndResetValue),EBX_LayoutManager.bodyLayout.removeListener("click",d.hidePanelAndResetValue);var e=EBX_Form.getFormScrollingContainer(d.input);null!==d.onFormCtnScroll&&(YAHOO.util.Event.removeListener(e,"scroll",d.onFormCtnScroll),d.onFormCtnScroll=null),EBX_Utils.removeCSSClass(d.input,s.ModelElementSelector_CSS.OPENED),d.panelObj.hide(),EBX_ButtonUtils.setStateToToggleButton(d.listButton,!1),o.EBX_ScrollMaker.getScrollMaker(d.container).reset()},this.hidePanelAndResetValue=function(){d.refreshDisplayedValue(d.lastValidValue)},this.container=document.getElementById(e),this.input=document.getElementById(t),this.icon=EBX_Utils.getFirstDirectChildMatchingCSSClass(this.input.parentElement,s.ModelElementSelector_CSS.ICON),this.helpInputButtonContainer=EBX_Utils.getFirstDirectChildMatchingCSSClass(this.input.parentElement,"ebx_mes_input_help_ctn"),this.helpInputButton=this.helpInputButtonContainer.firstElementChild,EBX_LayoutManager.isIE8&&EBX_Utils.addCSSClass(this.helpInputButton,"ebx_mes_help_ie"),this.emptyButton=document.getElementById(e+EBX_Form.EmptySuffix),this.listButton=document.getElementById(s.ModelElementSelector_CSS.ID_BUTT_LIST+e);var u=EBX_Utils.firstElementChild(this.container);if(u.value!==ebx_nullValueForFacetEnum){var c=EBX_Utils.previousElementSibling(this.input);this.lastValidValue={id:u.value,label:this.input.value,urlInfos:n,icon:c.innerHTML}}this.panelObj=new r.MES_Panel(this.id,a,this.container,this.input,this.onTreeSelect),this.initListener()}return e.prototype.initListener=function(){var e=this;YAHOO.util.Event.addListener(this.input,"keydown",(function(t){e.onKeyDown(t)})),YAHOO.util.Event.addListener(this.input,"blur",(function(t){e.onBlur(t)}))},e.prototype.onKeyDown=function(e){this.isAnInterestingKeyEvent(e)&&(null===this.lastValidValue&&this.input.value===this.getNotDefinedLabel()&&(this.input.value=""),this.panelObj.processKeyBoardEvent(e)||(EBX_Utils.addCSSClass(this.input,s.ModelElementSelector_CSS.DIRTY),EBX_NodeDocumentation.hideCurrentDocumentationNow(),clearTimeout(this.inputDebounce),this.inputDebounce=window.setTimeout(this.showPanel,d)))},e.prototype.isAnInterestingKeyEvent=function(e){return!!l.isAnInterestingKeyEventBasic(e)&&(e.keyCode===EBX_Utils.keyCodes.TAB||e.keyCode===EBX_Utils.keyCodes.ESCAPE?(this.refreshDisplayedValue(this.lastValidValue),!1):!!(e.keyCode!==EBX_Utils.keyCodes.LEFT&&e.keyCode!==EBX_Utils.keyCodes.RIGHT&&e.keyCode!==EBX_Utils.keyCodes.UP||this.panelObj.isVisible())&&(!(e.keyCode===EBX_Utils.keyCodes.DOWN&&!this.panelObj.isVisible())||(this.onClickOpenList(),YAHOO.util.Event.stopEvent(e),!1)))},e.prototype.onBlur=function(e){this.panelObj.isVisible()?YAHOO.util.Event.stopEvent(e):this.refreshDisplayedValue(this.lastValidValue)},e.prototype.onClickInputHelp=function(){EBX_NodeDocumentation.displayDocumentation(this.container),this.input.focus()},e.prototype.setToNull=function(){var e=EBX_FormNodeIndex.getFormNode(this.path);null!=e.getValue()&&(e.setValue(null),this.hidePanel(),this.input.focus())},e.prototype.onClickOpenList=function(){EBX_NodeDocumentation.hideCurrentDocumentationNow(),this.input.focus(),this.showPanel()},e.prototype.onClickCloseList=function(){this.hidePanel()},e.prototype.setError=function(e){EBX_FormNodeIndex.getFormNode(this.path).setMessage(e)},e.prototype.clearError=function(){EBX_FormNodeIndex.getFormNode(this.path).setMessage(new EBX_ValidationMessage)},e.prototype.setCustomNullValueLabel=function(e){this.customNullValueLabel=e},e.prototype.onValueChange=function(e,t){void 0===t&&(t=!0);var i=!this.lastValidValue||!e||e.id!==this.lastValidValue.id;this.lastValidValue=e,i&&n.EBX_ModelElementSelector_Registry.NotifyValueChange(this.path,e),this.refreshDisplayedValue(e,t)},e.prototype.getNotDefinedLabel=function(){return this.customNullValueLabel?this.customNullValueLabel:EBX_FACET_ENUMERATION_LABEL_NULL_VALUE},e.prototype.refreshDisplayedValue=function(e,t){void 0===t&&(t=!0),this.input.value=e&&e.label?e.label:this.getNotDefinedLabel(),e&&e.icon?(this.icon.innerHTML=e.icon,EBX_Utils.addCSSClass(this.input,s.ModelElementSelector_CSS.ICONED)):(EBX_Utils.removeCSSClass(this.input,s.ModelElementSelector_CSS.ICONED),this.icon.innerHTML=""),t&&this.isAjaxPrevalidationOn&&this.clearError(),this.refreshCSSButtons(this.lastValidValue),e&&e.urlInfos&&(EBX_NodeDocumentation.docPanels[this.id]=e.urlInfos),EBX_Utils.removeCSSClass(this.input,s.ModelElementSelector_CSS.DIRTY),this.hidePanel()},e.prototype.refreshCSSButtons=function(e){var t=!e;(this.emptyButton&&(EBX_ButtonUtils.setButtonDisabled(this.emptyButton,t),t?(EBX_Utils.addCSSClass(this.emptyButton,EBX_FormWidgets.emptyButtonHidden_CSSClass),EBX_Utils.removeCSSClass(this.input,s.ModelElementSelector_CSS.HAS_EMPTY)):(EBX_Utils.removeCSSClass(this.emptyButton,EBX_FormWidgets.emptyButtonHidden_CSSClass),EBX_Utils.addCSSClass(this.input,s.ModelElementSelector_CSS.HAS_EMPTY))),EBX_Utils.removeCSSClass(this.input,"ebx_InputWithHelpButton"),EBX_Utils.addCSSClass(this.helpInputButtonContainer,s.ModelElementSelector_CSS.HIDDEN),t)?(EBX_Utils.addCSSClass(this.input,EBX_FormWidgets.inputEmpty_CSSClass),EBX_Utils.removeCSSClass(this.input,EBX_FormWidgets.inputWithEmptyButton_CSSClass)):(EBX_Utils.removeCSSClass(this.input,EBX_FormWidgets.inputEmpty_CSSClass),EBX_Utils.addCSSClass(this.input,EBX_FormWidgets.inputWithEmptyButton_CSSClass),!t&&e.urlInfos&&(EBX_Utils.addCSSClass(this.input,"ebx_InputWithHelpButton"),EBX_Utils.removeCSSClass(this.helpInputButtonContainer,s.ModelElementSelector_CSS.HIDDEN)))},e.prototype.notifyInputPositionChanged=function(){this.panelObj.refreshPanelAlignment()},e.prototype.getPanel=function(){return this.panelObj},e}();t.EBX_ModelElementSelector=a;var d=400},function(e,t,i){"use strict";var n=this&&this.__assign||Object.assign||function(e){for(var t,i=1,n=arguments.length;i<n;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e};Object.defineProperty(t,"__esModule",{value:!0});var s=i(8),r=i(11),o=i(39),l=i(40),a=function(){function e(e,t,i,n,l){var a=this;this.widgetId=e,this.componentIndex=t,this.parentContainer=i,this.linkedInput=n,this.onSelectValue=l,this.treeContainer=null,this.panel=null,this.widgetTree=null,this.panelBody=null,this.hoveredNode=null,this.selectNodeFirstChildAfterExpand=!1,this.resize=null,this.mousePosition=new YAHOO.util.Region(0,0,0,0),this.onLoadingFail=function(e){s.EBX_ModelElementSelector_Registry.SetError(a.widgetId,e)},this.onTreeClick=function(e){var t=e.event.srcElement||e.event.target,i=EBX_Utils.matchCSSClass(t,r.ModelElementSelector_CSS.ITEM_HELP)||EBX_Utils.getFirstParentMatchingCSSClass(t,r.ModelElementSelector_CSS.ITEM_HELP),n=EBX_Utils.matchCSSClass(t,r.ModelElementSelector_CSS.ITEM_CTN)||EBX_Utils.getFirstParentMatchingCSSClass(t,r.ModelElementSelector_CSS.ITEM_CTN);if(!i&&n&&e.hasOwnProperty("node")&&e.node.data.isEnabled){var s=e.node.data;s.isSeeMore?a.loadNextItems(e.node):window.requestAnimationFrame((function(){a.onSelectValue(s)}))}YAHOO.util.Event.stopEvent(e.event),a.linkedInput.focus()},this.loadNextItems=function(e){var t=e.data;e.setDynamicLoad((function(){}),1),e.isLeaf=!1,e.expanded=!0,e.isLoading=!0,t.isEnabled=!1,t.html=a.templateItem(t),e.data.loadChildren((function(t){a.isVisible()&&(a.addTreeItems(t,e.parent),e.isLoading=!1,e.enableHighlight=!1,a.hoveredNode===e&&a.highlightNode(e.nextSibling?e.nextSibling:e.previousSibling,!1),a.widgetTree.removeNode(e,!0))}),a.onLoadingFail)},this.templateItem=function(e){var t="";e.isEnabled||(t=" ebx_mes_disabled");var i=e.icon?e.icon:"",n="",s='EBX_ModelElementSelector_Registry.GetWidget("'+a.widgetId+'").getPanel()';return e.urlInfos&&(n='\n                <button id="'+e.id+'"\n                    class="ebx_mes_item_help ebx_mes_not_selected ebx_IconFlatButtonSmall ebx_LabelDocButton"\n                    type="button" title="'+EBX_LocalizedMessage.label_showDetails+"\"\n                    onclick='"+s+'.onClickItemHelp(this, event);\' >\n                    <span class="ebx_SmallIcon">&nbsp;</span>\n                </button>\n            '),'\n\t\t<div class="ebx_mes_item_mask"\n\t\t\tonmousemove=\''+s+".onNodeHighlight(this, event);'></div>\n\t\t<div class=\"ebx_mes_item_ctn"+t+"\"\n\t\t\tonmousemove='"+s+".onNodeHighlight(this, event);'>\n\t\t\t<div class=\"ebx_mes_item\"\n\t\t\t\tonmousemove='"+s+".onNodeHighlight(this, event);'>\n\t\t\t\t<span onmousemove='"+s+".onNodeHighlight(this, event);'\n\t\t\t\t\tonmouseover='"+s+".onNodeHighlightSearch(this, true);'\n\t\t\t\t\tonmouseout='"+s+'.onNodeHighlightSearch(this, false);\'\n\t\t\t\t\tstyle="padding-right: 23px">\n\t\t\t\t\t'+i+" "+e.labelForDisplay+"\n\t\t\t\t\t"+n+"\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>"},this.templatePanel=function(){var e=a.parentContainer.offsetWidth-1+"px",t=a.widgetId;return'\n\t\t<div id="ebx_mes_body_'+t+'" class="ebx_mes_body"\n\t\t\tstyle="min-width : '+e+'">\n\t\t\t<div id="ebx_mes_loading_'+t+'" class="ebx_mes_loading">\n\t\t\t\t'+EBX_LocalizedMessage.comboBox_loading+'\n\t\t\t</div>\n\t\t\t<div id="ebx_mes_msg_empty_'+t+'"  class="ebx_mes_msg_empty">\n\t\t\t\t'+EBX_LocalizedMessage.comboBox_empty+'\n\t\t\t</div>\n\t\t\t<div id="ebx_mes_tree_ctn_'+t+'" class="ebx_mes_tree_ctn"\n\t\t\t\tonScroll="MES_Panel.onScrollItems()">\n\t\t\t\t<div id="ebx_mes_tree_'+t+'" class="ebx_mes_tree"></div>\n\t\t\t</div>\n\t\t</div>'},this.dataLoader=new o.MES_DataLoader(this.componentIndex)}return e.prototype.addTreeItems=function(e,t){for(var i=0;i<e.length;i++){var n=e[i];this.addTreeItem(n,t)}if(null==t.parent){if(e.length>0&&EBX_Utils.removeCSSClass(this.panelBody,r.ModelElementSelector_CSS.EMPTY),EBX_Utils.addCSSClass(this.panelBody,r.ModelElementSelector_CSS.LOADED),1===e.length){var s=t.children[0];s.isLeaf||(s.isLoading=!0,s.expanded=!0)}this.widgetTree.render(),this.panel.visible?this.resize.refreshPanelDimensions():t.collapse()}},e.prototype.addTreeItem=function(e,t){var i=this,s=n({},e,{html:this.templateItem(e)}),r=new YAHOO.widget.HTMLNode(s,t);return e.isLeaf||r.setDynamicLoad((function(t,n){e.loadChildren((function(e){i.isVisible()&&(i.addTreeItems(e,t),n())}),i.onLoadingFail)}),1),e.isSeeMore&&(r.contentStyle+=" ebx_ValueND"),r},e.prototype.showPanelAndRefreshTree=function(e){var t=this;this.show(),this.clearTree(),this.dataLoader.loadRoots(e,(function(e,i){t.isVisible()&&(i&&t.resize.updateForcedSize(i),t.addTreeItems(e,t.widgetTree.getRoot()))}),this.onLoadingFail)},e.prototype.show=function(){this.isVisible()||(this.panel||this.initPanel(),this.widgetTree.subscribe("clickEvent",this.onTreeClick),this.resize.refreshPanelDimensions(),this.panel.show(),this.panel.visible=!0)},e.prototype.isVisible=function(){return this.panel&&this.panel.visible},e.prototype.hide=function(){this.panel&&(this.widgetTree.unsubscribeAll("clickEvent"),this.clearTree(),this.panel.hide(),this.panel.visible=!1)},e.prototype.clearTree=function(){this.widgetTree&&(this.widgetTree.removeChildren(this.widgetTree.getRoot()),this.widgetTree.render()),this.panelBody&&(EBX_Utils.removeCSSClass(this.panelBody,r.ModelElementSelector_CSS.LOADED),EBX_Utils.addCSSClass(this.panelBody,r.ModelElementSelector_CSS.EMPTY)),this.hoveredNode=null},e.prototype.refreshPanelAlignment=function(){null!==this.panel&&this.panel.align("tl","bl",[-1,-1])},e.prototype.onNodeHighlightSearch=function(e,t){var i=this.widgetTree.getNodeByElement(e);if(i&&i.getContentEl()){var n=EBX_Utils.getFirstRecursiveChildMatchingCSSClass(i.getContentEl(),r.ModelElementSelector_CSS.ITEM_HELP);if(!n)return;t?EBX_Utils.removeCSSClass(n,r.ModelElementSelector_CSS.NOT_SELECTED):EBX_Utils.addCSSClass(n,r.ModelElementSelector_CSS.NOT_SELECTED)}},e.prototype.onNodeHighlight=function(e,t){var i=t.pageX,n=t.pageY;if(i!==this.mousePosition.left||n!==this.mousePosition.top){this.mousePosition.left=i,this.mousePosition.top=n;var s=this.widgetTree.getNodeByElement(e);this.highlightNode(s,!1)}},e.prototype.highlightNode=function(t,i){if(this.hoveredNode&&this.hoveredNode.unhighlight(),this.hoveredNode=t,t&&(t.highlight(),i)){var n=e.getAbsoluteTopOf(t),s=t.getContentEl().offsetHeight,r=this.treeContainer.scrollTop,o=this.treeContainer.clientHeight;if(n<r+2*EBX_ISS.listScrollPadding)this.treeContainer.scrollTop=n-2*EBX_ISS.listScrollPadding;else n+s+2*EBX_ISS.listScrollPadding>r+o&&(this.treeContainer.scrollTop=n+s+2*EBX_ISS.listScrollPadding-o)}},e.prototype.onClickItemHelp=function(e,t){var i=this.widgetTree.getNodeByElement(e);i&&(EBX_NodeDocumentation.docPanels[i.data.id]||(EBX_NodeDocumentation.docPanels[i.data.id]=i.data.urlInfos),YAHOO.util.Event.stopEvent(t),this.linkedInput.focus(),EBX_NodeDocumentation.displayDocumentation(e))},e.prototype.initPanel=function(){var e=this,t="panel-"+this.widgetId;this.panel=new YAHOO.widget.Overlay(t,{width:this.linkedInput.offsetWidth+"px",visible:!1}),this.panel.cfg.setProperty("context",[this.linkedInput,"tl","bl",null,[0,0]]),this.panel.render(document.body);var i=this.templatePanel();this.panel.setBody(i),YAHOO.util.Event.addListener(this.panel.body,"click",(function(){YAHOO.util.Event.stopEvent(event),e.linkedInput.focus()})),this.treeContainer=document.getElementById(r.ModelElementSelector_CSS.ID_TREE_CTN+this.widgetId),this.panelBody=document.getElementById(r.ModelElementSelector_CSS.ID_BODY+this.widgetId),this.widgetTree=new YAHOO.widget.TreeView(r.ModelElementSelector_CSS.ID_TREE+this.widgetId),this.widgetTree.setNodesProperty("propagateHighlightUp",!0),this.widgetTree.singleNodeHighlight=!0,this.widgetTree.subscribe("expandComplete",(function(t){e.selectNodeFirstChildAfterExpand&&(e.selectNodeFirstChildAfterExpand=!1,e.highlightNode(t.children[0],!0))})),this.widgetTree.subscribe("clickEvent",this.onTreeClick),this.widgetTree.subscribe("expand",(function(){e.linkedInput.focus()})),this.widgetTree.subscribe("collapse",(function(){e.linkedInput.focus()})),this.resize=new l.MES_Panel_Resize(this.widgetId,this.componentIndex,this.linkedInput,this.panelBody,this.widgetTree,this.panel,this.parentContainer,this.treeContainer),this.computeDefaultPanelMinHeight()},e.prototype.computeDefaultPanelMinHeight=function(){EBX_Utils.addCSSClass(this.panelBody,r.ModelElementSelector_CSS.LOADED),this.widgetTree.render();var e=this.widgetTree.getEl().offsetHeight,t=this.addTreeItem({id:"XXXX",label:"#UNKNOWN"},this.widgetTree.getRoot());this.widgetTree.render(),e+=8.5*(this.widgetTree.getEl().offsetHeight-e),this.widgetTree.removeNode(t,!0),this.widgetTree.render(),EBX_Utils.removeCSSClass(this.panelBody,r.ModelElementSelector_CSS.LOADED),this.resize.setPanelMinHeight(e)},e.onScrollItems=function(){EBX_NodeDocumentation.hideCurrentDocumentationNow()},e.getAbsoluteTopOf=function(e){for(var t=0;e;)t+=e.getEl().offsetTop,e=e.parent;return t},e.prototype.processKeyBoardEvent=function(e){if(!this.isVisible())return!1;if(e.keyCode===EBX_Utils.keyCodes.ENTER){if(this.hoveredNode){YAHOO.util.Event.stopEvent(e);var t=this.hoveredNode.data;t.isEnabled&&(t.isSeeMore?this.loadNextItems(this.hoveredNode):this.onSelectValue(t))}return!0}if(e.keyCode===EBX_Utils.keyCodes.LEFT||e.keyCode===EBX_Utils.keyCodes.RIGHT||e.keyCode===EBX_Utils.keyCodes.UP||e.keyCode===EBX_Utils.keyCodes.DOWN){var i=null;return e.keyCode===EBX_Utils.keyCodes.UP&&this.hoveredNode&&(i=this.hoveredNode.previousSibling),e.keyCode===EBX_Utils.keyCodes.DOWN&&(i=this.hoveredNode?this.hoveredNode.nextSibling:this.widgetTree.getRoot().children[0]),e.keyCode===EBX_Utils.keyCodes.LEFT&&this.hoveredNode&&(i=this.hoveredNode.parent),e.keyCode===EBX_Utils.keyCodes.RIGHT&&this.hoveredNode&&!this.hoveredNode.isLeaf&&(this.hoveredNode.childrenRendered?(this.hoveredNode.expand(),i=this.hoveredNode.children[0]):(this.selectNodeFirstChildAfterExpand=!0,this.hoveredNode.expand())),i&&i!==this.widgetTree.getRoot()&&this.highlightNode(i,!0),YAHOO.util.Event.stopEvent(e),!0}return!1},e}();t.MES_Panel=a},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.formScrollCtn=e,this.gutterBottom=YAHOO.widget.Overlay.VIEWPORT_OFFSET,this.scrollMaker=void 0,this.formExtraHeightBottom=0,this.oldScrollTop=null,this.init()}return e.prototype.init=function(){this.scrollMaker=document.createElement("div"),this.scrollMaker.className="ebx_scrollMaker",this.formScrollCtn.appendChild(this.scrollMaker),this.formExtraHeightBottom=this.getFormExtraHeightBottom(),this.gutterBottom=this.computeGutterBottom()},e.prototype.getFormExtraHeightBottom=function(){var e=YAHOO.util.Dom,t=e.getRegion(this.formScrollCtn),i=e.getRegion(this.scrollMaker),n=t.bottom-i.bottom;return n<0&&(n=0),n},e.prototype.isElemOverflowing=function(){return null!==this.oldScrollTop},e.prototype.makeElementDisplayed=function(e){var t=YAHOO.util.Dom,i=t.getRegion(e),n=t.getClientRegion(),s=i.bottom-n.bottom+this.gutterBottom;if(s>0){this.formExtraHeightBottom>0&&(this.formScrollCtn.style.overflowY="hidden");var r=this.formExtraHeightBottom+s;this.scrollMaker.style.height=r+"px",this.oldScrollTop=this.formScrollCtn.scrollTop,this.formScrollCtn.fixedScrollTop=this.oldScrollTop+r,this.formScrollCtn.scrollTop=this.formScrollCtn.fixedScrollTop}},e.prototype.computeGutterBottom=function(){var e=YAHOO.util.Dom,t=e.getClientRegion(),i=e.getRegion(this.formScrollCtn);return t.bottom-i.bottom+YAHOO.widget.Overlay.VIEWPORT_OFFSET-2},e.prototype.reset=function(){this.scrollMaker.style.height="",this.formScrollCtn.style.overflowY="",null!==this.oldScrollTop&&(this.formScrollCtn.fixedScrollTop=this.oldScrollTop,this.formScrollCtn.scrollTop=this.formScrollCtn.fixedScrollTop,this.oldScrollTop=null)},e.getScrollMaker=function(t){var i=EBX_Form.getFormScrollingContainer(t),n=!1,s=0,r=null;if(null!==i){for(;!n&&s<e.instances.length;)(r=e.instances[s]).formScrollCtn===i&&(n=!0),s++;n||(r=new e(i),e.instances.push(r))}return r},e.instances=[],e}();t.EBX_ScrollMaker=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(19),s=function(){function e(){}return e.isInExtension=function(){return!!EBX_LayoutManager.WorkspaceContentAreaEl&&EBX_LayoutManager.WorkspaceContentAreaEl.classList.contains("ebx_ExtensionNode_ContentArea")},e.isExtensionFrameHeader=function(t){return!(!t||!e.isInExtension())&&t.classList.contains("ebx_ExtensionNode_Header")},e.getFormBodyHeightInExtension=function(e){return e-EBX_Form.getWorkspaceFormBottomBarHeight()},e.switchFullscreenState=function(){e.isInFullscreen=!e.isInFullscreen,window.parent.EBX_ModelExtensionsContainer.changeExtensionFullscreenDisplay(window.frameElement,e.isInFullscreen);var t=document.getElementById("ebx_ExtensionNode_FullscreenSwitch");e.isInFullscreen?(t.classList.remove(EBX_UIButtonIcon.BLOCK_EXPAND),t.classList.add(EBX_UIButtonIcon.BLOCK_COLLAPSE),t.title=EBX_ModelExtensionFrameMessages.fullscreenOff):(t.classList.add(EBX_UIButtonIcon.BLOCK_EXPAND),t.classList.remove(EBX_UIButtonIcon.BLOCK_COLLAPSE),t.title=EBX_ModelExtensionFrameMessages.fullscreenOn),n.EBX_Fullscreen.saveFullscreenStateOnServer(e.isInFullscreen)},e.isInFullscreen=!1,e}();t.EBX_ModelExtensionFrame=s;var r=function(){function e(){}return e.blockSubmitIfExtensionsAreModified=function(){for(var e=[],t=document.querySelectorAll(".ebx_ExtensionNode_Frame"),i=0;i<t.length;i++){var n=t.item(i).contentWindow;n.hasOwnProperty("EBX_Loader")&&n.EBX_Loader.onbeforeunload()&&e.push(n)}if(0===e.length)return!0;var s=(e.length>1?EBX_ModelExtensionsContainerMessages.extensionsNotSaved:EBX_ModelExtensionsContainerMessages.singleExtensionNotSaved)+"\n                    <ul>\n            "+e.map((function(e){return"<li>"+e.EBX_LayoutManager.getWorkspaceTitleH2().innerText+"</li>"})).join("")+"\n                    </ul>";return ebx_alert(EBX_ModelExtensionsContainerMessages.tabTitle,s),!1},e.disableExtensionsUnloadCheck=function(){for(var e=document.querySelectorAll(".ebx_ExtensionNode_Frame"),t=0;t<e.length;t++){e.item(t).contentWindow.onbeforeunload=function(){}}},e.synchroniseExtensionsUnloadWithSubmitRevert=function(){EBX_Form.addCustomCheckBeforeSubmit(e.blockSubmitIfExtensionsAreModified);var t=document.getElementById(EBX_Form.WorkspaceFormFooterId);if(t){var i=t.firstElementChild.lastElementChild;if(i.onclick){var n=i.onclick;i.onclick=function(t){e.disableExtensionsUnloadCheck(),n.call(this,t)}}}},e.changeExtensionFullscreenDisplay=function(e,t){var i=EBX_Utils.getFirstParentMatchingCSSClass(e,"ebx_ExtensionNode_Wrapper");i&&(t?i.classList.add("ebx_ExtensionNode_Wrapper-in-fullscreen"):i.classList.remove("ebx_ExtensionNode_Wrapper-in-fullscreen"))},e}();t.EBX_ModelExtensionsContainer=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return e.displayButtonIfInHybrid=function(){var e=EBX_Utils.getWindowStackToHybridParentFrame();e&&!EBX_LayoutManager.isEmbedded()&&(e[0].EBX_HybridFullscreenHandler&&document.getElementById(EBX_Fullscreen_Constants.changeFullScreenButtonId).classList.remove(EBX_Fullscreen_Constants.changeFullScreenButtonHiddenClassname))},e.switchFullscreenState=function(){e.changeFullscreenState(!e.isInFullscreen())},e.changeFullscreenState=function(t){if(t!==e.isInFullscreen()){var i=EBX_Utils.getWindowStackToHybridParentFrame();if(i){var n=i[0].EBX_HybridFullscreenHandler;n&&n.changeFullscreen(!!t)}}},e.refreshWorkspaceDisplay=function(e){var t=document.getElementById(EBX_Fullscreen_Constants.changeFullScreenButtonId);e?(document.body.classList.add("ebx_fullscreen"),t&&(t.classList.remove(EBX_UIButtonIcon.ENTER_FULLSCREEN),t.classList.add(EBX_UIButtonIcon.EXIT_FULLSCREEN),t.title=EBX_Fullscreen_Constants.exitFullscreenLabel),EBX_LayoutManager.collapseNavigationPane()):(document.body.classList.remove("ebx_fullscreen"),t&&(t.classList.add(EBX_UIButtonIcon.ENTER_FULLSCREEN),t.classList.remove(EBX_UIButtonIcon.EXIT_FULLSCREEN),t.title=EBX_Fullscreen_Constants.enterFullscreenLabel),EBX_LayoutManager.expandNavigationPane())},e.onFullscreenStateChange=function(t){EBX_LayoutManager.isEmbedded()||e.saveFullscreenStateOnServer(t),e.refreshWorkspaceDisplay(t);for(var i=0,n=e.onChangeListeners.length;i<n;i++)e.onChangeListeners[i](t)},e.syncStateWithParent=function(){var t=EBX_Utils.getWindowStackToHybridParentFrame();if(t){var i=t[0].EBX_HybridFullscreenHandler;if(i){i.addListener({scope:window,onChange:function(t){e.onFullscreenStateChange(t)}});var n=e.isInFullscreen();EBX_Fullscreen_Constants.wasInFullscreenWhilePageBuild!==n&&e.onFullscreenStateChange(n)}}},e.isInFullscreen=function(){var e=EBX_Utils.getWindowStackToHybridParentFrame();if(e){var t=e[0].EBX_HybridFullscreenHandler;return!!t&&t.isInFullscreen()}},e.addListener=function(t){e.onChangeListeners.push(t)},e.removeListener=function(t){var i=e.onChangeListeners.indexOf(t);-1!==i&&e.onChangeListeners.splice(i,1)},e.saveFullscreenStateOnServer=function(t){e.lastChangeFullscreenRequestID||(e.lastChangeFullscreenRequestID=EBX_Fullscreen_Constants.lastChangeFullscreenRequestID),e.lastChangeFullscreenRequestID++;var i=EBX_Fullscreen_Constants.saveChangeFullscreenUrl.replace("%0",""+t).replace("%1",""+e.lastChangeFullscreenRequestID);e.saveChangeFullscreenRequester.sendRequest(i)},e.saveChangeFullscreenRequester=new YAHOO.util.XHRDataSource("",{responseType:YAHOO.util.DataSource.TYPE_TEXT}),e.onChangeListeners=[],e.lastChangeFullscreenRequestID=void 0,e}();t.EBX_Fullscreen=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(1),s=i(2),r=i(21),o=i(3),l=i(12),a=i(22),d=i(36),u=i(0),c=i(9),h=i(37),p=i(38),m=i(8),g=i(42),f=i(15),b=i(16),E=i(43),C=i(44),_=i(47),S=i(4),v=i(19),y=i(18);window.EBX_AjaxTable=u.EBX_AjaxTable,window.EBX_Table_State=u.EBX_Table_State,window.AdvancedSearch=n.AdvancedSearch,window.AdvancedSearchActions=s.AdvancedSearchActions,window.AdvancedSearchComponents=r.AdvancedSearchComponents,window.AdvancedSearchModel=o.AdvancedSearchModel,window.AdvancedSearchPane=l.AdvancedSearchPane,window.AdvancedSearchReducers=a.AdvancedSearchReducers,window.AdvancedSearchSave=d.AdvancedSearchSave,window.FindInHierarchyComponents=p.FindInHierarchyComponents,window.EBX_AjaxTable_UIConstants=S.EBX_AjaxTable_UIConstants,window.EBX_FormNodeEditors_ReadOnly=c.EBX_FormNodeEditor_ReadOnly,window.EBX_ModelElementSelector=f.EBX_ModelElementSelector,window.EBX_MES_FormNodeEditor=g.EBX_MES_FormNodeEditor,window.EBX_ModelElementSelector_Registry=m.EBX_ModelElementSelector_Registry,window.MES_Panel=b.MES_Panel;var B=i(48);window.ResizeObserver=B,window.EBX_PasswordEdit=E.EBX_PasswordEdit,window.EBX_ScriptEditor=C.EBX_ScriptEditor,window.EBX_HierarchyWidgetFacade=h.EBX_HierarchyWidgetFacade,window.EBX_Fullscreen=v.EBX_Fullscreen,window.ebx_is_in_fullscreen=v.EBX_Fullscreen.isInFullscreen,window.ebx_change_fullscreen_display=v.EBX_Fullscreen.changeFullscreenState,window.ebx_on_fullscreen_display_change=v.EBX_Fullscreen.addListener,window.ebx_off_fullscreen_display_change=v.EBX_Fullscreen.removeListener,window.SearchTemplatesWidget=_.SearchTemplatesWidget,window.DefaultTemplatesWidgetController=_.DefaultTemplatesWidgetController,window.EBX_ModelExtensionFrame=y.EBX_ModelExtensionFrame,window.EBX_ModelExtensionsContainer=y.EBX_ModelExtensionsContainer},function(e,t,i){"use strict";var n=this&&this.__assign||Object.assign||function(e){for(var t,i=1,n=arguments.length;i<n;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e};Object.defineProperty(t,"__esModule",{value:!0});var s=i(1),r=i(2),o=i(3),l=[];function a(e){return function(){for(var t=[],i=0;i<arguments.length;i++)t[i]=arguments[i];null!=l?l.push((function(){e.apply(void 0,t)})):e.apply(void 0,t)}}function d(e,t){var i=!0,s=null;function r(t,i){var r=null;return EBX_Utils.forEach(Object.keys(e),(function(o){var l=e[o](t);(i||l!==s[o])&&(null==r&&(r=i?{}:n({},s)),r[o]=l)})),null!=r?r:s}return function(e,n){if(void 0===e&&(e=EBX_AdvancedSearch.state),void 0===n)return t(r(e,!0),void 0);i&&(s=r(n,i),i=!1);var o=r(e,i);o!==s&&(t(o,s),s=o)}}function u(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return function(t,i){void 0===t&&(t=EBX_AdvancedSearch.state),EBX_Utils.forEach(e,(function(e){e(t,i)}))}}function c(e,t,i){EBX_FormNodeIndex.nodes[e].eventAfterValueChanged={fn:t,arg:i}}function h(e){var t=ebx_form_getNodeMessage(e);return null!=t&&null!=t.errors&&t.errors.length>0}function p(e){e.preventDefault();var t=document.activeElement;if(null!=t){var i=document.createEvent("HTMLEvents");i.initEvent("blur",!0,!0),t.dispatchEvent(i)}return setTimeout(r.AdvancedSearchActions.applySearch,200),!1}!function(e){e.init=function(){if(null!=l){for(;l.length>0;){var e=l;l=[],EBX_Utils.forEach(e,(function(e){e()}))}l=null}},e.registerPane=a((function(e,t,i,o,l,a,c){function h(e){var t,i,s,o=function(e){var t=e.filter.allCriteriaIds.slice();null!=e.filter.additionalCriterionId&&t.push(e.filter.additionalCriterionId);var i=0;return EBX_Utils.forEach(t,(function(e){i=Math.max(i,parseInt(e,10))})),(++i).toFixed()}(e);t=o,i=c.replace(encodeURIComponent("$lineId"),t),(s=new EBX_AJAXResponseHandler).handleAjaxResponseSuccess=function(e){var i=document.createElement("div");i.innerHTML=e,S.appendChild(i),v.scrollTop=v.scrollHeight,r.AdvancedSearchActions.fetchCriterion_success({id:t,criterion:{field:"",operator:"",operand:void 0,isActivated:!1,hasError:!1}})},s.handleAjaxResponseFailed=function(){EBX_Logger.log("EBX_AjaxAdvancedSearch.ajaxAddCriterion: Failed for line "+t+".",EBX_Logger.error)},s.sendRequest(i);var l=null!=e.filter.additionalCriterionId?n({},e.filter,{allCriteriaIds:e.filter.allCriteriaIds.concat([e.filter.additionalCriterionId]),additionalCriterionId:void 0}):e.filter;return n({},e,{filter:l,fetchingCriterionId:o})}function m(){var e=b.parentElement.clientHeight,t=E.clientHeight,i=_.clientHeight;b.style.height=e-EBX_AdvancedSearch.parameters.searchPaneMargin+"px";var n=e-t-i;if(v.style.height=n-EBX_AdvancedSearch.parameters.searchPaneMargin+"px",v.scrollHeight>v.clientHeight){var s=EBX_Utils.getVScrollWidth();C.style.width=s+"px"}else C.style.width="0px"}s.AdvancedSearch.registerMiddleware((function(e,t,i){var n=e(t,i);if(t.name===r.AdvancedSearchActions.LoadFilter_success.NAME&&i.fetchingFilter&&function(e){var t=e.param;S.innerHTML=t.children[1].innerHTML}(t),null!=n.fetchingCriterionId)return n;if(null==n.filter.criterionByLineId)return h(n);if(t.name===r.AdvancedSearchActions.SelectColumn.NAME&&t.param.id===n.filter.additionalCriterionId)return h(n);return n}));var g,f=u(d({open:function(e){return e.open}},(function(e){e.open?(EBX_Utils.addCSSClass(b,"ebx_AdvancedSearchPaneOpened"),null!=g&&g.expand()):(EBX_Utils.removeCSSClass(b,"ebx_AdvancedSearchPaneOpened"),null!=g&&g.collapse());var t=document.createEvent("HTMLEvents");t.initEvent("resize",!0,!0),window.dispatchEvent(t)})),d({open:function(e){return e.open},criterionByLineId:function(e){return e.filter.criterionByLineId},additionalCriterionId:function(e){return e.filter.additionalCriterionId}},(function(e){e.open&&setTimeout(m)}))),b=document.getElementById(e),E=document.getElementById(t),C=document.getElementById(i),_=document.getElementById(o),S=document.getElementById(l),v=document.getElementById(a);b.addEventListener("submit",p);var y=EBX_LayoutManager.workspaceLayout.getUnitByPosition(EBX_LayoutManager.workspaceUnits.advancedSearch.position);"boolean"!=typeof y&&(g=y),s.AdvancedSearch.registerStateListener(f),EBX_Events.on(null,"resize",(function(){EBX_AdvancedSearch.state.open&&m()}))})),e.registerMessageContainer=a((function(e,t){var i=d({hasValidationCriterion:o.AdvancedSearchModel.hasValidationCriterion},(function(e){e.hasValidationCriterion?EBX_Utils.removeCSSClass(n,"ebx_dynamicHidden"):EBX_Utils.addCSSClass(n,"ebx_dynamicHidden")})),n=document.getElementById(e);t&&s.AdvancedSearch.registerStateListener(i),i()})),e.registerGlobalInput=a((function(e){var t=d({open:function(e){return e.open}},(function(e){e.open?EBX_Utils.addCSSClass(i,"ebx_AdvancedSearchPaneOpened"):EBX_Utils.removeCSSClass(i,"ebx_AdvancedSearchPaneOpened")})),i=document.getElementById(e);i.addEventListener("submit",p),s.AdvancedSearch.registerStateListener(t)})),e.registerQuickSearchInput=a((function(e){var t=d({quickSearch:function(e){return e.filter.quickSearch}},(function(e){var t=e.quickSearch;return l.value=t})),i=function(){r.AdvancedSearchActions.updateQuickSearch(l.value)},n=EBX_Utils.debounce(i,void 0),o=function(e,i,n){i.name===r.AdvancedSearchActions.ClearQuickSearch.NAME&&l.focus();var a=e(i,n);if(i.name===r.AdvancedSearchActions.LoadFilter_success.NAME){var d=l.parentElement;if(s.AdvancedSearch.unregisterMiddleware(o),s.AdvancedSearch.unregisterStateListener(t),null!=d){d.removeChild(l);var u=i.param;d.innerHTML=u.children[0].children[0].innerHTML}}return a};s.AdvancedSearch.registerMiddleware(o);var l=document.getElementById(e).children[0];l.addEventListener("keyup",n),l.addEventListener("change",i),s.AdvancedSearch.registerStateListener(t),EBX_FormPresenter.addAPVElementListener(l)})),e.registerQuickSearchClearButton=a((function(e){var t=d({quickSearch:function(e){return e.filter.quickSearch}},(function(e){""===e.quickSearch?EBX_Utils.addCSSClass(i,"ebx_Hidden"):EBX_Utils.removeCSSClass(i,"ebx_Hidden")})),i=document.getElementById(e);i.addEventListener("click",(function(){r.AdvancedSearchActions.clearQuickSearch()})),s.AdvancedSearch.registerStateListener(t),t()})),e.registerQuickSearchApplyButton=a((function(e){var t=u(d({open:function(e){return e.open},isEnabled:function(e){return o.AdvancedSearchModel.isSearchEnabled(e)}},(function(e,t){var n=e.open,s=e.isEnabled,r=!n&&s;EBX_ButtonUtils.setButtonDisabled(i,!r),null!=t&&n===t.open||(n?EBX_Utils.addCSSClass(i,"ebx_Hidden"):EBX_Utils.removeCSSClass(i,"ebx_Hidden")),null!=t&&s===t.isEnabled||(s?(EBX_Utils.addCSSClass(i,"ebx_Button"),EBX_Utils.addCSSClass(i,"ebx_DefaultButton"),EBX_Utils.removeCSSClass(i,"ebx_FlatButtonNoBorder")):(EBX_Utils.removeCSSClass(i,"ebx_Button"),EBX_Utils.removeCSSClass(i,"ebx_DefaultButton"),EBX_Utils.addCSSClass(i,"ebx_FlatButtonNoBorder")))})),d({hasError:function(e){return o.AdvancedSearchModel.hasError(e)},isEnabled:function(e){return o.AdvancedSearchModel.isSearchEnabled(e)},isSearchDefined:function(e){return""!==e.filter.quickSearch},isCriterionDefined:function(e){return o.AdvancedSearchModel.getNumberOfActivatedCriteria(e)>0}},(function(e){var t,n=e.hasError,s=e.isEnabled,r=e.isSearchDefined,o=e.isCriterionDefined,l=EBX_AdvancedSearch.messages.quickSearch.submit.tooltips;t=n?l.someErrors:r||o?r&&!o?s?l.someSearchNoCriteriaEnabled:l.someSearchNoCriteriaDisabled:r&&o?s?l.someSearchSomeCriteriaEnabled:l.someSearchSomeCriteriaDisabled:s?l.noSearchSomeCriteriaEnabled:l.noSearchSomeCriteriaDisabled:s?l.noSearchNoCriteriaEnabled:l.noSearchNoCriteriaDisabled,i.title=t}))),i=document.getElementById(e);s.AdvancedSearch.registerStateListener(t),t()})),e.registerSummary=a((function(e){var t=d({appliedCriteria:function(e){return o.AdvancedSearchModel.getNumberOfAppliedCriteria(e)}},(function(e){var t=e.appliedCriteria;i.textContent=t+"",0===t?EBX_Utils.addCSSClass(i,"ebx_dynamicHidden"):(EBX_Utils.removeCSSClass(i,"ebx_dynamicHidden"),i.title=1===t?t+" "+EBX_AdvancedSearch.expandCollapse.filterAppliedMessage:t+" "+EBX_AdvancedSearch.expandCollapse.filtersAppliedMessage)})),i=document.getElementById(e);s.AdvancedSearch.registerStateListener(t),t()})),e.registerToolbarFiller=a((function(e){var t=d({open:function(e){return e.open}},(function(e){e.open?EBX_Utils.removeCSSClass(i,"ebx_Hidden"):EBX_Utils.addCSSClass(i,"ebx_Hidden")})),i=document.getElementById(e);s.AdvancedSearch.registerStateListener(t),t()})),e.registerToolbarApplyButton=a((function(e,t){var i=u(d({open:function(e){return e.open}},(function(e){e.open&&n()})),d({isEnabled:function(e){return o.AdvancedSearchModel.isSearchEnabled(e)}},(function(e){var t=e.isEnabled;EBX_ButtonUtils.setButtonDisabled(r,!t),t?(EBX_Utils.addCSSClass(r,"ebx_Button"),EBX_Utils.addCSSClass(r,"ebx_DefaultButton"),EBX_Utils.removeCSSClass(r,"ebx_FlatButtonNoBorder")):(EBX_Utils.removeCSSClass(r,"ebx_Button"),EBX_Utils.removeCSSClass(r,"ebx_DefaultButton"),EBX_Utils.addCSSClass(r,"ebx_FlatButtonNoBorder"))})),d({hasError:function(e){return o.AdvancedSearchModel.hasError(e)},isEnabled:function(e){return o.AdvancedSearchModel.isSearchEnabled(e)},isSearchDefined:function(e){return""!==e.filter.quickSearch},isCriterionDefined:function(e){return o.AdvancedSearchModel.getNumberOfActivatedCriteria(e)>0}},(function(e){var t,i=e.hasError,n=e.isEnabled,s=e.isSearchDefined,o=e.isCriterionDefined,l=EBX_AdvancedSearch.messages.pane.submit.tooltips;t=i?l.someErrors:s||o?s&&!o?n?l.someSearchNoCriteriaEnabled:l.someSearchNoCriteriaDisabled:s&&o?n?l.someSearchSomeCriteriaEnabled:l.someSearchSomeCriteriaDisabled:n?l.noSearchSomeCriteriaEnabled:l.noSearchSomeCriteriaDisabled:n?l.noSearchNoCriteriaEnabled:l.noSearchNoCriteriaDisabled,r.title=t}))),n=function(){r.style.left=l.offsetLeft+"px"},r=document.getElementById(e),l=document.getElementById(t);s.AdvancedSearch.registerStateListener(i),i(),EBX_Events.on(null,"resize",(function(){EBX_AdvancedSearch.state.open&&n()}))})),e.registerActivateAll=a((function(e){var t=EBX_Utils.memoize((function(e){var t=e.allCriteriaIds,i=e.criterionByLineId;if(0===t.length)return!1;for(var n=0,s=t;n<s.length;n++){if(!i[s[n]].isActivated)return!1}return!0})),i=u(d({isChecked:function(e){return t({allCriteriaIds:e.filter.allCriteriaIds,criterionByLineId:e.filter.criterionByLineId})}},(function(e){var t=e.isChecked;n.checked=t})),d({isActive:function(e){return e.filter.allCriteriaIds.length>0}},(function(e){var t=e.isActive;n.disabled=!t}))),n=document.getElementById(e);s.AdvancedSearch.registerStateListener(i),i()})),e.registerLine=a((function(e){var t=e.lineId,i=e.elementId,n=e.operatorContainerId,o=e.valuesContainerId,l=e.fetchValuesUrl,a=e.fetchOperatorUrl,c=u(d({additionalCriterionId:function(e){return e.filter.additionalCriterionId},allCriteriaIds:function(e){return e.filter.allCriteriaIds}},(function(e){var i=e.additionalCriterionId,n=e.allCriteriaIds;if(i!==t&&!EBX_Utils.arrayContains(n,t)){var r=m.parentElement;null!=r&&r.removeChild(m),s.AdvancedSearch.unregisterStateListener(c)}})),d({isFetching:function(e){return e.fetchingColumns&&e.fetchingColumns[t]}},(function(e){if(e.isFetching){var i=new EBX_AJAXResponseHandler;i.handleAjaxResponseSuccess=function(e){r.AdvancedSearchActions.selectColumn_success(t);var i=document.createElement("div");i.innerHTML=e,g.innerHTML=i.children[0].innerHTML,f.innerHTML=i.children[1].innerHTML,p(),h()},i.handleAjaxResponseFailed=function(){EBX_Logger.log("EBX_AjaxAdvancedSearch.ajaxSelectCriterion: Failed for line "+t+".",EBX_Logger.error)},i.sendRequest(a)}})),d({isFetching:function(e){return e.fetchingOperators&&e.fetchingOperators[t]}},(function(e){if(e.isFetching){var i=new EBX_AJAXResponseHandler;i.handleAjaxResponseSuccess=function(e){r.AdvancedSearchActions.selectOperator_success(t),f.innerHTML=e,p()},i.handleAjaxResponseFailed=function(){EBX_Logger.log("AdvancedSearchComponents.registerLineValues: Fetch failed for line "+t+".",EBX_Logger.error)},i.sendRequest(l)}}))),h=function(){g.childElementCount>0?EBX_Utils.removeCSSClass(g,"ebx_dynamicHidden"):EBX_Utils.addCSSClass(g,"ebx_dynamicHidden")},p=function(){for(var e=0,t=EBX_Utils.getRecursiveChildrenMatchingCSSClass(f,EBX_Form.APVElementCSSClass);e<t.length;e++){var i=t[e];EBX_FormPresenter.addAPVElementListener(i)}},m=document.getElementById(i),g=document.getElementById(n),f=document.getElementById(o);s.AdvancedSearch.registerStateListener(c),h()})),e.registerLineActivateInput=a((function(e,t,i){var n=d({activated:function(e){var i=e.filter.criterionByLineId[t];if(null!=i)return i.isActivated}},(function(e){var t=e.activated;void 0!==t&&("true"===ebx_form_getValue(i)[0]!==t&&ebx_form_setValue(i,t))})),o=function(e,i,r){var l=e(i,r);return null==l.filter.criterionByLineId[t]&&(s.AdvancedSearch.unregisterStateListener(n),s.AdvancedSearch.unregisterMiddleware(o)),l};document.getElementById(e).addEventListener("click",(function(){r.AdvancedSearchActions.toggleLineActivation(t)})),s.AdvancedSearch.registerStateListener(n),s.AdvancedSearch.registerMiddleware(o)})),e.registerEndOfLine=a((function(e,t,i){var n=d({additionalCriterionId:function(e){return e.filter.additionalCriterionId}},(function(t){t.additionalCriterionId===e?EBX_Utils.addCSSClass(l,"ebx_dynamicHidden"):EBX_Utils.removeCSSClass(l,"ebx_dynamicHidden")})),o=function(t,l,a){var d=t(l,a);if(l.name!==r.AdvancedSearchActions.LoadFilter_success.NAME&&null==d.filter.criterionByLineId[e]){s.AdvancedSearch.unregisterStateListener(n),s.AdvancedSearch.unregisterMiddleware(o);var u=new EBX_AJAXResponseHandler;u.handleAjaxResponseSuccess=function(){},u.handleAjaxResponseFailed=function(){},u.sendRequest(i)}return d},l=document.getElementById(t);s.AdvancedSearch.registerStateListener(n),s.AdvancedSearch.registerMiddleware(o)})),e.registerOperator=a((function(e,t){c(t,(function(t){r.AdvancedSearchActions.selectOperator({id:e,value:t.key})})),r.AdvancedSearchActions.initOperator({id:e,value:ebx_form_getValue(t).key})})),e.registerWidget=a((function(e,t,i,n){function s(i){var s=i;null!=n&&null!=i&&(s=n(s)),r.AdvancedSearchActions.setValue({id:e,value:s,hasError:h(t)})}if(c(t,s),s(ebx_form_getValue(t)),null!=i)for(var o=document.getElementById(i).getElementsByTagName("input"),l=function(e){var t=o[e],i=function(){var e=document.createEvent("HTMLEvents");e.initEvent("blur",!0,!0),t.dispatchEvent(e)},n=EBX_Utils.debounce(i,void 0);t.addEventListener("keydown",(function(e){e.keyCode===EBX_Utils.keyCodes.ENTER&&i()})),t.addEventListener("keyup",n),t.addEventListener("change",i),EBX_FormPresenter.addAPVElementListener(t)},a=0;a<o.length;a++)l(a)})),e.registerDateWidget=function(t,i,n){e.registerWidget(t,i,n,(function(e){return e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate()}))},e.registerTimeWidget=function(t,i,n){e.registerWidget(t,i,n,(function(e){return e.getHours()+":"+e.getMinutes()+":"+e.getSeconds()}))},e.registerDateTimeWidget=function(t,i,n){e.registerWidget(t,i,n,(function(e){return e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate()+"T"+e.getHours()+":"+e.getMinutes()+":"+e.getSeconds()}))},e.registerFkWidget=function(t,i){e.registerWidget(t,i,null,(function(e){return EBX_Utils.map(e,(function(e){return e.key}))}))},e.registerSaveButton=a((function(e){var t=d({isEnabled:function(e){return o.AdvancedSearchModel.isSaveEnabled(e)}},(function(e){var t=e.isEnabled;EBX_ButtonUtils.setButtonDisabled(i,!t)})),i=document.getElementById(e);s.AdvancedSearch.registerStateListener(t),t()}));var t=!1;e.registerLoadButton=a((function(e,i){if(!t){t=!0,s.AdvancedSearch.registerMiddleware((function(t,s,l){var a=t(s,l);if(s.name===r.AdvancedSearchActions.SaveCurrentFilter_success.NAME||s.name===r.AdvancedSearchActions.DeleteFilter_success.NAME){var d=new EBX_AJAXResponseHandler;d.handleAjaxResponseSuccess=function(t){var i=document.createElement("div");i.innerHTML=t,o.replaceChild(i.children[0],n),n=document.getElementById(e)},d.handleAjaxResponseFailed=function(){},d.sendRequest(i)}if(s.name===r.AdvancedSearchActions.DeleteFilter.NAME){var u=s.param,c=EBX_AdvancedSearch.requestLinks.filterDelete.replace(encodeURIComponent("$pk"),u);EBX_Utils.openInternalPopupWithSize(c,400,200,{isResizable:!1})}return a}));var n=document.getElementById(e),o=n.parentElement}}))}(t.AdvancedSearchComponents||(t.AdvancedSearchComponents={}))},function(e,t,i){"use strict";var n=this&&this.__assign||Object.assign||function(e){for(var t,i=1,n=arguments.length;i<n;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e};Object.defineProperty(t,"__esModule",{value:!0});var s=i(0),r=i(1),o=i(2),l=i(3);!function(e){var t=o.AdvancedSearchActions.ApplySearch,i=o.AdvancedSearchActions.ClearQuickSearch,a=o.AdvancedSearchActions.FetchCriterion_success,d=o.AdvancedSearchActions.InitCurrentFilter,u=o.AdvancedSearchActions.InitOperator,c=o.AdvancedSearchActions.LoadFilter,h=o.AdvancedSearchActions.LoadFilter_failure,p=o.AdvancedSearchActions.LoadFilter_success,m=o.AdvancedSearchActions.RemoveCriterion,g=o.AdvancedSearchActions.SelectColumn,f=o.AdvancedSearchActions.SelectColumn_success,b=o.AdvancedSearchActions.SelectOperator,E=o.AdvancedSearchActions.SelectOperator_success,C=o.AdvancedSearchActions.SetAllLinesActivation,_=o.AdvancedSearchActions.SetFetchingData,S=o.AdvancedSearchActions.SetFetchingData_cancel,v=o.AdvancedSearchActions.SetFetchingData_success,y=o.AdvancedSearchActions.SetFetchingData_uncertain,B=o.AdvancedSearchActions.SetValue,x=o.AdvancedSearchActions.ToggleLineActivation,w=o.AdvancedSearchActions.TogglePanel,I=o.AdvancedSearchActions.UpdateQuickSearch;function T(e,t){return function(i,s,r){var o=null;return EBX_Utils.forEach(Object.keys(e),(function(t){var l=s[t],a=e[t](i,l,r);l!==a&&(null==o&&(o=n({},s)),o[t]=a)})),null==o&&(o=s),null!=t?t(i,o,r):o}}var R=T({quickSearch:function(e,t,n){switch(e){case I.NAME:return n;case i.NAME:return""}return t},criterionByLineId:function(e,t,i){switch(e){case x.NAME:return function(e,t){var i,s=e[t];return null==s?e:n({},e,((i={})[t]=n({},s,{isActivated:!s.isActivated}),i))}(t,i);case B.NAME:return function(e,t){var i=t.id,s=t.value,r=t.hasError,o=e[i];if(null==o)return e;var a,d=o.operand,u=!l.AdvancedSearchModel.operandEquals(d,s);return u||o.hasError!==r?n({},e,((a={})[i]=n({},o,{hasError:r,operand:u?s:d}),a)):e}(t,i)}return t}},(function(e,t,i){switch(e){case m.NAME:return function(e,t){return EBX_Utils.arrayContains(e.allCriteriaIds,t)?n({},e,{criterionByLineId:EBX_Utils.filterObject(e.criterionByLineId,(function(e,i){return i!==t})),allCriteriaIds:EBX_Utils.filter(e.allCriteriaIds,(function(e){return e!==t}))}):e}(t,i);case C.NAME:return function(e,t){var i={},s=!1;if(EBX_Utils.forEach(e.allCriteriaIds,(function(r){var o=e.criterionByLineId[r];o.isActivated!==t?(s=!0,i[r]=n({},o,{isActivated:t})):i[r]=o})),!s)return e;var r=e.additionalCriterionId;return null!=r&&(i[r]=e.criterionByLineId[r]),n({},e,{criterionByLineId:i})}(t,i);case d.NAME:return i}return t}));r.AdvancedSearch.registerReducer(T({open:function(e,t,i){switch(e){case w.NAME:return i}return t},filter:R},(function(e,i,r){switch(e){case a.NAME:return function(e,t){var i,s=t.id,r=t.criterion;return n({},e,{filter:n({},e.filter,{criterionByLineId:n({},e.filter.criterionByLineId,(i={},i[s]=r,i)),additionalCriterionId:s}),fetchingCriterionId:void 0})}(i,r);case t.NAME:return function(e,t){if(e.fetchingData||!t&&!l.AdvancedSearchModel.isSearchEnabled(e))return e;var i=EBX_AdvancedSearch.hierarchyName;if(null!=i)ebx_ajaxTreeReplaceChildren(i,"","&$ajaxTree_applyFilter=true");else{var r=s.EBX_AjaxTable.AjaxTableRegister[EBX_AdvancedSearch.ajaxTableName];if(void 0===r)return EBX_Logger.log("AdvancedSearchView.searchFilter: Table with name "+EBX_AdvancedSearch.ajaxTableName+" is not registered.",EBX_Logger.error),e;r.content.applyFilter()}return n({},e,{fetchingData:!0,sentFilter:e.filter})}(i,r);case _.NAME:return function(e){return e.fetchingData?e:n({},e,{fetchingData:!0})}(i);case v.NAME:return function(e){return e.fetchingData?n({},e,{fetchingData:!1,appliedFilter:e.sentFilter||e.appliedFilter,sentFilter:void 0}):e}(i);case S.NAME:return function(e){return e.fetchingData?n({},e,{fetchingData:!1,sentFilter:void 0}):e}(i);case y.NAME:return function(e){return e.fetchingData?n({},e,{fetchingData:!1,sentFilter:void 0,appliedFilter:void 0}):e}(i);case g.NAME:return function(e,t){var i=t.id,s=t.value,r=e.filter.criterionByLineId[i];if(r.field===s)return e;if(null!=e.fetchingColumns&&e.fetchingColumns[i])return e;var o,l,a,d=i===e.filter.additionalCriterionId,u=n({},r,{field:s,isActivated:!!d||r.isActivated}),c=e.fetchingColumns?n({},e.fetchingColumns,((o={})[i]=!0,o)):((l={})[i]=!0,l);return n({},e,{filter:n({},e.filter,{criterionByLineId:n({},e.filter.criterionByLineId,(a={},a[i]=u,a))}),fetchingColumns:c})}(i,r);case f.NAME:return function(e,t){if(null==e.fetchingColumns||!e.fetchingColumns||!e.fetchingColumns[t])return e;var i=e.fetchingColumns?n({},e.fetchingColumns):{};return delete i[t],n({},e,{fetchingColumns:i})}(i,r);case b.NAME:return function(e,t){var i=t.id,s=t.value,r=e.filter.criterionByLineId[i];if(r.operator===s)return e;if(null!=e.fetchingOperators&&e.fetchingOperators[i])return e;var o,l,a,d=n({},r,{operator:s}),u=e.fetchingOperators?n({},e.fetchingOperators,((o={})[i]=!0,o)):((l={})[i]=!0,l);return n({},e,{filter:n({},e.filter,{criterionByLineId:n({},e.filter.criterionByLineId,(a={},a[i]=d,a))}),fetchingOperators:u})}(i,r);case E.NAME:return function(e,t){if(null==e.fetchingOperators||!e.fetchingOperators[t])return e;var i=n({},e.fetchingOperators);return delete i[t],n({},e,{fetchingOperators:i})}(i,r);case u.NAME:return function(e,t){var i,s=t.id,r=t.value,o=e.filter.criterionByLineId[s];if(null!=e.fetchingOperators&&e.fetchingOperators[s]?delete(i=n({},e.fetchingOperators))[s]:i=e.fetchingOperators,o.operator===r&&i===e.fetchingOperators)return e;var l,a=o.operator===r?e.filter:n({},e.filter,{criterionByLineId:n({},e.filter.criterionByLineId,(l={},l[s]=n({},o,{operator:r}),l))});return n({},e,{filter:a,fetchingOperators:i})}(i,r);case c.NAME:return function(e,t){if(e.fetchingFilter)return e;var i=EBX_AdvancedSearch.requestLinks.filterLoad.replace(encodeURIComponent("$pk"),t),s=new EBX_AJAXResponseHandler;return s.handleAjaxResponseSuccess=function(e){var t=document.createElement("div");t.innerHTML=e,o.AdvancedSearchActions.loadFilter_success(t)},s.handleAjaxResponseFailed=function(){EBX_Logger.log("EBX_AjaxAdvancedSearch.ajaxLoadFilter: load filter failed.",EBX_Logger.error),o.AdvancedSearchActions.loadFilter_failure()},s.sendRequest(i),n({},e,{fetchingFilter:!0})}(i,r);case p.NAME:return function(e){return e.fetchingFilter?n({},e,{fetchingFilter:!1,filter:{quickSearch:"",criterionByLineId:{},allCriteriaIds:[],additionalCriterionId:void 0}}):e}(i);case h.NAME:return function(e){return e.fetchingFilter?n({},e,{fetchingFilter:!1}):e}(i)}return i})))}(t.AdvancedSearchReducers||(t.AdvancedSearchReducers={}))},function(e,t,i){"use strict";var n=this&&this.__assign||Object.assign||function(e){for(var t,i=1,n=arguments.length;i<n;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e};Object.defineProperty(t,"__esModule",{value:!0});var s=i(2),r=i(12),o=i(0),l=i(5),a=i(4),d=i(6),u=i(24),c=function(){function e(t){var i=this;this.table=t,this.rawResponse=null,this.inheritance=new u.InheritanceManager(this.table),this.fetch=null,this.search=null,this.setCurrentRequest=function(e){i.currentRequestID=e},this.cancelCurrentRequest=function(){if(null!=i.currentRequestID){var e=i.currentRequestID;i.currentRequestID=null,i.table.isTableReady=!0,i.table.element.isEmpty()?i.table.setState(o.EBX_Table_State.CANCELLED):i.table.setState(o.EBX_Table_State.NORMAL),i.table.showCancelHintTooltips(),s.AdvancedSearchActions.setFetchingData_cancel(),EBX_Utils.cancelRequest(e)}},this.sendCancelable=function(t,r,l){var a=EBX_PageId+"_c"+(e.cancelCounter++).toFixed();t+="&cancelableID="+a,i.setCurrentRequest(a),s.AdvancedSearchActions.setFetchingData();var d=window.setTimeout((function(){i.table.setState(o.EBX_Table_State.LOADING_LONG)}),EBX_Utils.cancel_delayBeforeButtonAppears),u=n({},r,{success:function(e,t,n){window.clearTimeout(d),s.AdvancedSearchActions.setFetchingData_success(),i.currentRequestID===a&&null!=r.success&&r.success.call(i,e,t,n)},failure:function(e,t,n){window.clearTimeout(d),s.AdvancedSearchActions.setFetchingData_cancel(),i.currentRequestID===a&&null!=r.failure&&r.failure.call(i,e,t,n)}});l.sendRequest(t,u)}}return e.prototype.init=function(){this.inheritance.init(),this.fetch=new l.YUI_XHRDataSourceJSON(o.EBX_AjaxTable.constants.fetchRequest,e.fetchResponseSchema),this.search=new l.YUI_XHRDataSourceJSON(o.EBX_AjaxTable.constants.searchRequest,e.searchResponseSchema)},e.prototype.addListeners=function(e){var t=e.querySelector(".ebx_tvMessageContainer button");null!=t&&t.addEventListener("click",this.cancelCurrentRequest)},e.prototype.refreshCurrentPage=function(e){void 0===e&&(e=!1),this.table.isTableReady=!1,this.table.setState(o.EBX_Table_State.LOADING);var t=o.EBX_AjaxTable.constants.tableNameParameter+this.table.tableName;null!=this.table.sncParameter&&(t+=o.EBX_AjaxTable.constants.sncSpecificParameter+this.table.sncParameter),e&&(t+=o.EBX_AjaxTable.constants.refreshCursorParameter+"true"),this.sendCancelable(t,this.getCallbackFetchObject(),this.fetch)},e.prototype.sortColumn=function(e){this.table.isTableReady=!1,this.table.setState(o.EBX_Table_State.LOADING);var t=o.EBX_AjaxTable.constants.tableNameParameter+this.table.tableName+o.EBX_AjaxTable.constants.sortColumnIndexParameter+e;null!=this.table.sncParameter&&(t+=o.EBX_AjaxTable.constants.sncSpecificParameter+this.table.sncParameter),this.sendCancelable(t,this.getCallbackFetchObject(),this.fetch)},e.prototype.applyFilter=function(){this.table.isTableReady=!1,this.table.setState(o.EBX_Table_State.LOADING);var e=o.EBX_AjaxTable.constants.tableNameParameter+this.table.tableName;null!=this.table.sncParameter&&(e+=o.EBX_AjaxTable.constants.sncSpecificParameter+this.table.sncParameter),this.sendCancelable(e,this.getCallbackSearchObject(),this.search)},e.prototype.getCurrentResponseResultsByKey=function(){if(null===this.currentResponseResultsByKey){this.currentResponseResultsByKey={};for(var e=this.rawResponse.results,t=0,i=e.length;t<i;t++)this.currentResponseResultsByKey[e[t][d.AjaxResponseRecordConstants.keyIndexInResultLine]]=e[t]}return this.currentResponseResultsByKey},e.prototype.syncEditedLinesByAPV=function(e,t){this.table.element.hasCreatePart()&&this.syncLinesIn(e,!0),this.syncLinesIn(t,!1)},e.prototype.loadPage=function(e){this.table.isTableReady=!1,this.table.setState(o.EBX_Table_State.LOADING);var t=o.EBX_AjaxTable.constants.tableNameParameter+this.table.tableName+o.EBX_AjaxTable.constants.paginationCommandParameter+e;null!=this.table.sncParameter&&(t+=o.EBX_AjaxTable.constants.sncSpecificParameter+this.table.sncParameter),this.sendCancelable(t,this.getCallbackFetchObject(),this.fetch)},e.prototype.getCallbackFetchObject=function(){return{success:this.callbackFetchSuccess,failure:this.callbackFetchFailure,scope:this,argument:{isSearch:!1}}},e.prototype.callbackFetchSuccess=function(e,t,i){if(204===t.status)return this.table.isTableReady=!0,void(this.table.element.isEmpty()?this.table.setState(o.EBX_Table_State.CANCELLED):this.table.setState(o.EBX_Table_State.NORMAL));this.table.callFunctionWhenTableIsInit(this.callbackFetchSuccessWhenInitIsDone,t,this)},e.prototype.callbackFetchSuccessWhenInitIsDone=function(e){this.rawResponse=e,this.currentResponseResultsByKey=null,this.table.resetContent();var t=this.table.element;if(t.update.fixed.table.removeChild(t.update.fixed.table.firstChild),t.update.fixed.table.appendChild(document.createElement("tbody")),t.update.main.table.removeChild(t.update.main.table.firstChild),t.update.main.table.appendChild(document.createElement("tbody")),0===this.rawResponse.results.length)return this.table.resizeModule.resizeContainers(),this.initCreatePart(),void this.table.onTableIsReady();var i=this.fillVisibleLines();this.table.isTableReady=!1,this.table.setState(o.EBX_Table_State.NORMAL);var n=this;window.setTimeout((function(){n.synchronizeVisibleLinesHeightAndLaunchFillRemainingLines(i)}),10)},e.prototype.callbackFetchFailure=function(e,t,i){return 401===t.status?(this.table.isTableReady=!1,this.table.setState(o.EBX_Table_State.LOGOUT),void EBX_Loader.gotoTimeoutPage()):412===t.status?(this.table.isTableReady=!0,this.table.setState(o.EBX_Table_State.NORMAL),void r.AdvancedSearchPane.addIncorrectFilterMessage()):403===t.status?(this.table.isTableReady=!1,void this.table.setState(o.EBX_Table_State.FORBIDDEN)):(this.table.isTableReady=!0,void this.table.setState(o.EBX_Table_State.ERROR))},e.prototype.getCallbackSearchObject=function(){return{success:this.callbackSearchSuccess,failure:this.callbackSearchFailure,scope:this,argument:{isSearch:!0}}},e.prototype.callbackSearchSuccess=function(e,t,i){this.table.callFunctionWhenTableIsInit(this.callbackSearchSuccessWhenInitIsDone,t,this)},e.prototype.callbackSearchSuccessWhenInitIsDone=function(e){r.AdvancedSearchPane.updateNoSearchIcon(),this.callbackFetchSuccessWhenInitIsDone(e)},e.prototype.callbackSearchFailure=function(e,t,i){return 401===t.status?(this.table.isTableReady=!1,this.table.setState(o.EBX_Table_State.LOGOUT),void EBX_Loader.gotoTimeoutPage()):412===t.status?(this.table.isTableReady=!0,this.table.setState(o.EBX_Table_State.NORMAL),void r.AdvancedSearchPane.addIncorrectFilterMessage()):403===t.status?(this.table.isTableReady=!1,void this.table.setState(o.EBX_Table_State.FORBIDDEN)):(this.table.isTableReady=!0,this.table.setState(o.EBX_Table_State.ERROR),void r.AdvancedSearchPane.updateNoSearchIcon())},e.prototype.fillVisibleLines=function(){var e,t=this.rawResponse.results.length;return this.table.resizeModule.isAutoHeight||(e=Math.ceil(this.table.scroll.mainScrollerHeight/a.EBX_AjaxTable_UIConstants.lineMinHeight))<t&&(t=e),this.appendLines(0,t),t},e.prototype.appendLines=function(e,t){for(var i=this.rawResponse.results,n=0===e,s=e;s<t;s++){var r=i[s];this.appendLine(s,n,r,this.table.element.update),n=!1}this.table.refreshCellIndexes()},e.prototype.appendLine=function(t,i,n,s){var r;s.clearRowProperty(t);var l,c=document.createElement("tr"),p=document.createElement("tr");l=1&t?"ebx_tvEven":"ebx_tvOdd";if(this.table.header.isSelectColumnEnabled){if(r=document.createElement("td"),i&&(r.style.width=this.table.header.columnDefinitionsByKey.ebx_tvColSelect.width+"px"),(this.table.header.isInheritanceColumnDisplayed||this.table.header.isSeverityColumnDisplayed)&&(r.style.borderRight="none"),r.className="ebx_tvSelectCell",this.table.isRecordSelectionEnabled){var m=[];m.push('<label  class="ebx_CheckboxButton_Label ebx_emptyLabel">'),m.push('<input type="checkbox"'),n[d.AjaxResponseRecordConstants.compiledStateIndexInResultLine].charAt(d.AjaxResponseRecordConstants.compiledRowStateIndexSelected)===d.AjaxResponseRecordConstants.compiledRowStateSelected&&(m.push(' checked="checked"'),l+=" ebx_tv_SelectedRow"),m.push('class="ebx_checkboxCustom"'),m.push("/>"),m.push("<i class='ebx_checkboxDisplay'>&nbsp;</i>"),r.innerHTML=m.join(""),m.push("</label>")}else r.innerHTML="&nbsp;";c.appendChild(r)}if(this.table.header.isInheritanceColumnDisplayed){var g=s.getRowProperty(t);g.inheritanceState=u.InheritanceManager.parseInheritanceState(n[d.AjaxResponseRecordConstants.compiledStateIndexInResultLine].charAt(d.AjaxResponseRecordConstants.compiledRowStateIndexInheritance)),l+=" "+u.InheritanceManager.getInheritanceLineCSSClass(g.inheritanceState),r=document.createElement("td"),i&&(r.style.width=this.table.header.columnDefinitionsByKey.ebx_tvColInheritance.width+"px"),this.table.header.isSeverityColumnDisplayed&&(r.style.borderRight="none"),r.className="ebx_tvInheritanceCell",r.innerHTML=this.inheritance.getInheritanceComponent(g.inheritanceState),c.appendChild(r)}this.table.header.isSeverityColumnDisplayed&&(r=document.createElement("td"),i&&(r.style.width=this.table.header.columnDefinitionsByKey.ebx_tvColSeverity.width+"px"),r.className=e.getSeverityCellClassNameFromSeverityFlag(n[d.AjaxResponseRecordConstants.compiledStateIndexInResultLine].charAt(d.AjaxResponseRecordConstants.compiledRowStateIndexSeverity)),r.title=e.getSeverityCellTitleFromSeverityFlag(n[d.AjaxResponseRecordConstants.compiledStateIndexInResultLine].charAt(d.AjaxResponseRecordConstants.compiledRowStateIndexSeverity)),r.innerHTML="&nbsp;",c.appendChild(r));for(var f=this.table.header.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader+1,b=d.AjaxResponseRecordConstants.firstColumnContentIndexInResultLine,E=n.length;b<E;b++,f++){r=document.createElement("td"),i&&(void 0!==this.table.header.columnDefinitions[f].width?r.style.width=this.table.header.columnDefinitions[f].width+"px":r.style.minWidth=this.table.header.columnDefinitions[f].headerWidth+a.EBX_AjaxTable_UIConstants.minWidthIssueGap+"px");var C=n[b];if(C instanceof Array){""===C[0].trim()?r.innerHTML="&nbsp;":r.innerHTML=C[0];var _=new h;(C[1]&u.InheritanceManager.cellFlagInherit)===u.InheritanceManager.cellFlagInherit&&(r.title=o.EBX_AjaxTable.messages.table_inheritedCellValue_title,_.backgroundImage.push("url("+o.EBX_AjaxTable.constants.inheritCellFlagURL+")"),_.backgroundRepeat.push("no-repeat"),_.backgroundPosition.push("0 0")),void 0!==C[2]&&(r.style.backgroundColor=C[2],void 0!==C[3]&&(_.backgroundImage.push("url("+C[3]+")"),void 0!==C[4]&&(_.backgroundRepeat.push(C[4]),void 0!==C[5]&&_.backgroundPosition.push(C[5])))),0!==_.backgroundImage.length&&(EBX_LayoutManager.isIE8?(r.style.backgroundImage=_.backgroundImage[0],void 0!==_.backgroundRepeat[0]&&(r.style.backgroundRepeat=_.backgroundRepeat[0]),void 0!==_.backgroundPosition[0]&&(r.style.backgroundPosition=_.backgroundPosition[0])):(r.style.backgroundImage=_.backgroundImage.join(", "),r.style.backgroundRepeat=_.backgroundRepeat.join(", "),r.style.backgroundPosition=_.backgroundPosition.join(", ")))}else""===C.trim()?r.innerHTML="&nbsp;":r.innerHTML=C;f>=this.table.nbFixedColumns?p.appendChild(r):c.appendChild(r)}r.className="ebx_tv_td_lastVisible",c.appendChild(e.createBaselineControllers()),p.appendChild(e.createBaselineControllers()),c.className=p.className=l,s.fixed.table.firstChild.appendChild(c),s.main.table.firstChild.appendChild(p),s.incrementNumberOfRowDisplayed()},e.createBaselineControllers=function(){var e=document.createElement("td");return e.style.visibility="hidden",e.style.paddingLeft="0",e.style.paddingRight="0",e.innerHTML="<span style='display: inline-block'>&nbsp;</span>",e},e.prototype.initCreatePart=function(){if(this.recordsForCreateNbToInit>0)for(;this.recordsForCreateNbToInit-- >0;)this.table.gridEditModule.creation.createNewRecord(!0)},e.prototype.fillRemainingLinesAndLaunchSynchronizeRemainingLines=function(e,t){this.initCreatePart();var i=e,n=!0;(e=i+5)>this.rawResponse.results.length&&(e=this.rawResponse.results.length,n=!1),this.appendLines(i,e);var s=this;n?window.setTimeout((function(){s.fillRemainingLinesAndLaunchSynchronizeRemainingLines(e,t)}),10):window.setTimeout((function(){s.synchronizeRemainingLinesHeight(t)}),10)},e.prototype.synchronizeVisibleLinesHeightAndLaunchFillRemainingLines=function(e){var t=this.table.element.update,i=t.getNumberOfRowsDisplayed(),n=0;if(t.setLinesHeightsSum(0),0!==i)for(;n<i&&(this.synchronizeLine(n),t.setLinesHeightsSum(t.getRowProperty(n).cumulativeHeight),!(t.getLinesHeightsSum()>this.table.scroll.mainScrollerHeight));n++);var s=n;this.table.resizeModule.isAutoWidthNeeded&&this.table.header.initUndefinedColWidths(),this.table.resizeModule.resizeContainers();var r=this;window.setTimeout((function(){r.fillRemainingLinesAndLaunchSynchronizeRemainingLines(e,s)}),10)},e.prototype.clearLineSync=function(e,t){var i,n,s=t?this.table.element.create:this.table.element.update;i=s.fixed.table.rows[e],n=s.main.table.rows[e],i.cells[this.table.lastFixedCellIndex].style.paddingTop="",n.cells[this.table.lastMainCellIndex].style.paddingTop="",i.style.height="",n.style.height=""},e.prototype.synchronizeLine=function(e,t){var i,n,s,r,o,l,a,d=0;if(n=(i=t?this.table.element.create:this.table.element.update).fixed.table.rows[e],s=i.main.table.rows[e],r=n.cells[this.table.lastFixedCellIndex].firstChild.offsetTop,o=s.cells[this.table.lastMainCellIndex].firstChild.offsetTop,n.cells[this.table.lastFixedCellIndex].style.paddingTop="",s.cells[this.table.lastMainCellIndex].style.paddingTop="",r!==o||this.table.isEditionMode){var u=Math.max(r,o);n.cells[this.table.lastFixedCellIndex].style.paddingTop=u+"px",s.cells[this.table.lastMainCellIndex].style.paddingTop=u+"px",i.getRowProperty(e).offsetTop=u}else i.getRowProperty(e).offsetTop=o;this.table.header.isSeverityColumnDisplayed&&(n.cells[this.table.header.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInDataTable].style.backgroundPosition="center "+(i.getRowProperty(e).offsetTop+1)+"px"),n.style.height="",s.style.height="",(l=n.offsetHeight)>(a=s.offsetHeight)?(n.style.height=l+"px",s.style.height=l+"px",i.getRowProperty(e).height=l):(n.style.height=a+"px",s.style.height=a+"px",i.getRowProperty(e).height=a),e>0&&(d=i.getRowProperty(e-1).cumulativeHeight),i.getRowProperty(e).cumulativeHeight=d+i.getRowProperty(e).height},e.prototype.synchronizeRemainingLinesHeight=function(e){var t,i,n;if(t=this.table.element.update.main.table.rows.length,i=e,n=1,0!==t)for(;i<t&&(this.synchronizeLine(i),this.table.element.update.setLinesHeightsSum(this.table.element.update.getRowProperty(i).cumulativeHeight),!(n>5));i++,n++);if(i<t-1){e=i+1;var s=this;window.setTimeout((function(){s.synchronizeRemainingLinesHeight(e)}),0)}else this.synchronizeLinesCompleted()},e.prototype.synchronizeLinesCompleted=function(){EBX_LayoutManager.isIE8&&(this.table.element.update.fixed.table.firstChild.lastChild.className+=" ebx_ie8_last-child",this.table.element.update.main.table.firstChild.lastChild.className+=" ebx_ie8_last-child"),this.table.isEditionMode&&this.table.gridEditModule.synchronizeLinesCompleted(),this.table.onTableIsReady(),this.table.resizeModule.resizeContainers(),!1===this.table.resizeModule.isAutoHeight&&this.table.refreshContainerCSSClasses(),window.setTimeout(this.rawResponse.meta.scriptToExecute,0)},e.prototype.syncLinesIn=function(e,t){var i,n,s,r=0,o=t?this.table.element.create:this.table.element.update;for(i=o.getNumberOfRowsDisplayed(),n=0;r<i;r++)EBX_Utils.arrayContains(e,r)?(this.clearLineSync(r,t),this.synchronizeLine(r,t)):o.getRowProperty(r).cumulativeHeight=n+o.getRowProperty(r).height,n=o.getRowProperty(r).cumulativeHeight;s=o.getLinesHeightsSum(),i>0&&o.setLinesHeightsSum(o.getRowProperty(i-1).cumulativeHeight),o.getLinesHeightsSum()!==s&&this.table.resizeModule.resizeContainers()},e.getSeverityCellClassNameFromSeverityFlag=function(e){return"E"===e?"ebx_tvSeverityCell ebx_IconError":"W"===e?"ebx_tvSeverityCell ebx_IconWarning":"I"===e?"ebx_tvSeverityCell ebx_IconInfo":"C"===e?"ebx_tvSeverityCell ebx_IconConcurrentUpdate":"ebx_tvSeverityCell"},e.getSeverityCellTitleFromSeverityFlag=function(e){return"E"===e?o.EBX_AjaxTable.messages.table_severityIcon_error:"W"===e?o.EBX_AjaxTable.messages.table_severityIcon_warning:"I"===e?o.EBX_AjaxTable.messages.table_severityIcon_info:"C"===e?o.EBX_AjaxTable.messages.table_severityIcon_concurrentUpdate:""},e.fetchResponseSchema={resultsList:"records",metaFields:{hasNextPage:"hasNextPage",hasPreviousPage:"hasPreviousPage",hasChangeSet:"hasChangeSet",fullSizeUnknown:"fullSizeUnknown",pageReport:"pageReport",selectedNumber:"selectedNumber",scriptToExecute:"scriptToExecute",sortState:"sortState",isSortableByRelevancy:"isSortableByRelevancy",highestSeverity:"highestSeverity",currentTablePageId:"currentTablePageId"}},e.searchResponseSchema={resultsList:"records",metaFields:{hasNextPage:"hasNextPage",hasPreviousPage:"hasPreviousPage",hasChangeSet:"hasChangeSet",fullSizeUnknown:"fullSizeUnknown",pageReport:"pageReport",selectedNumber:"selectedNumber",scriptToExecute:"scriptToExecute",sortState:"sortState",isSortableByRelevancy:"isSortableByRelevancy",highestSeverity:"highestSeverity",currentTablePageId:"currentTablePageId"}},e.cancelCounter=0,e}();t.Content=c;var h=function(){this.backgroundImage=[],this.backgroundRepeat=[],this.backgroundPosition=[]}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,s=i(0),r=i(5),o=i(6),l=function(){function e(e){this.table=e,this.inheritedResponseSchema={resultsList:"messages",fields:[{key:"message"},{key:"severity"}]}}return e.prototype.init=function(){this.inheritedHandler=new r.YUI_XHRDataSourceJSON(s.EBX_AjaxTable.constants.rowInheritRequest,this.inheritedResponseSchema),this.overwrittenHandler=new r.YUI_XHRDataSourceJSON(s.EBX_AjaxTable.constants.rowOverwriteRequest,this.inheritedResponseSchema),this.occultHandler=new r.YUI_XHRDataSourceJSON(s.EBX_AjaxTable.constants.rowDeleteRequest,this.inheritedResponseSchema)},e.prototype.getInheritanceComponent=function(e){if(e.mode===n.Root);else{if(e.mode===n.Inherit)return e.canOverwrite?(e.confirmMessage=s.EBX_AjaxTable.messages.table_inheritance_overwrite_confirm,e.dataSource=this.overwrittenHandler,e.isOpeningRecord=!0,s.EBX_AjaxTable.constants.overwriteButtonHTML):s.EBX_AjaxTable.constants.inheritFlagHTML;if(e.mode===n.Overwrite)return e.canDelete?(e.confirmMessage=s.EBX_AjaxTable.messages.table_inheritance_inherit_confirm,e.dataSource=this.inheritedHandler,e.isOpeningRecord=!1,s.EBX_AjaxTable.constants.inheritButtonHTML):s.EBX_AjaxTable.constants.overwritingFlagHTML;if(e.mode===n.Occult){if(e.canDelete)return e.confirmMessage=s.EBX_AjaxTable.messages.table_inheritance_inherit_confirm,e.dataSource=this.inheritedHandler,e.isOpeningRecord=!1,s.EBX_AjaxTable.constants.inheritButtonHTML}else if(e.mode===n.OccultOrphan&&e.canDelete)return e.confirmMessage=s.EBX_AjaxTable.messages.table_deleteRecord_confirm,e.dataSource=this.occultHandler,e.isOpeningRecord=!1,s.EBX_AjaxTable.constants.deleteButtonHTML}return"&nbsp;"},e.prototype.changeInheritanceState=function(e){var t=this.table.element.update.getRowProperty(e).inheritanceState;this.table.selection.focusLineIndex(e),this.sendRequestChangeInheritanceState(t,e)},e.prototype.sendRequestChangeInheritanceState=function(e,t){var i,n=this.table.content.rawResponse.results[t][o.AjaxResponseRecordConstants.keyIndexInResultLine];(i=[]).push(s.EBX_AjaxTable.constants.tableNameParameter,this.table.tableName),i.push(s.EBX_AjaxTable.constants.rowSelectionParameter,n),e.dataSource.sendRequest(i.join(""),this.getCallbackChangeInheritanceState(t,e))},e.prototype.getCallbackChangeInheritanceState=function(e,t){return{success:this.callbackChangeInheritanceStateSuccess,failure:this.callbackChangeInheritanceStateFailure,scope:this,argument:{recordIndex:e,inheritanceState:t}}},e.prototype.callbackChangeInheritanceStateSuccess=function(e,t,i){var n=t.results;if(void 0!==n)for(var s=0;s<n.length;s++){var r=n[s].message,o=n[s].severity;void 0===o&&(o=EBX_UserMessageManager.INFO),EBX_UserMessageManager.addMessage(r,o)}i.inheritanceState.isOpeningRecord?this.table.selection.openRecordIndex(i.recordIndex):this.table.content.refreshCurrentPage()},e.prototype.callbackChangeInheritanceStateFailure=function(e,t,i){if(401===t.status)return this.table.isTableReady=!1,this.table.setState(s.EBX_Table_State.LOGOUT),void EBX_Loader.gotoTimeoutPage()},e.prototype.clickOnInheritanceButton=function(e){var t=this.table.element.update.getRowProperty(e).inheritanceState;if(void 0!==t.dataSource){var i=this;ebx_confirm({question:t.confirmMessage,jsCommandYes:function(){i.changeInheritanceState(e)}})}},e.parseInheritanceState=function(e){var t=parseInt(e,36);if(!(t>=0&&t<36))return null;var i=new a;return i.canOverwrite=t>=20,i.canOverwrite&&(t-=20),i.canDelete=t>=10,i.canDelete&&(t-=10),i.mode=t,i},e.getInheritanceLineCSSClass=function(e){return 1===e.mode?"ebx_tvRowRoot":4===e.mode||5===e.mode?"ebx_tvRowOcculting":""},e.cellFlagInherit=1,e}();t.InheritanceManager=l,function(e){e[e.Root=1]="Root",e[e.Inherit=2]="Inherit",e[e.Overwrite=3]="Overwrite",e[e.Occult=4]="Occult",e[e.OccultOrphan=5]="OccultOrphan"}(n||(n={}));var a=function(){};t.InheritanceState=a},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(9),s=i(7),r=function(){function e(e){this.table=e,this.clipboard=null,this.clipboardBorder=null,this.clipboardSynchronize=new l(this)}return e.prototype.init=function(){var e=this;this.table.header.addColumnWidthChangeHandler((function(){null!==e.clipboardBorder&&e.clipboardBorder.isVisible()&&(e.clipboardBorder.hide(),e.clipboardBorder.draw())}))},e.prototype.copy=function(){var t=this;if(null!==this.clipboard&&(this.changeClipboardCellsStyle(!1),this.clipboard=null),null!==this.table.grid_selection.getCurrentSelection()){this.clipboard=new a;var i=this.table.grid_selection.getCurrentSelection();i.onEachCell((function(n,s,r){var l="",a="",d=!0;t.isCopyEnabledFor(r)?null!==(l=t.getValueOfCell(r))&&(a=e.getTdInnerText(r.tdElement)):(d=!1,t.notifyCopyOrPasteNotSupported(r));var u=new o(l,a,d,r);t.clipboard.add(n-i.getRowStart(),s-i.getColStart(),u)})),this.clipboard.isEmpty()?this.clipboard=null:this.changeClipboardCellsStyle(!0),this.clipboardSynchronize.send()}},e.prototype.paste=function(){var e=this;if(null==this.clipboard)return null;this.changeClipboardCellsStyle(!1);var t=this.table.grid_selection.getCurrentSelection();if(null!=t){if(t.getWidth()<this.clipboard.getWidth()){var i=t.getColStart()+this.clipboard.getWidth()-1,s=this.table.nbFixedColumns-1+this.table.nbMainColumns;this.table.header.isSeverityColumnDisplayed||s--,i=Math.min(s-1,i),t.setColEnd(i)}if(t.getHeight()<this.clipboard.getHeight()){var r=t.getRowStart()+this.clipboard.getHeight()-1,o=this.table.element.update.getNumberOfRowsDisplayed()-1;this.table.element.hasCreatePart()&&(o+=this.table.element.create.getNumberOfRowsDisplayed()),r=Math.min(o,r),t.setRowEnd(r)}var l=function(i,n,s){var r=e.clipboard.getCell((i-t.getRowStart())%e.clipboard.getHeight(),(n-t.getColStart())%e.clipboard.getWidth());r.copyWasSupported&&s.getEditor().setPastedValue(r)},a=function(t,i){return!(e.table.gridEditModule.getWidgetForEdition(i).isCopyDisabled||t.getEditor()instanceof n.EBX_FormNodeEditor_Missing)},u=[],c=[],h=[];t.onEachCell((function(i,n,s){var r=e.table.gridEditModule.getCellPath(s),o=EBX_FormNodeIndex.getFormNode(r);o?a(o,s)?(l(i,n,o),h.push(r)):e.notifyCopyOrPasteNotSupported(s):e.table.gridEditModule.getWidgetForEdition(s).isReadWrite&&!e.table.gridEditModule.getWidgetForEdition(s).isCopyDisabled?(u.push(s),c.push(new d(i,n,r,s))):e.notifyCopyOrPasteNotSupported(s);t.isLastCell(i,n)&&h.length>0&&EBX_FormPresenter.stackListPathForValidationOnPaste(h)})),this.table.gridEditModule.loadCellsWidgets(u,(function(){for(var t=[],i=0;i<c.length;i++){var n=c[i],s=EBX_FormNodeIndex.getFormNode(n.path);s?a(s,n.cell)?(l(n.row,n.col,s),t.push(n.path)):e.notifyCopyOrPasteNotSupported(n.cell):EBX_Logger.log("GridEdit_CopyModule_Refresh.paste: Widget loaded but not the form node.",EBX_Logger.error)}EBX_FormPresenter.stackListPathForValidationOnPaste(t)}),(function(e){EBX_Logger.log("GridEdit_CopyModule_Refresh.paste: Error on loading widget : "+e,EBX_Logger.error)}))}},e.prototype.getValueOfCell=function(e){var t=this.table.gridEditModule.getCellPath(e),i=EBX_FormNodeIndex.getFormNode(t);return null!==i?i.getEditor().getCopyValue():this.table.gridEditModule.getWidgetForEdition(e).initialValue},e.getTdInnerText=function(t){var i=[];if(1===t.nodeType&&"BUTTON"!==t.tagName)for(var n=t.firstChild;n;)3===n.nodeType?i.push(n.wholeText):i.push(e.getTdInnerText(n)),n=n.nextSibling;var s=i.join("");return" "===s&&(s=""),s.replace(/\u00a0/g," ")},e.prototype.changeClipboardCellsStyle=function(e){null!=this.clipboard&&(e?(this.clipboard.onEachCell((function(e){e.cell&&EBX_Utils.addCSSClass(e.cell.tdElement,"ebx_TableCellCopied")})),this.clipboardBorder=new s.SelectionRangeMask(this.table,s.SelectionBorderStyle.Outline,this.clipboard),this.clipboardBorder.draw()):(this.clipboard.onEachCell((function(e){e.cell&&EBX_Utils.removeCSSClass(e.cell.tdElement,"ebx_TableCellCopied")})),null!==this.clipboardBorder&&this.clipboardBorder.hide()))},e.prototype.getBuffer=function(){return this.clipboard},e.prototype.initClipboard=function(e){this.clipboard=l.getClipboardFromObject(e)},e.prototype.isCopyEnabledFor=function(e){return!this.table.gridEditModule.getWidgetForEdition(e).isCopyDisabled},e.prototype.notifyCopyOrPasteNotSupported=function(e){EBX_Utils.addCSSClass(e.tdElement,"ebx_TableCellCopyOrPasteNotSupported"),window.setTimeout((function(){EBX_Utils.removeCSSClass(e.tdElement,"ebx_TableCellCopyOrPasteNotSupported")}),500)},e}();t.GridEdit_CopyModule=r;var o=function(){function e(e,t,i,n){this.value=e,this.displayedStr=t,this.copyWasSupported=i,this.cell=n}return e.prototype.getDisplayedString=function(){return this.displayedStr?this.displayedStr:this.getValue()},e.prototype.getValue=function(){return this.value},e.prototype.serialize=function(){return JSON.stringify(this,["value","displayedStr","copyWasSupported"])},e}();t.CellCopyValue=o;var l=function(){function e(e){this.owner=e}return e.handleAjaxResponseFailed=function(e){EBX_Logger.log("GridEdit_CopyModule_Refresh.handleAjaxResponseFailed: Save clipboard failed : "+e+".",EBX_Logger.error)},e.prototype.send=function(){var t=this,i=this.owner.getBuffer(),n="";null!==i&&(n="&"+this.clipboardParam+"="+encodeURIComponent(i.serialize()));var s=this.url;s+=n;var r=new EBX_AJAXResponseHandler;r.handleAjaxResponseSuccess=function(i){var n=t.owner.getBuffer();try{if(null===n&&""===i)return;var s=JSON.parse(i),r=e.getClipboardFromObject(s);r&&r.serialize()===n.serialize()||t.send()}catch(e){EBX_Logger.log("GridEdit_CopyModule_Refresh.send: Failed to parse clipboard JSON : "+i+".",EBX_Logger.error)}},r.handleAjaxResponseFailed=e.handleAjaxResponseFailed,r.sendRequest(s)},e.getClipboardFromObject=function(e){for(var t=new a,i=0;i<e.length;i++)for(var n=e[i],s=0;s<n.length;s++){var r=n[s];r.hasOwnProperty("value")&&r.hasOwnProperty("displayedStr")&&t.add(i,s,new o(r.value,r.displayedStr,r.copyWasSupported))}return t},e}(),a=function(){function e(){this.cells=[]}return e.prototype.serialize=function(){if(!this.cells)return null;for(var e=[],t=0;t<this.cells.length;t++){for(var i=this.cells[t],n=[],s=0;s<i.length;s++)n.push(i[s].serialize());e.push("["+n.join(",")+"]")}return" ["+e.join(",")+"]"},e.prototype.add=function(e,t,i){void 0===this.cells[e]&&(this.cells[e]=[]),this.cells[e][t]=i},e.prototype.getHeight=function(){return this.cells.length},e.prototype.getWidth=function(){return this.getHeight()>0?this.cells[0].length:0},e.prototype.getCell=function(e,t){return this.cells[e][t]},e.prototype.onEachCell=function(e){for(var t=0;t<this.getHeight();t++)for(var i=0;i<this.getWidth();i++)e(this.cells[t][i])},e.prototype.getTopLeftCell=function(){return this.getCell(0,0).cell},e.prototype.getTopRightCell=function(){return this.getCell(0,this.cells[0].length-1).cell},e.prototype.getBottomLeftCell=function(){return this.getCell(this.cells.length-1,0).cell},e.prototype.getBottomRightCell=function(){return this.getCell(this.cells.length-1,this.cells[this.cells.length-1].length-1).cell},e.prototype.isEmpty=function(){var e=0===this.cells.length;if(!e){var t=!1;return this.onEachCell((function(e){!t&&e.copyWasSupported&&(t=!0)})),!t}return e},e}(),d=function(e,t,i,n){this.row=e,this.col=t,this.path=i,this.cell=n}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(0),s=i(9),r=i(27),o=function(){function e(e){this.table=e,this.widgetsByPath={},this.widgetPathsForCreation={},this.widgetPathsForEdition={},this.updateRecordIds=[],this.createRecordParameterPrefix=[],this.updateRecordParameterPrefix=[],this.orphanMessages={},this.widgetContainerEl=null,this.widgetContainerCurrentPosition=new l,this.currentWidgetForEditionObj=null,this.currentWidgetEdited=null,this.currentFormNodeEdited=null,this.currentTdEdited=null,this.previousCellsWaitingForAjax=[],this.creation=new r.GridEdit_RecordCreation(this.table,this.table.content,this)}return e.prototype.init=function(){this.table.callFunctionWhenTableIsReady(this.autoEditFirstReadWriteWidget,null,this)},e.prototype.initInternalElements=function(){this.widgetContainerEl=document.getElementById(this.widgetContainerId),this.widgetContainerScrollMaker=document.createElement("div"),this.widgetContainerScrollMaker.className="ebx_widgetContainerScrollMaker",this.widgetContainerEl.appendChild(this.widgetContainerScrollMaker),this.table.element.external.parentForm=EBX_Utils.getFirstParentMatchingTagName(this.table.element.container,"FORM")},e.prototype.addListeners=function(){YAHOO.util.Event.addListener(this.table.element.update.fixed.table,"dblclick",this.table.dblclickOnTableListener,this.table.element.update.fixed.table,this.table),YAHOO.util.Event.addListener(this.table.element.update.main.table,"dblclick",this.table.dblclickOnTableListener,this.table.element.update.main.table,this.table),YAHOO.util.Event.addListener(this.table.element.update.fixed.table,"mouseover",this.table.mouseoverTableListener,this.table.element.update.fixed.table,this.table),YAHOO.util.Event.addListener(this.table.element.update.main.table,"mouseover",this.table.mouseoverTableListener,this.table.element.update.main.table,this.table),YAHOO.util.Event.addListener(this.table.element.update.fixed.table,"mouseout",this.table.mouseoutTableListener,this.table.element.update.fixed.table,this.table),YAHOO.util.Event.addListener(this.table.element.update.main.table,"mouseout",this.table.mouseoutTableListener,this.table.element.update.main.table,this.table),YAHOO.util.Event.addListener(document.body,"click",this.clickOnDocumentWhenEditListener,null,this),YAHOO.util.Event.addListener(this.widgetContainerEl,"scroll",this.synchronizeScrollFromWidgetContainer,null,this),YAHOO.util.Event.addListener(this.widgetContainerEl,"keypress",this.keyPressOnWidgetContainerListener,null,this),EBX_FormPresenter.addGlobalAJAXResponseListener(this.receiveAPVResponse,this)},e.prototype.synchronizeLinesCompleted=function(){this.widgetContainerCurrentPosition.contentHeight=this.table.element.update.getLinesHeightsSum(),this.widgetContainerCurrentPosition.contentHeight<this.widgetContainerCurrentPosition.height&&(this.widgetContainerCurrentPosition.contentHeight=this.widgetContainerCurrentPosition.height),this.widgetContainerScrollMaker.style.top=this.widgetContainerCurrentPosition.contentHeight+this.table.element.update.fixed.scrollMaker.offsetHeight+"px"},e.prototype.initWhenTableIsReady=function(){this.updateWidgetsFromAPVInitDocument(),this.initDeleteStates(),this.table.element.hasCreatePart()&&this.creation.autoResizeCreatePartOnTableInit()},e.prototype.updateWidgetsFromAPVInitDocument=function(){EBX_FormPresenter.receive(this.apvDocumentToUpdateWidgets),this.receiveAPVResponse("update",null,this.apvDocumentToUpdateWidgets)},e.prototype.initDeleteStates=function(){for(var e=0,t=this.creatingRecordIndiceToIgnore;e<t.length;e++){var i=t[e],n=EBX_Utils.getFirstRecursiveChildMatchingCSSClass(this.table.element.create.fixed.table.rows[i],"ebx_deleteTableRow");this.deleteTableRow(n)}for(var s=0,r=this.recordIndiceFlaggedToDelete;s<r.length;s++){var o=r[s];n=EBX_Utils.getFirstRecursiveChildMatchingCSSClass(this.table.element.update.fixed.table.rows[o],"ebx_deleteTableRow");this.deleteTableRow(n)}},e.prototype.autoEditFirstReadWriteWidget=function(){var e=this.table.element.hasCreatePart()?this.widgetPathsForCreation:this.widgetPathsForEdition;void 0!==e[0]&&void 0!==e[0][0]&&this.table.grid_selection.focusCell(new n.Cell(this.table.getTdElFromPath(e[0][0])))},e.prototype.receiveAPVResponse=function(e,t,i){var n,s,r,o,l,a,d=[],u=[];if(void 0!==i.update)for(n=0,s=i.update.length;n<s;n++)if(void 0!==(r=i.update[n]).message&&!1===ebx_form_isNodeDefined(r.path)&&(this.orphanMessages[r.path]=r.message),o=this.table.getTdElFromPath(r.path),this.widgetsByPath[r.path].isNewValueSet=r.isNewValueSet,null!==o){l=o.parentNode.rowIndex;var c=void 0;c=this.widgetsByPath[r.path].isForCreate?d:u,!1===EBX_Utils.arrayContains(c,l)&&c.push(l),EBX_Utils.removeCSSClass(o,"ebx_LightColoredBackground"),EBX_Utils.removeCSSClass(o,"ebx_cellWithStatus"),a="",void 0!==r.message?(void 0!==r.message.errors?a="#F0D0D0":void 0!==r.message.warnings?a="#FFE0B0":void 0!==r.message.infos&&(a="#D0D0FF"),""!==a&&EBX_Utils.addCSSClass(o,"ebx_cellWithStatus")):r.isNewValueSet&&(EBX_Utils.addCSSClass(o,"ebx_LightColoredBackground"),EBX_Utils.addCSSClass(o,"ebx_cellWithStatus")),o.style.backgroundColor=a,void 0!==r.readOnlyHTML&&(o.innerHTML=r.readOnlyHTML),void 0!==r.readOnlyJS&&window.setTimeout(r.readOnlyJS,0)}this.table.element.hasCreatePart()&&this.updateTDsAndRevertButton(e,d,!0),this.updateTDsAndRevertButton(e,u,!1),this.table.content.syncEditedLinesByAPV(d,u)},e.prototype.updateTDsAndRevertButton=function(e,t,i){for(var n=i?this.table.element.create.fixed.table:this.table.element.update.fixed.table,s=i?this.widgetPathsForCreation:this.widgetPathsForEdition,r=0,o=t.length;r<o;r++){var l=t[r],a=EBX_Utils.getFirstRecursiveChildMatchingCSSClass(n.rows.item(l),"ebx_revertTableRow"),d=void 0;if("resetRecord"===e){d=!1;for(var u=0,c=void 0;void 0!==(c=s[l][u]);){this.widgetsByPath[c].isNewValueSet=!1;var h=this.table.getTdElFromPath(c);EBX_Utils.removeCSSClass(h,"ebx_LightColoredBackground"),h.style.backgroundColor="",u++}}else{d=!1;for(u=0,c=void 0;void 0!==(c=s[l][u]);){if(this.widgetsByPath[c].isNewValueSet){d=!0;break}u++}}null!==a&&(d?EBX_Utils.removeCSSClass(a,"ebx_revertTableRowDisabled"):EBX_Utils.addCSSClass(a,"ebx_revertTableRowDisabled"))}},e.prototype.clickOnDocumentWhenEditListener=function(e){var t=EBX_Utils.getTargetElement(e);if(null===this.currentTdEdited){if(null!==this.table.grid_selection.currentTdFocused){if(t===this.table.grid_selection.currentTdFocused||EBX_Utils.isChildOf(t,this.table.grid_selection.currentTdFocused))return;var i=EBX_Utils.getFirstParentMatchingCSSClass(t,"yuimenu");if(i&&"ebx_MenuForMenuButtons"===i.id)return;for(var s=n.EBX_AjaxTable.pluggedComponentRegister.toolbarsByTable[this.table.tableName],r=0,o=s.length;r<o;r++){var l=document.getElementById(s[r]);if(null!==l&&EBX_Utils.isChildOf(t,l)||l===t)return}return this.table.grid_selection.releaseCurrentCellFocus(),void this.table.grid_selection.releaseCurrentSelection()}}else{if(t===this.currentTdEdited||EBX_Utils.isChildOf(t,this.currentTdEdited))return;if(t===this.currentWidgetEdited||EBX_Utils.isChildOf(t,this.currentWidgetEdited))return;this.releaseCurrentEdition(null,!1)}},e.prototype.keyPressOnWidgetContainerListener=function(e){if(e.keyCode===EBX_Utils.keyCodes.ENTER&&(null!==this.currentTdEdited||null!==this.table.grid_selection.currentTdFocused))if(YAHOO.util.Event.stopEvent(e),null!==this.currentTdEdited){var t,i=new n.Cell(this.currentTdEdited);null===(t=e.shiftKey?this.table.grid_selection.getCellTop(i):this.table.grid_selection.getCellDown(i))?null!==this.currentTdEdited&&this.requestEditCell(i):this.requestEditCell(t)}else this.requestEditCell(new n.Cell(this.table.grid_selection.currentTdFocused))},e.prototype.editCurrentCellFocus=function(){this.requestEditCell(this.table.getCurrentCellFocused())},e.prototype.requestEditCell=function(e){var t=this;this.releaseCurrentEdition(),this.loadCellWidget(e,(function(i){if(i){var n=t.getCellPath(e),s=t.widgetsByPath[n];void 0!==s&&s.isReadWrite&&(t.table.grid_selection.releaseCurrentCellFocus(),t.editCell(s))}}),(function(e){EBX_Logger.log("GridEdit.requestEditCell: Failed to load widget : "+e+".",EBX_Logger.error)}))},e.prototype.loadCellWidget=function(e,t,i){this.loadCellsWidgets([e],t,i)},e.prototype.loadCellsWidgets=function(t,i,s){for(var r=[],o=[],l=0,d=t.length;l<d;l++){var u=t[l],c=EBX_Utils.getIndex(u.tdElement),h=0;u.isPlacedInFixedContainer()?this.table.header.isSeverityColumnDisplayed||c++:(c+=this.table.nbFixedColumns,h=this.table.header.columnDefinitions[this.table.nbFixedColumns-1].cumulativeWidth);var p=u.tdElement.parentNode.rowIndex,m=this.getCellPath(u);if(null!=m){var g=this.widgetsByPath[m];if(void 0===g.cell&&(g.cell=u,g.cellIndexForColumnDef=c,g.fixedColumnsWidthToAdd=h),g.isReadWrite&&void 0===g.widget)if(g.isPresentAtPageInit)g.widget=document.getElementById(g.wrapperId);else{g.isNoMoreAvailable&&(g.isNoMoreAvailable=!1,EBX_Utils.removeCSSClass(u.tdElement,"ebx_TableCellDisabledFocused"));var f=u.tdElement.innerHTML;u.tdElement.innerHTML="<div class='ebx_IconAnimWait ebx_tvCellWaitingIcon'>&nbsp;</div>",u.tdElement.style.cursor="wait";var b=p%2==0;r.push([encodeURI(m),b]),o.push(new a(g,f))}}}if(o.length>0){e.releaseWaitingCells(this.previousCellsWaitingForAjax),this.previousCellsWaitingForAjax=o;var E=this,C=new EBX_AJAXResponseHandler;C.handleAjaxResponseSuccess=function(t){var s=document.createElement("div");s.innerHTML=t;for(var r=0;s.childNodes.length>0;){var l=o[r].widgetObj;null!==E.table.element.external.parentForm&&void 0!==E.table.element.external.parentForm.ebx_initialSerialize&&(E.table.element.external.parentForm.ebx_initialSerialize+="&"+EBX_Form.serialize(s)),E.widgetContainerEl.appendChild(s.firstChild),l.widget=document.getElementById(l.wrapperId),n.EBX_AjaxTable.initAPVListeners(l.widget),r++}E.onWidgetLoaded((function(){e.releaseWaitingCells(o),i(E.previousCellsWaitingForAjax===o),E.previousCellsWaitingForAjax===o&&(E.previousCellsWaitingForAjax=[])}))},C.handleAjaxResponseFailed=function(t){e.releaseWaitingCells(o),s(t),E.previousCellsWaitingForAjax===o&&(E.previousCellsWaitingForAjax=[])},C.sendRequest(this.gridEditorGetWidgetAjaxURL+"&prefixedPaths="+JSON.stringify(r))}else i(!0)},e.prototype.onWidgetLoaded=function(e){this.onWidgetLoadedHandler=e},e.prototype.getCellPath=function(e){var t=EBX_Utils.getIndex(e.tdElement);e.isPlacedInFixedContainer()?(t+=this.fixedColumnsWidgetIndexOffset,!0===this.table.header.isSeverityColumnDisplayed&&t--):t+=this.mainColumnsWidgetIndexOffset;var i=e.tdElement.parentNode.rowIndex,n=e.isPlacedInTheCreatePart()?this.widgetPathsForCreation:this.widgetPathsForEdition;return void 0===n[i]||void 0===n[i][t]?null:n[i][t]},e.prototype.editCell=function(e){if(e.isNoMoreAvailable)this.table.grid_selection.focusCell(e.cell,!0);else{this.table.copyModule.changeClipboardCellsStyle(!1),this.table.grid_selection.releaseCurrentSelection(),this.hideSeverityMessagePanel(e.cell.tdElement,e.cell.getTable()),this.currentWidgetForEditionObj=e,this.resizeWidgetContainer();var t=EBX_Utils.CellHorizontalSpacing-9;this.setInputWidthOfWidgets(this.table.header.columnDefinitionsByKey[this.currentWidgetForEditionObj.columnKey].width-1-2*t,this.currentWidgetForEditionObj.wrapperId);var i=this.currentWidgetForEditionObj.cellIndexForColumnDef,n=this.currentWidgetForEditionObj.fixedColumnsWidthToAdd,r=this.currentWidgetForEditionObj.gridCoords.lineIndex,o=e.cell.isPlacedInTheCreatePart()?this.table.element.create:this.table.element.update,l={top:o.getRowProperty(r).cumulativeHeight-o.getRowProperty(r).height,left:n+this.table.header.columnDefinitions[i].cumulativeWidth-this.table.header.columnDefinitions[i].width,width:this.table.header.columnDefinitions[i].width,height:o.getRowProperty(r).height};this.currentTdEdited=this.currentWidgetForEditionObj.cell.tdElement,this.currentWidgetIsPlacedInFixedContainer=this.currentWidgetForEditionObj.cell.isPlacedInFixedContainer(),this.currentWidgetIsPlacedInCreatePart=this.currentWidgetForEditionObj.cell.isPlacedInTheCreatePart(),this.currentWidgetEdited=this.currentWidgetForEditionObj.widget,this.currentWidgetEdited.style.maxHeight=this.widgetContainerCurrentPosition.height+"px",this.currentWidgetEdited.style.maxWidth=this.widgetContainerCurrentPosition.width+"px",this.currentWidgetEdited.lastChild.style.paddingTop=o.getRowProperty(r).offsetTop+"px",this.currentWidgetWidth=this.currentWidgetEdited.offsetWidth,this.currentWidgetHeight=this.currentWidgetEdited.offsetHeight;var a=!1;l.width===this.currentWidgetWidth||(l.width>this.currentWidgetWidth?(this.currentWidgetEdited.style.minWidth=l.width-1+"px",this.currentWidgetWidth=l.width):a=!0),l.height===this.currentWidgetHeight||(l.height>this.currentWidgetHeight?(this.currentWidgetEdited.style.minHeight=l.height-1+"px",this.currentWidgetHeight=l.height):a=!0),a&&EBX_Utils.addCSSClass(this.currentWidgetEdited,"ebx_GridEditorWidgetLargerThanTheTD"),this.currentWidgetLeft=l.left,this.currentWidgetTop=l.top,this.currentWidgetLeft+this.currentWidgetWidth>this.widgetContainerCurrentPosition.contentWidth&&(this.currentWidgetLeft=this.widgetContainerCurrentPosition.contentWidth-this.currentWidgetWidth),this.currentWidgetTop+this.currentWidgetHeight>this.widgetContainerCurrentPosition.contentHeight&&(this.currentWidgetTop=this.widgetContainerCurrentPosition.contentHeight-this.currentWidgetHeight),this.currentWidgetEdited.style.top=this.currentWidgetTop+"px",this.currentWidgetEdited.style.left=this.currentWidgetLeft+"px",this.currentWidgetEdited.style.visibility="visible",this.currentFormNodeEdited=EBX_FormNodeIndex.getFormNode(this.currentWidgetForEditionObj.prefixedPath),void 0!==this.currentFormNodeEdited.editorName&&(this.currentWidgetForEditionObj.previousValue=this.currentFormNodeEdited.getValue());var d=document.activeElement;if(!1===EBX_Form.focus(this.currentFormNodeEdited.inputName)||d===document.activeElement)if(void 0!==this.currentFormNodeEdited.editorName&&this.currentFormNodeEdited.getEditor()instanceof s.EBX_FormNodeEditor_HTML){var u=EBX_Form.TextareaIdEditor[this.currentFormNodeEdited.inputName];u&&u.focus()}else{var c=this.table.findFirstElementFocusableIn(this.currentWidgetEdited);c&&c.focus()}this.synchronizePositionOfCurrentWidgetEditedWithScroll(),this.table.grid_selection.focusEditAutoScroll(),EBX_Loader.stackKeyListener(EBX_Utils.keyCodes.ESCAPE,this.releaseCurrentEdition,this,{restorePreviousValue:!0})}},e.prototype.releaseCurrentEdition=function(e,t){void 0===t&&(t=!0);var i=null;null!==this.currentWidgetEdited&&(this.currentWidgetEdited.style.visibility="",this.currentWidgetEdited.style.minHeight="",this.currentWidgetEdited.style.minWidth="",EBX_Utils.removeCSSClass(this.currentWidgetEdited,"ebx_GridEditorWidgetLargerThanTheTD"),i=this.currentTdEdited),null!==this.currentFormNodeEdited&&(document.getElementById(this.widgetsFirstFocusRelaysId).focus(),e&&e.restorePreviousValue&&this.currentWidgetForEditionObj.previousValue&&ebx_form_setValue(this.currentWidgetForEditionObj.prefixedPath,this.currentWidgetForEditionObj.previousValue)),this.currentWidgetEdited=null,this.currentFormNodeEdited=null,this.currentTdEdited=null,t&&null!==i&&this.table.grid_selection.focusCell(new n.Cell(i),!0),EBX_Loader.removeKeyListener(EBX_Utils.keyCodes.ESCAPE,this.releaseCurrentEdition,this)},e.prototype.getWidgetForEdition=function(e){var t=EBX_Utils.getIndex(e.tdElement);e.isPlacedInFixedContainer()?(t+=this.fixedColumnsWidgetIndexOffset,this.table.header.isSeverityColumnDisplayed&&t--):t+=this.mainColumnsWidgetIndexOffset;var i=e.tdElement.parentNode.rowIndex,n=e.isPlacedInTheCreatePart()?this.widgetPathsForCreation:this.widgetPathsForEdition;return void 0===n[i]||void 0===n[i][t]?null:this.widgetsByPath[n[i][t]]},e.prototype.editWidgetFocusBefore=function(e){void 0===e&&(e=new n.Cell(this.currentTdEdited));var t=this.table.grid_selection.getCellLeft(e);if(null!==t){var i=this.getWidgetForEdition(t);null!==i&&i.isReadWrite?this.requestEditCell(t):this.editWidgetFocusBefore(t)}else null!==this.currentTdEdited&&this.requestEditCell(e)},e.prototype.editWidgetFocusAfter=function(e){void 0===e&&(e=new n.Cell(this.currentTdEdited));var t=this.table.grid_selection.getCellRight(e);if(null!==t){var i=this.getWidgetForEdition(t);null!==i&&i.isReadWrite?this.requestEditCell(t):this.editWidgetFocusAfter(t)}else null!==this.currentTdEdited&&this.requestEditCell(e)},e.prototype.editCellFromEvent=function(e,t){var i=n.EBX_AjaxTable.getCellFromEventTargetElement(EBX_Utils.getTargetElement(e),t);null!==i&&this.requestEditCell(new n.Cell(i))},e.prototype.resetRow=function(e){if(void 0===this.widgetPathsForEdition[e])return null;for(var t,i=[],n=0;void 0!==(t=this.widgetPathsForEdition[e][n]);){var s=this.widgetsByPath[t],r=EBX_FormNodeIndex.getFormNode(t);(s.isNewValueSet||null!==r&&0!==r.isWaiting)&&(null!==r?i.push(r):EBX_Logger.log("EBX_AjaxTable.resetRow: Widget (path="+t+") declared as newValueSet have no FormNode.",EBX_Logger.warn)),n++}EBX_FormPresenter.resetRecord(this.updateRecordIds[e],i)},e.prototype.setInputWidthOfWidgets=function(e,t){void 0===this.dynamicCSSBlock&&(this.dynamicCSSBlock=document.createElement("style"),EBX_LayoutManager.getDocumentHead().appendChild(this.dynamicCSSBlock),EBX_LayoutManager.isIE8&&(this.dynamicCSSBlock.id=this.table.tableName+"_DynamicCSS_GridEdit",this.dynamicCSSBlock=document.styleSheets[this.dynamicCSSBlock.id]));for(var i=["input[type=text]","input[type=password]","input[type=file]","select","textarea",".ebx_LCB_List",".ebx_LargeValue"],n="",s=0,r=i.length;s<r;s++)n+=".ebx_Form #"+t+" "+i[s]+",";n+="#"+t+" .ebx_InputTip",n+="{",n+="width:"+e+"px;",n+="}",n+="#"+t+" .ebx_MessageContainer,",n+="{",n+="max-width:"+e+"px;",n+="}",EBX_LayoutManager.isIE8?this.dynamicCSSBlock.cssText=n:this.dynamicCSSBlock.innerHTML=n},e.prototype.synchronizePositionOfCurrentWidgetEditedWithScroll=function(){if(null!==this.currentWidgetEdited){var e,t;if(this.currentWidgetIsPlacedInCreatePart)e=this.table.element.create.wrapper.scrollTop,t=this.currentWidgetIsPlacedInFixedContainer?this.table.element.create.fixed.scroll.scrollLeft:this.table.element.create.main.scroll.scrollLeft;else{var i=this.currentWidgetIsPlacedInFixedContainer?this.table.element.update.fixed.scroll:this.table.element.update.main.scroll;e=i.scrollTop,t=i.scrollLeft}if(this.widgetContainerEl.scrollTop=e,this.widgetContainerEl.scrollLeft=t,this.currentFormNodeEdited.getEditor&&void 0!==this.currentFormNodeEdited.editorName){var n=this.currentFormNodeEdited.getEditor();null!==n&&n instanceof s.EBX_FormNodeEditor_ISS&&s.EBX_FormNodeEditor_ISS.notifyInputPositionChanged()}}},e.prototype.synchronizeScrollFromWidgetContainer=function(){null!==this.currentWidgetEdited&&null===this.table.scroll.lastSyncScrollOrigin&&this.table.grid_selection.focusEditAutoScroll()},e.prototype.resizeWidgetContainer=function(){if(null!==this.currentWidgetForEditionObj&&void 0!==this.currentWidgetForEditionObj.cell){var e=this.currentWidgetForEditionObj.cell.isPlacedInTheCreatePart(),t=YAHOO.util.Dom.getRegion(e?this.table.element.create.wrapper:this.table.element.update.fixed.scroll);this.widgetContainerCurrentPosition.top=t.top,this.widgetContainerCurrentPosition.left=t.left+1,this.widgetContainerCurrentPosition.height=e?this.table.resizeModule.size.createHeight:this.table.scroll.mainScrollerHeight-this.table.scroll.currentScrollbarHeight,this.widgetContainerCurrentPosition.contentHeight=e?this.table.element.create.getLinesHeightsSum():this.table.element.update.getLinesHeightsSum(),this.widgetContainerCurrentPosition.contentHeight<this.widgetContainerCurrentPosition.height&&(this.widgetContainerCurrentPosition.contentHeight=this.widgetContainerCurrentPosition.height),this.widgetContainerCurrentPosition.width=this.table.resizeModule.size.containerWidth-this.table.scroll.currentScrollbarWidth-1,this.widgetContainerCurrentPosition.bottom=this.widgetContainerCurrentPosition.top+this.widgetContainerCurrentPosition.height,this.widgetContainerCurrentPosition.right=this.widgetContainerCurrentPosition.left+this.widgetContainerCurrentPosition.width,this.widgetContainerCurrentPosition.contentWidth=this.table.header.columnDefinitions[this.table.nbFixedColumns-1].cumulativeWidth+this.table.header.columnDefinitions[this.table.header.columnDefinitions.length-1].cumulativeWidth,this.widgetContainerCurrentPosition.contentWidth<this.widgetContainerCurrentPosition.width&&(this.widgetContainerCurrentPosition.contentWidth=this.widgetContainerCurrentPosition.width),this.widgetContainerEl.style.top=this.widgetContainerCurrentPosition.top+"px",this.widgetContainerEl.style.left=this.widgetContainerCurrentPosition.left+"px",this.widgetContainerEl.style.height=this.widgetContainerCurrentPosition.height+"px",this.widgetContainerEl.style.width=this.widgetContainerCurrentPosition.width+"px",this.widgetContainerScrollMaker.style.left=this.widgetContainerCurrentPosition.contentWidth+"px",this.widgetContainerScrollMaker.style.top=this.widgetContainerCurrentPosition.contentHeight+this.table.element.update.fixed.scrollMaker.offsetHeight+"px"}},e.prototype.getSeverityMessagePanel=function(){return void 0===this.severityMessagePanel&&(this.severityMessagePanel=new YAHOO.widget.Overlay("ebx_GridEdit_SeverityMessagePanel",{constraintoviewport:!0,visible:!1}),this.severityMessagePanel.render(document.body)),this.severityMessagePanel},e.prototype.buildSeverityMessage=function(e){var t=EBX_Utils.getIndex(e.tdElement);e.isPlacedInFixedContainer()?(t+=this.fixedColumnsWidgetIndexOffset,this.table.header.isSeverityColumnDisplayed&&t--):t+=this.mainColumnsWidgetIndexOffset;var i=e.tdElement.parentNode.rowIndex,n=e.isPlacedInTheCreatePart()?this.widgetPathsForCreation:this.widgetPathsForEdition;if(void 0===n[i]||void 0===n[i][t])return null;var s=n[i][t],r=ebx_form_getNodeMessage(s);if(null===r&&(r=this.orphanMessages[s]),void 0===r)return null;var o,l,a=[];if(void 0!==r.errors){for(a.push('<div class="ebx_IconError">'),o=r.errors.length,l=0;l<o;l++)a.push('<div class="ebx_Error">',r.errors[l],"</div>");a.push("</div>")}if(void 0!==r.warnings){for(a.push('<div class="ebx_IconWarning">'),o=r.warnings.length,l=0;l<o;l++)a.push('<div class="ebx_Warning">',r.warnings[l],"</div>");a.push("</div>")}if(void 0!==r.infos){for(a.push('<div class="ebx_IconInfo">'),o=r.infos.length,l=0;l<o;l++)a.push('<div class="ebx_Info">',r.infos[l],"</div>");a.push("</div>")}return 0===a.length?null:'<div class="ebx_MessageContainer">'+a.join("")+"</div>"},e.prototype.displaySeverityMessagePanel=function(e,t){var i=n.EBX_AjaxTable.getCellFromEventTargetElement(e,t);if(this.table.currentTdMouseOver!==i){this.table.currentTdMouseOver=i;var s=this.getSeverityMessagePanel(),r=this.buildSeverityMessage(new n.Cell(i));if(null!==r){s.setBody(r),s.cfg.setProperty("context",[i,"tl","bl",null,[0,0]]);var o="";1&i.parentNode.rowIndex?o+="ebx_tvEven":o+="ebx_tvOdd",EBX_Utils.removeCSSClass(s.element,"ebx_tvEven"),EBX_Utils.removeCSSClass(s.element,"ebx_tvOdd"),EBX_Utils.addCSSClass(s.element,o),s.show()}else s.hide()}else window.clearTimeout(this.table.currentTdMouseOver_HideTimeout)},e.prototype.hideSeverityMessagePanel=function(e,t){if(null!==e){var i=n.EBX_AjaxTable.getCellFromEventTargetElement(e,t);if(this.table.currentTdMouseOver!==i)return}this.table.currentTdMouseOver=null,this.getSeverityMessagePanel().hide()},e.prototype.deleteTableRow=function(e){var t,i,n,s=EBX_Utils.getFirstParentMatchingTagName(e,"TR"),r=s.rowIndex;s.parentNode.parentNode===this.table.element.update.fixed.table?(t=this.table.element.update.main.table.rows[r],i=this.buildDeletedRecordUpdateName(r),n=this.updateRecordParameterPrefix[r]):(t=this.table.element.create.main.table.rows[r],i=this.buildIgnoredRecordCreateName(r),n=this.createRecordParameterPrefix[r]);var o=i+"_ignoreValidation",l=document.getElementById(i),a=document.getElementById(o);null===l?(EBX_Utils.addCSSClass(e,EBX_ButtonUtils.buttonPushedCSSClass),EBX_Utils.addCSSClass(s,"ebx_tvRowToDelete"),EBX_Utils.addCSSClass(t,"ebx_tvRowToDelete"),(l=document.createElement("input")).type="hidden",l.id=i,l.name=i,l.value="true",this.widgetContainerEl.appendChild(l),(a=document.createElement("input")).type="hidden",a.id=o,a.name="EBX_AliasPrefixesIgnoreValidation",a.value=n,this.widgetContainerEl.appendChild(a)):(EBX_Utils.removeCSSClass(e,EBX_ButtonUtils.buttonPushedCSSClass),EBX_Utils.removeCSSClass(s,"ebx_tvRowToDelete"),EBX_Utils.removeCSSClass(t,"ebx_tvRowToDelete"),s.style.textDecoration="",t.style.textDecoration="",l.parentNode.removeChild(l),a.parentNode.removeChild(a))},e.prototype.buildIgnoredRecordCreateName=function(e){return this.table.tableName+"_creatingRecordToIgnore_"+e},e.prototype.buildDeletedRecordUpdateName=function(e){return this.table.tableName+"_recordFlaggedToDelete_"+e},e.releaseWaitingCells=function(e){for(var t=0,i=e;t<i.length;t++){var n=i[t];n.widgetObj.cell.tdElement.innerHTML=n.backup,n.widgetObj.cell.tdElement.style.cursor="default"}},e}();t.GridEdit=o;var l=function(){},a=function(e,t){this.widgetObj=e,this.backup=t};t.CellLoadedConfig=a},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(0),s=i(13),r=i(6),o=function(){function e(e,t,i){this.table=e,this.content=t,this.gridEdit=i}return e.prototype.createNewRecord=function(e,t){this.buildTableForCreationIfAbsent();for(var i=this.table.element.create,s=i.fixed.table.rows.length,o=r.AjaxResponseRecordConstants.firstColumnContentIndexInResultLine+1+this.gridEdit.dataColumnsNumber,l=[],a=0;a<o;a++)a===r.AjaxResponseRecordConstants.firstColumnContentIndexInResultLine?l.push(this.virtualCellForCreate):l.push("");var d=!i.resizeCreate.isManuallyReduced&&this.table.resizeModule.size.createHeight<this.table.resizeModule.getCreateMaxHeightForAutoExpand();this.content.appendLine(s,0===s,l,i),this.table.refreshCellIndexes(),this.content.synchronizeLine(s,!0),i.setLinesHeightsSum(i.getRowProperty(s).cumulativeHeight),this.table.resizeModule.isAutoWidthNeeded&&this.table.header.initUndefinedColWidths(),i.fixed.scrollWrapper.style.height=i.getLinesHeightsSum()+"px",i.main.scrollWrapper.style.height=i.getLinesHeightsSum()+"px",this.table.getState()===n.EBX_Table_State.EMPTY&&(this.table.isTableReady=!0,this.table.setState(n.EBX_Table_State.NORMAL));var u=this.table.resizeModule.size.createHeight+i.getRowProperty(s).height;if(d&&(u<this.table.resizeModule.getCreateMaxHeightForAutoExpand()||this.table.resizeModule.size.createHeight>this.table.resizeModule.getCreateMaxHeightForAutoExpand())&&(this.table.resizeModule.size.createHeight=u),this.table.resizeModule.resize(),void 0===e||!1===e){this.gridEdit.releaseCurrentEdition();var c=i.fixed.table.rows[s];EBX_Utils.addCSSClass(c,"ebx_tvFixedRowWaitingForCreate");var h=this,p=document.createElement("div"),m=new EBX_AJAXResponseHandler;m.handleAjaxResponseSuccess=function(e){for(p.innerHTML=e,n.EBX_AjaxTable.initAPVListeners(p);null!==p.firstChild;)h.gridEdit.widgetContainerEl.appendChild(p.firstChild);EBX_Utils.removeCSSClass(c,"ebx_tvFixedRowWaitingForCreate")},m.handleAjaxResponseFailed=function(e){EBX_Logger.log("handleAjaxResponseFailed : "+e,EBX_Logger.error),EBX_Utils.removeCSSClass(c,"ebx_tvFixedRowWaitingForCreate")};var g="&newRecordIndex="+s;void 0!==t&&(g+="&recordIndexToDuplicate="+t),m.sendRequest(this.gridEditorCreateRecordAjaxURL+g)}},e.prototype.buildTableForCreationIfAbsent=function(){this.table.element.hasCreatePart()||(this.table.element.create=new s.Table_Element_Create(this.table),this.table.element.create.buildTableForCreationIfAbsent())},e.prototype.autoResizeCreatePartOnTableInit=function(){var e=this.table.resizeModule.size.createHeight,t=this.table.element.create.getLinesHeightsSum();t<this.table.resizeModule.getCreateMaxHeightForAutoExpand()&&t!==e&&(this.table.resizeModule.size.createHeight=t,this.table.resizeModule.resize())},e}();t.GridEdit_RecordCreation=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.table=e,this.isManuallyReduced=!1,this.minHeight=10}return e.prototype.startDragResizeCreateListener=function(e){this.isDragging=!0;var t=this.table.element.create;EBX_Utils.addCSSClass(t.resizeHandle,"ebx_OnDragging"),this.initialYPosition=e.y,this.minYPosition=this.initialYPosition-this.table.resizeModule.size.createHeight+this.minHeight,this.maxHeight=t.getLinesHeightsSum(),this.maxHeight>this.table.resizeModule.getCreateMaxHeight()&&(this.maxHeight=this.table.resizeModule.getCreateMaxHeight()),this.maxYPosition=this.initialYPosition-this.table.resizeModule.size.createHeight+this.maxHeight},e.prototype.dragResizeCreateListener=function(e){var t=this.table.element.create;t.resizeHandle.style.left="0";var i=e.e.clientY;i<this.minYPosition?t.resizeHandle.style.top=-this.table.resizeModule.size.createHeight+this.minHeight+"px":i>this.maxYPosition&&(t.resizeHandle.style.top=-this.table.resizeModule.size.createHeight+this.maxHeight+"px")},e.prototype.endDragResizeCreateListener=function(e){if(!1!==this.isDragging){this.isDragging=!1;var t=this.table.element.create;EBX_Utils.removeCSSClass(t.resizeHandle,"ebx_OnDragging");var i=e.e.clientY;i<this.minYPosition?i=this.minYPosition:i>this.maxYPosition&&(i=this.maxYPosition),this.table.resizeModule.size.createHeight+=i-this.initialYPosition,this.isManuallyReduced=this.table.resizeModule.size.createHeight<t.getLinesHeightsSum(),this.table.resizeModule.resize(),t.resizeHandle.style.top="0px"}},e.prototype.init=function(){this.yuiDD=new YAHOO.util.DD(this.table.element.create.resizeHandle),this.yuiDD.subscribe("startDragEvent",this.startDragResizeCreateListener,this,!0),this.yuiDD.subscribe("dragEvent",this.dragResizeCreateListener,this,!0),this.yuiDD.subscribe("endDragEvent",this.endDragResizeCreateListener,this,!0)},e}();t.Table_ResizeCreate=n},function(e,t,i){"use strict";var n,s=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])},function(e,t){function i(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});Object.defineProperty(t,"__esModule",{value:!0});var r=function(){};t.Table_Element_Main=r;var o=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return s(t,e),t}(r);t.Table_Element_WithScrollWrapper=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(0),s=i(7),r=function(){function e(e){this.table=e,this.currentSelection=null,this.currentSelectionBorder=null,this.currentTdFocused=null}return e.prototype.init=function(){var e=this;this.table.header.addColumnWidthChangeHandler((function(){null!=e.currentSelectionBorder&&e.currentSelectionBorder.isVisible()&&(e.currentSelectionBorder.hide(),e.currentSelectionBorder.draw())}))},e.prototype.focusEditAutoScroll=function(t){var i,n,s,r,o,l,a,d,u=YAHOO.widget.Overlay.VIEWPORT_OFFSET;o=t?t.isPlacedInFixedContainer():null!==this.table.gridEditModule.currentTdEdited?this.table.gridEditModule.currentWidgetForEditionObj.cell.isPlacedInFixedContainer():this.currentTdFocusedIsPlacedInFixedContainer,(l=t?t.isPlacedInTheCreatePart():null!==this.table.gridEditModule.currentTdEdited?this.table.gridEditModule.currentWidgetForEditionObj.cell.isPlacedInTheCreatePart():this.currentTdFocusedIsPlacedInCreatePart)?(a=this.table.element.create.wrapper,d=o?this.table.element.create.fixed.scroll:this.table.element.create.main.scroll):a=d=o?this.table.element.update.fixed.scroll:this.table.element.update.main.scroll;var c=d.scrollLeft,h=d.clientWidth,p=d.scrollWidth-h,m=a.scrollTop,g=a.clientHeight,f=a.scrollHeight-g;if(t||null===this.table.gridEditModule.currentTdEdited){if(!t&&null===this.currentTdFocused)return;var b=t?t.tdElement:this.currentTdFocused,E=EBX_Utils.getIndex(b);o?!1===this.table.header.isSeverityColumnDisplayed&&E++:E+=this.table.nbFixedColumns,i=this.table.header.columnDefinitions[E].width,n=this.table.header.columnDefinitions[E].cumulativeWidth-i;var C=b.parentNode.rowIndex,_=void 0;s=(_=l?this.table.element.create.getRowProperty(C):this.table.element.update.getRowProperty(C)).height,r=_.cumulativeHeight-s}else i=this.table.gridEditModule.currentWidgetWidth,s=this.table.gridEditModule.currentWidgetHeight,n=this.table.gridEditModule.currentWidgetLeft-YAHOO.util.Dom.getRegion(d).left+this.table.gridEditModule.widgetContainerCurrentPosition.left,r=this.table.gridEditModule.currentWidgetTop-YAHOO.util.Dom.getRegion(a).top+this.table.gridEditModule.widgetContainerCurrentPosition.top;var S=c;i>h?n-c<0&&n-c>h-i||(n-c<0?S=n-(h-i):n-c>h-i&&(S=n)):i>h-2*u?S=n-(h/2-i/2):n-c<u?S=n-u:n-c>h-i-u&&(S=n-(h-i-u)),null!==S&&(S<0?S=0:S>p&&(S=p));var v=m;s>g?r-m<0&&r-m>g-s||(r-m<0?v=r-(g-s):r-m>g-s&&(v=r)):s>g-2*u?v=r-(g/2-s/2):r-m<u?v=r-u:r-m>g-s-u&&(v=r-(g-s-u)),null!==v&&(v<0?v=0:v>f&&(v=f)),c===S&&m===v||(a===d?new YAHOO.util.Scroll(a,{scroll:{to:[S,v]}},e.editionModeAutoScrollAnimationDuration/1e3,YAHOO.util.Easing.easeOut).animate():(new YAHOO.util.Scroll(a,{scroll:{to:[0,v]}},e.editionModeAutoScrollAnimationDuration/1e3,YAHOO.util.Easing.easeOut).animate(),new YAHOO.util.Scroll(d,{scroll:{to:[S,m]}},e.editionModeAutoScrollAnimationDuration/1e3,YAHOO.util.Easing.easeOut).animate()))},e.prototype.focusCell=function(e,t){if(this.table.gridEditModule.releaseCurrentEdition(null,!1),this.releaseCurrentCellFocus(),this.releaseCurrentSelection(),this.table.gridEditModule.currentWidgetForEditionObj=this.table.gridEditModule.getWidgetForEdition(e),null!==this.table.gridEditModule.currentWidgetForEditionObj){this.currentTdFocused=e.tdElement,this.currentTdFocusedIsPlacedInFixedContainer=e.isPlacedInFixedContainer(),this.currentTdFocusedIsPlacedInCreatePart=e.isPlacedInTheCreatePart(),this.currentSelection=new o(this.table);var i=this.table.gridEditModule.currentWidgetForEditionObj.gridCoords.colIndex,s=this.table.gridEditModule.currentWidgetForEditionObj.gridCoords.lineIndex;!this.currentTdFocusedIsPlacedInCreatePart&&this.table.element.hasCreatePart()&&(s+=this.table.element.create.getNumberOfRowsDisplayed()),this.currentSelection.setRange(s,s,i,i);var r=this.table.gridEditModule.currentWidgetForEditionObj;r.isReadWrite&&!r.isNoMoreAvailable?EBX_Utils.addCSSClass(this.currentTdFocused,"ebx_TableCellFocused"):(EBX_Utils.addCSSClass(this.currentTdFocused,"ebx_TableCellDisabledFocused"),r.isNoMoreAvailable?this.currentTdFocused.title=n.EBX_AjaxTable.messages.table_notAvailableCell:this.currentTdFocused.title=n.EBX_AjaxTable.messages.table_readOnlyCell),!0!==t&&this.focusEditAutoScroll(),EBX_Loader.stackKeyListener(EBX_Utils.keyCodes.ESCAPE,this.releaseCurrentCellFocus,this),EBX_Loader.stackKeyListener(EBX_Utils.keyCodes.ENTER,this.table.gridEditModule.editCurrentCellFocus,this.table.gridEditModule),EBX_Loader.stackKeyListener(EBX_Utils.keyCodes.F2,this.table.gridEditModule.editCurrentCellFocus,this.table.gridEditModule),EBX_Loader.stackKeyListener(EBX_Utils.keyCodes.LEFT,this.focusCellLeft,this),EBX_Loader.stackKeyListener(EBX_Utils.keyCodes.UP,this.focusCellUp,this),EBX_Loader.stackKeyListener(EBX_Utils.keyCodes.RIGHT,this.focusCellRight,this),EBX_Loader.stackKeyListener(EBX_Utils.keyCodes.DOWN,this.focusCellDown,this),EBX_Loader.stackKeyWithModifierListener(EBX_Utils.keyCodes.LETTER_C,!0,!1,!1,this.table.copyModule.copy,this.table.copyModule),EBX_Loader.stackKeyWithModifierListener(EBX_Utils.keyCodes.LETTER_V,!0,!1,!1,this.table.copyModule.paste,this.table.copyModule),EBX_Loader.stackKeyWithModifierListener(EBX_Utils.keyCodes.RIGHT,!1,!0,!1,this.onSelectionShiftToRight,this),EBX_Loader.stackKeyWithModifierListener(EBX_Utils.keyCodes.LEFT,!1,!0,!1,this.onSelectionShiftToLeft,this),EBX_Loader.stackKeyWithModifierListener(EBX_Utils.keyCodes.UP,!1,!0,!1,this.onSelectionShiftToTop,this),EBX_Loader.stackKeyWithModifierListener(EBX_Utils.keyCodes.DOWN,!1,!0,!1,this.onSelectionShiftToBottom,this),EBX_Loader.stackKeyDownListener(EBX_Utils.keyCodes.SHIFT,this.disableTextSelection,this),EBX_Loader.stackKeyUpListener(EBX_Utils.keyCodes.SHIFT,this.renableTextSelection,this)}},e.prototype.onSelectionShiftToRight=function(){if(null!==this.currentSelection){var e=this.table.gridEditModule.currentWidgetForEditionObj.gridCoords.colIndex,t=new o(this.table);if(t.setRangeFrom(this.currentSelection),e>t.getColStart()){var i=t.getColStart()+1;t.setColStart(i),this.selectRangeCell(t),this.focusEditAutoScroll(t.getTopLeftCell())}else{var n=t.getColEnd()+1,s=this.table.header.columnDefinitions.length-3;this.table.header.isInheritanceColumnDisplayed&&s--,this.table.header.isSelectColumnEnabled&&s--,(n=Math.min(s,n))!==t.getColEnd()&&(t.setColEnd(n),this.selectRangeCell(t),this.focusEditAutoScroll(t.getTopRightCell()))}}},e.prototype.onSelectionShiftToLeft=function(){if(null!==this.currentSelection){var e=this.table.gridEditModule.currentWidgetForEditionObj.gridCoords.colIndex,t=new o(this.table);if(t.setRangeFrom(this.currentSelection),e<t.getColEnd()){var i=t.getColEnd()-1;t.setColEnd(i),this.selectRangeCell(t),this.focusEditAutoScroll(t.getTopRightCell())}else{var n=t.getColStart()-1;(n=Math.max(0,n))!==t.getColStart()&&(t.setColStart(n),this.selectRangeCell(t),this.focusEditAutoScroll(t.getTopLeftCell()))}}},e.prototype.onSelectionShiftToTop=function(){if(null!==this.currentSelection){var e=this.table.gridEditModule.currentWidgetForEditionObj.gridCoords.lineIndex;e+=this.table.element.hasCreatePart()&&!this.table.gridEditModule.currentWidgetForEditionObj.isForCreate?this.table.element.create.getNumberOfRowsDisplayed():0;var t=new o(this.table);if(t.setRangeFrom(this.currentSelection),e<t.getRowEnd()){var i=t.getRowEnd()-1;t.setRowEnd(i),this.selectRangeCell(t),this.focusEditAutoScroll(t.getBottomLeftCell())}else{var n=t.getRowStart()-1;(n=Math.max(n,0))!==t.getRowStart()&&(t.setRowStart(n),this.selectRangeCell(t),this.focusEditAutoScroll(t.getTopLeftCell()))}}},e.prototype.onSelectionShiftToBottom=function(){if(null!==this.currentSelection){var e=this.table.gridEditModule.currentWidgetForEditionObj.gridCoords.lineIndex;e+=this.table.element.hasCreatePart()&&!this.table.gridEditModule.currentWidgetForEditionObj.isForCreate?this.table.element.create.getNumberOfRowsDisplayed():0;var t=new o(this.table);if(t.setRangeFrom(this.currentSelection),e>t.getRowStart()){var i=t.getRowStart()+1;t.setRowStart(i),this.selectRangeCell(t),this.focusEditAutoScroll(t.getTopLeftCell())}else{var n=t.getRowEnd()+1,s=this.table.element.hasCreatePart()?this.table.element.create.getNumberOfRowsDisplayed():0;s+=this.table.element.update.getNumberOfRowsDisplayed(),(n=Math.min(n,s-1))!==t.getRowEnd()&&(t.setRowEnd(n),this.selectRangeCell(t),this.focusEditAutoScroll(t.getBottomLeftCell()))}}},e.prototype.releaseCurrentCellFocus=function(){null!==this.currentTdFocused&&(EBX_Utils.removeCSSClass(this.currentTdFocused,"ebx_TableCellDisabledFocused"),EBX_Utils.removeCSSClass(this.currentTdFocused,"ebx_TableCellFocused"),this.currentTdFocused.title=""),this.currentTdFocused=null,this.table.gridEditModule.currentWidgetForEditionObj=null,EBX_Loader.removeKeyListener(EBX_Utils.keyCodes.ESCAPE,this.releaseCurrentCellFocus,this),EBX_Loader.removeKeyListener(EBX_Utils.keyCodes.ENTER,this.table.gridEditModule.editCurrentCellFocus,this.table.gridEditModule),EBX_Loader.removeKeyListener(EBX_Utils.keyCodes.F2,this.table.gridEditModule.editCurrentCellFocus,this.table.gridEditModule),EBX_Loader.removeKeyListener(EBX_Utils.keyCodes.LEFT,this.focusCellLeft,this),EBX_Loader.removeKeyListener(EBX_Utils.keyCodes.UP,this.focusCellUp,this),EBX_Loader.removeKeyListener(EBX_Utils.keyCodes.RIGHT,this.focusCellRight,this),EBX_Loader.removeKeyListener(EBX_Utils.keyCodes.DOWN,this.focusCellDown,this),EBX_Loader.removeKeyWithModifierListener(EBX_Utils.keyCodes.LETTER_C,!0,!1,!1,this.table.copyModule.copy,this.table.copyModule),EBX_Loader.removeKeyWithModifierListener(EBX_Utils.keyCodes.LETTER_V,!0,!1,!1,this.table.copyModule.paste,this.table.copyModule),EBX_Loader.removeKeyDownListener(EBX_Utils.keyCodes.SHIFT,this.disableTextSelection,this),EBX_Loader.removeKeyUpListener(EBX_Utils.keyCodes.SHIFT,this.renableTextSelection,this)},e.prototype.disableTextSelection=function(){EBX_LayoutManager.isIE&&(document.onselectstart=function(){return!1}),EBX_Utils.addCSSClass(document.body,"shiftPressed")},e.prototype.renableTextSelection=function(){EBX_LayoutManager.isIE&&(document.onselectstart=null),EBX_Utils.removeCSSClass(document.body,"shiftPressed")},e.prototype.getCellLeft=function(e){var t=EBX_Utils.previousElementSibling(e.tdElement),i=e.isPlacedInFixedContainer(),s=e.getTable();if(i&&null===t)return null;if(null===t){var r=e.tdElement.parentNode.rowIndex;s=e.isPlacedInTheCreatePart()?this.table.element.create.fixed.table:this.table.element.update.fixed.table;var o=EBX_Utils.getElementChildAtIndex(EBX_Utils.firstElementChild(s),r);t=EBX_Utils.previousElementSibling(EBX_Utils.lastElementChild(o))}return null===t?null:new n.Cell(t)},e.prototype.getCellRight=function(e){var t=EBX_Utils.nextElementSibling(e.tdElement),i=e.getTable();if(!1===e.isPlacedInFixedContainer()&&null===EBX_Utils.nextElementSibling(t))return null;if(null===EBX_Utils.nextElementSibling(t)){var s=e.tdElement.parentNode.rowIndex;i=e.isPlacedInTheCreatePart()?this.table.element.create.main.table:this.table.element.update.main.table;var r=EBX_Utils.getElementChildAtIndex(EBX_Utils.firstElementChild(i),s);t=EBX_Utils.firstElementChild(r)}return new n.Cell(t)},e.prototype.getCellTop=function(e){var t;if(null===(t=EBX_Utils.previousElementSibling(e.tdElement.parentNode))){if(e.isPlacedInTheCreatePart()||!this.table.element.hasCreatePart())return null;var i=e.isPlacedInFixedContainer()?this.table.element.create.fixed.table:this.table.element.create.main.table;return new n.Cell(EBX_Utils.getElementChildAtIndex(i.rows[i.rows.length-1],EBX_Utils.getIndex(e.tdElement)))}return new n.Cell(EBX_Utils.getElementChildAtIndex(t,EBX_Utils.getIndex(e.tdElement)))},e.prototype.getCellDown=function(e){var t;if(null===(t=EBX_Utils.nextElementSibling(e.tdElement.parentNode))){if(e.isPlacedInTheCreatePart()&&this.table.element.hasUpdatePart()){var i=e.isPlacedInFixedContainer()?this.table.element.update.fixed.table:this.table.element.update.main.table;return new n.Cell(EBX_Utils.getElementChildAtIndex(i.rows[0],EBX_Utils.getIndex(e.tdElement)))}return null}return new n.Cell(EBX_Utils.getElementChildAtIndex(t,EBX_Utils.getIndex(e.tdElement)))},e.prototype.focusCellLeft=function(){var e=this.getCellLeft(new n.Cell(this.currentTdFocused));null!==e&&(null!==this.table.gridEditModule.getWidgetForEdition(e)&&this.focusCell(e))},e.prototype.focusCellUp=function(){var e=this.getCellTop(new n.Cell(this.currentTdFocused));null!==e&&this.focusCell(e)},e.prototype.focusCellRight=function(){var e=this.getCellRight(new n.Cell(this.currentTdFocused));null!==e&&this.focusCell(e)},e.prototype.focusCellDown=function(){var e=this.getCellDown(new n.Cell(this.currentTdFocused));null!==e&&this.focusCell(e)},e.prototype.onClickShift=function(e,t){if(null!==this.table.gridEditModule.currentWidgetForEditionObj){YAHOO.util.Event.stopEvent(e);var i=EBX_Utils.getTargetElement(e),s=new n.Cell(n.EBX_AjaxTable.getParentTdElement(i,t)),r=this.table.gridEditModule.getWidgetForEdition(s);if(null!==r){var l=new o(this.table),a=this.table.gridEditModule.currentWidgetForEditionObj.gridCoords.colIndex,d=this.table.gridEditModule.currentWidgetForEditionObj.gridCoords.lineIndex;this.table.gridEditModule.currentWidgetForEditionObj.isForCreate||(d+=this.table.element.hasCreatePart()?this.table.element.create.getNumberOfRowsDisplayed():0);var u=r.gridCoords.colIndex,c=r.gridCoords.lineIndex;this.table.isForCreate(t)||(c+=this.table.element.hasCreatePart()?this.table.element.create.getNumberOfRowsDisplayed():0),l.setRange(d,c,a,u),this.selectRangeCell(l)}}},e.prototype.selectRangeCell=function(e){this.releaseCurrentSelection(),e.onEachCell((function(t,i,n){EBX_Utils.addCSSClass(n.tdElement,"ebx_TableCellSelected"),e.isBorderTop(t)&&EBX_Utils.addCSSClass(n.tdElement,"ebx_TableCellSelected_Top"),e.isBorderBottom(t)&&EBX_Utils.addCSSClass(n.tdElement,"ebx_TableCellSelected_Bottom"),e.isBorderLeft(i)&&EBX_Utils.addCSSClass(n.tdElement,"ebx_TableCellSelected_Left"),e.isBorderRight(i)&&EBX_Utils.addCSSClass(n.tdElement,"ebx_TableCellSelected_Right")})),this.currentSelection=e,this.currentSelectionBorder=new s.SelectionRangeMask(this.table,s.SelectionBorderStyle.Solid,e),this.currentSelectionBorder.draw()},e.prototype.releaseCurrentSelection=function(){null!==this.currentSelection&&(this.currentSelection.onEachCell((function(e,t,i){EBX_Utils.removeCSSClass(i.tdElement,"ebx_TableCellSelected"),EBX_Utils.removeCSSClass(i.tdElement,"ebx_TableCellSelected_Top"),EBX_Utils.removeCSSClass(i.tdElement,"ebx_TableCellSelected_Bottom"),EBX_Utils.removeCSSClass(i.tdElement,"ebx_TableCellSelected_Left"),EBX_Utils.removeCSSClass(i.tdElement,"ebx_TableCellSelected_Right")})),null!=this.currentSelectionBorder&&(this.currentSelectionBorder.hide(),this.currentSelectionBorder=null),this.currentSelection=null)},e.prototype.getCurrentSelection=function(){return this.currentSelection},e.editionModeAutoScrollAnimationDuration=200,e}();t.GridEdit_Selection=r;var o=function(){function e(e){this.table=e,this.rowStart=0,this.rowEnd=0,this.colStart=0,this.colEnd=0}return e.prototype.setRange=function(e,t,i,n){this.rowStart=Math.min(e,t),this.rowEnd=Math.max(e,t),this.colStart=Math.min(i,n),this.colEnd=Math.max(i,n)},e.prototype.getRowStart=function(){return this.rowStart},e.prototype.getRowEnd=function(){return this.rowEnd},e.prototype.getColStart=function(){return this.colStart},e.prototype.getColEnd=function(){return this.colEnd},e.prototype.setRowEnd=function(e){this.rowEnd=e},e.prototype.setColEnd=function(e){this.colEnd=e},e.prototype.setColStart=function(e){this.colStart=e},e.prototype.setRowStart=function(e){this.rowStart=e},e.prototype.isBorderTop=function(e){return e===this.rowStart},e.prototype.isBorderBottom=function(e){return e===this.rowEnd},e.prototype.isBorderLeft=function(e){return e===this.colStart},e.prototype.isBorderRight=function(e){return e===this.colEnd},e.prototype.onEachCell=function(e){for(var t=this.getRowStart();t<=this.getRowEnd();t++)for(var i=this.getColStart();i<=this.getColEnd();i++){e(t,i,this.table.getCellAt(t,i))}},e.prototype.getTopLeftCell=function(){return this.table.getCellAt(this.getRowStart(),this.getColStart())},e.prototype.getTopRightCell=function(){return this.table.getCellAt(this.getRowStart(),this.getColEnd())},e.prototype.getBottomLeftCell=function(){return this.table.getCellAt(this.getRowEnd(),this.getColStart())},e.prototype.getBottomRightCell=function(){return this.table.getCellAt(this.getRowEnd(),this.getColEnd())},e.prototype.getHeight=function(){return this.rowEnd-this.rowStart+1},e.prototype.getWidth=function(){return this.colEnd-this.colStart+1},e.prototype.isLastCell=function(e,t){return this.isBorderBottom(e)&&this.isBorderRight(t)},e.prototype.setRangeFrom=function(e){this.rowStart=e.rowStart,this.rowEnd=e.rowEnd,this.colStart=e.colStart,this.colEnd=e.colEnd},e}();t.CellRange=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(1),s=i(2),r=i(0),o=i(4),l=i(10),a=function(){};t.ColumnDefinition=a;var d=function(){},u=function(){},c=function(){function e(e,t,i,n){this.table=e,this.columnDefinitions=t,this.isSelectColumnEnabled=n,this.elements=new u,this.resizeColumn=new d,this.columnWidthChangeHandler=[],this.headerContainerId=i+"_headerContainer",this.headerFixedContainerId=i+"_headerFixedContainer",this.headerMainContainerWrapperId=i+"_headerMainContainerWrapper",this.headerMainContainerId=i+"_headerMainContainer",this.selectAndSortMenuButtonId=i+"_selectAndSortMenuButton"}return e.prototype.initColumns=function(){var e,t,i,n,s,r,o,a;for(this.initColumnDefinitionsByKey(),this.isInheritanceColumnDisplayed=void 0!==this.columnDefinitionsByKey.ebx_tvColInheritance&&0!==this.columnDefinitionsByKey.ebx_tvColInheritance.width,this.elements.fixed.style.tableLayout="auto",this.elements.main.style.tableLayout="auto","Chrome"!==EBX_LayoutManager.browser&&"Safari"!==EBX_LayoutManager.browser||(EBX_Utils.addCSSClass(this.elements.fixed,"ebx_tvTableLayoutAutoForWebkit"),EBX_Utils.addCSSClass(this.elements.main,"ebx_tvTableLayoutAutoForWebkit")),this.table.resizeModule.size.fixedColumnsWidth=-1,i=0,this.table.nbFixedColumns=this.elements.fixedCells.length,this.table.nbMainColumns=this.elements.mainCells.length,n=0,s=0,this.table.resizeModule.isAutoWidthNeeded=!1,e=0;e<this.table.nbFixedColumns;e++,n++)void 0===this.columnDefinitions[n].width?((r=this.elements.fixedCells[e].offsetWidth)<0&&(r=0),this.columnDefinitions[n].headerWidth=r,this.table.resizeModule.size.fixedColumnsWidth+=this.columnDefinitions[n].headerWidth,this.table.resizeModule.isAutoWidthNeeded=!0):0!==this.columnDefinitions[n].width&&(this.table.resizeModule.size.fixedColumnsWidth+=this.columnDefinitions[n].width),this.columnDefinitions[n].cumulativeWidth=this.table.resizeModule.size.fixedColumnsWidth,this.columnDefinitions[n].resizeable&&(EBX_LayoutManager.isIPad?(YAHOO.util.Event.addListener(this.elements.fixedCells[e],"gesturestart",this.gestureStartResizeColumnListener,n,this),YAHOO.util.Event.addListener(this.elements.fixedCells[e],"gesturechange",this.gestureChangeResizeColumnListener,n,this),YAHOO.util.Event.addListener(this.elements.fixedCells[e],"gestureend",this.gestureEndResizeColumnListener,n,this)):((o=document.createElement("div")).className="ebx_ColumnResizeKnob",o.style.left=this.table.resizeModule.size.fixedColumnsWidth+"px",e===this.table.nbFixedColumns-1?this.elements.fixedContainer.parentNode.appendChild(o):this.elements.fixedContainer.appendChild(o),this.columnDefinitions[n].resizeKnob=o,YAHOO.util.Event.addListener(o,"mouseover",this.mouseOverResizeKnobListener,n,this),YAHOO.util.Event.addListener(o,"mouseout",this.mouseOutResizeKnobListener,null,this))),0!==this.columnDefinitions[n].width?(this.columnDefinitions[n].colIndexInDataTable=s,s++):this.columnDefinitions[n].colIndexInDataTable=void 0,this.columnDefinitions[n].colIndexInHeader=e;for(s=0,e=0,t=this.elements.mainCells.length;e<t;e++,n++)void 0===this.columnDefinitions[n].width?((r=this.elements.mainCells[e].offsetWidth)<0&&(r=0),this.columnDefinitions[n].headerWidth=r,i+=this.columnDefinitions[n].headerWidth,this.table.resizeModule.isAutoWidthNeeded=!0):0!==this.columnDefinitions[n].width&&(i+=this.columnDefinitions[n].width),this.columnDefinitions[n].cumulativeWidth=i,this.columnDefinitions[n].resizeable&&(EBX_LayoutManager.isIPad?(YAHOO.util.Event.addListener(this.elements.mainCells[e],"gesturestart",this.gestureStartResizeColumnListener,n,this),YAHOO.util.Event.addListener(this.elements.mainCells[e],"gesturechange",this.gestureChangeResizeColumnListener,n,this),YAHOO.util.Event.addListener(this.elements.mainCells[e],"gestureend",this.gestureEndResizeColumnListener,n,this)):((o=document.createElement("div")).className="ebx_ColumnResizeKnob",o.style.left=i+"px",this.elements.mainContainer.appendChild(o),this.columnDefinitions[n].resizeKnob=o,YAHOO.util.Event.addListener(o,"mouseover",this.mouseOverResizeKnobListener,n,this),YAHOO.util.Event.addListener(o,"mouseout",this.mouseOutResizeKnobListener,null,this))),0!==this.columnDefinitions[n].width?(this.columnDefinitions[n].colIndexInDataTable=s,s++):this.columnDefinitions[n].colIndexInDataTable=void 0,this.columnDefinitions[n].colIndexInHeader=e;for(this.elements.fixed.style.tableLayout="",this.elements.main.style.tableLayout="","Chrome"!==EBX_LayoutManager.browser&&"Safari"!==EBX_LayoutManager.browser||(EBX_Utils.removeCSSClass(this.elements.fixed,"ebx_tvTableLayoutAutoForWebkit"),EBX_Utils.removeCSSClass(this.elements.main,"ebx_tvTableLayoutAutoForWebkit")),n=0,e=0,t=(a=this.elements.fixedCells).length;e<t;e++,n++)0!==this.columnDefinitions[n].width&&(void 0!==this.columnDefinitions[n].width?a[e].style.width=this.columnDefinitions[n].width+"px":a[e].style.width=this.columnDefinitions[n].headerWidth+"px");for(e=0,t=(a=this.elements.mainCells).length;e<t;e++,n++)0!==this.columnDefinitions[n].width&&(void 0!==this.columnDefinitions[n].width?a[e].style.width=this.columnDefinitions[n].width+"px":a[e].style.width=this.columnDefinitions[n].headerWidth+"px");this.table.resizeModule.size.fixedColumnsWidth+l.Resize.mainContainerMinWidth>this.table.resizeModule.size.containerWidth&&(this.table.resizeModule.size.fixedColumnsWidth=this.table.resizeModule.size.containerWidth-l.Resize.mainContainerMinWidth),-1===this.table.resizeModule.size.fixedColumnsWidth?this.elements.fixedContainer.style.width="0":this.elements.fixedContainer.style.width=this.table.resizeModule.size.fixedColumnsWidth+"px",this.elements.mainContainerWrapper.style.width=this.table.resizeModule.size.containerWidth-this.table.resizeModule.size.fixedColumnsWidth+"px",this.elements.mainContainer.style.width=this.table.resizeModule.size.containerWidth-this.table.resizeModule.size.fixedColumnsWidth+"px"},e.prototype.initColumnDefinitionsByKey=function(){this.columnDefinitionsByKey={};for(var e=0,t=this.columnDefinitions.length;e<t;e++)this.columnDefinitionsByKey[this.columnDefinitions[e].key]=this.columnDefinitions[e]},e.prototype.initInternalElements=function(){this.elements.container=document.getElementById(this.headerContainerId),this.elements.fixedContainer=document.getElementById(this.headerFixedContainerId),this.elements.mainContainerWrapper=document.getElementById(this.headerMainContainerWrapperId),this.elements.mainContainer=document.getElementById(this.headerMainContainerId),this.table.resizeModule.size.headerHeight=this.elements.container.offsetHeight,this.elements.fixed=EBX_Utils.firstElementChild(this.elements.fixedContainer),this.elements.main=EBX_Utils.firstElementChild(this.elements.mainContainer);var e=this.elements.fixed.rows.item(0).cells,t=e.length;this.elements.fixedCells=[];for(var i=0,n=t-1;i<n;i++)this.elements.fixedCells.push(e.item(i));var s=this.elements.main.rows.item(0).cells,r=s.length;this.elements.mainCells=[];for(i=0,n=r-1;i<n;i++)this.elements.mainCells.push(s.item(i));var o=EBX_Utils.firstElementChild(e.item(t-1)).offsetTop,l=EBX_Utils.firstElementChild(s.item(r-1)).offsetTop;o!==l&&(o<l?e.item(t-1).style.paddingTop=l+"px":s.item(r-1).style.paddingTop=o+"px")},e.prototype.addListeners=function(){YAHOO.util.Event.addListener(this.elements.fixed,"click",this.clickOnHeaderTableListener,this.elements.fixed,this),YAHOO.util.Event.addListener(this.elements.main,"click",this.clickOnHeaderTableListener,this.elements.main,this),n.AdvancedSearch.registerMiddleware(this.updateSortByRelevancy.bind(this))},e.prototype.updateSortByRelevancy=function(e,t,i){var n=e(t,i);if(t.name===s.AdvancedSearchActions.SetFetchingData_success.NAME){var o=this.table.element.selectAndSortMenuButton;o&&(r.EBX_AjaxTable.isSortedByRelevancy(this.table.tableName,n)?(EBX_Utils.removeCSSClass(o,"ebx_HamburgerMenu"),EBX_Utils.addCSSClass(o,"ebx_tvSelectAndSortMenuButton_inverted"),EBX_Utils.addCSSClass(o,"ebx_SortByRelevancy"),o.title=r.EBX_AjaxTable.messages.table_sort_relevancyTooltip,EBX_ButtonUtils.setMenuItemChecked(this.selectAndSortMenuButtonId,"ebx_ToggleSortByRelevancyMenuAction",!0)):(EBX_Utils.removeCSSClass(o,"ebx_SortByRelevancy"),EBX_Utils.removeCSSClass(o,"ebx_tvSelectAndSortMenuButton_inverted"),EBX_Utils.addCSSClass(o,"ebx_HamburgerMenu"),this.table.isRecordSelectionEnabled?o.title=r.EBX_AjaxTable.messages.UITableEditor_selectAndSort_menu_tooltip:o.title=r.EBX_AjaxTable.messages.UITableEditor_view_sort_title,r.EBX_AjaxTable.isSortableByRelevancy(this.table.tableName,n)&&EBX_ButtonUtils.setMenuItemChecked(this.selectAndSortMenuButtonId,"ebx_ToggleSortByRelevancyMenuAction",!1)))}return n},e.prototype.updateSortFlags=function(){var e,t,i,n,s,o,l,a,d,u;for(a=[],e=0,t=(l=this.table.content.rawResponse.meta.sortState[0]).length;e<t;e++)a[l[e]]=e+1;for(o=this.table.content.rawResponse.meta.sortState,i=0,e=this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader+1,t=this.table.nbFixedColumns;e<t;e++,i++)s=this.elements.fixedCells[e],void 0===(d=a[i])?(u=null,d=null):u=(n=Math.pow(2,i%r.EBX_AjaxTable.maxIntPowerForBitwiseOperation))===(o[Math.floor(i/r.EBX_AjaxTable.maxIntPowerForBitwiseOperation)+1]&n),this.updateSortFlag(s,d,u);for(e=0,t=this.elements.mainCells.length;e<t;e++,i++)s=this.elements.mainCells[e],void 0===(d=a[i])?(u=null,d=null):u=(n=Math.pow(2,i%r.EBX_AjaxTable.maxIntPowerForBitwiseOperation))===(o[Math.floor(i/r.EBX_AjaxTable.maxIntPowerForBitwiseOperation)+1]&n),this.updateSortFlag(s,d,u)},e.prototype.updateSortFlag=function(t,i,n){var s;null!==(s=EBX_Utils.getFirstDirectChildMatchingCSSClass(t,e.sortFlagCSSClass))&&(n?(s.className=e.sortFlagCSSClass+" "+e.sortFlagAscCSSClass,this.table.isEditionMode?t.title=r.EBX_AjaxTable.messages.table_sortasc_info:t.title=r.EBX_AjaxTable.messages.table_sortdesc_action):!1===n?(s.className=e.sortFlagCSSClass+" "+e.sortFlagDescCSSClass,this.table.isEditionMode?t.title=r.EBX_AjaxTable.messages.table_sortdesc_info:t.title=r.EBX_AjaxTable.messages.table_sortasc_action):!0!==this.table.isEditionMode&&(s.className=e.sortFlagCSSClass,t.title=r.EBX_AjaxTable.messages.table_sortasc_action),EBX_Utils.getFirstDirectChildMatchingCSSClass(s,e.sortNumberCSSClass).innerHTML=null!==i?i:"")},e.prototype.updateSeverityColumn=function(){this.setSeverityColumnDisplayed(void 0!==this.table.content.rawResponse.meta.highestSeverity)},e.prototype.initUndefinedColWidths=function(){var e,t,i,n,s,o,l,a=this.table.element,d=a.hasUpdatePart()?a.update:null,u=a.hasCreatePart()?a.create:null;for(this.elements.fixed.style.tableLayout="auto",this.elements.main.style.tableLayout="auto",null!==d&&(d.fixed.table.style.tableLayout="auto",d.main.table.style.tableLayout="auto"),null!==u&&(u.fixed.table.style.tableLayout="auto",u.main.table.style.tableLayout="auto"),"Chrome"!==EBX_LayoutManager.browser&&"Safari"!==EBX_LayoutManager.browser||(EBX_Utils.addCSSClass(this.elements.fixed,"ebx_tvTableLayoutAutoForWebkit"),EBX_Utils.addCSSClass(this.elements.main,"ebx_tvTableLayoutAutoForWebkit"),null!==d&&(EBX_Utils.addCSSClass(d.fixed.table,"ebx_tvTableLayoutAutoForWebkit"),EBX_Utils.addCSSClass(d.main.table,"ebx_tvTableLayoutAutoForWebkit")),null!==u&&(EBX_Utils.addCSSClass(u.fixed.table,"ebx_tvTableLayoutAutoForWebkit"),EBX_Utils.addCSSClass(u.main.table,"ebx_tvTableLayoutAutoForWebkit"))),null!==d&&(EBX_Utils.addCSSClass(d.fixed.table,"ebx_tvAutoresize"),EBX_Utils.addCSSClass(d.main.table,"ebx_tvAutoresize")),null!==u&&(EBX_Utils.addCSSClass(u.fixed.table,"ebx_tvAutoresize"),EBX_Utils.addCSSClass(u.main.table,"ebx_tvAutoresize")),o=0,l=-1,e=this.elements.fixedCells,t=null===d?null:d.fixed.table.rows.item(0).cells,i=null===u?null:u.fixed.table.rows.item(0).cells,n=0,s=e.length;n<s;n++,o++){if(void 0===this.columnDefinitions[o].width){var c=e[n].offsetWidth;if(null!==t)(h=t[this.columnDefinitions[o].colIndexInDataTable].offsetWidth)>c&&(c=h);if(null!==i)(p=i[this.columnDefinitions[o].colIndexInDataTable].offsetWidth)>c&&(c=p);c>r.EBX_AjaxTable.constants.maxAutoWidthAtInit&&(c=r.EBX_AjaxTable.constants.maxAutoWidthAtInit),this.columnDefinitions[o].width=c}l+=this.columnDefinitions[o].width,this.columnDefinitions[o].cumulativeWidth=l}for(l=0,e=this.elements.mainCells,t=null===d?null:d.main.table.rows.item(0).cells,i=null===u?null:u.main.table.rows.item(0).cells,n=0,s=e.length;n<s;n++,o++){if(void 0===this.columnDefinitions[o].width){var h,p;c=e[n].offsetWidth;if(null!==t)(h=t[this.columnDefinitions[o].colIndexInDataTable].offsetWidth)>c&&(c=h);if(null!==i)(p=i[this.columnDefinitions[o].colIndexInDataTable].offsetWidth)>c&&(c=p);c>r.EBX_AjaxTable.constants.maxAutoWidthAtInit&&(c=r.EBX_AjaxTable.constants.maxAutoWidthAtInit),this.columnDefinitions[o].width=c}l+=this.columnDefinitions[o].width,this.columnDefinitions[o].cumulativeWidth=l}for(this.elements.fixed.style.tableLayout="",this.elements.main.style.tableLayout="",null!==d&&(d.fixed.table.style.tableLayout="",d.main.table.style.tableLayout=""),null!==u&&(u.fixed.table.style.tableLayout="",u.main.table.style.tableLayout=""),"Chrome"!==EBX_LayoutManager.browser&&"Safari"!==EBX_LayoutManager.browser||(EBX_Utils.removeCSSClass(this.elements.fixed,"ebx_tvTableLayoutAutoForWebkit"),EBX_Utils.removeCSSClass(this.elements.main,"ebx_tvTableLayoutAutoForWebkit"),null!==d&&(EBX_Utils.removeCSSClass(d.fixed.table,"ebx_tvTableLayoutAutoForWebkit"),EBX_Utils.removeCSSClass(d.main.table,"ebx_tvTableLayoutAutoForWebkit")),null!==u&&(EBX_Utils.removeCSSClass(u.fixed.table,"ebx_tvTableLayoutAutoForWebkit"),EBX_Utils.removeCSSClass(u.main.table,"ebx_tvTableLayoutAutoForWebkit"))),null!==d&&(EBX_Utils.removeCSSClass(d.fixed.table,"ebx_tvAutoresize"),EBX_Utils.removeCSSClass(d.main.table,"ebx_tvAutoresize")),null!==u&&(EBX_Utils.removeCSSClass(u.fixed.table,"ebx_tvAutoresize"),EBX_Utils.removeCSSClass(u.main.table,"ebx_tvAutoresize")),this.sendInitAllColumnWidths(),o=0,e=this.elements.fixedCells,t=null===d?null:d.fixed.table.rows.item(0).cells,i=null===u?null:u.fixed.table.rows.item(0).cells,n=0,s=e.length;n<s;n++,o++)0!==this.columnDefinitions[o].width&&(e[n].style.width=this.columnDefinitions[o].width+"px",null!==t&&(t[this.columnDefinitions[o].colIndexInDataTable].style.width=this.columnDefinitions[o].width+"px",t[this.columnDefinitions[o].colIndexInDataTable].style.minWidth=""),null!==i&&(i[this.columnDefinitions[o].colIndexInDataTable].style.width=this.columnDefinitions[o].width+"px",i[this.columnDefinitions[o].colIndexInDataTable].style.minWidth=""),this.alignResizeKnob(o));for(e=this.elements.mainCells,t=null===d?null:d.main.table.rows.item(0).cells,i=null===u?null:u.main.table.rows.item(0).cells,n=0,s=e.length;n<s;n++,o++)0!==this.columnDefinitions[o].width&&(e[n].style.width=this.columnDefinitions[o].width+"px",null!==t&&(t[this.columnDefinitions[o].colIndexInDataTable].style.width=this.columnDefinitions[o].width+"px",t[this.columnDefinitions[o].colIndexInDataTable].style.minWidth=""),null!==i&&(i[this.columnDefinitions[o].colIndexInDataTable].style.width=this.columnDefinitions[o].width+"px",i[this.columnDefinitions[o].colIndexInDataTable].style.minWidth=""),this.alignResizeKnob(o));this.table.resizeModule.isAutoWidthNeeded=!0},e.prototype.alignResizeKnob=function(e){void 0!==this.columnDefinitions[e].resizeKnob&&(e===this.table.nbFixedColumns-1?this.columnDefinitions[e].resizeKnob.style.left=this.table.resizeModule.size.fixedColumnsWidth+"px":this.columnDefinitions[e].resizeKnob.style.left=this.columnDefinitions[e].cumulativeWidth+"px")},e.prototype.clickOnHeaderTableListener=function(e,t){var i=EBX_Utils.getTargetElement(e);if("TH"!==i.tagName&&(i=EBX_Utils.getFirstParentMatchingTagName(i,"TH")),null!==i){var n=i.cellIndex;if(t===this.elements.main&&(n+=this.table.nbFixedColumns),this.columnDefinitions[n].sortable){var s=this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader+1;this.sortColumn(n-s)}}},e.prototype.sortColumn=function(e){this.table.isEditionMode||this.table.content.sortColumn(e)},e.prototype.getResizeColumnBar=function(){return void 0===this.resizeColumn.resizeColumnBar&&(this.resizeColumn.resizeColumnBar=document.createElement("div"),this.resizeColumn.resizeColumnBar.className="ebx_ResizeColumnBar",this.table.element.container.appendChild(this.resizeColumn.resizeColumnBar),YAHOO.util.Event.addListener(this.resizeColumn.resizeColumnBar,"mouseout",this.mouseOutResizeBarListener,null,this),YAHOO.util.Event.addListener(this.resizeColumn.resizeColumnBar,"mousedown",this.mouseDownResizeBarListener,null,this),YAHOO.util.Event.addListener(this.resizeColumn.resizeColumnBar,"mouseup",this.mouseUpResizeBarListener,null,this),YAHOO.util.Event.addListener(this.resizeColumn.resizeColumnBar,"dblclick",this.autoResizeColumn,null,this),this.resizeColumn.resizeColumnBarDD=new YAHOO.util.DD(this.resizeColumn.resizeColumnBar),this.resizeColumn.resizeColumnBarDD.subscribe("startDragEvent",this.startDragResizeBarListener,this,!0),this.resizeColumn.resizeColumnBarDD.subscribe("dragEvent",this.dragResizeBarListener,this,!0),this.resizeColumn.resizeColumnBarDD.subscribe("endDragEvent",this.endDragResizeBarListener,this,!0)),this.resizeColumn.resizeColumnBar},e.prototype.mouseOverResizeKnobListener=function(e,t){if(!this.resizeColumn.isDraggingResizeBar){var i=this.getResizeColumnBar(),n=this.columnDefinitions[t].cumulativeWidth;t>=this.table.nbFixedColumns?(n+=this.table.resizeModule.size.fixedColumnsWidth,n-=this.table.element.update.main.scroll.scrollLeft,!1===this.table.scroll.mainScrollerHasHScroll&&!1===this.table.scroll.fixedColumnsHasHScroll&&!1===this.table.scroll.mainScrollerHasVScroll&&n--):n-=this.table.element.update.fixed.scroll.scrollLeft;var s=this.table.resizeModule.size.containerHeight;this.table.scroll.mainScrollerHasHScroll||this.table.scroll.fixedColumnsHasHScroll?s-=this.table.scroll.hScrollHeight+1:!1===this.table.scroll.mainScrollerHasHScroll&&(s=this.table.resizeModule.size.headerHeight+this.table.resizeModule.size.createHeight+this.table.element.update.getLinesHeightsSum()),i.style.height=s+"px",i.style.left=n+"px",i.style.display="block",this.resizeColumn.currentColIndexResize=t,void 0!==this.columnDefinitions[this.resizeColumn.currentColIndexResize].width?this.resizeColumn.colWidthBeforeResize=this.columnDefinitions[this.resizeColumn.currentColIndexResize].width:this.resizeColumn.colWidthBeforeResize=this.columnDefinitions[this.resizeColumn.currentColIndexResize].headerWidth,this.resizeColumn.resizeBarMinLeft=n-this.resizeColumn.colWidthBeforeResize+o.EBX_AjaxTable_UIConstants.minWidthColumn,this.resizeColumn.startingResizeOffsetLeft=i.offsetLeft}},e.prototype.mouseOutResizeKnobListener=function(e){document.elementFromPoint(e.clientX,e.clientY)!==this.getResizeColumnBar()&&(this.resizeColumn.isMouseDownOnResizeBar||this.hideResizeBar())},e.prototype.hideResizeBar=function(){this.resizeColumn.isDraggingResizeBar||(this.getResizeColumnBar().style.display="none",this.resizeColumn.isMouseDownOnResizeBar=!1)},e.prototype.mouseDownResizeBarListener=function(){this.resizeColumn.isMouseDownOnResizeBar=!0},e.prototype.mouseUpResizeBarListener=function(){this.resizeColumn.isDraggingResizeBar||(this.resizeColumn.isMouseDownOnResizeBar=!1)},e.prototype.mouseOutResizeBarListener=function(){this.resizeColumn.isMouseDownOnResizeBar||this.hideResizeBar()},e.prototype.startDragResizeBarListener=function(){this.resizeColumn.isDraggingResizeBar=!0},e.prototype.dragResizeBarListener=function(){this.resizeColumn.resizeColumnBar.style.top="0",this.resizeColumn.resizeColumnBar.offsetLeft<this.resizeColumn.resizeBarMinLeft&&(this.resizeColumn.resizeColumnBar.style.left=this.resizeColumn.resizeBarMinLeft+"px")},e.prototype.endDragResizeBarListener=function(){if(!1!==this.resizeColumn.isDraggingResizeBar){this.resizeColumn.isDraggingResizeBar=!1;var e=this.resizeColumn.resizeColumnBar.offsetLeft-this.resizeColumn.startingResizeOffsetLeft;this.hideResizeBar(),this.setColumnWidth(this.resizeColumn.currentColIndexResize,this.resizeColumn.colWidthBeforeResize+e)&&this.sendColumnWidth(this.resizeColumn.currentColIndexResize)}},e.prototype.autoResizeColumn=function(){var e,t,i=null,n=null;this.hideResizeBar(),this.resizeColumn.currentColIndexResize<this.table.nbFixedColumns?(e=this.elements.fixed,this.table.element.hasUpdatePart()&&(i=this.table.element.update.fixed.table),this.table.element.hasCreatePart()&&(n=this.table.element.create.fixed.table),t=this.resizeColumn.currentColIndexResize):(e=this.elements.main,this.table.element.hasUpdatePart()&&(i=this.table.element.update.main.table),this.table.element.hasCreatePart()&&(n=this.table.element.create.main.table),t=this.resizeColumn.currentColIndexResize-this.table.nbFixedColumns);var s=this.columnDefinitions[this.resizeColumn.currentColIndexResize].colIndexInDataTable;e.rows[0].cells[t].style.width="",null!==i&&(i.rows[0].cells[s].style.width=""),null!==n&&(n.rows[0].cells[s].style.width=""),e.style.tableLayout="auto",null!==i&&(i.style.tableLayout="auto"),null!==n&&(n.style.tableLayout="auto"),"Chrome"!==EBX_LayoutManager.browser&&"Safari"!==EBX_LayoutManager.browser||(EBX_Utils.addCSSClass(e,"ebx_tvTableLayoutAutoForWebkit"),null!==i&&EBX_Utils.addCSSClass(i,"ebx_tvTableLayoutAutoForWebkit"),null!==n&&EBX_Utils.addCSSClass(n,"ebx_tvTableLayoutAutoForWebkit")),null!==i&&EBX_Utils.addCSSClass(i,"ebx_tvAutoresize"),null!==n&&EBX_Utils.addCSSClass(n,"ebx_tvAutoresize");var r,l=e.rows[0].cells[t].offsetWidth;null!==i&&(l<(r=i.rows[0].cells[s].offsetWidth)&&(l=r));null!=n&&(l<(r=n.rows[0].cells[s].offsetWidth)&&(l=r));e.style.tableLayout="",null!==i&&(i.style.tableLayout=""),null!=n&&(n.style.tableLayout=""),"Chrome"!==EBX_LayoutManager.browser&&"Safari"!==EBX_LayoutManager.browser||(EBX_Utils.removeCSSClass(e,"ebx_tvTableLayoutAutoForWebkit"),null!==i&&EBX_Utils.removeCSSClass(i,"ebx_tvTableLayoutAutoForWebkit"),null!==n&&EBX_Utils.removeCSSClass(n,"ebx_tvTableLayoutAutoForWebkit")),null!==i&&EBX_Utils.removeCSSClass(i,"ebx_tvAutoresize"),null!==n&&EBX_Utils.removeCSSClass(n,"ebx_tvAutoresize"),l<o.EBX_AjaxTable_UIConstants.minWidthColumn&&(l=o.EBX_AjaxTable_UIConstants.minWidthColumn),this.setColumnWidth(this.resizeColumn.currentColIndexResize,l)&&this.sendColumnWidth(this.resizeColumn.currentColIndexResize)},e.prototype.setSeverityColumnDisplayed=function(e){if(this.isSeverityColumnDisplayed=e,(!0===this.isSeverityColumnDisplayed||!1===this.isSeverityColumnDisplayed)&&!(this.isSeverityColumnDisplayed&&this.columnDefinitionsByKey.ebx_tvColSeverity.width===o.EBX_AjaxTable_UIConstants.statusColumnWidth||!1===this.isSeverityColumnDisplayed&&0===this.columnDefinitionsByKey.ebx_tvColSeverity.width)){var t,i,n;for(this.isSeverityColumnDisplayed?(this.columnDefinitionsByKey.ebx_tvColSeverity.width=o.EBX_AjaxTable_UIConstants.statusColumnWidth,this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInDataTable=this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader,t=o.EBX_AjaxTable_UIConstants.statusColumnWidth,n=1,this.elements.fixedCells[this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader].style.display="",this.isSelectColumnEnabled&&!1===this.isInheritanceColumnDisplayed?this.elements.fixedCells[this.columnDefinitionsByKey.ebx_tvColSelect.colIndexInHeader].style.borderRight="none":this.isInheritanceColumnDisplayed&&(this.elements.fixedCells[this.columnDefinitionsByKey.ebx_tvColInheritance.colIndexInHeader].style.borderRight="none"),!1===this.isSelectColumnEnabled&&!1===this.isInheritanceColumnDisplayed&&(EBX_Utils.addCSSClass(this.elements.fixedCells[this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader],"ebx_tv_thFixed_firstVisible"),this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader+1<this.table.nbFixedColumns&&EBX_Utils.removeCSSClass(this.elements.fixedCells[this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader+1],"ebx_tv_thFixed_firstVisible"))):(this.columnDefinitionsByKey.ebx_tvColSeverity.width=0,this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInDataTable=void 0,t=-o.EBX_AjaxTable_UIConstants.statusColumnWidth,n=-1,this.elements.fixedCells[this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader].style.display="none",this.isSelectColumnEnabled&&!1===this.isInheritanceColumnDisplayed?this.elements.fixedCells[this.columnDefinitionsByKey.ebx_tvColSelect.colIndexInHeader].style.borderRight="":this.isInheritanceColumnDisplayed&&(this.elements.fixedCells[this.columnDefinitionsByKey.ebx_tvColInheritance.colIndexInHeader].style.borderRight=""),!1===this.isSelectColumnEnabled&&!1===this.isInheritanceColumnDisplayed&&(EBX_Utils.removeCSSClass(this.elements.fixedCells[this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader],"ebx_tv_thFixed_firstVisible"),this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader+1<this.table.nbFixedColumns&&EBX_Utils.addCSSClass(this.elements.fixedCells[this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader+1],"ebx_tv_thFixed_firstVisible"))),this.columnDefinitionsByKey.ebx_tvColSeverity.cumulativeWidth+=t,i=this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader+1;i<this.table.nbFixedColumns;i++)this.columnDefinitions[i].cumulativeWidth+=t,this.columnDefinitions[i].colIndexInDataTable+=n,this.alignResizeKnob(i);this.table.resizeModule.resizeContainers()}},e.prototype.getResizeColumnBarTablet=function(){return void 0===this.resizeColumn.resizeColumnBarTablet&&(this.resizeColumn.resizeColumnBarTablet=document.createElement("div"),this.resizeColumn.resizeColumnBarTablet.className="ebx_ResizeColumnBar",this.elements.container.appendChild(this.resizeColumn.resizeColumnBarTablet)),this.resizeColumn.resizeColumnBarTablet},e.prototype.gestureStartResizeColumnListener=function(e,t){if(EBX_LayoutManager.getGestureResizePermission(EBX_LayoutManager.tableColumnResizeId)&&(void 0===this.resizeColumn.currentColIndexResize||null===this.resizeColumn.currentColIndexResize)){this.resizeColumn.currentColIndexResize=t,e.preventDefault();var i=this.columnDefinitions[t].cumulativeWidth;t>=this.table.nbFixedColumns?(i+=this.table.resizeModule.size.fixedColumnsWidth,i-=this.table.element.update.main.scroll.scrollLeft,!1===this.table.scroll.mainScrollerHasHScroll&&!1===this.table.scroll.fixedColumnsHasHScroll&&!1===this.table.scroll.mainScrollerHasVScroll&&i--):i-=this.table.element.update.fixed.scroll.scrollLeft;var n=this.getResizeColumnBarTablet(),s=this.table.resizeModule.size.containerHeight;this.table.scroll.mainScrollerHasHScroll||this.table.scroll.fixedColumnsHasHScroll?s-=this.table.scroll.hScrollHeight+1:!1===this.table.scroll.mainScrollerHasHScroll&&(s=this.table.resizeModule.size.headerHeight+this.table.resizeModule.size.createHeight+this.table.element.update.getLinesHeightsSum()),n.style.height=s+"px",n.style.left=i+"px",n.style.display="block",void 0!==this.columnDefinitions[this.resizeColumn.currentColIndexResize].width?this.resizeColumn.colWidthBeforeResize=this.columnDefinitions[this.resizeColumn.currentColIndexResize].width:this.resizeColumn.colWidthBeforeResize=this.columnDefinitions[this.resizeColumn.currentColIndexResize].headerWidth,this.resizeColumn.columnOffsetLeft=i-this.resizeColumn.colWidthBeforeResize,this.resizeColumn.startingResizeOffsetLeft=n.offsetLeft}},e.prototype.gestureChangeResizeColumnListener=function(e,t){if(EBX_LayoutManager.isCurrentGestureResize(EBX_LayoutManager.tableColumnResizeId)&&this.resizeColumn.currentColIndexResize===t){e.preventDefault();var i=this.resizeColumn.columnOffsetLeft+this.resizeColumn.colWidthBeforeResize*e.scale;i<this.resizeColumn.columnOffsetLeft+o.EBX_AjaxTable_UIConstants.minWidthColumn&&(i=this.resizeColumn.columnOffsetLeft+o.EBX_AjaxTable_UIConstants.minWidthColumn),this.getResizeColumnBarTablet().style.left=i+"px"}},e.prototype.gestureEndResizeColumnListener=function(e,t){if(EBX_LayoutManager.isCurrentGestureResize(EBX_LayoutManager.tableColumnResizeId)&&this.resizeColumn.currentColIndexResize===t){e.preventDefault(),this.getResizeColumnBarTablet().style.display="none";var i=this.resizeColumn.colWidthBeforeResize*e.scale;i<o.EBX_AjaxTable_UIConstants.minWidthColumn&&(i=o.EBX_AjaxTable_UIConstants.minWidthColumn),this.setColumnWidth(this.resizeColumn.currentColIndexResize,i)&&this.sendColumnWidth(this.resizeColumn.currentColIndexResize),this.resizeColumn.currentColIndexResize=null,EBX_LayoutManager.releaseCurrentGestureResize()}},e.prototype.setColumnWidth=function(e,t){var i,n,s;if(t<o.EBX_AjaxTable_UIConstants.minWidthColumn)return!1;for(i=t-(void 0!==this.columnDefinitions[this.resizeColumn.currentColIndexResize].width?this.columnDefinitions[this.resizeColumn.currentColIndexResize].width:this.columnDefinitions[this.resizeColumn.currentColIndexResize].headerWidth),this.columnDefinitions[e].width=t,s=e<this.table.nbFixedColumns?this.table.nbFixedColumns:this.columnDefinitions.length,n=e;n<s;n++)this.columnDefinitions[n].cumulativeWidth+=i,this.alignResizeKnob(n);return e<this.table.nbFixedColumns?(this.elements.fixedCells[e].style.width=t+"px",void 0!==this.table.element.update.fixed.table.rows.item(0)&&(this.table.element.hasCreatePart()&&(this.table.element.create.fixed.table.rows.item(0).cells.item(this.columnDefinitions[e].colIndexInDataTable).style.width=t+"px"),this.table.element.hasUpdatePart()&&(this.table.element.update.fixed.table.rows.item(0).cells.item(this.columnDefinitions[e].colIndexInDataTable).style.width=t+"px"))):(this.elements.mainCells[e-this.table.nbFixedColumns].style.width=t+"px",void 0!==this.table.element.update.main.table.rows.item(0)&&(this.table.element.hasCreatePart()&&(this.table.element.create.main.table.rows.item(0).cells.item(this.columnDefinitions[e].colIndexInDataTable).style.width=t+"px"),this.table.element.hasUpdatePart()&&(this.table.element.update.main.table.rows.item(0).cells.item(this.columnDefinitions[e].colIndexInDataTable).style.width=t+"px"))),this.notifyColumnWidthChange(e),this.table.resizeModule.resizeContainers(),!0},e.prototype.notifyColumnWidthChange=function(e){for(var t=0;t<this.columnWidthChangeHandler.length;t++){(0,this.columnWidthChangeHandler[t])(e)}},e.prototype.addColumnWidthChangeHandler=function(e){this.columnWidthChangeHandler.push(e)},e.prototype.sendColumnWidth=function(e){var t=this.columnDefinitions[e].width;t=Math.round(t);var i=r.EBX_AjaxTable.constants.tableNameParameter+this.table.tableName+r.EBX_AjaxTable.constants.columnKeyForWidthParameter+this.columnDefinitions[e].key+r.EBX_AjaxTable.constants.widthForColumnParameter+t;null!=this.table.sncParameter&&(i+=r.EBX_AjaxTable.constants.sncSpecificParameter+this.table.sncParameter),this.table.dataSource.setColumnWidth.sendRequest(i,null)},e.prototype.sendInitAllColumnWidths=function(){var e,t,i;for(i=[],e=this.columnDefinitionsByKey.ebx_tvColSeverity.colIndexInHeader+1,t=this.columnDefinitions.length;e<t;e++)i.push(Math.round(this.columnDefinitions[e].width));var n=r.EBX_AjaxTable.constants.tableNameParameter+this.table.tableName+r.EBX_AjaxTable.constants.widthsForColumnsParameter+i.join(",");null!=this.table.sncParameter&&(n+=r.EBX_AjaxTable.constants.sncSpecificParameter+this.table.sncParameter),this.table.dataSource.initAllColumnWidths.sendRequest(n,null)},e.sortFlagCSSClass="ebx_SortFlag",e.sortFlagAscCSSClass="ebx_SortFlagAsc",e.sortFlagDescCSSClass="ebx_SortFlagDesc",e.sortNumberCSSClass="ebx_SortNumber",e}();t.Header=c},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(7),s=function(){function e(e,t,i){this.table=e,this.selection=t,this.grid_selection=i}return e.prototype.addListeners=function(e){YAHOO.util.Event.addListener(this.table.element.update.fixed.table,"click",this.clickOnTableListener,this.table.element.update.fixed.table,this),YAHOO.util.Event.addListener(this.table.element.update.main.table,"click",this.clickOnTableListener,this.table.element.update.main.table,this),this.table.isOpenRecordEnabled&&(YAHOO.util.Event.addListener(e.fixed.table,"dblclick",this.selection.openRecordFromLine,e.fixed.table,this.selection),YAHOO.util.Event.addListener(e.main.table,"dblclick",this.selection.openRecordFromLine,e.main.table,this.selection))},e.prototype.clickOnTableListener=function(e,t){var i=EBX_Utils.getTargetElement(e);if(!EBX_Utils.matchCSSClass(i,n.SelectionRangeMask.CSS_MASK))if(this.table.isEditionMode){if(e.shiftKey)return void this.grid_selection.onClickShift(e,t);if(this.table.isInAFixedContainer(t)){if(!0===EBX_Utils.matchCSSClass(i,"ebx_duplicateTableRow")||null!==EBX_Utils.getFirstParentMatchingCSSClass(i,"ebx_duplicateTableRow")){var s=EBX_Utils.getFirstParentMatchingTagName(i,"TR");return void this.table.gridEditModule.creation.createNewRecord(!1,s.rowIndex)}if(!0===EBX_Utils.matchCSSClass(i,"ebx_revertTableRow")||null!==EBX_Utils.getFirstParentMatchingCSSClass(i,"ebx_revertTableRow")){s=EBX_Utils.getFirstParentMatchingTagName(i,"TR");return void this.table.gridEditModule.resetRow(s.rowIndex)}if(!0===EBX_Utils.matchCSSClass(i,"ebx_deleteTableRow")||null!==EBX_Utils.getFirstParentMatchingCSSClass(i,"ebx_deleteTableRow")){var r=void 0;return r=EBX_Utils.matchCSSClass(i,"ebx_deleteTableRow")?i:EBX_Utils.getFirstParentMatchingCSSClass(i,"ebx_deleteTableRow"),void this.table.gridEditModule.deleteTableRow(r)}}this.table.focusCellFromEvent(i,t,e)}else{if(this.table.isInAFixedContainer(t)){if(this.table.isRecordSelectionEnabled&&void 0!==i.tagName&&"INPUT"===i.tagName&&"checkbox"===i.type)if("ebx_tvSelectCell"===(o=i.parentElement.parentElement).className&&o.parentNode.parentNode.parentNode.parentNode===this.table.element.update.fixed.scroll)return void this.selection.selectRowCheckboxes(i,e);if(this.table.header.isInheritanceColumnDisplayed){var o,l=null;if(null!==(l=void 0!==i.tagName&&"BUTTON"===i.tagName?i:EBX_Utils.getFirstParentMatchingTagName(i,"BUTTON")))if("ebx_tvInheritanceCell"===(o=l.parentNode).className&&o.parentNode.parentNode.parentNode.parentNode===this.table.element.update.fixed.scroll)return this.selection.focusLineIndex(o.parentNode.rowIndex),void this.table.content.inheritance.clickOnInheritanceButton(o.parentNode.rowIndex)}}if(this.table.isOpenRecordSimpleClick){s=i;do{s=EBX_Utils.getFirstParentMatchingTagName(s,"TR")}while(s.parentNode.parentNode!==this.table.element.update.fixed.table);this.selection.focusLineIndex(s.rowIndex)}}},e}();t.NavigationRouter=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(0),s=i(5),r=function(){function e(e){this.table=e,this.buttonsFirst=[],this.buttonsLast=[],this.buttonsPrevious=[],this.buttonsNext=[],this.pageReports=[]}return e.prototype.goToFirstPage=function(){this.goToPage(n.EBX_AjaxTable.constants.firstPageParamValue)},e.prototype.goToPreviousPage=function(){this.goToPage(n.EBX_AjaxTable.constants.prevPageParamValue)},e.prototype.goToNextPage=function(){this.goToPage(n.EBX_AjaxTable.constants.nextPageParamValue)},e.prototype.goToLastPage=function(){this.goToPage(n.EBX_AjaxTable.constants.lastPageParamValue)},e.prototype.goToPage=function(e){this.table.content.loadPage(e)},e.prototype.sendRequestSetTablePageSize=function(e,t,i){var s;(s=[]).push(n.EBX_AjaxTable.constants.tableNameParameter,this.table.tableName),s.push(n.EBX_AjaxTable.constants.tablePageSize,e),this.setTablePageSize.sendRequest(s.join(""),this.getCallbackSetTablePageSizeObject(t,i)),this.table.isTableReady=!1,this.table.setState(n.EBX_Table_State.LOADING)},e.prototype.getCallbackSetTablePageSizeObject=function(e,t){return{success:this.callbackSetTablePageSizeSuccess,failure:this.callbackSetTablePageSizeFailure,scope:this,argument:{buttonID:e,optionIndex:t}}},e.prototype.callbackSetTablePageSizeSuccess=function(e,t,i){var n=t.results;if(void 0!==n)for(var s=0;s<n.length;s++){var r=n[s].message,o=n[s].severity;void 0===o&&(o=EBX_UserMessageManager.INFO),EBX_UserMessageManager.addMessage(r,o)}this.table.content.refreshCurrentPage();var l=EBX_ButtonUtils.menuButtonsMenu[i.buttonID];l=l[0];for(s=0;s<l.length;s++)l[s].checked=s===i.optionIndex;EBX_Form.resizeFormBody()},e.prototype.callbackSetTablePageSizeFailure=function(e,t,i){if(401===t.status)return this.table.isTableReady=!1,this.table.setState(n.EBX_Table_State.LOGOUT),void EBX_Loader.gotoTimeoutPage();n.EBX_Table_State.NORMAL!==this.table.getState()&&(this.table.isTableReady=!0,this.table.setState(n.EBX_Table_State.NORMAL)),EBX_Form.resizeFormBody()},e.prototype.sendRequestComputeTableSize=function(e){var t;(t=[]).push(n.EBX_AjaxTable.constants.tableNameParameter,this.table.tableName),this.computeTableSize.sendRequest(t.join(""),this.getCallbackComputeTableSizeObject(e)),this.table.isTableReady=!1,this.table.setState(n.EBX_Table_State.LOADING)},e.prototype.getCallbackComputeTableSizeObject=function(e){return{success:this.callbackComputeTableSizeSuccess,failure:this.callbackComputeTableSizeFailure,scope:this,argument:{buttonID:e}}},e.prototype.callbackComputeTableSizeSuccess=function(e,t,i){var n=t.results;if(void 0!==n)for(var s=0;s<n.length;s++){var r=n[s].message,o=n[s].severity;void 0===o&&(o=EBX_UserMessageManager.INFO),EBX_UserMessageManager.addMessage(r,o)}this.table.content.refreshCurrentPage()},e.prototype.callbackComputeTableSizeFailure=function(e,t,i){if(401===t.status)return this.table.isTableReady=!1,this.table.setState(n.EBX_Table_State.LOGOUT),void EBX_Loader.gotoTimeoutPage();n.EBX_Table_State.NORMAL!==this.table.getState()&&(this.table.isTableReady=!0,this.table.setState(n.EBX_Table_State.NORMAL))},e.prototype.init=function(){this.setTablePageSize=new s.YUI_XHRDataSourceJSON(n.EBX_AjaxTable.constants.setTablePageSizeRequest,e.tableSizeResponseSchema),this.computeTableSize=new s.YUI_XHRDataSourceJSON(n.EBX_AjaxTable.constants.computeTableSizeRequest,e.computeTableSizeResponseSchema)},e.prototype.registerPluggedComponents=function(){var e;if(void 0!==n.EBX_AjaxTable.pluggedComponentRegister.pageReportRegister[this.table.tableName]){var t=n.EBX_AjaxTable.pluggedComponentRegister.pageReportRegister[this.table.tableName];for(e=t.length-1;e>=0;e--)this.pageReports.push(document.getElementById(t[e]))}if(void 0!==n.EBX_AjaxTable.pluggedComponentRegister.buttonFirstRegister[this.table.tableName]){var i=n.EBX_AjaxTable.pluggedComponentRegister.buttonFirstRegister[this.table.tableName];for(e=i.length-1;e>=0;e--)this.buttonsFirst.push(document.getElementById(i[e]))}if(void 0!==n.EBX_AjaxTable.pluggedComponentRegister.buttonPreviousRegister[this.table.tableName]){var s=n.EBX_AjaxTable.pluggedComponentRegister.buttonPreviousRegister[this.table.tableName];for(e=s.length-1;e>=0;e--)this.buttonsPrevious.push(document.getElementById(s[e]))}if(void 0!==n.EBX_AjaxTable.pluggedComponentRegister.buttonNextRegister[this.table.tableName]){var r=n.EBX_AjaxTable.pluggedComponentRegister.buttonNextRegister[this.table.tableName];for(e=r.length-1;e>=0;e--)this.buttonsNext.push(document.getElementById(r[e]))}if(void 0!==n.EBX_AjaxTable.pluggedComponentRegister.buttonLastRegister[this.table.tableName]){var o=n.EBX_AjaxTable.pluggedComponentRegister.buttonLastRegister[this.table.tableName];for(e=o.length-1;e>=0;e--)this.buttonsLast.push(document.getElementById(o[e]))}},e.prototype.updateButtonsState=function(){var e,t=this.table.content.rawResponse.meta.hasPreviousPage,i=this.table.content.rawResponse.meta.hasNextPage;for(e=this.buttonsFirst.length-1;e>=0;e--)EBX_ButtonUtils.setButtonDisabled(this.buttonsFirst[e],!t);for(e=this.buttonsPrevious.length-1;e>=0;e--)EBX_ButtonUtils.setButtonDisabled(this.buttonsPrevious[e],!t);for(e=this.buttonsNext.length-1;e>=0;e--)EBX_ButtonUtils.setButtonDisabled(this.buttonsNext[e],!i);for(e=this.buttonsLast.length-1;e>=0;e--)EBX_ButtonUtils.setButtonDisabled(this.buttonsLast[e],!i)},e.prototype.updatePageReport=function(){for(var e=this.pageReports.length-1;e>=0;e--)this.pageReports[e].innerHTML=this.table.content.rawResponse.meta.pageReport;EBX_Form.resizeFormBody()},e.tableSizeResponseSchema={resultsList:"messages",fields:[{key:"message"},{key:"severity"}]},e.computeTableSizeResponseSchema={resultsList:"messages",fields:[{key:"message"},{key:"severity"}]},e}();t.Pagination=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(10),s=function(){function e(e){this.table=e,this.currentFixedScrollLeft=0}return e.prototype.init=function(){this.hScrollHeight=EBX_Utils.getHScrollHeight(),this.vScrollWidth=EBX_Utils.getVScrollWidth()},e.prototype.synchronizeScrollFromFixed=function(t,i){if(null===this.lastSyncScrollOrigin||this.lastSyncScrollOrigin===i){this.lastSyncScrollOrigin=i,this.currentFixedScrollLeft=i.scrollLeft,this.table.header.elements.fixedContainer.scrollLeft=this.currentFixedScrollLeft,i===this.table.element.update.fixed.scroll?(this.table.element.update.main.scroll.scrollTop=this.table.element.update.fixed.scroll.scrollTop,this.table.element.hasCreatePart()&&(this.table.element.create.fixed.scroll.scrollLeft=this.currentFixedScrollLeft)):this.table.element.hasCreatePart()&&i===this.table.element.create.fixed.scroll&&(this.table.element.update.fixed.scroll.scrollLeft=this.currentFixedScrollLeft,this.table.element.update.fixed.scroll.scrollLeft=this.currentFixedScrollLeft),this.currentFixedScrollLeft===this.fixedScrollerMaxScrollLeft?EBX_Utils.removeCSSClass(this.table.element.container,"ebx_tvContainerFixedHScrollLastBorderNotVisible"):EBX_Utils.addCSSClass(this.table.element.container,"ebx_tvContainerFixedHScrollLastBorderNotVisible"),window.clearTimeout(this.clearSyncScrollTimeout);var n=this;this.clearSyncScrollTimeout=window.setTimeout((function(){n.lastSyncScrollOrigin=null}),e.syncScrollLockDuration),this.table.gridEditModule.synchronizePositionOfCurrentWidgetEditedWithScroll()}},e.prototype.synchronizeScrolls=function(t,i){if(null===this.lastSyncScrollOrigin||this.lastSyncScrollOrigin===i){this.lastSyncScrollOrigin=i;var n=i.scrollLeft;this.table.header.elements.mainContainer.scrollLeft=n,i===this.table.element.update.main.scroll?(this.table.element.update.fixed.scroll.scrollTop=i.scrollTop,this.table.element.hasCreatePart()&&(this.table.element.create.main.scroll.scrollLeft=n)):this.table.element.hasCreatePart()&&i===this.table.element.create.main.scroll&&(this.table.element.update.main.scroll.scrollLeft=n),window.clearTimeout(this.clearSyncScrollTimeout);var s=this;this.clearSyncScrollTimeout=window.setTimeout((function(){s.lastSyncScrollOrigin=null}),e.syncScrollLockDuration),this.table.gridEditModule.synchronizePositionOfCurrentWidgetEditedWithScroll()}},e.prototype.addListenerTo=function(e){YAHOO.util.Event.addListener(e.fixed.scroll,"scroll",this.synchronizeScrollFromFixed,e.fixed.scroll,this),YAHOO.util.Event.addListener(e.main.scroll,"scroll",this.synchronizeScrolls,e.main.scroll,this)},e.prototype.refreshContainerCSSClasses=function(e){!1===this.createScrollerHasVScroll&&e.push("ebx_tvContainerCreateNoVScroll"),this.fixedColumnsHasHScroll&&e.push("ebx_tvContainerFixedHScroll"),this.mainScrollerHasHScroll&&e.push("ebx_tvContainerHScroll"),this.mainScrollerHasVScroll&&e.push("ebx_tvContainerVScroll"),this.currentFixedScrollLeft!==this.fixedScrollerMaxScrollLeft&&e.push("ebx_tvContainerFixedHScrollLastBorderNotVisible")},e.prototype.refreshScrollUpdateHeight=function(e){this.mainScrollerHeight=e.containerHeight-e.headerHeight-e.createHeight-e.createResizeHandleHeight,this.table.element.hasCreatePart()&&(this.table.element.create.wrapper.style.height=e.createHeight+"px"),this.table.element.update.fixed.scrollWrapper.style.height=this.mainScrollerHeight+"px",this.table.element.update.fixed.scroll.style.height=this.mainScrollerHeight+"px",this.table.element.update.main.scroll.style.height=this.mainScrollerHeight+"px"},e.prototype.refreshScrollPosition=function(){this.synchronizeScrollFromFixed(null,this.table.element.update.fixed.scroll),this.lastSyncScrollOrigin=null,this.synchronizeScrolls(null,this.table.element.update.main.scroll)},e.prototype.refreshScrollProperties=function(e){var t=!1;this.fixedScrollerMaxScrollLeft=0,this.table.header.columnDefinitions[this.table.nbFixedColumns-1].cumulativeWidth>e.fixedColumnsWidth&&(this.fixedScrollerMaxScrollLeft=this.table.header.columnDefinitions[this.table.nbFixedColumns-1].cumulativeWidth-e.fixedColumnsWidth,t=!0);var i=e.containerWidth-e.fixedColumnsWidth,s=this.table.header.columnDefinitions[this.table.header.columnDefinitions.length-1].cumulativeWidth>=i;this.currentScrollbarHeight=0,s&&(this.currentScrollbarHeight=this.hScrollHeight),this.mainScrollerHasVScroll=this.table.element.update.getLinesHeightsSum()>this.mainScrollerHeight-this.currentScrollbarHeight,this.currentScrollbarWidth=0,this.mainScrollerHasVScroll&&(this.currentScrollbarWidth=this.vScrollWidth),this.fixedColumnsHasHScroll=t,this.mainScrollerHasVScroll&&!1===t&&(this.fixedColumnsHasHScroll=e.fixedColumnsWidth+n.Resize.mainContainerMinWidth>e.containerWidth-this.currentScrollbarWidth),this.mainScrollerHasHScroll=s,this.mainScrollerHasVScroll&&!1===s&&(this.mainScrollerHasHScroll=this.table.header.columnDefinitions[this.table.header.columnDefinitions.length-1].cumulativeWidth>=i-this.currentScrollbarWidth,this.mainScrollerHasHScroll&&(this.currentScrollbarHeight=this.hScrollHeight),this.mainScrollerHasVScroll=this.table.element.update.getLinesHeightsSum()>this.mainScrollerHeight-this.currentScrollbarHeight)},e.prototype.hasScrollbarVisible=function(){return this.mainScrollerHasHScroll||this.fixedColumnsHasHScroll||this.mainScrollerHasVScroll},e.prototype.hasHorizontalScrollbarVisible=function(){return this.mainScrollerHasHScroll||this.fixedColumnsHasHScroll},e.syncScrollLockDuration=100,e}();t.Scroll=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(0),s=i(5),r=i(6),o=function(){function e(e){this.table=e,this.currentRowFocusedIndex=null,this.lastRowSelectedIndex=null}return e.prototype.registerPluggedComponents=function(){var e;if(this.selectReports=[],void 0!==n.EBX_AjaxTable.pluggedComponentRegister.selectReportRegister[this.table.tableName]){var t=n.EBX_AjaxTable.pluggedComponentRegister.selectReportRegister[this.table.tableName];for(e=t.length-1;e>=0;e--)this.selectReports.push({numberPlaceHolder:document.getElementById(t[e]+n.EBX_AjaxTable.constants.suffixSelectionNumber),labelOne:document.getElementById(t[e]+n.EBX_AjaxTable.constants.suffixSelectionLabelOne),labelMany:document.getElementById(t[e]+n.EBX_AjaxTable.constants.suffixSelectionLabelMany)})}if(this.buttonsOpen=[],void 0!==n.EBX_AjaxTable.pluggedComponentRegister.buttonOpenRegister[this.table.tableName]){var i=n.EBX_AjaxTable.pluggedComponentRegister.buttonOpenRegister[this.table.tableName];for(e=i.length-1;e>=0;e--)this.buttonsOpen.push(document.getElementById(i[e]))}},e.prototype.openRecordFromLine=function(e,t){var i=EBX_Utils.getTargetElement(e);EBX_Utils.clearSelection();do{i=EBX_Utils.getFirstParentMatchingTagName(i,"TR")}while(i.parentNode.parentNode!==t);this.openRecordIndex(i.rowIndex)},e.prototype.openCurrentFocusedRecord=function(){null!==this.currentRowFocusedIndex&&this.openRecordIndex(this.currentRowFocusedIndex)},e.prototype.openRecordIndex=function(e){this.currentRowFocusedIndex=e,this.updateFocusedLine(),this.table.isOpenInPopup?EBX_Utils.openInternalPopupLargeSizeHostedClose(this.table.openInPopupURL+this.table.content.rawResponse.results[e][r.AjaxResponseRecordConstants.keyIndexInResultLine]):(this.table.element.container.style.cursor="wait",location.assign(n.EBX_AjaxTable.constants.rowEditFormRequest+this.table.content.rawResponse.results[e][r.AjaxResponseRecordConstants.keyIndexInResultLine]))},e.prototype.updateFocusedLine=function(){var e,t=this.getFocusFlag();if(null!==this.currentRowFocusedIndex){if(this.table.isOpenRecordSimpleClick)for(e=this.buttonsOpen.length-1;e>=0;e--)EBX_Utils.addCSSClass(this.buttonsOpen[e],"ebx_OpenRecordEnabled");void 0!==this.table.element.update.getRowProperty(this.currentRowFocusedIndex).height?(t.style.display="",t.style.height=this.table.element.update.getRowProperty(this.currentRowFocusedIndex).height+"px",this.currentRowFocusedIndex>0?t.style.top=this.table.element.update.getRowProperty(this.currentRowFocusedIndex-1).cumulativeHeight+"px":t.style.top="0px"):this.table.callFunctionWhenTableIsReady(this.updateFocusedLine,null,this)}else if(t.style.display="none",this.table.isOpenRecordSimpleClick)for(e=this.buttonsOpen.length-1;e>=0;e--)EBX_Utils.removeCSSClass(this.buttonsOpen[e],"ebx_OpenRecordEnabled")},e.prototype.getFocusFlag=function(){return void 0===this.table.element.focusFlag&&(this.table.element.focusFlag=document.createElement("div"),this.table.element.focusFlag.className="ebx_tvFocusFlag"),this.table.resizeModule.size.fixedColumnsWidth<=0?this.table.element.update.main.scroll.appendChild(this.table.element.focusFlag):this.table.element.update.fixed.scroll.appendChild(this.table.element.focusFlag),this.table.element.focusFlag},e.prototype.updateSelectReport=function(){for(var e=this.selectReports.length-1;e>=0;e--)0===this.table.content.rawResponse.meta.selectedNumber?(this.selectReports[e].numberPlaceHolder.innerHTML="",this.selectReports[e].labelOne.style.display="none",this.selectReports[e].labelMany.style.display="none"):(this.selectReports[e].numberPlaceHolder.innerHTML=this.table.content.rawResponse.meta.selectedNumber.toString(),this.table.content.rawResponse.meta.selectedNumber>1?(this.selectReports[e].labelOne.style.display="none",this.selectReports[e].labelMany.style.display="inline"):(this.selectReports[e].labelOne.style.display="inline",this.selectReports[e].labelMany.style.display="none"));this.table.isWorkspaceTable&&EBX_LayoutManager.bodyLayout.resize()},e.prototype.focusLineIndex=function(e){this.currentRowFocusedIndex===e?this.currentRowFocusedIndex=null:this.currentRowFocusedIndex=e,this.updateFocusedLine()},e.prototype.selectRowFromCheckBox=function(e){if(!1!==this.table.isRecordSelectionEnabled){var t=e.parentNode.parentNode.parentNode.rowIndex;this.lastRowSelectedIndex=t,this.sendRequestSelectRowInterval(t,t,e.checked,e)}},e.prototype.selectRowsFromLastToCheckBox=function(e){var t,i;!1!==this.table.isRecordSelectionEnabled&&(t=this.lastRowSelectedIndex,i=e.parentNode.parentNode.parentNode.rowIndex,this.lastRowSelectedIndex=i,t<i?this.sendRequestSelectRowInterval(t,i,e.checked,e):this.sendRequestSelectRowInterval(i,t,e.checked,e))},e.prototype.selectCurrentPage=function(){!1!==this.table.isRecordSelectionEnabled&&(this.lastRowSelectedIndex=null,this.sendRequestSelectRowInterval(0,this.table.content.rawResponse.results.length-1,!0,this.table.element.selectAndSortMenuButton))},e.prototype.unselectCurrentPage=function(){!1!==this.table.isRecordSelectionEnabled&&(this.lastRowSelectedIndex=null,this.sendRequestSelectRowInterval(0,this.table.content.rawResponse.results.length-1,!1,this.table.element.selectAndSortMenuButton))},e.prototype.selectAllRecords=function(){!1!==this.table.isRecordSelectionEnabled&&this.sendRequestSelectAllRows(!0)},e.prototype.unselectAllRecords=function(){!1!==this.table.isRecordSelectionEnabled&&this.sendRequestSelectAllRows(!1)},e.prototype.sendRequestSelectRowInterval=function(t,i,s,r){var o;!1!==this.table.isRecordSelectionEnabled&&((o=[]).push(n.EBX_AjaxTable.constants.tableNameParameter,this.table.tableName),o.push(n.EBX_AjaxTable.constants.currentPageIdAjaxParameter,this.table.content.rawResponse.meta.currentTablePageId),o.push(n.EBX_AjaxTable.constants.selectRowFromIndexAjaxParameter,t),o.push(n.EBX_AjaxTable.constants.selectRowToIndexAjaxParameter,i),s?this.selectRows.sendRequest(o.join(""),this.getCallbackRowsSelectionObject(r)):this.unselectRows.sendRequest(o.join(""),this.getCallbackRowsSelectionObject(r)),null!==r&&r!==this.table.element.selectAndSortMenuButton&&(r.parentNode.style.backgroundPosition="center "+this.table.element.update.getRowProperty(r.parentNode.parentNode.parentNode.rowIndex).offsetTop+"px"),null!==r&&EBX_Utils.addCSSClass(r.parentNode.parentNode,e.CLASS_WAITING_ROW_FOR_SELECTION))},e.prototype.sendRequestSelectAllRows=function(e){if(!1!==this.table.isRecordSelectionEnabled){var t;(t=[]).push(n.EBX_AjaxTable.constants.tableNameParameter,this.table.tableName),t.push(n.EBX_AjaxTable.constants.currentPageIdAjaxParameter,this.table.content.rawResponse.meta.currentTablePageId),t.push(n.EBX_AjaxTable.constants.selectRowFromIndexAjaxParameter,0),t.push(n.EBX_AjaxTable.constants.selectRowToIndexAjaxParameter,this.table.content.rawResponse.results.length-1),t.push(n.EBX_AjaxTable.constants.selectAllRowsAjaxParameter,!0);var i=this.table.element.selectAndSortMenuButton;e?this.selectRows.sendRequest(t.join(""),this.getCallbackRowsSelectionObject(i)):this.unselectRows.sendRequest(t.join(""),this.getCallbackRowsSelectionObject(i)),this.table.isTableReady=!1,this.table.setState(n.EBX_Table_State.LOADING)}},e.prototype.reset=function(){this.updateFocusedLine(),this.updateSelectReport(),this.updateSelectAndSortMenuButton(),this.currentRowFocusedIndex=null,this.lastRowSelectedIndex=null},e.prototype.init=function(){this.table.isRecordSelectionEnabled&&(this.selectRows=new s.YUI_XHRDataSourceJSON(n.EBX_AjaxTable.constants.rowsSelectionRequest,e.selectRowResponseSchema),this.unselectRows=new s.YUI_XHRDataSourceJSON(n.EBX_AjaxTable.constants.rowsDeselectionRequest,e.selectRowResponseSchema))},e.prototype.selectRowCheckboxes=function(e,t){t.shiftKey&&null!==this.lastRowSelectedIndex?this.selectRowsFromLastToCheckBox(e):this.selectRowFromCheckBox(e)},e.prototype.getCallbackRowsSelectionObject=function(e){return{success:this.callbackRowsSelectionSuccess,failure:this.callbackRowsSelectionFailure,scope:this,argument:{selectionElementClicked:e}}},e.prototype.callbackRowsSelectionSuccess=function(e,t,i){var s,o,l,a,d,u,c;for(s=this.table.content.getCurrentResponseResultsByKey(),l=0,a=(o=t.results).length;l<a;l++)void 0!==(u=s[(d=o[l])[r.AjaxResponseRecordConstants.keyIndexInResultLine]])&&(u[r.AjaxResponseRecordConstants.compiledStateIndexInResultLine]=d[r.AjaxResponseRecordConstants.compiledStateIndexInResultLine]);n.EBX_Table_State.NORMAL!==this.table.getState()&&(this.table.isTableReady=!0,this.table.setState(n.EBX_Table_State.NORMAL)),this.table.content.rawResponse.meta.selectedNumber=t.meta.selectedNumber,c=null,null!==i.selectionElementClicked&&(c=i.selectionElementClicked.parentNode.parentNode),this.table.callFunctionWhenTableIsReady(this.endRowsSelectionSuccess,c,this)},e.prototype.endRowsSelectionSuccess=function(t){this.updateSelectReport(),this.updateLinesSelectionCheckbox(),this.updateSelectAndSortMenuButton(),this.table.triggerSelectionChange(),null!==t&&EBX_Utils.removeCSSClass(t,e.CLASS_WAITING_ROW_FOR_SELECTION)},e.prototype.callbackRowsSelectionFailure=function(e,t,i){if(401===t.status)return this.table.isTableReady=!1,this.table.setState(n.EBX_Table_State.LOGOUT),void EBX_Loader.gotoTimeoutPage();409===t.status&&EBX_UserMessageManager.addMessage(n.EBX_AjaxTable.messages.table_warning_select_pageChanged,EBX_UserMessageManager.WARNING),n.EBX_Table_State.NORMAL!==this.table.getState()&&(this.table.isTableReady=!0,this.table.setState(n.EBX_Table_State.NORMAL));var s=null;null!==i.selectionElementClicked&&(s=i.selectionElementClicked.parentNode),this.table.callFunctionWhenTableIsReady(this.endRowsSelectionFailure,s,this)},e.prototype.endRowsSelectionFailure=function(t){this.updateLinesSelectionCheckbox(),this.updateSelectAndSortMenuButton(),null!==t&&EBX_Utils.removeCSSClass(t,e.CLASS_WAITING_ROW_FOR_SELECTION)},e.prototype.updateLinesSelectionCheckbox=function(){var e,t,i,n,s;if(!1!==this.table.isRecordSelectionEnabled)for(e=this.table.element.update.fixed.table.rows,t=this.table.element.update.main.table.rows,i=0,n=this.table.content.rawResponse.results.length;i<n;i++)s=this.table.content.rawResponse.results[i][r.AjaxResponseRecordConstants.compiledStateIndexInResultLine].charAt(r.AjaxResponseRecordConstants.compiledRowStateIndexSelected)===r.AjaxResponseRecordConstants.compiledRowStateSelected,this.getSelectCheckbox(e[i]).checked=s,s?(EBX_Utils.addCSSClass(e[i],"ebx_tv_SelectedRow"),EBX_Utils.addCSSClass(t[i],"ebx_tv_SelectedRow")):(EBX_Utils.removeCSSClass(e[i],"ebx_tv_SelectedRow"),EBX_Utils.removeCSSClass(t[i],"ebx_tv_SelectedRow"))},e.prototype.getSelectCheckbox=function(e){return void 0===this.table.element.update.getRowProperty(e.rowIndex).selectCheckbox&&(this.table.element.update.getRowProperty(e.rowIndex).selectCheckbox=EBX_Utils.getFirstRecursiveChildMatchingTagName(e.firstChild,"input")),this.table.element.update.getRowProperty(e.rowIndex).selectCheckbox},e.prototype.updateSelectAndSortMenuButton=function(){if(null!==this.table.element.selectAndSortMenuButton){var e=void 0===this.table.content.rawResponse.results||0===this.table.content.rawResponse.results.length;EBX_ButtonUtils.setButtonDisabled(this.table.element.selectAndSortMenuButton,e)}},e.CLASS_WAITING_ROW_FOR_SELECTION="ebx_WaitingForSelection",e.selectRowResponseSchema={resultsList:"rowsToUpdate",metaFields:{selectedNumber:"selectedNumber"}},e}();t.Table_Selection=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){}return e.saveFilter=function(e){EBX_Utils.openInternalPopupWithSize(e,580,330,{isResizable:!0,isResizeRestrainedToMinSize:!0})},e.handleLabelChanges=function(){for(var t=document.getElementsByClassName("ebx_CollapsibleBlockContainer"),i=0;i<t.length;i++){var n=t[i].getElementsByTagName("input")[1];n.onkeyup=e.onLabelChanges,n.onchange=e.onLabelChanges}},e.onLabelChanges=function(t){var i=e.getCurrentLabel();document.getElementsByClassName("ebx_IconInfo")[0].children[0].textContent=e.isLabelAlreadyPersisted(i)?EBX_AdvancedSearch.savePopIn.information.update:EBX_AdvancedSearch.savePopIn.information.create},e.getCurrentLabel=function(){for(var e=[],t=document.getElementsByClassName("ebx_CollapsibleBlock"),i=0;i<t.length;i++){var n={locale:t[i].getElementsByTagName("span")[0].textContent,name:t[i].getElementsByTagName("input")[0].value};e.push(n)}return{labels:e}},e.isLabelAlreadyPersisted=function(e){if(0===EBX_AdvancedSearchSaveLabels.persistedFilters.length)return!1;for(var t=JSON.stringify(e),i=0;i<EBX_AdvancedSearchSaveLabels.persistedFilters.length;i++)if(t===JSON.stringify(EBX_AdvancedSearchSaveLabels.persistedFilters[i]))return!0;return!1},e}();t.AdvancedSearchSave=n},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(14),s=function(){function e(){}return e.render=function(e){requirejs(["react","react-dom","ebx/control/hierarchy/HierarchyTree"],(function(t,i,s){var r=document.getElementById(n.HierarchyWidgetConstants.CONTAINER_ID),o=s.HierarchyTree;i.render(t.createElement(o,{viewUrl:e}),r)}))},e}();t.EBX_HierarchyWidgetFacade=s},function(e,t,i){"use strict";var n=this&&this.__assign||Object.assign||function(e){for(var t,i=1,n=arguments.length;i<n;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e};Object.defineProperty(t,"__esModule",{value:!0});var s=i(1),r=i(14),o=[];function l(e){return function(){for(var t=[],i=0;i<arguments.length;i++)t[i]=arguments[i];null!=o?o.push((function(){e.apply(void 0,t)})):e.apply(void 0,t)}}var a,d=function(){function e(){}return e.isFilterApplied=void 0,e.submittedValue=void 0,e}();t.FindInHierarchyComponents=d,function(e){var t;e.init=function(){if(null!=o){for(;o.length>0;){var t=o;o=[],EBX_Utils.forEach(t,(function(e){e()}))}o=null,a.updateState((function(){return{value:e.submittedValue,submittedValue:e.submittedValue,isOpen:e.isFilterApplied,isInputTouched:!1}}))}},e.registerFindInHierarchyCriteriaTextInput=l((function(e){var i=document.getElementById(e),s=function(){a.updateState((function(e){return n({},e,{value:i.value})}))},r=EBX_Utils.debounce(s,void 0);i.addEventListener("keyup",r),i.addEventListener("change",s),i.addEventListener("click",(function(){a.updateState((function(e){return n({},e,{isInputTouched:!0})}))})),a.registerListeners((function(e,n){if(""===n.value&&(i.value=n.value),n.isOpen!==e.isOpen)if(n.isOpen){var s=setTimeout((function(){i.focus(),t=null}),"500");t=function(){clearTimeout(s),t=null}}else null!=t&&t()}))})),e.registerFindInHierarchyClearButton=l((function(e){var t=document.getElementById(e);t.addEventListener("click",(function(){a.updateState((function(e){return n({},e,{value:""})}))})),a.registerListeners((function(e,i){i.value&&""!==i.value?EBX_Utils.removeCSSClass(t,"ebx_Hidden"):EBX_Utils.addCSSClass(t,"ebx_Hidden")}))})),e.registerToggleFindInHierarchyBarButton=l((function(e){document.getElementById(e).addEventListener("click",(function(){a.updateState((function(e){return n({},e,{isOpen:!e.isOpen})}))})),a.registerListeners((function(e,t){var i=document.getElementById(r.HierarchyWidgetConstants.CONTAINER_ID),n=document.getElementById("ebx_WorkspaceHierarchyFindBar");t.isOpen?(EBX_Utils.addCSSClass(i,"ebx_WorkspaceHierarchyFindOpened"),EBX_Utils.addCSSClass(n,"ebx_WorkspaceHierarchyFindOpened")):(EBX_Utils.removeCSSClass(i,"ebx_WorkspaceHierarchyFindOpened"),EBX_Utils.removeCSSClass(n,"ebx_WorkspaceHierarchyFindOpened"))}))})),e.registerFindInHierarchyFindButton=l((function(e){var t=document.getElementById(e);a.registerListeners((function(e,i){var n=!i.isInputTouched&&i.value===i.submittedValue;t.disabled=n,n?EBX_Utils.addCSSClass(t,EBX_ButtonUtils.disabledButtonCSSClass):EBX_Utils.removeCSSClass(t,EBX_ButtonUtils.disabledButtonCSSClass)}))})),e.registerFindInHierarchyAdditionalActionsDiv=l((function(e){var t=document.getElementById(e);a.registerListeners((function(e,i){!!i.submittedValue?EBX_Utils.removeCSSClass(t,"ebx_Hidden"):EBX_Utils.addCSSClass(t,"ebx_Hidden")})),s.AdvancedSearch.registerStateListener((function(e,t){void 0!==t&&e.appliedFilter!==t.appliedFilter&&a.updateState((function(e){return n({},e,{isInputTouched:!!e.value,submittedValue:void 0})}))}))}))}(d=t.FindInHierarchyComponents||(t.FindInHierarchyComponents={})),t.FindInHierarchyComponents=d,function(e){var t={isOpen:!1,isInputTouched:!1},i=[];function n(e,t){for(var n=0;n<i.length;n++){(0,i[n])(e,t)}}e.registerListeners=function(e){i.push(e)},e.notifyListeners=n,e.updateState=function(e){var i=t,s=e(t);n(i,s),t=s}}(a=t.FindInHierarchyHelper||(t.FindInHierarchyHelper={}))},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.componentIndex=e,this.currentFilter=null}return e.prototype.loadRoots=function(e,t,i){this.currentFilter=e,this.load(e,null,t,i)},e.prototype.buildRequest=function(e,t){var i=[];return i.push(EBX_MES_Constants.request_loadDatas),i.push("&",EBX_MES_Constants.param_ajaxComponentIndex,"=",encodeURIComponent(""+this.componentIndex)),t&&(i.push("&",EBX_MES_Constants.param_nodeId,"=",encodeURIComponent(t.id)),t.extras&&i.push("&",EBX_MES_Constants.param_extras,"=",encodeURIComponent(JSON.stringify(t.extras))),t.isSeeMore&&i.push("&","mes_seeMore","=",!0)),e&&i.push("&",EBX_MES_Constants.param_search,"=",encodeURIComponent(e)),i.join("")},e.prototype.load=function(e,t,i,n){var s=this,o=this.buildRequest(e,t);r().sendRequest(o,{success:function(t,n){if(e===s.currentFilter){var r=n.results;r.forEach((function(t){t.isLeaf=!!t.isLeaf,t.isEnabled=!!t.isEnabled,t.expanded=!!t.expanded,t.isLeaf&&!t.isSeeMore||(t.loadedChildren?t.loadChildren=function(e){e(t.loadedChildren)}:t.loadChildren=function(i,n){s.load(e,t,i,n)})})),i(r,n.meta)}},failure:function(e,t){401===t.status?EBX_Loader.gotoTimeoutPage():n(decodeURIComponent(t.statusText))}})},e}();t.MES_DataLoader=n;var s=null,r=function(){return null==s&&(s=new YAHOO.util.XHRDataSource(EBX_MES_Constants.request_loadDatas,{responseType:YAHOO.util.DataSource.TYPE_JSON,responseSchema:{resultsList:"items",fields:[{key:"id"},{key:"label"},{key:"labelForDisplay"},{key:"isLeaf"},{key:"icon"},{key:"isEnabled"},{key:"urlInfos"},{key:"extras"},{key:"isSeeMore"},{key:"loadedChildren"},{key:"expanded"}],metaFields:{width:"width",height:"height"}},connMethodPost:!0})),s}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(11),s=i(17),r=function(){function e(e,t,i,n,s,r,o,l){this.widgetId=e,this.componentIndex=t,this.linkedInput=i,this.panelBody=n,this.widgetTree=s,this.panel=r,this.parentContainer=o,this.treeContainer=l,this.forcedSize=new YAHOO.util.Region(0,0,0,0),this.panelMinHeight=36,this.initResize()}return e.prototype.initResize=function(){var e=this;this.panelResize=new YAHOO.util.Resize(n.ModelElementSelector_CSS.ID_BODY+this.widgetId,{handles:["br"],proxy:!0,ghost:!0,setSize:!1}),this.panelResize.set("minHeight",this.panelMinHeight),this.panelResize.set("minWidth",this.linkedInput.offsetWidth),EBX_Utils.addCSSClass(this.panelResize.getProxyEl(),"ebx_BorderBlockColored"),this.panelResize.subscribe("endResize",(function(t){e.forcedSize.height=Math.max(t.height,e.panelMinHeight),e.forcedSize.width=Math.max(t.width,e.linkedInput.offsetWidth),e.refreshPanelDimensions(),e.savePanelDimensions()}),null,this),this.panelResize.subscribe("startResize",(function(){var t=e.panelResize.getProxyEl();t.style.top="0",t.style.left="0";var i=YAHOO.util.Dom,n=i.getClientRegion(),s=i.getRegion(e.panel.element);e.panelResize.set("maxWidth",n.right-s.left-YAHOO.widget.Overlay.VIEWPORT_OFFSET);var r=n.bottom-s.top-e.getGutterBottom();r=Math.max(r,Math.min(e.panelMinHeight,e.widgetTree.getEl().offsetHeight)),e.panelResize.set("maxHeight",r)})),this.panelResize.subscribe("proxyResize",(function(t){var i=e.panelResize.getProxyEl(),n=2;0!==YAHOO.env.ua.gecko&&n--,i.style.width=t.width-n+"px",i.style.height=t.height+"px"}),null,!1)},e.prototype.savePanelDimensions=function(){if(this.forcedSize.height&&this.forcedSize.width){var e=[];e.push(EBX_MES_Constants.request_saveDimension),e.push("&",EBX_MES_Constants.param_ajaxComponentIndex,"=",this.componentIndex),e.push("&",EBX_ISS.requestParam_popupWidth,"=",this.forcedSize.width),e.push("&",EBX_ISS.requestParam_popupHeight,"=",this.forcedSize.height),(new YAHOO.util.XHRDataSource).sendRequest(e.join(""),null)}},e.prototype.refreshPanelDimensions=function(){var e=YAHOO.util.Dom,t=e.getClientRegion(),i=e.getRegion(this.linkedInput),n=t.bottom-i.bottom-this.getGutterBottom(),r=this.widgetTree.getEl().offsetHeight+EBX_Utils.getHScrollHeight();this.forcedSize.height&&(r=Math.min(r,this.forcedSize.height));var o=Math.min(r,n);if(o=Math.max(o,this.panelMinHeight),this.panel.element.style.height=r<this.panelMinHeight?this.panelMinHeight+"px":"inherit",this.treeContainer.style.maxHeight=o+"px",this.panel.element.style.maxHeight=o+"px",this.forcedSize.width){var l=t.right-i.left-YAHOO.widget.Overlay.VIEWPORT_OFFSET;l=Math.min(l,this.forcedSize.width),l=Math.max(l,this.linkedInput.offsetWidth),this.panel.element.style.width=l+"px"}this.panel.align("tl","bl",[-1,-1]);var a=s.EBX_ScrollMaker.getScrollMaker(this.parentContainer);a.isElemOverflowing()||(a.makeElementDisplayed(this.panel.element),this.panel.align("tl","bl",[-1,-1]))},e.prototype.getGutterBottom=function(){return s.EBX_ScrollMaker.getScrollMaker(this.parentContainer).gutterBottom},e.prototype.updateForcedSize=function(e){this.forcedSize.width=e.width,this.forcedSize.height=e.height},e.prototype.setPanelMinHeight=function(e){this.panelMinHeight=e,this.panelResize.set("minHeight",this.panelMinHeight)},e}();t.MES_Panel_Resize=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isAnInterestingKeyEventBasic=function(e){if(e.metaKey)return!1;if(e.ctrlKey){if(e.keyCode!==EBX_Utils.keyCodes.KEY_V&&!e.altKey)return!1;if(e.keyCode===EBX_Utils.keyCodes.NUMPAD_PLUS||e.keyCode===EBX_Utils.keyCodes.NUMPAD_MINUS)return!1}else if(e.altKey)return!1;switch(e.keyCode){case EBX_Utils.keyCodes.CTRL:case EBX_Utils.keyCodes.ALT:case EBX_Utils.keyCodes.CAPS_LOCK:case EBX_Utils.keyCodes.NUM_LOCK:case EBX_Utils.keyCodes.SCROLL_LOCK:case EBX_Utils.keyCodes.PAUSE:case EBX_Utils.keyCodes.PAGE_DOWN:case EBX_Utils.keyCodes.PAGE_UP:case EBX_Utils.keyCodes.HOME:case EBX_Utils.keyCodes.END:case EBX_Utils.keyCodes.SHIFT:case EBX_Utils.keyCodes.WIN_MENU:case EBX_Utils.keyCodes.WIN_KEY:return!1}return!EBX_Utils.isFunctionKey(e.keyCode)}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(8),s=function(){function e(e){this.value=null,this.widgetId=EBX_Utils.firstElementChild(e).id,this.value=this.getWidget().lastValidValue,this.paramLabel=this.getLabel().name+"_label"}return e.prototype.getValue=function(){return this.value},e.prototype.setValue=function(e){return this.setInnerValue(e,!e||!e.labelLoaded)},e.prototype.setInnerValue=function(e,t){return null===e||e.id===ebx_nullValueForFacetEnum?(this.value=null,this.onValueChange(t)):(this.value=e,this.onValueChange(t)),!0},e.prototype.getWidget=function(){return this.widget||(this.widget=n.EBX_ModelElementSelector_Registry.GetWidget(this.widgetId)),this.widget},e.prototype.getLabel=function(){return this.labelElement||(this.labelElement=EBX_Utils.firstElementChild(this.getWidget().input.parentElement)),this.labelElement},e.prototype.serialize=function(){var e=this.getLabel(),t=encodeURIComponent(e.name)+"="+encodeURIComponent(e.value);return t+="&"+encodeURIComponent(this.paramLabel)+"="+encodeURIComponent(this.getWidget().input.value)},e.prototype.onValueChange=function(e){this.getLabel().value=this.value?this.value.id:ebx_nullValueForFacetEnum,this.getWidget().onValueChange(this.value,e),e&&EBX_FormPresenter.stackElementForValidation(this.getWidget().input)},e.prototype.notifyInputPositionChanged=function(){this.getWidget().notifyInputPositionChanged()},e.prototype.setPastedValue=function(e){var t={id:e.getValue(),label:e.getValue()};this.setInnerValue(t,!1)},e.prototype.getCopyValue=function(){return this.getValue().id},e}();t.EBX_MES_FormNodeEditor=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n="ebx_password_edit",s=function(){function e(){}return e.InEdition=n+"_expanded",e.PasswordChange=n+"_changed",e.NewPasswordContainer=n+"_fields",e.PasswordInput=n+"_fields_password",e.PasswordDisabled=n+"_fields_password_disabled",e.ConfirmZone=n+"_confirm_zone",e.ConfirmZoneWidgets=n+"_confirm_zone_widgets",e.PasswordConfirmInput=n+"_confirm_zone_input",e.PasswordConfirmLabel=n+"_confirm_zone_label",e.ConfirmZoneShadow=n+"_confirm_zone_shadow",e.PasswordButtons=n+"_buttons",e.ToggleButton=n+"_buttons_change",e.ShowButton=n+"_buttons_show_passwords",e.ShowButtonInEdition=n+"_buttons_show_passwords_in_edition",e}(),r=function(){function e(e,t,i){this.fieldName=e,this.prefixedPath=t,this.alwaysInEdition=i,this.newPasswordBackup="",this.newConfirmPasswordBackup="",this.wasShowingPassword=!1,this.changeConfirmZoneOverflowCallback=null,this._container=document.getElementById(e),this.inEdition=i,this.showingPassword=!1,this.initialRendering(),this.refreshEditMode()}return e.prototype.setInEdition=function(e){this.inEdition=e,this.refreshEditMode()},e.prototype.checkPasswordEqualsItsConfirmation=function(){var e=this;null!=document.getElementById(this.fieldName+"_InputFieldWrapper")&&(window["checkPasswordsEqualsBeforeSubmit_"+this.fieldName]=function(){var t=e.passwordEqualsItsConfirmation();return t||ebx_form_setNodeMessage(e.prefixedPath,{errors:[EBX_LocalizedMessage.password_match]}),t},EBX_Form.addCustomCheckBeforeSubmit(window["checkPasswordsEqualsBeforeSubmit_"+this.fieldName]))},e.prototype.initialRendering=function(){var e=this,t=this.alwaysInEdition?"":'\n            <button class="'+EBX_UICSSCatalog.BUTTON_FLAT_BUTTON+" "+EBX_UICSSCatalog.BUTTON_ICON_BUTTON+" "+s.ToggleButton+'" \n                type="button">\n                  <span class="'+EBX_UICSSCatalog.BUTTON_ICON+'">&nbsp;</span>\n            </button>\n        ',i=[EBX_UICSSCatalog.BUTTON_FLAT_BUTTON,EBX_UICSSCatalog.BUTTON_ICON_BUTTON,s.ShowButton];this.alwaysInEdition||i.push(s.ShowButtonInEdition);var n='\n            <button class="'+i.join(" ")+'" title="'+EBX_LocalizedMessage.password_show+'" type="button" tabindex="-1">\n                <i class="fa fa-eye"></i>\n            </button>\n        ';this._container.innerHTML='\n          \x3c!-- Buttons --\x3e\n          <div class="'+s.PasswordButtons+'">\n            '+t+"\n            "+n+'\n          </div>\n\n          <div class="'+s.NewPasswordContainer+'">\n              \x3c!-- New password zone --\x3e\n              <input type="password" class="'+s.PasswordInput+'" name="'+this.fieldName+'" disabled autocomplete="new-password"/>\n          \n              \x3c!-- Confirm new password zone   --\x3e\n              <div class="'+s.ConfirmZone+'">\n                <div class="'+s.ConfirmZoneWidgets+'">\n                  <span class="ebx_InputTip '+s.PasswordConfirmLabel+'">'+EBX_LocalizedMessage.password_ask_confirm+'</span>\n                  <input type="password" name="'+this.fieldName+'_passwordConfirm" class="ebx_IgnoreFormCheck  '+s.PasswordConfirmInput+'" autocomplete="new-password"/>\n                </div>\n                <div class="'+s.ConfirmZoneShadow+'"></div>\n              </div>\n          </div>\n          \n           <input type="hidden" name="'+this.fieldName+'_passwordHasBeenEdited" class="'+s.PasswordChange+' ebx_IgnoreFormCheck" autocomplete="new-password"/>\n        ',this.alwaysInEdition||(this._editPasswordButton=this._container.querySelector("."+s.ToggleButton),this._editPasswordButton.addEventListener("click",(function(){var t=!e.inEdition;e.setInEdition(t),t?e._inputPassword.focus():(ebx_form_setNodeMessage(e.prefixedPath,{}),e.setShowPasswords(!1))}))),this._inputPassword=this._container.querySelector("[name='"+this.fieldName+"']"),this._inputPassword.addEventListener("blur",(function(){e.checkConfirmPasswordValueOnBlurEvent()})),this._inputPasswordConfirm=this._container.querySelector("[name='"+this.fieldName+"_passwordConfirm']"),this._inputPasswordConfirm.addEventListener("blur",(function(){e.checkConfirmPasswordValueOnBlurEvent()})),this._inputPasswordChange=this._container.querySelector("[name='"+this.fieldName+"_passwordHasBeenEdited']"),this._confirmZone=this._container.querySelector("."+s.ConfirmZone),this._showPasswords=this._container.querySelector("."+s.ShowButton),this._showPasswords.addEventListener("click",(function(){e.inEdition&&e.setShowPasswords(!e.showingPassword)})),this._showPasswordsIcon=this._showPasswords.querySelector("i"),this._buttons=this._container.querySelector("."+s.PasswordButtons)},e.prototype.refreshEditMode=function(){this.inEdition||(this.newPasswordBackup=this._inputPassword.value,this.newConfirmPasswordBackup=this._inputPasswordConfirm.value,this.wasShowingPassword=this.showingPassword),this._inputPassword.disabled=!this.inEdition,this._inputPasswordChange.value=this.inEdition?"changed":null,this.inEdition?(this.alwaysInEdition||(this._editPasswordButton.classList.remove(EBX_UIButtonIcon.EDIT),this._editPasswordButton.classList.add(EBX_UIButtonIcon.REVERT),this._editPasswordButton.title=EBX_LocalizedMessage.password_revert),this._container.classList.add(s.InEdition),this._inputPassword.classList.remove(s.PasswordDisabled),this._inputPassword.disabled=!1,this._inputPassword.value=this.newPasswordBackup,this._inputPasswordConfirm.value=this.newConfirmPasswordBackup,this.setShowPasswords(this.wasShowingPassword),this.fireCallbackToChangeConfirmZoneOverflow(!0)):(this.alwaysInEdition||(this._editPasswordButton.classList.add(EBX_UIButtonIcon.EDIT),this._editPasswordButton.classList.remove(EBX_UIButtonIcon.REVERT),this._editPasswordButton.title=EBX_LocalizedMessage.password_set_new),this._container.classList.remove(s.InEdition),this._inputPassword.classList.add(s.PasswordDisabled),this._inputPassword.disabled=!0,this._inputPassword.value="********",this._inputPasswordConfirm.value="",this.fireCallbackToChangeConfirmZoneOverflow(!1))},e.prototype.setShowPasswords=function(e){this.showingPassword=e,this.refreshShowPasswords()},e.prototype.refreshShowPasswords=function(){this._inputPassword.type=this.showingPassword?"text":"password",this._inputPasswordConfirm.type=this.showingPassword?"text":"password",this.showingPassword?(this._showPasswordsIcon.classList.remove("fa-eye"),this._showPasswordsIcon.classList.add("fa-eye-slash"),this._showPasswords.classList.add(EBX_UICSSCatalog.BUTTON_BUTTON_PUSHED)):(this._showPasswordsIcon.classList.add("fa-eye"),this._showPasswordsIcon.classList.remove("fa-eye-slash"),this._showPasswords.classList.remove(EBX_UICSSCatalog.BUTTON_BUTTON_PUSHED))},e.prototype.checkConfirmPasswordValueOnBlurEvent=function(){var e=this;this.checkPasswordTimeout&&window.clearTimeout(this.checkPasswordTimeout),this.checkPasswordTimeout=window.setTimeout((function(){if(e.inEdition){e.checkPasswordTimeout=null;var t=document.activeElement;if(t!==e._inputPassword&&t!==e._inputPasswordConfirm)e.passwordEqualsItsConfirmation()?ebx_form_setNodeMessage(e.prefixedPath,{}):ebx_form_setNodeMessage(e.prefixedPath,{errors:[EBX_LocalizedMessage.password_match]})}}))},e.prototype.passwordEqualsItsConfirmation=function(){return!this.inEdition||this._inputPassword.value===this._inputPasswordConfirm.value},e.prototype.fireCallbackToChangeConfirmZoneOverflow=function(e){var t=this;this.changeConfirmZoneOverflowCallback&&window.clearTimeout(this.changeConfirmZoneOverflowCallback),e?this.changeConfirmZoneOverflowCallback=window.setTimeout((function(){t._confirmZone.style.overflow="visible",t.changeConfirmZoneOverflowCallback=null}),350):this._confirmZone.style.overflow="hidden"},e}();t.EBX_PasswordEdit=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(45),s=i(46),r=function(){function e(e,t,i,r,o){var l=this;if(this.grammarSpec=t,this.widgetPrefixedPath=i,this.isReadOnly=o,this.configureEditor=function(){l.editor.setReadOnly(l.isReadOnly),l.editorElement.classList.contains("_ebx-script-editor_widget-is-focused-init")&&(l.editor.focus(),l.editor.gotoLine(0)),l.editor.setTheme("ace/theme/textmate"),l.editor.setShowPrintMargin(!1),l.editor.setOptions({fontFamily:"ebx_font_mono, monospace"}),l.editor.getSession().on("change",(function(){ebx_form_setValue(l.widgetPrefixedPath,l.editor.getSession().getValue())})),l.editor.session.setMode(l.grammarSpec.modeName),ace.require("ace/ext/language_tools").setCompleters([new s.EditorCompletionHook(l.grammarSpec)]),l.editor.setOptions({enableBasicAutocompletion:!0,enableLiveAutocompletion:!0})},this.editorElement=document.getElementById(e),null==this.editorElement)throw new Error("Missing root div.");this.editor=ace.edit(this.editorElement),this.configureEditor(),n.AutoFillRemainingWorkspace.makeElementAutoFillWorkspaceWidth(this.editorElement.parentElement,(function(){l.editor.resize()})),r?n.AutoFillRemainingWorkspace.makeElementAutoFillWorkspaceHeight(this.editorElement.parentElement):this.makeParentResizable()}return e.prototype.makeParentResizable=function(){var e=this,t=this.editorElement.parentElement,i=this.editorElement.parentElement.offsetHeight,n=new YAHOO.util.Resize(this.editorElement,{handles:["br"],proxy:!0,ghost:!0,setSize:!1,minHeight:i});n.getProxyEl().classList.add("ebx_BorderBlockColored","_ebx-script-editor_resize_proxy"),n.subscribe("endResize",(function(e){t.style.height=Math.max(e.height,i)+"px"}),null,this);var s=2;0!==YAHOO.env.ua.gecko&&s--,n.subscribe("startResize",(function(){var t=n.getProxyEl();t.style.top="0",t.style.left="0";var i=YAHOO.util.Dom.getRegion(e.editorElement).width-s;n.set("maxWidth",i),n.set("minWidth",i)})),n.subscribe("proxyResize",(function(e){n.getProxyEl().style.height=Math.max(e.height-s,i)+"px"}),null,!1)},e.prototype.setAnnotations=function(e){this.editor.getSession().setAnnotations(e)},e}();t.EBX_ScriptEditor=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(18),s=YAHOO.util.Dom,r=function(){function e(){}return e.makeElementAutoFillWorkspaceWidth=function(t,i){var n=e.isElementInTableFormRow(t);EBX_LayoutManager.resizeWorkspaceListeners.push((function(){var e=s.getClientRegion(),r=s.getRegion(t),o=e.right-r.left-EBX_Form.workspaceFormBodyPadding-EBX_LayoutManager.getWorkspaceContentMarginHorizontal();n&&(o-=EBX_Utils.FieldHorizontalPadding),t.style.width=o+"px",i&&i()}))},e.makeElementAutoFillWorkspaceHeight=function(t,i){var r=e.isElementInTableFormRow(t);EBX_LayoutManager.resizeWorkspaceListeners.push((function(){var e=s.getClientRegion(),o=s.getRegion(t),l=e.bottom-o.top-EBX_Form.getWorkspaceFormBottomBarHeight()-EBX_LayoutManager.getWorkspaceContentMarginBottom();r&&(l-=EBX_Utils.FieldVerticalPadding),n.EBX_ModelExtensionFrame.isInExtension()&&(l-=1),t.style.height=l+"px",i&&i()}))},e.isElementInTableFormRow=function(e){return null!=EBX_Utils.getFirstParentMatchingCSSClass(e,EBX_Form.InputClassName)},e}();t.AutoFillRemainingWorkspace=r},function(e,t,i){"use strict";var n=this&&this.__assign||Object.assign||function(e){for(var t,i=1,n=arguments.length;i<n;i++)for(var s in t=arguments[i])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e};Object.defineProperty(t,"__esModule",{value:!0});var s=function(e){var t=this;this.grammarSpec=e,this.requester=new EBX_AJAXResponseHandler,this.getCompletions=function(e,i,s,r,o){var l=ace.require("ace/range").Range.fromPoints({column:0,row:0},s),a=e.session.getTextRange(l),d=a.length-r.length,u=n({},t.grammarSpec.completionAdditionalData,{script:e.getValue(),wordPosition:d,cursorPosition:a.length}),c=new URL(t.grammarSpec.completionUrl);Object.keys(u).forEach((function(e){return c.searchParams.append(e,u[e])})),t.requester.handleAjaxResponseSuccess=function(e){var t=e?JSON.parse(e):[];o(null,t.map((function(e){return{caption:e.word,value:e.word,score:1,meta:""}})))},t.requester.sendRequest(c.href)},this.requester.handleAjaxResponseFailed=function(){throw new Error("Failed to retrieve completion.")}};t.EditorCompletionHook=s},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t,i,n,r){this.isDefaultTemplate=t,this.isOverwritten=i,this.prefixedPath=n,this.checkboxPrefixedPath=r;var o=document.getElementById(e);this.inheritedElement=o.querySelector(".ebx-search-selector-inherited-value"),this.overwrittenElement=o.querySelector(".ebx-search-selector-combo-box"),s.register(this)}return e.prototype.refreshDisplay=function(){this.isOverwritten?(this.overwrittenElement.classList.remove(e.COMBO_BOX_HIDDEN_CLASSNAME),this.inheritedElement.style.display="none"):(this.overwrittenElement.classList.add(e.COMBO_BOX_HIDDEN_CLASSNAME),this.inheritedElement.style.display="inline",this.isDefaultTemplate?this.inheritedElement.innerText=s.getDefaultStrategyForType():this.inheritedElement.innerText=s.getInheritedStrategy())},e.prototype.onClickSwitchToOverwritten=function(){this.isOverwritten=!0,ebx_form_setValue(this.checkboxPrefixedPath,["true"]),this.refreshDisplay(),this.onValueChange()},e.prototype.onClickSwitchToInherited=function(){this.isOverwritten=!1,ebx_form_setValue(this.checkboxPrefixedPath,[]),this.refreshDisplay(),this.onValueChange()},e.prototype.onValueChange=function(){if(this.isDefaultTemplate){var e=void 0,t=ebx_form_getValue(this.prefixedPath);e=this.isOverwritten&&t?t.label:s.getDefaultStrategyForType(),s.onChange(e)}},e.COMBO_BOX_HIDDEN_CLASSNAME="ebx-search-selector-combo-box-hidden",e}();t.SearchTemplatesWidget=n;var s=function(){function e(){}return e.register=function(t){e.widgets.push(t)},e.getInheritedStrategy=function(){return e.inheritedStrategy},e.getDefaultStrategyForType=function(){return e.defaultStrategyForType},e.onChange=function(t){e.inheritedStrategy=t,e.widgets.forEach((function(e){return e.refreshDisplay()}))},e.widgets=[],e}();t.DefaultTemplatesWidgetController=s},function(e,t,i){(function(t){var i;i=function(){"use strict";var e=function(){if("undefined"!=typeof Map)return Map;function e(e,t){var i=-1;return e.some((function(e,n){return e[0]===t&&(i=n,!0)})),i}return function(){function t(){this.__entries__=[]}var i={size:{configurable:!0}};return i.size.get=function(){return this.__entries__.length},t.prototype.get=function(t){var i=e(this.__entries__,t),n=this.__entries__[i];return n&&n[1]},t.prototype.set=function(t,i){var n=e(this.__entries__,t);~n?this.__entries__[n][1]=i:this.__entries__.push([t,i])},t.prototype.delete=function(t){var i=this.__entries__,n=e(i,t);~n&&i.splice(n,1)},t.prototype.has=function(t){return!!~e(this.__entries__,t)},t.prototype.clear=function(){this.__entries__.splice(0)},t.prototype.forEach=function(e,t){void 0===t&&(t=null);for(var i=0,n=this.__entries__;i<n.length;i+=1){var s=n[i];e.call(t,s[1],s[0])}},Object.defineProperties(t.prototype,i),t}()}(),i="undefined"!=typeof window&&"undefined"!=typeof document&&window.document===document,n=void 0!==t&&t.Math===Math?t:"undefined"!=typeof self&&self.Math===Math?self:"undefined"!=typeof window&&window.Math===Math?window:Function("return this")(),s="function"==typeof requestAnimationFrame?requestAnimationFrame.bind(n):function(e){return setTimeout((function(){return e(Date.now())}),1e3/60)},r=["top","right","bottom","left","width","height","size","weight"],o="undefined"!=typeof MutationObserver,l=function(){this.connected_=!1,this.mutationEventsAdded_=!1,this.mutationsObserver_=null,this.observers_=[],this.onTransitionEnd_=this.onTransitionEnd_.bind(this),this.refresh=function(e,t){var i=!1,n=!1,r=0;function o(){i&&(i=!1,e()),n&&a()}function l(){s(o)}function a(){var e=Date.now();if(i){if(e-r<2)return;n=!0}else i=!0,n=!1,setTimeout(l,t);r=e}return a}(this.refresh.bind(this),20)};l.prototype.addObserver=function(e){~this.observers_.indexOf(e)||this.observers_.push(e),this.connected_||this.connect_()},l.prototype.removeObserver=function(e){var t=this.observers_,i=t.indexOf(e);~i&&t.splice(i,1),!t.length&&this.connected_&&this.disconnect_()},l.prototype.refresh=function(){this.updateObservers_()&&this.refresh()},l.prototype.updateObservers_=function(){var e=this.observers_.filter((function(e){return e.gatherActive(),e.hasActive()}));return e.forEach((function(e){return e.broadcastActive()})),e.length>0},l.prototype.connect_=function(){i&&!this.connected_&&(document.addEventListener("transitionend",this.onTransitionEnd_),window.addEventListener("resize",this.refresh),o?(this.mutationsObserver_=new MutationObserver(this.refresh),this.mutationsObserver_.observe(document,{attributes:!0,childList:!0,characterData:!0,subtree:!0})):(document.addEventListener("DOMSubtreeModified",this.refresh),this.mutationEventsAdded_=!0),this.connected_=!0)},l.prototype.disconnect_=function(){i&&this.connected_&&(document.removeEventListener("transitionend",this.onTransitionEnd_),window.removeEventListener("resize",this.refresh),this.mutationsObserver_&&this.mutationsObserver_.disconnect(),this.mutationEventsAdded_&&document.removeEventListener("DOMSubtreeModified",this.refresh),this.mutationsObserver_=null,this.mutationEventsAdded_=!1,this.connected_=!1)},l.prototype.onTransitionEnd_=function(e){var t=e.propertyName;void 0===t&&(t=""),r.some((function(e){return!!~t.indexOf(e)}))&&this.refresh()},l.getInstance=function(){return this.instance_||(this.instance_=new l),this.instance_},l.instance_=null;var a=function(e,t){for(var i=0,n=Object.keys(t);i<n.length;i+=1){var s=n[i];Object.defineProperty(e,s,{value:t[s],enumerable:!1,writable:!1,configurable:!0})}return e},d=function(e){return e&&e.ownerDocument&&e.ownerDocument.defaultView||n},u=f(0,0,0,0);function c(e){return parseFloat(e)||0}function h(e){for(var t=[],i=arguments.length-1;i-- >0;)t[i]=arguments[i+1];return t.reduce((function(t,i){return t+c(e["border-"+i+"-width"])}),0)}function p(e){var t=e.clientWidth,i=e.clientHeight;if(!t&&!i)return u;var n=d(e).getComputedStyle(e),s=function(e){for(var t={},i=0,n=["top","right","bottom","left"];i<n.length;i+=1){var s=n[i],r=e["padding-"+s];t[s]=c(r)}return t}(n),r=s.left+s.right,o=s.top+s.bottom,l=c(n.width),a=c(n.height);if("border-box"===n.boxSizing&&(Math.round(l+r)!==t&&(l-=h(n,"left","right")+r),Math.round(a+o)!==i&&(a-=h(n,"top","bottom")+o)),!function(e){return e===d(e).document.documentElement}(e)){var p=Math.round(l+r)-t,m=Math.round(a+o)-i;1!==Math.abs(p)&&(l-=p),1!==Math.abs(m)&&(a-=m)}return f(s.left,s.top,l,a)}var m="undefined"!=typeof SVGGraphicsElement?function(e){return e instanceof d(e).SVGGraphicsElement}:function(e){return e instanceof d(e).SVGElement&&"function"==typeof e.getBBox};function g(e){return i?m(e)?function(e){var t=e.getBBox();return f(0,0,t.width,t.height)}(e):p(e):u}function f(e,t,i,n){return{x:e,y:t,width:i,height:n}}var b=function(e){this.broadcastWidth=0,this.broadcastHeight=0,this.contentRect_=f(0,0,0,0),this.target=e};b.prototype.isActive=function(){var e=g(this.target);return this.contentRect_=e,e.width!==this.broadcastWidth||e.height!==this.broadcastHeight},b.prototype.broadcastRect=function(){var e=this.contentRect_;return this.broadcastWidth=e.width,this.broadcastHeight=e.height,e};var E=function(e,t){var i,n,s,r,o,l,d,u=(n=(i=t).x,s=i.y,r=i.width,o=i.height,l="undefined"!=typeof DOMRectReadOnly?DOMRectReadOnly:Object,d=Object.create(l.prototype),a(d,{x:n,y:s,width:r,height:o,top:s,right:n+r,bottom:o+s,left:n}),d);a(this,{target:e,contentRect:u})},C=function(t,i,n){if(this.activeObservations_=[],this.observations_=new e,"function"!=typeof t)throw new TypeError("The callback provided as parameter 1 is not a function.");this.callback_=t,this.controller_=i,this.callbackCtx_=n};C.prototype.observe=function(e){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if("undefined"!=typeof Element&&Element instanceof Object){if(!(e instanceof d(e).Element))throw new TypeError('parameter 1 is not of type "Element".');var t=this.observations_;t.has(e)||(t.set(e,new b(e)),this.controller_.addObserver(this),this.controller_.refresh())}},C.prototype.unobserve=function(e){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if("undefined"!=typeof Element&&Element instanceof Object){if(!(e instanceof d(e).Element))throw new TypeError('parameter 1 is not of type "Element".');var t=this.observations_;t.has(e)&&(t.delete(e),t.size||this.controller_.removeObserver(this))}},C.prototype.disconnect=function(){this.clearActive(),this.observations_.clear(),this.controller_.removeObserver(this)},C.prototype.gatherActive=function(){var e=this;this.clearActive(),this.observations_.forEach((function(t){t.isActive()&&e.activeObservations_.push(t)}))},C.prototype.broadcastActive=function(){if(this.hasActive()){var e=this.callbackCtx_,t=this.activeObservations_.map((function(e){return new E(e.target,e.broadcastRect())}));this.callback_.call(e,t,e),this.clearActive()}},C.prototype.clearActive=function(){this.activeObservations_.splice(0)},C.prototype.hasActive=function(){return this.activeObservations_.length>0};var _="undefined"!=typeof WeakMap?new WeakMap:new e,S=function(e){if(!(this instanceof S))throw new TypeError("Cannot call a class as a function.");if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");var t=l.getInstance(),i=new C(e,t,this);_.set(this,i)};return["observe","unobserve","disconnect"].forEach((function(e){S.prototype[e]=function(){return(t=_.get(this))[e].apply(t,arguments);var t}})),void 0!==n.ResizeObserver?n.ResizeObserver:S},e.exports=i()}).call(this,i(49))},function(e,t){var i;i=function(){return this}();try{i=i||new Function("return this")()}catch(e){"object"==typeof window&&(i=window)}e.exports=i}])}));

/********* ebx_ajax_tree.js *********/
/*
 * Copyright TIBCO Software Inc. 2001-2021. All rights reserved.
 */

/** ********* START YUI JSON Ajax Tree ********** */
function EBX_AjaxTreesRegister() {}

EBX_AjaxTreesRegister.ebx_AjaxTrees = [];

/* In case of redirection page, for example, loading trees in AJAX is unwanted, non-performance and bug-risked because of changing page */
EBX_AjaxTreesRegister.cancelTreesLoading = false;

EBX_AjaxTreesRegister.buildTrees = function() {
	EBX_Loader.changeTaskState(EBX_Loader_taskId_building_trees, EBX_Loader.states.processing);

	if (EBX_AjaxTreesRegister.cancelTreesLoading === true) {
		EBX_Loader.changeTaskState(EBX_Loader_taskId_building_trees, EBX_Loader.states.done);
		return;
	}

	for ( var treeName in EBX_AjaxTreesRegister.ebx_AjaxTrees) {
		EBX_AjaxTreesRegister.ebx_AjaxTrees[treeName].init();
	}

	EBX_Loader.changeTaskState(EBX_Loader_taskId_building_trees, EBX_Loader.states.done);
};

EBX_AjaxTreesRegister.createAndRegisterTree = function (treeName, containerDivID, getExpandURLFn, getCollapseURLFn,
		isRealignEnabled, callbacks) {
	if (EBX_AjaxTreesRegister.cancelTreesLoading === true) {
		return;
	}

	if (EBX_AjaxTreesRegister.ebx_AjaxTrees[treeName] !== undefined) {
		return;
	}

	var tree = new EBX_AjaxTree(treeName, containerDivID, getExpandURLFn, getCollapseURLFn, isRealignEnabled, callbacks);
	EBX_AjaxTreesRegister.ebx_AjaxTrees[treeName] = tree;

	// if the task EBX_AjaxTreesRegister.buildTrees is done, init manually the tree
	if (EBX_Loader.getTaskFromId(EBX_Loader_taskId_building_trees).state === EBX_Loader.states.done) {
		tree.init();
	}
};

// map treeName->object{service:{html:"someHTML",js:"jsCommand"},move:{html:"",js:""}, etc.}
var EBX_AJAX_TREE_BUTTONS = [];

function ebx_getAjaxTree(treeName) {
	return EBX_AjaxTreesRegister.ebx_AjaxTrees[treeName];
}

function EBX_AjaxTree(ajaxTreeName, treeContainerDivID, getExpandURLFn, getCollapseURLFn, isRealignEnabled, callbacks) {
	this.treeName = ajaxTreeName;
	this.containerDivID = treeContainerDivID;
	this.getExpandURLFn = getExpandURLFn;
	this.getCollapseURLFn = getCollapseURLFn;
	this.callbacks = callbacks;
	this.previousScrollLeft = null;
	this.nodeActionDivs = null;
	this.nodeActionDivsNeedsRefresh = true;
	this.isRealignEnabled = isRealignEnabled;
	this.isTheFirstExpand = true;

	this.isCleaningChildrenWhileExpanding = false;

	this.tooltipHolder = new EBX_Utils.TooltipHolder();

	this.init = function () {
		YAHOO.util.Event.onContentReady(this.containerDivID, this.onContentReady, this, true);

		var advancedSearchPane = document.getElementById("ebx_WorkspaceAdvancedSearch");

		this.tooltipHolder.addTooltip(
        document.getElementById("ebx_AdvancedSearchQuickSearch"),
				{
					text: EBX_AjaxTree.messages.quickSearchTooltip,
					position: "bottom"
				},
				function (quickSearchInput) {
					if (advancedSearchPane == null || !EBX_Utils.matchCSSClass(advancedSearchPane,
							"ebx_AdvancedSearchPaneOpened")) {
						quickSearchInput.focus();
						return true;
					}

					return false;
				}
		);

		var advancedSearchToggleButton = document.getElementById("ebx_AdvancedSearchExpandCollapse");
		if (advancedSearchToggleButton != null) {
			this.tooltipHolder.addTooltip(advancedSearchToggleButton, {
				text: EBX_AjaxTree.messages.advancedSearchTooltip,
				position: "bottom"
			}, function (advancedSearchPane) {
				return advancedSearchPane != null && !EBX_Utils.matchCSSClass(advancedSearchPane,
						"ebx_AdvancedSearchPaneOpened");
			});
			advancedSearchToggleButton.addEventListener("click", this.tooltipHolder.hideAll);
		}
	};

	/**
	 * Display filter icon on members if a search is applied.
	 *
	 * @param {AdvancedSearch.Next} next
	 * @param {AdvancedSearch.Action} action
	 * @param {AdvancedSearchState} state
	 * @return {AdvancedSearchState}
	 */
	this.updateFilterMatchIcons = function(next,  action, state){
		var nextState = next(action, state);
		var yuiTree = this.getYuiTree();
		if(yuiTree != null) {
			var isFilterApplied = AdvancedSearchModel.isSearchApplied(nextState);
			if(isFilterApplied)
				yuiTree.getEl().classList.add("ebx_MarkMatches");
			else
				yuiTree.getEl().classList.remove("ebx_MarkMatches");
		}
		return nextState;
	}

	this.onContentReady = function() {
		this.build(null);
		AdvancedSearch.registerMiddleware(this.updateFilterMatchIcons.bind(this));

	};

	this.build = function(additionalParameters) {
		this.yuiTree = new YAHOO.widget.TreeView(this.containerDivID);

		// disable the yui click event (expand/collapse by a click on the line) to let links doing their business
		this.yuiTree.subscribe("clickEvent", EBX_Utils.returnFalse);

		this.yuiTree.subscribe("collapse", this.collapseHandler);
		this.yuiTree.subscribe("expand", this.expandHandler);

		this.yuiTree.render();

		if (this.isRealignEnabled) {
			// YAHOO.util.Event.addListener(this.yuiTree._el, "scroll", this.realignNodeActions, null, this);
		}

		var cancelId = ebx_ajaxTreeCreateAndRegisterCancelId(this.yuiTree.getRoot());

		this.expandLine(this.yuiTree.getRoot(), cancelId, true, additionalParameters);
	};

	this.collapseHandler = function(node) {
		var ajaxTree = ebx_getAjaxTree(node.data.ebx_treeName);
		if (ajaxTree === null) {
			return false;// cancel collapse
		}

		if (ajaxTree.isCleaningChildrenWhileExpanding === true) {
			return false;// cancel collapse
		}

		ajaxTree.collapseLine(node);
		return true;// allow collapse
	};

	this.expandHandler = function(node) {
		var ajaxTree = ebx_getAjaxTree(node.data.ebx_treeName);
		if (ajaxTree === null) {
			return false;// cancel expand
		}

		var cancelId = ebx_ajaxTreeCreateAndRegisterCancelId(node);

		ajaxTree.expandLine(node, cancelId, true, null);
		return true;// allow expand
	};

	this.realignNodeActions = function(scrollEvent, forceRealign) {

		var currentScrollLeft = this.yuiTree._el.scrollLeft;

		if (forceRealign !== true && this.previousScrollLeft !== null) {
			if (currentScrollLeft == this.previousScrollLeft) {
				return;
			}
		}

		var nodeActionDivs = this.getNodeActionDivs();
		var i = nodeActionDivs.length;
		while (i--) {
			nodeActionDivs[i].style.left = -currentScrollLeft + "px";
			nodeActionDivs[i].style.position = "absolute";
		}

		this.previousScrollLeft = currentScrollLeft;
	};

	this.getNodeActionDivs = function() {
		if (this.nodeActionDivsNeedsRefresh) {
			this.computeNodeActionDivs();
		}
		return this.nodeActionDivs;
	};

	this.computeNodeActionDivs = function () {
		this.nodeActionDivs = EBX_Utils.getRecursiveChildrenMatchingCSSClass(this.yuiTree._el, "ebx_NodeActions");
		this.nodeActionDivsNeedsRefresh = false;
	};

	this.getYuiTree = function () {
		return this.yuiTree;
	};

	this.expandLine = function (node, cancelId, expanding, additionalParameters) {
		if (!this.getExpandURLFn) {
			return;
		}

		var url = this.getExpandURLFn(node);
		if (url === null) {
			return;
		}

		var ajaxExpander = new EBX_AjaxTreeExpander(node, this, cancelId);
		if (expanding) {
			ajaxExpander.setExpanding();
		}

		if (additionalParameters !== null) {
			ajaxExpander.onExecute(url + additionalParameters);
		} else {
			ajaxExpander.onExecute(url);
		}
		this.nodeActionDivsNeedsRefresh = true;
	};

	this.collapseLine = function(node) {
		if (!this.getCollapseURLFn) {
			return;
		}

		var url = this.getCollapseURLFn(node);
		if (url === null) {
			return;
		}
		var ajaxExpander = new EBX_AjaxTreeExpander(node, this);
		ajaxExpander.setCollapsing();
		ajaxExpander.onExecute(url);

		return true;
	};

	this.setGetExpandURLFn = function(aFunction) {
		this.getExpandURLFn = aFunction;
	};

	this.setGetCollapseURLFn = function(aFunction) {
		this.getCollapseURLFn = aFunction;
	};

	this.getYUINodeById = function(nodeId) {
		for ( var i in this.yuiTree._nodes) {
			if (this.yuiTree._nodes[i].data.id === nodeId) {
				return this.yuiTree._nodes[i];
			}
		}
		return null;
	};

	this.rebuild = function (additionalParameters) {
		this.yuiTree.destroy();
		this.yuiTree = null;
		this.build(additionalParameters);
	};

	this.showCancelHintTooltips = function () {
		this.tooltipHolder.showAll(EBX_Utils.cancel_delayBeforeTooltipsDisappear);
	}.bind(this);
}

EBX_AjaxTree.referredNodeCssClass = "ebx_ReferredNode";
EBX_AjaxTree.messages = {};

function ebx_ajaxTreeExpanderStdFunction(node, fnLoadComplete) {
	if (node === null) {
		return;
	}

	var ajaxTree = ebx_getAjaxTree(node.data.ebx_treeName);
	if (ajaxTree === null) {
		return;
	}

	// expanding tree line is the calling action
	//	ajaxTree.expandLine(node, null);

	fnLoadComplete();
}

function ebx_ajaxTreeRebuild(treeName) {
	var ajaxTree = ebx_getAjaxTree(treeName);
	if (ajaxTree === null) {
		return;
	}

	ajaxTree.rebuild(null);
}

function ebx_ajaxTreeReplaceChildren(treeName, lineId, additionalParameters) {
	var ajaxTree = ebx_getAjaxTree(treeName);
	if (ajaxTree === null) {
		return;
	}

	var yuiTree = ajaxTree.getYuiTree();
	var parentLine = yuiTree.getNodeByProperty('id', lineId);
	if (parentLine === null) {
		ajaxTree.rebuild(additionalParameters);
		return;
	}

	if (parentLine.isLeaf) {
		alert('parent line is leaf');
		return;
	}

	var cancelId = ebx_ajaxTreeCreateAndRegisterCancelId(parentLine);
	ajaxTree.expandLine(parentLine, cancelId, false, additionalParameters);
	parentLine.expanded = true;
}

function ebx_ajaxTreeSetReferred(event, yuiNode) {
	var tableEl = EBX_Utils.getFirstParentMatchingTagName(yuiNode.getContentEl(), "TABLE");
	EBX_Utils.addCSSClass(tableEl, EBX_AjaxTree.referredNodeCssClass);
}

function ebx_ajaxTreeUnsetReferred(event, yuiNode) {
	var tableEl = EBX_Utils.getFirstParentMatchingTagName(yuiNode.getContentEl(), "TABLE");
	EBX_Utils.removeCSSClass(tableEl, EBX_AjaxTree.referredNodeCssClass);
}

function ebx_ajaxTreeBindCycleNodeToItsParent(lineId, targetLineId, treeName) {
	var line = ebx_getAjaxTree(treeName).getYUINodeById(lineId);
	var targetLine = ebx_getAjaxTree(treeName).getYUINodeById(targetLineId);

	var tableEl = EBX_Utils.getFirstParentMatchingTagName(line.getContentEl(), "TABLE");
	YAHOO.util.Event.addListener(tableEl, "mouseover", ebx_ajaxTreeSetReferred, targetLine);
	YAHOO.util.Event.addListener(tableEl, "mouseout", ebx_ajaxTreeUnsetReferred, targetLine);
}

function EBX_AjaxTreeExpander(node, ajaxTree, cancelId) {
	this.expandedNode = node;
	this.isCollapsing = null; // true => collapsing, false => expanding, null => paginating
	this.ajaxTree = ajaxTree;
	this.cancelId = cancelId;
	this.displayButtonTimeout = null;

	/**
	 * Necessary to handle the case where the overlay is destroyed before being created.
	 */
	this.creatingOverlay = false;

	this.onExecute = function (url) {
		if (this.cancelId != null) {
			url += "&cancelableID=" + encodeURIComponent(this.cancelId);
		}

		if (this.isCollapsing !== true) {
			this.createOverlay(this.expandedNode);
		}

		EBX_AjaxTreeExpander.prototype.onExecute.call(this, url);
	};

	this.onGetExceptedResponseCode = function (callerId) {
		if (this.isCollapsing === true) {
			return this.responseCodeOK_RequestResponse;
		}

		return this.responseCodeOK_JSONDoc;
	};

	this.executeCallback = function (callbackName) {
		var callbacks = this.ajaxTree.callbacks;
		if (callbacks == null) {
			return function () {
			};
		}

		var callback = callbacks[callbackName];
		if (callback == null) {
			return function () {
			};
		}

		return callback;
	};

	this.executeCallbackSuccess = this.executeCallback("onSuccess");
	this.executeCallbackError = this.executeCallback("onError");
	this.executeCallbackCancel = this.executeCallback("onCancel");

	this.onExecuteIfOK = function (responseXML, root) {
		this.removeOverlay(this.expandedNode);
		var bodyElement = root.getElementsByTagName('responseBody')[0];
		if (!bodyElement.firstChild) {
			EBX_Logger.log(
					"EBX_AjaxTreeExpander.onExecuteIfOK: Error getting responseBody from response: " + this.getResponseText(),
					EBX_Logger.error);
			this.executeCallbackError();
			return false;
		}


		if (this.isCollapsing === true) {
			// tree.removeChildren recursively collapse and remove all children, causing recursive calls to this callback.
			// Calling a second tree.removeChildren on a node already removed will throw a JS error.
			// This can be avoided by checking if node is still attached to the tree with node.tree != null
			if(this.expandedNode.tree != null) {
				this.ajaxTree.getYuiTree().removeChildren(this.expandedNode);
			}
			this.executeCallbackSuccess();
			return true;
		}

		var jsonString = bodyElement.firstChild.data;

		var jsonObj = YAHOO.lang.JSON.parse(jsonString);
		if (!jsonObj) {
			EBX_Logger.log("EBX_AjaxTreeExpander.onExecuteIfOK: Error getting JSON from response: " + this.getResponseText(),
					EBX_Logger.error);
			this.executeCallbackError();
			return false;
		}

		/* sometimes tree is void, so no more actions are to do */
		if (jsonObj.data === undefined && jsonObj[0] === undefined) {
			this.expandedNode.setNodesProperty('isLeaf', true, true);
			/* run node script (also buttons will disappear) */
			if (this.expandedNode.data.ebx_scriptToExecute !== undefined) {
				window.setTimeout(this.expandedNode.data.ebx_scriptToExecute, 0);
			}
			this.executeCallbackSuccess();
			return true;
		}

		var treeNameAtt = root.attributes.getNamedItem('treeName');
		if (treeNameAtt !== null) {
			var treeName = treeNameAtt.nodeValue;
			if (treeName != this.ajaxTree.treeName) {
				EBX_Logger.log(
						'EBX_AjaxTreeExpander.onExecuteIfOK: Received response is not for current tree [' + this.ajaxTree.treeName
						+ '] but for [' + treeName + '].', EBX_Logger.error);
				this.executeCallbackError();
				return false;
			}
		}

		var callerIdAtt = root.attributes.getNamedItem('callerId');
		if (callerIdAtt !== null) {
			var callerId = callerIdAtt.nodeValue;
			if (callerId != this.expandedNode.data.id) {
				EBX_Logger.log('EBX_AjaxTreeExpander.onExecuteIfOK: Received response is not for current element ['
						+ this.expandedNode.data.id
						+ '] but for caller [' + callerId + '].', EBX_Logger.error);
				this.executeCallbackError();
				return false;
			}
		}

		// remove children
		this.ajaxTree.isCleaningChildrenWhileExpanding = true;// to prevent collapse event during removeChildren()
		var yuiTree = this.ajaxTree.getYuiTree();
		yuiTree.removeChildren(this.expandedNode);
		this.ajaxTree.isCleaningChildrenWhileExpanding = false;// restore initial state

		if (this.expandedNode.isLeaf) {
			this.expandedNode.setNodesProperty('isLeaf', false, true);
			this.expandedNode.setNodesProperty('expanded', true, true);
		}

		var scriptToExecute = "";
		if (this.expandedNode.data.ebx_scriptToExecute !== undefined) {
			scriptToExecute += this.expandedNode.data.ebx_scriptToExecute;
		}

		if (YAHOO.lang.isArray(jsonObj)) {
			for ( var i = 0, len = jsonObj.length; i < len; i++) {
				scriptToExecute += this.ebx_recursivlyAppendNodesToParent(jsonObj[i], this.expandedNode);
			}
		} else {
			scriptToExecute += this.ebx_recursivlyAppendNodesToParent(jsonObj, this.expandedNode);
		}
		this.expandedNode.refresh();

		/* run embedded script */
		window.setTimeout(scriptToExecute, 0);

		this.expandedNode.showChildren();

		if (this.ajaxTree.isTheFirstExpand) {
			this.focusTheSelectedNode();
			this.ajaxTree.isTheFirstExpand = false;
		}

		if (this.ajaxTree.isRealignEnabled) {
			this.ajaxTree.realignNodeActions(null, true);
		}

		this.executeCallbackSuccess();
		return true;
	};

	this.ebx_recursivlyAppendNodesToParent = function(jsonNode, parentNode) {
		var newNode, i;
		var hasChildren = jsonNode.children !== undefined && jsonNode.children.length > 0;
		var data = jsonNode.data;
		var scriptToExecute = "";

		if (data.ebx_scriptToExecute !== undefined) {
			scriptToExecute += data.ebx_scriptToExecute;
		}

		if (data.label !== undefined) {
			// JSON structured tree line
			newNode = this.ebx_buildTreeLine(data, parentNode, hasChildren);
		} else {
			// raw HTML tree line
			newNode = new YAHOO.widget.HTMLNode(data, parentNode, hasChildren);
		}

		newNode.setDynamicLoad(ebx_ajaxTreeExpanderStdFunction, 0);
		if (hasChildren) {
			for (i = 0; i < jsonNode.children.length; i++) {
				scriptToExecute += this.ebx_recursivlyAppendNodesToParent(jsonNode.children[i], newNode);
			}
		}

		return scriptToExecute;
	};

	this.ebx_buildTreeLine = function(jsonNode, parentNode, hasChildren) {

		var lineContent = this.ebx_buildTree_Buttons(jsonNode);

		if (jsonNode.iconCSSClass !== undefined) {
			lineContent.push("<span class=\"", jsonNode.iconCSSClass, "\">", jsonNode.iconText, "</span>");
		}

		lineContent.push("<span class=\"ebx_RawLabel\">");
		{
			if (jsonNode.hriPath !== undefined) {
				lineContent.push("<a href=\"", EBX_Constants.selectHriNodeURL, encodeURIComponent(jsonNode.hriPath), "\">");
			} else if (jsonNode.popupLink !== undefined) {
				lineContent.push("<a href=\"javascript: ebx_openHRINodeInPopup('", jsonNode.popupLink, "');\">");
			}

			lineContent.push(jsonNode.label);

			if (jsonNode.hriPath !== undefined || jsonNode.popupLink !== undefined) {
				lineContent.push("</a>");
			}
		}
		lineContent.push("</span>");

    var className = jsonNode.className;
    if (jsonNode.buttons && jsonNode.buttons.isSelected) {
      className += " " + "ebx_treeLine_selected";
    }

		var newNode = new YAHOO.widget.HTMLNode(lineContent.join(""), parentNode, hasChildren);
		newNode.data.id = jsonNode.id;
		newNode.className = className;
		newNode.data.ebx_treeName = jsonNode.ebx_treeName;
		newNode.isLeaf = jsonNode.isLeaf;
		return newNode;
	};

	// TODO CCH use 1 field for button states
	this.ebx_buildTree_Buttons = function(jsonNode) {
		var lineContent = [];
		var buttons = jsonNode.buttons;
		var displayCheckBox = false;
		var displayMenu = false;
		var displayMove = false;
		var displayMassMove = false;
		var displayAttach = false;
		var displayMoveTo = false;
		var displayCancelMove = false;

		if (buttons !== undefined) {
			displayCheckBox = buttons.checkboxID !== undefined;
			displayMenu = buttons.displayMenuButton;
			displayMove = buttons.displayMoveButton;
			displayMassMove = buttons.displayMassMoveButton;
			displayAttach = buttons.displayAttachButton;
			displayMoveTo = buttons.displayMoveToButton;
			displayCancelMove = buttons.displayCancelMoveButton;
		}
		var displaySpecificButton = jsonNode.specificButton !== undefined;

		var displayButton = displayMassMove || displayCheckBox || displayMenu || displayMove || displayAttach || displayMoveTo || displayCancelMove
				|| displaySpecificButton;

		if (displayButton) {
			lineContent.push("<div class=\"ebx_NodeActions ebx_SmallFormButtons\">");

			if (displayMenu) {
				lineContent.push(EBX_AJAX_TREE_BUTTONS[this.ajaxTree.treeName].service.html.replace(EBX_Constants.nodeIDFlagRegExp, jsonNode.id));
				window.setTimeout(EBX_AJAX_TREE_BUTTONS[this.ajaxTree.treeName].service.js.replace(EBX_Constants.nodeIDFlagRegExp, jsonNode.id), 0);
			}
			if (displayCancelMove) {
				lineContent.push(EBX_AJAX_TREE_BUTTONS[this.ajaxTree.treeName].cancelMove.html.replace(EBX_Constants.nodeIDFlagRegExp, jsonNode.id));
				window.setTimeout(EBX_AJAX_TREE_BUTTONS[this.ajaxTree.treeName].cancelMove.js.replace(EBX_Constants.nodeIDFlagRegExp, jsonNode.id), 0);
			}
			if (displayMove) {
				lineContent.push(EBX_AJAX_TREE_BUTTONS[this.ajaxTree.treeName].move.html.replace(EBX_Constants.nodeIDFlagRegExp, jsonNode.id));
				window.setTimeout(EBX_AJAX_TREE_BUTTONS[this.ajaxTree.treeName].move.js.replace(EBX_Constants.nodeIDFlagRegExp, jsonNode.id), 0);
			}
			if (displayMassMove) {
				lineContent.push(EBX_AJAX_TREE_BUTTONS[this.ajaxTree.treeName].massMove.html.replace(EBX_Constants.nodeIDFlagRegExp, jsonNode.id));
				window.setTimeout(EBX_AJAX_TREE_BUTTONS[this.ajaxTree.treeName].massMove.js.replace(EBX_Constants.nodeIDFlagRegExp, jsonNode.id), 0);
			}
			if (displayMoveTo) {
				lineContent.push(EBX_AJAX_TREE_BUTTONS[this.ajaxTree.treeName].moveTo.html.replace(EBX_Constants.nodeIDFlagRegExp, jsonNode.id));
				window.setTimeout(EBX_AJAX_TREE_BUTTONS[this.ajaxTree.treeName].moveTo.js.replace(EBX_Constants.nodeIDFlagRegExp, jsonNode.id), 0);
			}
			if (displayAttach) {
				lineContent.push(EBX_AJAX_TREE_BUTTONS[this.ajaxTree.treeName].attach.html.replace(EBX_Constants.nodeIDFlagRegExp, jsonNode.id));
				window.setTimeout(EBX_AJAX_TREE_BUTTONS[this.ajaxTree.treeName].attach.js.replace(EBX_Constants.nodeIDFlagRegExp, jsonNode.id), 0);
			}

      if (displayCheckBox) {
        lineContent.push("<label  class=\"ebx_CheckboxButton_Label ebx_emptyLabel\">");
        lineContent.push("<input");
        lineContent.push(" type=\"checkbox\"");
        lineContent.push(" id=\"", buttons.checkboxID, "\"");
        lineContent.push(" class=\"ebx_checkboxCustom\"");
        lineContent.push(" onclick=\"onRowSelection(this, '", jsonNode.id, "')\"");

        if (buttons.isSelected) {
          lineContent.push(" title=\"", EBX_Constants.unselectCheckBox, "\" checked=\"checked\"");
        } else {
          lineContent.push(" title=\"", EBX_Constants.selectCheckBox, "\"");
        }

        lineContent.push("/>");

        lineContent.push("<i class='ebx_checkboxDisplay'>&nbsp;</i>");
        lineContent.push("</label>");
      }

			if (displaySpecificButton) {
				lineContent.push(jsonNode.specificButton);
			}

			lineContent.push("</div>");
		}
		return lineContent;
	};

	this.focusTheSelectedNode = function() {
		var containerEl = document.getElementById(this.ajaxTree.containerDivID);

		var selectedTableEl = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(containerEl, "ebx_Selected");
		if (selectedTableEl === null) {
			return;
		}

		/*
		 var layoutUnitParentEl = EBX_Utils.getFirstParentMatchingCSSClass(containerEl, "yui-layout-unit");

		 if (EBX_Utils.matchCSSClass(layoutUnitParentEl, "yui-layout-scroll") === false) {
		 return;
		 }

		 var layoutBodyParentEl = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(layoutUnitParentEl, "yui-layout-bd");

		 var scrollTop = selectedTableEl.offsetTop - layoutBodyParentEl.offsetHeight / 2 + selectedTableEl.offsetHeight / 2;

		 layoutBodyParentEl.scrollTop = scrollTop;
		 */
		var scrollingPane = EBX_Utils.getFirstParentMatchingCSSClass(containerEl, "ebx_ScrollingPane");
		if (scrollingPane === null) {
			var yuiScrollingPaneParent = EBX_Utils.getFirstParentMatchingCSSClass(containerEl, "yui-layout-scroll");
			if (yuiScrollingPaneParent === null) {
				return;
			}
			scrollingPane = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(yuiScrollingPaneParent, "yui-layout-bd");
			if (scrollingPane === null) {
				return;
			}
		}

		var selectedTableOffsetParent = selectedTableEl.offsetParent;
		var scrollingPaneOffsetParent = scrollingPane.offsetParent;

		var offsetTop = selectedTableEl.offsetTop;
		if (selectedTableOffsetParent === scrollingPaneOffsetParent) {
			offsetTop -= scrollingPane.offsetTop;
		}

		var scrollTop = offsetTop - scrollingPane.offsetHeight / 2 + selectedTableEl.offsetHeight / 2;

		scrollingPane.scrollTop = scrollTop;
	};

	this.onExecuteIfKO = function (responseXML) {
		if (this.isCollapsing !== true) {
			this.removeOverlay(this.expandedNode);
		}

		this.executeCallbackError();
	};

	this.setCollapsing = function () {
		this.isCollapsing = true;
	};

	this.setExpanding = function () {
		this.isCollapsing = false;
	};

	this.createOverlay = function (node) {
		this.creatingOverlay = true;

		requestAnimationFrame(function () {
			if (!this.creatingOverlay) {
				return;
			}

			var div = EBX_Utils.createDiv;
			var button = EBX_Utils.createButton;

			var containerEl = node.getEl();
			var contentEl = node.getContentEl();
			var childrenEl = node.getChildrenEl();

			// 0. Save button states
			{
				function fillSpecificInputs(array, element, tagName) {
					var inputs = element.getElementsByTagName(tagName);
					for (var i = 0; i < inputs.length; i++) {
						array.push({
							input: inputs[i]
						});
					}
				}

				function fillInputs(array, element) {
					if (element == null) {
						return;
					}

					fillSpecificInputs(array, element, "input");
					fillSpecificInputs(array, element, "button");
					fillSpecificInputs(array, element, "a");
				}

				node.allInputs = [];

				// expand/collapse button
				node.allInputs.push({
					input: containerEl.getElementsByTagName("a")[0]
				});

				fillInputs(node.allInputs, contentEl);
				fillInputs(node.allInputs, childrenEl);

				EBX_Utils.forEach(node.allInputs, function (conf) {
					var input = conf.input;
					if (input == null) {
						return;
					}

					conf.tabIndex = input.tabIndex;
					input.tabIndex = -1;
					input.blur();
				});
			}

			// 1. Filler

			var contentHeight = 0;
			if (contentEl != null) {
				var contentRect = contentEl.getBoundingClientRect();
				contentHeight = contentRect.height;
			}

			var containerHeight = 0;
			var childrenRect = containerEl.getBoundingClientRect();
			containerHeight = childrenRect.height;

			var containerMinHeight = (EBX_Utils.isDisplayDensityCompact()) ? 102 : 132;

			if (containerHeight < containerMinHeight) {
				var filler = (
						div({"class": "ebx_TreeWaitPanel_Filler"})
				);

				containerEl.appendChild(filler);
				node.filler = filler;
			}

			// 2. Overlay

			var onCancel = function onCancel() {
				var cancelId = node.cancelId;

				if (cancelId != null) {
					this.removeOverlay(node);
					this.executeCallbackCancel();
					ajaxTree.showCancelHintTooltips();
					EBX_Utils.cancelRequest(cancelId);

					if (this.isCollapsing === false) {
						node.collapse();
					}
				}
			}.bind(this);

			var overlay = (
					div({"class": "ebx_TreeWaitPanel_Container"},
							div({
										"class": "ebx_TreeWaitPanel_Panel ebx_ValueND",
										"style": "margin-top:" + (contentHeight + 5) + "px;"
									},
									div({"class": "ebx_TreeWaitPanel_PanelContent"},
											div({"class": "ebx_TreeWaitPanel_Icon ebx_IconAnimWaitBig"}),
											div({"class": "ebx_TreeWaitPanel_Message"},
													EBX_AjaxTree.messages.loading
											),
											div({"class": "ebx_TreeWaitPanel_ButtonContainer"},
													button({
																"class": "ebx_Button ebx_TreeWaitPanel_Button",
																"type": "button",
																"tabindex": "-1",
																"onclick": onCancel
															},
															EBX_AjaxTree.messages.cancel
													)
											)
									)
							)
					)
			);

			containerEl.style.position = "relative";
			containerEl.appendChild(overlay);

			node.overlay = overlay;

			// 3. Animation

			requestAnimationFrame(function () {
				if (!this.creatingOverlay) {
					return;
				}

				var overlay = node.overlay;

				if (overlay != null) {
					overlay.style.opacity = 1;
				}

				var filler = node.filler;
				if (filler != null) {
					filler.style.height = "" + (contentHeight + containerMinHeight - containerHeight) + "px";
				}
			}.bind(this));

			this.displayButtonTimeout = setTimeout(function () {
				var overlay = node.overlay;
				if (overlay == null) {
					return;
				}

				EBX_Utils.addCSSClass(overlay, "ebx_TreeWaitPanel_Long");
			}, EBX_Utils.cancel_delayBeforeButtonAppears);

		}.bind(this));
	}.bind(this);

	this.removeOverlay = function (node) {
		this.creatingOverlay = false;

		if (node.filler != null) {
			node.filler.parentElement.removeChild(node.filler);
			node.filler = null;
		}

		if (node.overlay != null) {
			node.overlay.parentElement.removeChild(node.overlay);
			node.overlay = null;

			if (this.displayButtonTimeout != null) {
				clearTimeout(this.displayButtonTimeout);
			}
			this.displayButtonTimeout = null;
		}

		if (node.allInputs != null) {
			EBX_Utils.forEach(node.allInputs, function (conf) {
				var input = conf.input;
				if (input != null) {
					input.tabIndex = conf.tabIndex;
				}
			});
		}

		node.allInputs = [];
	}.bind(this);
}

EBX_AjaxTreeExpander.prototype = new EBX_AbstractAjaxResponseManager();

function ebx_defaultEndLoadingFn() {

}

function ebx_ajaxTreeCreateAndRegisterCancelId(node) {
	var id = node.data.id || "";
	var cancelCounter = node.cancelCounter || 0;

	var cancelId = EBX_PageId + "_c" + id + "$" + (cancelCounter++).toFixed();

	node.cancelCounter = cancelCounter;
	node.cancelId = cancelId;

	return cancelId;
}

/** ********* END YUI JSON Ajax Tree ********** */

/** ********* START Specifics implementations ********* */

/** ********** START InstanceContentTree *************** */
function ebx_startNewInstanceContentTree(treeName, containerDivID) {
	var getExpandURLFn = function (node) {
		var url = EBX_Constants.getRequestLink(EBX_Constants.instanceContentTreeExpandEvent);
		if (node !== null) {
			if (node.data.isHriNode !== undefined && node.data.isHriNode === true) {
				url += "&" + EBX_Constants.hierarchyNodePath + "=" + node.data.id;
			} else {
				url += "&" + EBX_Constants.nodePath + "=";
				if (!node.isRoot()) {
					url += node.data.id;
				}
			}
		}
		return url;
	};

	var getCollapseURLFn = null;
	EBX_AjaxTreesRegister.createAndRegisterTree(treeName, containerDivID, getExpandURLFn, getCollapseURLFn, false);
}

function ebx_navigationTreeReplaceNodeChildrenBy(treeName, parentLineId, selectedNodeIndexInTree) {
	var tree = ebx_getAjaxTree(treeName);
	if (tree === null) {
		return;
	}
	var yuiTree = tree.getYuiTree();
	var parentLine = yuiTree.getNodeByProperty('id', parentLineId);
	if (parentLine === null) {
		return;
	}
	if (!parentLine.isLeaf) {
		yuiTree.removeChildren(parentLine);
	}
	parentLine.setNodesProperty("selectedNodeIndexInTree", selectedNodeIndexInTree);
	if (EBX_Utils.matchCSSClass(parentLine, 'ebx_Selected')) {
		EBX_Utils.removeCSSClass(parentLine, 'ebx_Selected');
		if (EBX_Utils.matchCSSClass(parentLine, 'ebx_DarkBackground')) {
			EBX_Utils.removeCSSClass(parentLine, 'ebx_DarkBackground');
		}

		parentLine.refresh();
		yuiTree.render();
	}
	var cancelId = ebx_ajaxTreeCreateAndRegisterCancelId(parentLine);
	tree.expandLine(parentLine, cancelId, false, null);
	parentLine.expanded = true;
}

/** ********** END InstanceContentTree *************** */

/** ********** START Hierarchy *************** */
function ebx_startNewHierarchyTree(treeName, containerDivID) {
	var getExpandURLFn = function(node) {
		if (node === null || node.data.id === undefined) {
			return EBX_Constants.getRequestLink(EBX_Constants.hierarchyExpandEvent);
		}

		var params = new EBX_Map();
		params.put(EBX_Constants.ajaxTreeLineIndex, node.data.id);

		return EBX_Constants.getRequestLink(EBX_Constants.hierarchyExpandEvent, params);
	};

	var getCollapseURLFn = function (node) {
		if (node === null || node.data.id === undefined) {
			return null;
		}

		var params = new EBX_Map();
		params.put(EBX_Constants.ajaxTreeLineIndex, node.data.id);

		return EBX_Constants.getRequestLink(EBX_Constants.hierarchyCollapseEvent, params);
	};

	var callbacks = {
		onSuccess: function () {
			AdvancedSearchActions.setFetchingData_success();
		},
		onError: function () {
			AdvancedSearchActions.setFetchingData_uncertain();
		},
		onCancel: function () {
			AdvancedSearchActions.setFetchingData_uncertain();
		}
	};

	EBX_AjaxTreesRegister.createAndRegisterTree(treeName, containerDivID, getExpandURLFn, getCollapseURLFn, true,
			callbacks);
}

/** ********** END Hierarchy *************** */

/** ********** START DMA navigation tree *************** */
function ebx_startNewDataModelTree(treeName, containerDivID) {
	var getExpandURLFn = function(node) {
		if (node === null || node.data.id === undefined) {
			return EBX_Constants.getRequestLink(EBX_Constants.dmaTreeExpandEvent);
		}

		var params = new EBX_Map();
		params.put(EBX_Constants.ajaxTreeLineIndex, node.data.id);

		return EBX_Constants.getRequestLink(EBX_Constants.dmaTreeExpandEvent, params);
	};

	var getCollapseURLFn = function(node) {
		var params = new EBX_Map();
		params.put(EBX_Constants.ajaxTreeLineIndex, node.data.id);

		return EBX_Constants.getRequestLink(EBX_Constants.dmaTreeCollapseEvent, params);
	};

	EBX_AjaxTreesRegister.createAndRegisterTree(treeName, containerDivID, getExpandURLFn, getCollapseURLFn, false);
}

/** ********** END DMA tree *************** */

/** ********** START Predicate editor tree *************** */
function ebx_startNewPredicateTree(treeName, containerDivID) {
	var getExpandURLFn = function(node) {
		var params = new EBX_Map();
		params.put(EBX_Constants.ajaxTreeName, this.treeName);
		params.put(EBX_Constants.ajaxTreeContainer, this.containerDivID);

		if (node === null || node.data.id === undefined) {
			return EBX_Constants.getRequestLink(EBX_Constants.predicateTreeExpandEvent, params);
		}

		params.put(EBX_Constants.ajaxTreeLineIndex, node.data.id);

		return EBX_Constants.getRequestLink(EBX_Constants.predicateTreeExpandEvent, params);
	};

	var getCollapseURLFn = null;

	EBX_AjaxTreesRegister.createAndRegisterTree(treeName, containerDivID, getExpandURLFn, getCollapseURLFn, false);
}

/** ********** END Predicate editor tree *************** */

/** ********** START tabular view column configuration tree *************** */
function ebx_startNewTabularViewColumnConfigurator(treeName, containerDivID) {
	var getExpandURLFn = function(node) {
		if (node === null || node.data.id === undefined) {
			return EBX_Constants.getRequestLink(EBX_Constants.tabularViewColumnConfiguratorExpandEvent);
		}

		var params = new EBX_Map();
		params.put(EBX_Constants.ajaxTreeLineIndex, node.data.id);

		return EBX_Constants.getRequestLink(EBX_Constants.tabularViewColumnConfiguratorExpandEvent, params);
	};

	var getCollapseURLFn = function(node) {
		if (node === null || node.data.id === undefined) {
			return null;
		}

		var params = new EBX_Map();
		params.put(EBX_Constants.ajaxTreeLineIndex, node.data.id);

		return EBX_Constants.getRequestLink(EBX_Constants.tabularViewColumnConfiguratorCollapseEvent, params);
	};

	EBX_AjaxTreesRegister.createAndRegisterTree(treeName, containerDivID, getExpandURLFn, getCollapseURLFn, false);
}

/** ********** END tabular view column configuration tree *************** */

/** ********** START hierarchy dimension tree *************** */
function ebx_startNewHierarchyDimensionTree(treeName, containerDivID) {
	var getExpandURLFn = function(node) {
		if (node === null || node.data.id === undefined) {
			return EBX_Constants.getRequestLink(EBX_Constants.dimensionTreeExpand);
		}

		var params = new EBX_Map();
		params.put(EBX_Constants.ajaxTreeLineIndex, node.data.id);

		return EBX_Constants.getRequestLink(EBX_Constants.dimensionTreeExpand, params);
	};

	var getCollapseURLFn = null;

	EBX_AjaxTreesRegister.createAndRegisterTree(treeName, containerDivID, getExpandURLFn, getCollapseURLFn, false);
}

/** ********** END hierarchy dimension tree *************** */

/** ********** START Modal selector tree *************** */

function ebx_displayYUITreeFromMarkup(callerFn, arg, obj) {
	var treeEl = document.getElementById(obj.treeDivId);
	if (treeEl) {
		var tree = new YAHOO.widget.TreeView(treeEl.id);
		tree.subscribe("clickEvent", EBX_Utils.returnFalse);
		tree.render();
	}
	if (obj.fn !== undefined) {
		obj.fn.call();
	}
}

function ebx_DisplaySelectorPanelTree() {
	ebx_displayYUITreeFromMarkup(null, null, {
		treeDivId: "ebx_SelectorPanelTree"
	});
}

var EBX_NAVIGATION_HEADER_SELECTOR_PANEL_LZ = null;
function ebx_getSelectorPanel() {
	if (EBX_NAVIGATION_HEADER_SELECTOR_PANEL_LZ === null) {
		EBX_NAVIGATION_HEADER_SELECTOR_PANEL_LZ = new YAHOO.widget.Panel("ebx_SelectorPanel", {
			draggable: false,
			visible: false,
			modal: true
		});
		EBX_NAVIGATION_HEADER_SELECTOR_PANEL_LZ.innerElement.innerHTML = "<div id=\"ebx_SelectorPanelContent\" class=\"bd\"></div><div class=\"ebx_Knob\"></div>";
		EBX_NAVIGATION_HEADER_SELECTOR_PANEL_LZ.render(document.body);
		YAHOO.util.Event.on("ebx_SelectorPanel_mask", "click", function() {
			EBX_NAVIGATION_HEADER_SELECTOR_PANEL_LZ.hide();
		});
		EBX_LayoutManager.bodyLayout.addListener("resize", EBX_LayoutManager.autoresizeSelectorPanelTree);
		EBX_NAVIGATION_HEADER_SELECTOR_PANEL_LZ.showEvent.subscribe(EBX_LayoutManager.autoresizeSelectorPanelTree, null);
	}
	return EBX_NAVIGATION_HEADER_SELECTOR_PANEL_LZ;
}

function EBX_AjaxSelectorObject() {
	this.onExecuteIfOK = function(responseXML, root) {
		var responseBody = root.getElementsByTagName('responseBody')[0];
		var targetName = responseBody.attributes.getNamedItem('targetName').nodeValue;
		var responseContent = responseBody.firstChild.data;
		if (document.getElementById(targetName)) {
			document.getElementById(targetName).innerHTML = responseContent;
			var contextButton = document.getElementById(this.contextButtonId);
			var parentNavigationHeader = EBX_Utils.getFirstParentMatchingTagName(contextButton, 'H2');
			var selectorPanel = ebx_getSelectorPanel();
			selectorPanel.cfg.setProperty('context', [ parentNavigationHeader, 'tl', 'bl' ]);
			selectorPanel.show();
			if (EBX_LayoutManager.isHeaderPaneDisplayed() === true) {
				document.getElementById("ebx_SelectorPanel_mask").style.marginTop = "40px";
			} else {
				document.getElementById("ebx_SelectorPanel_mask").style.marginTop = "0";
			}
			ebx_DisplaySelectorPanelTree();
		}
		return true;
	};

	this.onExecuteIfKO = function(responseXML) {
		return;
	};

	this.onGetExceptedResponseCode = function(callerId) {
		return this.responseCodeOK_RequestResponse;
	};

	this.onSetContextButtonId = function(buttonId) {
		// load Selector pane
		ebx_getSelectorPanel();
		this.contextButtonId = buttonId;
	};
}

EBX_AjaxSelectorObject.prototype = new EBX_AbstractAjaxResponseManager();

/** ********** END Modal selector tree *************** */

/** ********** DMA navigation tree ******************* */
function ebx_DMANavigationTree_expandAll(treeName, nodeId) {
	ebx_ajaxTreeReplaceChildren(treeName, nodeId, '&navigationTree_expandAll=true');
}

function ebx_DMANavigationTree_collapseAll(treeName, nodeId) {
	var tree = ebx_getAjaxTree(treeName);
	var yuiTree = tree.getYuiTree();
	var node = yuiTree.getNodeByProperty('id', nodeId);
	ebx_DMANavigationTree_collapseRecursively(node);
}

function ebx_DMANavigationTree_collapseRecursively(node) {
	var hasChildren = node.children !== undefined && node.children.length > 0;
	if (!hasChildren) {
		return;
	} else {
		for ( var i = 0; i < node.children.length; i++) {
			ebx_DMANavigationTree_collapseRecursively(node.children[i]);
		}
	}
	node.collapse();
}
/** ********* END Specifics implementations ********* */

/********* ebx_ajax_api.js *********/
/* Published methods:
 * EBX_AJAXResponseHandler.sendRequest(url)
 * abstract EBX_AJAXResponseHandler.handleAjaxResponseSuccess(responseContent)
 * abstract EBX_AJAXResponseHandler.handleAjaxResponseFailed(responseContent)
 *
 * @see com.orchestranetworks.ui.UIAjaxComponent
 */
function EBX_AJAXResponseHandler() {
	this.onExecuteIfOK = function(responseXML, root) {
		var bodyElement = root.getElementsByTagName('responseBody')[0];
		// if the server wrote "" in the ajax response, the XML parser won't put a void CDATA
		// so by default, the response is ""
		var responseContent = "";
		if (bodyElement.firstChild) {
			responseContent = bodyElement.firstChild.data;
		}
		this.handleAjaxResponseSuccess(responseContent);
		return true;
	};

	this.onExecuteIfKO = function(responseXML) {
		this.handleAjaxResponseFailed(responseXML);
	};

	// PUBLIC API
	this.sendRequest = function(url) {
		this.onExecute(url);
	};

	// PUBLIC API
	// Abstract method which manages response document if the response code is the one expected.
	this.handleAjaxResponseSuccess = function(responseContent) {
		EBX_Logger.log("Ajax object must implement method [ handleAjaxResponseSuccess(responseContent) ]", EBX_Logger.error);
	};

	// PUBLIC API
	// Abstract method which manages response document if the response code is not the one expected.
	this.handleAjaxResponseFailed = function(responseContent) {
		EBX_Logger.log("Ajax object must implement method [ handleAjaxResponseFailed(responseContent) ]", EBX_Logger.error);
	};
}

EBX_AJAXResponseHandler.prototype = new EBX_AbstractAjaxResponseManager();

/********* ebx_messages_manager.js *********/
/* This class is used to manage user messages for standard messages (added in context in Java classes) and AJAX messages.
 * It contains three lists; one for each message's severity (INFO, WARNING, ERROR).
 * These lists contains all messages displayed to user "between two standard event" (std event means not AJAX).
 *
 * The goal is to unify this feature for standard and AJAX messages, and allow re-display of old messages if asked.
 *
 * These messages are displayed in a div, created dynamically if needed, and filled with all (or only new) messages of a given severity.
 * In fact, there are two div, one for the background (opacity), and one for the messages themselves.
 */
function EBX_UserMessageManager() {
}

EBX_UserMessageManager.infoMsg = [];
EBX_UserMessageManager.amountOfUnreadInfoMessage = 0;
EBX_UserMessageManager.infoMessageListMustBeRefreshed = false;
EBX_UserMessageManager.warningMsg = [];
EBX_UserMessageManager.amountOfUnreadWarningMessage = 0;
EBX_UserMessageManager.warningMessageListMustBeRefreshed = false;
EBX_UserMessageManager.errorMsg = [];
EBX_UserMessageManager.amountOfUnreadErrorMessage = 0;
EBX_UserMessageManager.errorMessageListMustBeRefreshed = false;

EBX_UserMessageManager.INFO = "I";
EBX_UserMessageManager.WARNING = "W";
EBX_UserMessageManager.ERROR = "E";

// must be overwrote by the manager with default value of manager of user preference
EBX_UserMessageManager.autodisplaySeverityLevel = EBX_UserMessageManager.WARNING;

EBX_UserMessageManager.showUnreadMessages = function () {
  var displayMessageBox = false;
  switch (EBX_UserMessageManager.autodisplaySeverityLevel) {
    case EBX_UserMessageManager.INFO:
      if (EBX_UserMessageManager.amountOfUnreadInfoMessage !== 0) {
        displayMessageBox = true;
        break;
      }
    case EBX_UserMessageManager.WARNING:
      if (EBX_UserMessageManager.amountOfUnreadWarningMessage !== 0) {
        displayMessageBox = true;
        break;
      }
    case EBX_UserMessageManager.ERROR:
      if (EBX_UserMessageManager.amountOfUnreadErrorMessage !== 0) {
        displayMessageBox = true;
        break;
      }
    default:
      displayMessageBox = false;
  }

  if (displayMessageBox) {
    EBX_UserMessageManager.showMessageBox();
  }
};

/**
 * This method add the given message (String) to the proper list according to
 * the given severity.
 */
EBX_UserMessageManager.addLegacyMessage = function (message, severity) {
  var arrayToPush;
  switch (severity) {
    case EBX_UserMessageManager.INFO:
      arrayToPush = EBX_UserMessageManager.infoMsg;
      EBX_UserMessageManager.amountOfUnreadInfoMessage++;
      EBX_UserMessageManager.infoMessageListMustBeRefreshed = true;
      break;
    case EBX_UserMessageManager.WARNING:
      arrayToPush = EBX_UserMessageManager.warningMsg;
      EBX_UserMessageManager.amountOfUnreadWarningMessage++;
      EBX_UserMessageManager.warningMessageListMustBeRefreshed = true;
      break;
    case EBX_UserMessageManager.ERROR:
      arrayToPush = EBX_UserMessageManager.errorMsg;
      EBX_UserMessageManager.amountOfUnreadErrorMessage++;
      EBX_UserMessageManager.errorMessageListMustBeRefreshed = true;
      break;
    default:
      return;
  }

  arrayToPush.push(new EBX_UserMessage(message));

  EBX_UserMessageManager.refreshButton();
  EBX_UserMessageManager.refreshMessageBoxPanel();

  EBX_UserMessageManager.showUnreadMessages();
};


/**
 * This method add the given message (String) to the proper list according to
 * the given severity.
 */
EBX_UserMessageManager.addMessage = function (message, severity) {
  var windowsStack = EBX_Utils.getWindowStackToHybridParentFrame();
  if (!windowsStack) {
    // Not in hybrid mode or if legacy header is shown
    EBX_UserMessageManager.addLegacyMessage(message, severity);
    return;
  }

  if(EBX_LayoutManager.isLegacyHeader){
    EBX_UserMessageManager.refreshHybridButton();
  }

  var callback = windowsStack[0]["EBX_HybridModeOnMessage"];
  if (!callback) {
    // No callback defined.
    EBX_UserMessageManager.addLegacyMessage(message, severity);
    return;
  }

  callback(JSON.stringify({message: message, severity: severity, fullPageId: window.EBX_PageId}));
};

/**
 * This method display the message box popup whether the severity level is reached or not.
 */
EBX_UserMessageManager.displayMessageBox = function () {
  var windowsStack = EBX_Utils.getWindowStackToHybridParentFrame();
  if (!windowsStack) {
    // Not in hybrid mode or if legacy header is shown
    var adminBox = document.getElementById(EBX_UserMessageManager.DisplayMessageBoxButtonId);
    if (adminBox) {
      adminBox.click();
    }
    return;
  }

  var callback = windowsStack[0]["EBX_HybridModeOnDisplayMessageBox"];
  if (!callback) {
    // No callback defined.
    return;
  }

  callback(JSON.stringify({fullPageId: window.EBX_PageId}));
};

EBX_UserMessageManager.DisplayMessageBoxButtonId = "ebx_DisplayMessageBox";
EBX_UserMessageManager.refreshButton = function () {
  var button = document.getElementById(EBX_UserMessageManager.DisplayMessageBoxButtonId);

  if (button === null) {
    return;
  }

  if (EBX_UserMessageManager.infoMsg.length + EBX_UserMessageManager.warningMsg.length
      + EBX_UserMessageManager.errorMsg.length == 0) {
    button.style.display = "none";
    return;
  }
  button.style.display = "inline-block";
};

EBX_UserMessageManager.refreshHybridButton = function () {
  var button = document.getElementById(EBX_UserMessageManager.DisplayMessageBoxButtonId);
  if (button === null) {
    return;
  }
  button.style.display = "inline-block";
  button.setAttribute("onclick", "EBX_UserMessageManager.displayMessageBox()");
};

EBX_UserMessageManager.messageBoxPanel = null;

EBX_UserMessageManager.isMessageBoxDisplayed = function () {
  if (EBX_UserMessageManager.messageBoxPanel === null) {
    return false;
  }
  return EBX_UserMessageManager.messageBoxPanel.cfg.getProperty("visible");
};

EBX_UserMessageManager.showMessageBox = function () {
  // TODO send the command to newUI
  EBX_UserMessageManager.refreshMessageBoxPanel();
  EBX_UserMessageManager.messageBoxPanel.show();
};

EBX_UserMessageManager.messageBoxTabUnreadCSSClass = "ebx_MessageBoxTabUnread";
EBX_UserMessageManager.errorMessageIdPrefix = "ebx_ErrorMessage_";
EBX_UserMessageManager.warningMessageIdPrefix = "ebx_WarningMessage_";
EBX_UserMessageManager.infoMessageIdPrefix = "ebx_InfoMessage_";

EBX_UserMessageManager.refreshMessageBoxPanel = function () {
  if (EBX_UserMessageManager.messageBoxPanel === null) {
    EBX_UserMessageManager.buildMessageBoxPanel();
  }

  if (EBX_UserMessageManager.errorMessageListMustBeRefreshed) {
    EBX_UserMessageManager.refreshErrorTab();

    var errorMessageList = document.getElementById(EBX_UserMessageManager.messageBoxErrorListId);
    EBX_UserMessageManager.fillListWithMessages(errorMessageList, EBX_UserMessageManager.errorMsg,
        EBX_UserMessageManager.errorMessageIdPrefix);

    EBX_UserMessageManager.errorMessageListMustBeRefreshed = false;
  }

  if (EBX_UserMessageManager.warningMessageListMustBeRefreshed) {
    EBX_UserMessageManager.refreshWarningTab();

    var warningMessageList = document.getElementById(EBX_UserMessageManager.messageBoxWarningListId);
    EBX_UserMessageManager.fillListWithMessages(warningMessageList, EBX_UserMessageManager.warningMsg,
        EBX_UserMessageManager.warningMessageIdPrefix);
    EBX_UserMessageManager.warningMessageListMustBeRefreshed = false;
  }

  if (EBX_UserMessageManager.infoMessageListMustBeRefreshed) {
    EBX_UserMessageManager.refreshInfoTab();

    var infoMessageList = document.getElementById(EBX_UserMessageManager.messageBoxInfoListId);
    EBX_UserMessageManager.fillListWithMessages(infoMessageList, EBX_UserMessageManager.infoMsg,
        EBX_UserMessageManager.infoMessageIdPrefix);

    EBX_UserMessageManager.infoMessageListMustBeRefreshed = false;
  }

  // active the most severe unread tab
  var tabToActive = null;
  if (EBX_UserMessageManager.amountOfUnreadErrorMessage !== 0) {
    tabToActive = EBX_UserMessageManager.tabError;
  } else if (EBX_UserMessageManager.amountOfUnreadWarningMessage !== 0) {
    tabToActive = EBX_UserMessageManager.tabWarning;
  } else if (EBX_UserMessageManager.amountOfUnreadInfoMessage !== 0) {
    tabToActive = EBX_UserMessageManager.tabInfo;
  }
  if (tabToActive !== null) {
    EBX_UserMessageManager.tabView.selectTab(EBX_UserMessageManager.tabView.getTabIndex(tabToActive));
  }
};
/* refreshXXXTab are called only if the list of XXX is not empty */
EBX_UserMessageManager.refreshErrorTab = function () {
  if (EBX_UserMessageManager.tabError === null) {
    EBX_UserMessageManager.tabError = new YAHOO.widget.Tab({
      label: "<div class='ebx_MessageBoxWTabIcon ebx_IconError'></div><span id=\""
      + EBX_UserMessageManager.messageBoxErrorTabLabelId + "\"></span>",
      content: "<ul id=\"" + EBX_UserMessageManager.messageBoxErrorListId + "\"></ul>",
      active: true
    });
    EBX_UserMessageManager.tabView.addTab(EBX_UserMessageManager.tabError, 0);
  }

  var errorTabLabel = document.getElementById(EBX_UserMessageManager.messageBoxErrorTabLabelId);
  var errorTabLabelContent = [];
  errorTabLabelContent.push(EBX_UserMessageManager.errorMsg.length, " ");
  if (EBX_UserMessageManager.errorMsg.length === 1) {
    errorTabLabelContent.push(EBX_LocalizedMessage.messageBox_error_one);
  } else {
    errorTabLabelContent.push(EBX_LocalizedMessage.messageBox_error_several);
  }
  if (EBX_UserMessageManager.amountOfUnreadErrorMessage !== 0) {
    errorTabLabelContent.push("<br/><span class=\"", EBX_UserMessageManager.messageBoxTabUnreadCSSClass, "\">(");
    errorTabLabelContent.push(EBX_UserMessageManager.amountOfUnreadErrorMessage, " ");
    if (EBX_UserMessageManager.amountOfUnreadErrorMessage === 1) {
      errorTabLabelContent.push(EBX_LocalizedMessage.messageBox_unread_one);
    } else {
      errorTabLabelContent.push(EBX_LocalizedMessage.messageBox_unread_several);
    }
    errorTabLabelContent.push(")</span>");
  }
  errorTabLabel.innerHTML = errorTabLabelContent.join("");
};
EBX_UserMessageManager.refreshWarningTab = function () {
  if (EBX_UserMessageManager.tabWarning === null) {
    EBX_UserMessageManager.tabWarning = new YAHOO.widget.Tab({
      label: "<div class='ebx_MessageBoxWTabIcon ebx_IconWarning'></div><span id=\""
      + EBX_UserMessageManager.messageBoxWarningTabLabelId + "\"></span>",
      content: "<ul id=\"" + EBX_UserMessageManager.messageBoxWarningListId + "\"></ul>",
      active: true
    });
    EBX_UserMessageManager.tabView.addTab(EBX_UserMessageManager.tabWarning,
        EBX_UserMessageManager.tabError === null ? 0 : 1);
  }

  var warningTabLabel = document.getElementById(EBX_UserMessageManager.messageBoxWarningTabLabelId);
  var warningTabLabelContent = [];
  warningTabLabelContent.push(EBX_UserMessageManager.warningMsg.length, " ");
  if (EBX_UserMessageManager.warningMsg.length === 1) {
    warningTabLabelContent.push(EBX_LocalizedMessage.messageBox_warning_one);
  } else {
    warningTabLabelContent.push(EBX_LocalizedMessage.messageBox_warning_several);
  }
  if (EBX_UserMessageManager.amountOfUnreadWarningMessage !== 0) {
    warningTabLabelContent.push("<br/><span class=\"", EBX_UserMessageManager.messageBoxTabUnreadCSSClass, "\">(");
    warningTabLabelContent.push(EBX_UserMessageManager.amountOfUnreadWarningMessage, " ");
    if (EBX_UserMessageManager.amountOfUnreadWarningMessage === 1) {
      warningTabLabelContent.push(EBX_LocalizedMessage.messageBox_unread_one);
    } else {
      warningTabLabelContent.push(EBX_LocalizedMessage.messageBox_unread_several);
    }
    warningTabLabelContent.push(")</span>");
  }
  warningTabLabel.innerHTML = warningTabLabelContent.join("");
};
EBX_UserMessageManager.refreshInfoTab = function () {
  if (EBX_UserMessageManager.tabInfo === null) {
    EBX_UserMessageManager.tabInfo = new YAHOO.widget.Tab({
      label: "<div class='ebx_MessageBoxWTabIcon ebx_IconInfo'></div><span id=\""
      + EBX_UserMessageManager.messageBoxInfoTabLabelId + "\"></span>",
      content: "<ul id=\"" + EBX_UserMessageManager.messageBoxInfoListId + "\"></ul>",
      active: true
    });
    var index = 0;
    if (EBX_UserMessageManager.tabError !== null) {
      index++;
    }
    if (EBX_UserMessageManager.tabWarning !== null) {
      index++;
    }

    EBX_UserMessageManager.tabView.addTab(EBX_UserMessageManager.tabInfo, index);
  }

  var infoTabLabel = document.getElementById(EBX_UserMessageManager.messageBoxInfoTabLabelId);
  var infoTabLabelContent = [];
  infoTabLabelContent.push(EBX_UserMessageManager.infoMsg.length, " ");
  if (EBX_UserMessageManager.infoMsg.length === 1) {
    infoTabLabelContent.push(EBX_LocalizedMessage.messageBox_info_one);
  } else {
    infoTabLabelContent.push(EBX_LocalizedMessage.messageBox_info_several);
  }
  if (EBX_UserMessageManager.amountOfUnreadInfoMessage !== 0) {
    infoTabLabelContent.push("<br/><span class=\"", EBX_UserMessageManager.messageBoxTabUnreadCSSClass, "\">(");
    infoTabLabelContent.push(EBX_UserMessageManager.amountOfUnreadInfoMessage, " ");
    if (EBX_UserMessageManager.amountOfUnreadInfoMessage === 1) {
      infoTabLabelContent.push(EBX_LocalizedMessage.messageBox_unread_one);
    } else {
      infoTabLabelContent.push(EBX_LocalizedMessage.messageBox_unread_several);
    }
    infoTabLabelContent.push(")</span>");
  }
  infoTabLabel.innerHTML = infoTabLabelContent.join("");
};

EBX_UserMessageManager.messageUnreadCSSClass = "ebx_MessageBoxMessageUnread";
EBX_UserMessageManager.messageCSSClass = "ebx_MessageBoxMessage";
EBX_UserMessageManager.fillListWithMessages = function (listEl, messages, idPrefix) {
  var listBody = [];
  var length = messages.length;
  for (var i = 0; i < length; i++) {
    listBody.push("<li>");
    listBody.push("<div");
    listBody.push(" id=\"", idPrefix, i, "\"");
    listBody.push(" class=\"", EBX_UserMessageManager.messageCSSClass);
    if (messages[i].read === false) {
      listBody.push(" ", EBX_UserMessageManager.messageUnreadCSSClass);
    }
    listBody.push("\"");
    if (messages[i].read === false) {
      listBody.push(" title=\"", EBX_LocalizedMessage.messageBox_unreadMessage_tooltip, "\"");
    }
    listBody.push(">");
    listBody.push(messages[i].msg);
    listBody.push("</div>");
    listBody.push("</li>");
  }
  listEl.innerHTML = listBody.join("");
};

EBX_UserMessageManager.messageBoxPanelId = "ebx_MessageBox";
EBX_UserMessageManager.messageBoxBodyId = "ebx_MessageBoxBody";
EBX_UserMessageManager.messageBoxTitleId = "ebx_MessageBoxTitle";

EBX_UserMessageManager.messageBoxErrorListId = "ebx_MessageBoxErrorList";
EBX_UserMessageManager.messageBoxWarningListId = "ebx_MessageBoxWarningList";
EBX_UserMessageManager.messageBoxInfoListId = "ebx_MessageBoxInfoList";

EBX_UserMessageManager.messageBoxErrorTabLabelId = "ebx_MessageBoxErrorTabLabel";
EBX_UserMessageManager.messageBoxWarningTabLabelId = "ebx_MessageBoxWarningTabLabel";
EBX_UserMessageManager.messageBoxInfoTabLabelId = "ebx_MessageBoxInfoTabLabel";

EBX_UserMessageManager.tabView = null;
EBX_UserMessageManager.tabError = null;
EBX_UserMessageManager.tabWarning = null;
EBX_UserMessageManager.tabInfo = null;

EBX_UserMessageManager.buildMessageBoxPanel = function () {
  EBX_UserMessageManager.messageBoxPanel = new YAHOO.widget.Panel(EBX_UserMessageManager.messageBoxPanelId, {
    close: false,
    draggable: false,
    modal: true,
    visible: false,
    fixedcenter: true
  });

  var messageBoxBody = [];
  messageBoxBody.push("<div");
  messageBoxBody.push(" id=\"", EBX_UserMessageManager.messageBoxBodyId, "\"");
  messageBoxBody.push(">");

  var closeLabel = EBX_LocalizedMessage.UICommon_button_close;
  messageBoxBody.push("<div class='" + EBX_UserMessageManager.messageBoxBodyId + "_footer'>");
  messageBoxBody.push("<button id='" + EBX_UserMessageManager.messageBoxBodyId
      + "_close' type='button' class='ebx_Button'>");
  messageBoxBody.push(closeLabel);
  messageBoxBody.push("</button>");
  messageBoxBody.push("</div>");
  messageBoxBody.push("</div>");

  YAHOO.util.Event.on(EBX_UserMessageManager.messageBoxBodyId + "_close", "click", function () {
    EBX_UserMessageManager.messageBoxPanel.hide();
  });

  EBX_UserMessageManager.messageBoxPanel.setBody(messageBoxBody.join(""));
  EBX_UserMessageManager.messageBoxPanel.render(document.body);
  YAHOO.util.Event.on(EBX_UserMessageManager.messageBoxPanelId + "_mask", "click", function () {
    EBX_UserMessageManager.messageBoxPanel.hide();
  });

  YAHOO.util.Event.addListener(EBX_UserMessageManager.messageBoxBodyId, "click",
      EBX_UserMessageManager.clickOnMessageBoxListener);

  EBX_UserMessageManager.tabView = new YAHOO.widget.TabView({
    orientation: "left"
  });

  var container = document.getElementById(EBX_UserMessageManager.messageBoxBodyId);
  EBX_UserMessageManager.tabView.appendTo(
      container,
      container.querySelector("." + EBX_UserMessageManager.messageBoxBodyId + "_footer")
  );

};

EBX_UserMessageManager.clickOnMessageBoxListener = function (e) {
  var targetId = YAHOO.util.Event.getTarget(e).id;

  if (targetId === "") {
    return;
  }

  // found at position 0
  if (targetId.search(EBX_UserMessageManager.errorMessageIdPrefix) === 0) {
    EBX_UserMessageManager.setErrorMessageRead(targetId.substr(EBX_UserMessageManager.errorMessageIdPrefix.length));
  }
  if (targetId.search(EBX_UserMessageManager.warningMessageIdPrefix) === 0) {
    EBX_UserMessageManager.setWarningMessageRead(targetId.substr(EBX_UserMessageManager.warningMessageIdPrefix.length));
  }
  if (targetId.search(EBX_UserMessageManager.infoMessageIdPrefix) === 0) {
    EBX_UserMessageManager.setInfoMessageRead(targetId.substr(EBX_UserMessageManager.infoMessageIdPrefix.length));
  }
};

EBX_UserMessageManager.setErrorMessageRead = function (messageIndex) {
  if (EBX_UserMessageManager.errorMsg[messageIndex].read === true) {
    return;
  }

  EBX_UserMessageManager.errorMsg[messageIndex].read = true;
  EBX_UserMessageManager.amountOfUnreadErrorMessage--;
  EBX_UserMessageManager.refreshButton();
  EBX_UserMessageManager.refreshErrorTab();
  var message = document.getElementById(EBX_UserMessageManager.errorMessageIdPrefix + messageIndex);
  message.className = EBX_UserMessageManager.messageCSSClass;
  message.title = "";
};
EBX_UserMessageManager.setWarningMessageRead = function (messageIndex) {
  if (EBX_UserMessageManager.warningMsg[messageIndex].read === true) {
    return;
  }

  EBX_UserMessageManager.warningMsg[messageIndex].read = true;
  EBX_UserMessageManager.amountOfUnreadWarningMessage--;
  EBX_UserMessageManager.refreshButton();
  EBX_UserMessageManager.refreshWarningTab();
  var message = document.getElementById(EBX_UserMessageManager.warningMessageIdPrefix + messageIndex);
  message.className = EBX_UserMessageManager.messageCSSClass;
  message.title = "";
};
EBX_UserMessageManager.setInfoMessageRead = function (messageIndex) {
  if (EBX_UserMessageManager.infoMsg[messageIndex].read === true) {
    return;
  }

  EBX_UserMessageManager.infoMsg[messageIndex].read = true;
  EBX_UserMessageManager.amountOfUnreadInfoMessage--;
  EBX_UserMessageManager.refreshButton();
  EBX_UserMessageManager.refreshInfoTab();
  var message = document.getElementById(EBX_UserMessageManager.infoMessageIdPrefix + messageIndex);
  message.className = EBX_UserMessageManager.messageCSSClass;
  message.title = "";
};

EBX_UserMessageManager.copyMessagesTo = function (anotherMessageManager) {

  if (anotherMessageManager === EBX_UserMessageManager) {
    return;
  }

  for (var i = 0, len = this.errorMsg.length; i < len; i++) {
    anotherMessageManager.addMessage(this.errorMsg[i].msg, EBX_UserMessageManager.ERROR);
  }
  for (var i = 0, len = this.warningMsg.length; i < len; i++) {
    anotherMessageManager.addMessage(this.warningMsg[i].msg, EBX_UserMessageManager.WARNING);
  }
  for (var i = 0, len = this.infoMsg.length; i < len; i++) {
    anotherMessageManager.addMessage(this.infoMsg[i].msg, EBX_UserMessageManager.INFO);
  }
};

/* Technical object which encapsulate messages.
 * Contains the message itself (as String) and a flag used to know if this message has already been displayed.
 */
function EBX_UserMessage(userMessages) {
  this.msg = userMessages;
  this.read = false;
}

function ebx_messageBox_addError(errorMessage) {
  EBX_UserMessageManager.addMessage(errorMessage, EBX_UserMessageManager.ERROR);
}

function ebx_messageBox_addWarning(warningMessage) {
  EBX_UserMessageManager.addMessage(warningMessage, EBX_UserMessageManager.WARNING);
}

function ebx_messageBox_addInfo(infoMessage) {
  EBX_UserMessageManager.addMessage(infoMessage, EBX_UserMessageManager.INFO);
}

/********* ebx_dialogBox.js *********/
/* 
 * TODO migrate permalink using the dialog box 
 * TODO resizable
 * TODO many calls even if the dialog box has not been closed: error, ignore, overwrite current dialog box, or stack args & call again just after close?
 */

function EBX_DialogBox() {}

EBX_DialogBox.panelId = "ebx_DialogBox";

EBX_DialogBox.panel = null;
EBX_DialogBox.resize = null;

EBX_DialogBox.currentJSCommandClose = null;

/* 
 * @param argsObj is an object that can contains many attributes (all are optional)
 * header: header HTML content (should be single line and not too long)
 * body: body HTML content
 * footer: footer HTML content
 * focusId: String element id to focus on display (usually the default button)
 * jsCommandClose: javaScript function to call if click on back or push escape key
 */
//[EBX_PUBLIC_API]
ebx_dialogBox_show = function(argsObj) {

	var isInit = false;

	if (EBX_DialogBox.panel === null) {
		EBX_DialogBox.panel = new YAHOO.widget.Panel(EBX_DialogBox.panelId, {
			close: false,
			draggable: false,
			modal: true,
			visible: false,
			fixedcenter: true
		});

		EBX_DialogBox.panel.render(document.body);

		isInit = true;
	}

	EBX_DialogBox.currentJSCommandClose = argsObj.jsCommandClose;

	if (argsObj.header !== undefined) {
		EBX_DialogBox.panel.setHeader(argsObj.header);
	} else {
		EBX_DialogBox.panel.setHeader("");
	}
	if (argsObj.body !== undefined) {
		EBX_DialogBox.panel.setBody(argsObj.body);
	} else {
		EBX_DialogBox.panel.setBody("");
	}
	if (argsObj.footer !== undefined) {
		EBX_DialogBox.panel.setFooter(argsObj.footer);
	} else {
		EBX_DialogBox.panel.setFooter("");
	}

  var dialogBoxElement = EBX_DialogBox.panel.element;
  dialogBoxElement.style.marginRight = YAHOO.widget.Overlay.VIEWPORT_OFFSET + "px";

  EBX_DialogBox.panel.center();
	EBX_DialogBox.panel.show();

	EBX_Loader.stackKeyListener(EBX_Utils.keyCodes.ESCAPE, EBX_DialogBox.clickOnBack);

	if (argsObj.focusId !== undefined && document.getElementById(argsObj.focusId) !== null) {
		document.getElementById(argsObj.focusId).focus();
	}

	if (isInit === true) {
		var mask = document.getElementById(EBX_DialogBox.panelId + "_mask");
		YAHOO.util.Event.on(mask, "click", EBX_DialogBox.clickOnBack);
		mask.title = EBX_LocalizedMessage.dialogBox_maskTooltip;

		//		Disable resize for now (too complicated for the 1st lot)
		//		var height = EBX_DialogBox.panel.element.offsetHeight;
		//		var width = EBX_DialogBox.panel.element.offsetWidth;
		//
		//		EBX_DialogBox.resize = new YAHOO.util.Resize(EBX_DialogBox.panelId, {
		//			handles: [ "br" ],
		//			useShim: true,
		//			minHeight: height,
		//			minWidth: width,
		//			proxy: true
		//		});
		//		EBX_DialogBox.resize.originalHeight = height;
		//		EBX_DialogBox.resize.originalWidth = width;
		//		EBX_DialogBox.resize.originalLeft = EBX_DialogBox.panel.element.offsetLeft;
		//		EBX_DialogBox.resize.originalTop = EBX_DialogBox.panel.element.offsetTop;
		//
		//		EBX_DialogBox.resize.on("startResize", function(args) {
		//
		//			var D = YAHOO.util.Dom;
		//
		//			var clientRegion = D.getClientRegion();
		//			var elRegion = D.getRegion(this.element);
		//
		//			EBX_DialogBox.resize.set("maxWidth", clientRegion.right - elRegion.left - YAHOO.widget.Overlay.VIEWPORT_OFFSET);
		//			EBX_DialogBox.resize.set("maxHeight", clientRegion.bottom - elRegion.top - YAHOO.widget.Overlay.VIEWPORT_OFFSET);
		//
		//			EBX_DialogBox.resize.set("minWidth", clientRegion.width / 2 - elRegion.left/* + 100*/);
		//			EBX_DialogBox.resize.set("minHeight", clientRegion.height / 2 - elRegion.top/* + 50*/);
		//		}, EBX_DialogBox.panel, true);
		//
		//		EBX_DialogBox.resize.on("proxyResize", function(args) {
		//			var proxy = EBX_DialogBox.resize._proxy;
		//			var panelHeight = args.height;
		//			var panelWidth = args.width;
		//
		//			var heightDiff = panelHeight - EBX_DialogBox.resize.originalHeight;
		//			var widthDiff = panelWidth - EBX_DialogBox.resize.originalWidth;
		//
		//			var targetHeight = EBX_DialogBox.resize.originalHeight + heightDiff * 2;
		//			var targetLeft = EBX_DialogBox.resize.originalLeft - widthDiff;
		//			var targetWidth = EBX_DialogBox.resize.originalWidth + widthDiff * 2;
		//			var targetTop = EBX_DialogBox.resize.originalTop - heightDiff;
		//
		//			proxy.style.left = targetLeft + "px";
		//			proxy.style.top = targetTop + "px";
		//			proxy.style.width = targetWidth + "px";
		//			proxy.style.height = targetHeight + "px";
		//		}, null, true);
		//
		//		EBX_DialogBox.resize
		//				.on(
		//						"endResize",
		//						function(args) {
		//							var panelHeight = args.height;
		//							var panelWidth = args.width;
		//
		//							var heightDiff = panelHeight - EBX_DialogBox.resize.originalHeight;
		//							var widthDiff = panelWidth - EBX_DialogBox.resize.originalWidth;
		//
		//							var targetHeight = EBX_DialogBox.resize.originalHeight + heightDiff * 2;
		//							var targetWidth = EBX_DialogBox.resize.originalWidth + widthDiff * 2;
		//
		//							this.cfg.setProperty("height", targetHeight + "px");
		//							this.cfg.setProperty("width", targetWidth + "px");
		//							this.moveTo(EBX_DialogBox.resize.originalLeft - widthDiff, EBX_DialogBox.resize.originalTop - heightDiff);
		//
		//							args.target.originalHeight = targetHeight;
		//							args.target.originalWidth = targetWidth;
		//							args.target.originalLeft = EBX_DialogBox.resize.originalLeft - widthDiff;
		//							args.target.originalTop = EBX_DialogBox.resize.originalTop - heightDiff;
		//
		//							EBX_DialogBox.panel.body.style.height = (targetHeight - EBX_DialogBox.panel.header.offsetHeight - EBX_DialogBox.panel.footer.offsetHeight)
		//									+ "px";
		//						}, EBX_DialogBox.panel, true);
	}

	// TODO resize must be reset to auto
	// XXX maybe do something like that? (no it does not work well)
	//	EBX_DialogBox.resize.reset();
};

EBX_DialogBox.clickOnBack = function() {
	if (EBX_DialogBox.currentJSCommandClose !== null) {
		window.setTimeout(EBX_DialogBox.currentJSCommandClose, 0);
	}
};

//[EBX_PUBLIC_API]
ebx_dialogBox_hide = function() {
	EBX_DialogBox.panel.hide();
	EBX_Loader.removeKeyListener(EBX_Utils.keyCodes.ESCAPE, EBX_DialogBox.clickOnBack);
};

var ebx_confirm_currentJsCommand_yes = null;
var ebx_confirm_currentJsCommand_no = null;

/* Pops a modal dialog box that displays a question, a positive and a negative answer.
 * By a click on the back, the user produces the negative answer.
 * 
 * @param argsObj is an object that can contains many attributes:
 * question(mandatory): String with HTML single line and not too long
 * message: String with HTML free style
 * jsCommandYes(mandatory):  JavaScript command to call if answer is positive
 * labelYes: overwrite the default positive label
 * jsCommandNo: JavaScript command to call if answer is negative
 * labelNo: overwrite the default negative label
 */
//[EBX_PUBLIC_API]
ebx_confirm = function(argsObj) {

	ebx_confirm_currentJsCommand_yes = argsObj.jsCommandYes;

	if (argsObj.jsCommandNo !== undefined) {
		ebx_confirm_currentJsCommand_no = argsObj.jsCommandNo;
	}

	var questionLines = argsObj.question.split("\n");

	var headerHTML = [];
	headerHTML.push("<h2 class='ebx_dialog_header'>", questionLines.shift(), "</h2>");

	var bodyHTML = [];
	if (questionLines.length > 0 || argsObj.message !== undefined) {
		bodyHTML.push("<div class=\"ebx_ContainerWithTextPadding\">");
		if (questionLines.length > 0) {
			bodyHTML.push(questionLines.join("<br/>"));
		}
		if (argsObj.message !== undefined) {
			bodyHTML.push(argsObj.message);
		}
		bodyHTML.push("</div>");
	}

	var footerHTML = ebx_confirm_footerTemplate;
	footerHTML = footerHTML.replace(new RegExp(ebx_confirm_yesButtonLabelPattern, 'g'), argsObj.labelYes !== undefined ? argsObj.labelYes
			: EBX_LocalizedMessage.dialogBox_confirm_yes);
	footerHTML = footerHTML.replace(new RegExp(ebx_confirm_noButtonLabelPattern, 'g'), argsObj.labelNo !== undefined ? argsObj.labelNo
			: EBX_LocalizedMessage.dialogBox_confirm_no);
	footerHTML = "<div class=\"ebx_DialogBoxFooterToolbar\">" + footerHTML + "</div>";

	ebx_dialogBox_show({
		header: headerHTML.join(""),
		body: bodyHTML.join(""),
		footer: footerHTML,
		focusId: ebx_confirm_yesButtonId,
		jsCommandClose: "ebx_confirm_replyNo();"
	});
};

ebx_confirm_replyYes = function() {
	ebx_dialogBox_hide();
	if (ebx_confirm_currentJsCommand_yes !== null) {
		window.setTimeout(ebx_confirm_currentJsCommand_yes, 0);
	}
	ebx_confirm_reset();
};

ebx_confirm_replyNo = function() {
	ebx_dialogBox_hide();
	if (ebx_confirm_currentJsCommand_no !== null) {
		window.setTimeout(ebx_confirm_currentJsCommand_no, 0);
	}
	ebx_confirm_reset();
};

ebx_confirm_reset = function() {
	ebx_confirm_currentJsCommand_yes = null;
	ebx_confirm_currentJsCommand_no = null;
};

/* Pops a modal dialog box that displays a message and a OK button.
 * By a click on the back, the user closes the dialog.
 * 
 * @param message String with HTML single line and not too long
 * @param otherLines [optional] String with HTML free style to put in the body of the dialog box
 */
//[EBX_PUBLIC_API]
ebx_alert = function(message, otherLines) {
	var messageLines = message.split("\n");

	var headerHTML = [];
	headerHTML.push("<h2 class='ebx_dialog_header'>", messageLines.shift(), "</h2>");

	var bodyHTML = [];
	if (messageLines.length > 0 || otherLines !== undefined) {
		bodyHTML.push("<div class=\"ebx_ContainerWithTextPadding\">");
		if (messageLines.length > 0) {
			bodyHTML.push(messageLines.join("<br/>"));
		}
		if (otherLines !== undefined) {
			bodyHTML.push(otherLines);
		}
		bodyHTML.push("</div>");
	}

	var footerHTML = [];
	footerHTML.push("<div class=\"ebx_DialogBoxFooterToolbar\">");
	footerHTML.push(ebx_alert_footer_content);
	footerHTML.push("</div>");

	ebx_dialogBox_show({
		header: headerHTML.join(""),
		body: bodyHTML.join(""),
		footer: footerHTML.join(""),
		focusId: ebx_alert_okButtonId,
		jsCommandClose: "ebx_alert_replyOK();"
	});
};

ebx_alert_replyOK = function() {
	ebx_dialogBox_hide();
};

/********* ebx_doc.js *********/
function EBX_Doc() {

}

EBX_Doc.popupName = "ebx_HelpBook";

EBX_Doc.launchPopup = function(url) {
	var helpPopUp = window.open(url, EBX_Doc.popupName, "toolbar=yes, menubar=no, location=no, scrollbars=yes, resizable=yes, width=850, height=600");
	try {
		helpPopUp.focus();
	} catch (e) {}

};

/********* ebx_form_presenter.js *********/
/* START Form node public API */

/* jshint unused: false */
function ebx_form_isNodeDefined(path) {
  return EBX_FormNodeIndex.isFormNodeDefined(path);
}

function ebx_form_getValue(path) {
  return ebx_form_getNodeValue(ebx_form_formatLegacyPath(path));
}

function ebx_form_setValue(path, value) {
  return ebx_form_setNodeValue(ebx_form_formatLegacyPath(path), value);
}

function ebx_form_setMandatoryIndicator(path, isDisplayed) {
  return ebx_form_setNodeMandatoryIndicator(ebx_form_formatLegacyPath(path), isDisplayed);
}

/**
 * An object that hold a list of messages with different severities.
 */
EBX_ValidationMessage = function () {
  this.errors = undefined;
  this.warnings = undefined;
  this.infos = undefined;
};

/**
 * Display a list of messages under a form node.
 *
 * @param  {string}
 *            aPrefixedPath a prefixed path
 * @param {EBX_ValidationMessage}
 *            aMessageContainer an object containing all the messages to display.
 *            Must not be null.
 */
//[EBX_PUBLIC_API]
function ebx_form_setNodeMessage(aPrefixedPath, aMessageContainer) {
  var node = EBX_FormNodeIndex.getFormNode(aPrefixedPath);
  if (node !== null) {
    // check input type
    if (!aMessageContainer || typeof aMessageContainer !== "object") {
      aMessageContainer = {};
    }
    node.setMessage(aMessageContainer);
  }
}

/**
 * Returns the list of currently displayed messages.
 *
 * @param {string}
 *            aPrefixedPath a prefixed path
 * @return {EBX_ValidationMessage} the object containing all the messages
 *         displayed.
 *         Returns null if aPrefixedPath is invalid or node absent.
 */
//[EBX_PUBLIC_API]
function ebx_form_getNodeMessage(aPrefixedPath) {
  var node = EBX_FormNodeIndex.getFormNode(aPrefixedPath);
  if (node !== null) {
    return node.getMessage();
  }
  return null;
}

/* jshint unused: true */

/* END Form node public API */

function ebx_form_getNodeValue(prefixedPath) {
  if (EBX_FormNodeIndex.getFormNode(prefixedPath) === null) {
    throw "The node at prefixed path \"" + prefixedPath + "\" was not found in the form.";
  }

  return EBX_FormNodeIndex.getFormNode(prefixedPath).getValue();
}

function ebx_form_setNodeValue(prefixedPath, value) {
  if (EBX_FormNodeIndex.getFormNode(prefixedPath) === null) {
    throw "The node at prefixed path \"" + prefixedPath + "\" was not found in the form.";
  }

  if (EBX_FormNodeIndex.getFormNode(prefixedPath).setValue(value) === true) {
    EBX_FormPresenter.stackPathForValidation(prefixedPath);
  }
}

function ebx_form_setNodeMandatoryIndicator(prefixedPath, isDisplayed) {
  // CP-18641

  var labelId = EBX_FormNodeIndex.pathLabelId[prefixedPath];
  if (labelId === undefined) {
    return;
  }
  var labelEl = document.getElementById(labelId);
  if (labelEl === null) {
    return;
  }

  var mandatoryFlag = null;
  var mandatoryFlagContainer = null;

  var field = EBX_Utils.getFirstParentMatchingCSSClass(labelEl, "ebx_Field");
  if (field === null) {
    mandatoryFlagContainer = EBX_Utils.getFirstDirectChildMatchingCSSClass(labelEl, "ebx_RawLabel");
  } else {
    mandatoryFlagContainer = EBX_Utils.getFirstDirectChildMatchingCSSClass(field, "ebx_FieldInfos");
  }

  if (mandatoryFlagContainer !== null) {
    mandatoryFlag = EBX_Utils.getFirstDirectChildMatchingCSSClass(mandatoryFlagContainer, "ebx_MandatoryFlag");

    if (isDisplayed && mandatoryFlag === null) {
      // Must be the same as com.orchestranetworks.manager.core.utils.FormLabelSpecUtils#getMandatoryFlag
      mandatoryFlag = document.createElement("span");
      EBX_Utils.addCSSClass(mandatoryFlag, "ebx_MandatoryFlag");
      var asterisk = document.createTextNode("*");
      mandatoryFlag.appendChild(asterisk);

      mandatoryFlagContainer.appendChild(mandatoryFlag);
    }
  }

  if (mandatoryFlag !== null) {
    mandatoryFlag.style.display = isDisplayed ? "" : "none";
  }
}

function ebx_form_formatLegacyPath(path) {
  if ((path.length < 2) || (path.charAt(1) != '@')) {
    if (EBX_FormNode.pathAutoPrefix) {
      return EBX_FormNode.pathAutoPrefix + path;
    } else {
      EBX_Logger.log(path + " un-prefixed paths are not allowed in this context", EBX_Logger.error);
      return "missing prefix: " + path;
    }
  }
  return path;
}

function EBX_FormNode() {
}

// deprecated. please use ebx_form_getValue() instead
EBX_FormNode.getValue = function (path) {
  return ebx_form_getValue(path);
};

//deprecated. please use ebx_form_setValue() instead
EBX_FormNode.setValue = function (path, value) {
  ebx_form_setValue(path, value);
};

/* START Form node structure */

function EBX_FormNodeIndex() {
}

/* initialized by UITreeForm */
EBX_FormNodeIndex.pathsTree = {};
EBX_FormNodeIndex.nodes = {};
EBX_FormNodeIndex.fieldsIdPath = [];

/* initialized for form label */
EBX_FormNodeIndex.pathLabelId = [];

EBX_FormNodeIndex.TYPE_TAB = 1;
EBX_FormNodeIndex.TYPE_NOT_TERMINAL_LINE = 2;
EBX_FormNodeIndex.TYPE_TERMINAL_LINE = 3;
EBX_FormNodeIndex.TYPE_SUB_TERMINAL_LINE = 4;
EBX_FormNodeIndex.TYPE_SUB_TERMINAL_RAW = 5;

EBX_FormNodeIndex.SEVERITY_ERROR = {
  cssSuffix: "_error"
};
EBX_FormNodeIndex.SEVERITY_WARNING = {
  cssSuffix: "_warn"
};
EBX_FormNodeIndex.SEVERITY_INFO = {
  cssSuffix: "_info"
};

EBX_FormNodeIndex.isFormNodeDefined = function (prefixedPath) {
  return EBX_FormNodeIndex.nodes[prefixedPath] !== undefined;
};

EBX_FormNodeIndex.getFormNode = function (prefixedPath) {
  var formNode = EBX_FormNodeIndex.nodes[prefixedPath];
  if (formNode === undefined) {
    EBX_Logger.log("The formNode at the prefixed path \"" + prefixedPath + "\" is not defined.", EBX_Logger.warn);
    return null;
  }

  if (formNode.constructor === Object) {
    switch (formNode.type) {
      case EBX_FormNodeIndex.TYPE_TAB:
        formNode = new EBX_FormNodeTab(prefixedPath, formNode);
        break;
      case EBX_FormNodeIndex.TYPE_NOT_TERMINAL_LINE:
        formNode = new EBX_FormNotTerminalNode(prefixedPath, formNode);
        break;
      case EBX_FormNodeIndex.TYPE_TERMINAL_LINE:
        formNode = new EBX_FormTerminalNode(prefixedPath, formNode);
        break;
      case EBX_FormNodeIndex.TYPE_SUB_TERMINAL_LINE:
        formNode = new EBX_FormSubTerminalNode(prefixedPath, formNode);
        break;
      case EBX_FormNodeIndex.TYPE_SUB_TERMINAL_RAW:
        formNode = new EBX_SubTerminalRawNode(prefixedPath, formNode);
        break;
      default:
        EBX_Logger.log("EBX_FormNodeIndex.getFormNode(" + prefixedPath + "): Unknown node type " + formNode.type,
            EBX_Logger.error);
        return null;
    }
    EBX_FormNodeIndex.nodes[prefixedPath] = formNode;
  }
  return formNode;
};

/* Parent of "foo" is null.
 * Parent of "/" is "/".
 * Parent of "/foo" is "/".
 * Parent of "/foo/" is "/foo".
 * Parent of "/foo/bar" is "/foo".
 * Parent of "/foo/bar[] is "/foo/bar".
 * Parent of "/foo/bar[x] is "/foo/bar".
 * Parent of "/foo/bar] is null.
 * Parent of "/foo/bar[ is "/foo".
 */
EBX_FormNodeIndex.getParentPath = function (path) {
  var truncIndex;

  // detect the last ']' for list occurrence
  if (path.substring(path.length, path.length - 1) === "]") {
    truncIndex = path.lastIndexOf("[");
    if (truncIndex < 0) {
      return null;
    }
  } else {
    truncIndex = path.lastIndexOf("/");
    if (truncIndex < 0) {
      return null;
    }
    if (truncIndex === 0) {
      return "/";
    }
  }

  return path.substring(0, truncIndex);
};

EBX_FormNodeIndex.setMandatoryIndicator = function (isDisplayed) {
  // CP-18641

  ebx_form_setNodeMandatoryIndicator(this.path, isDisplayed);
};

/* END Form node structure */

/* START Form nodes */

function EBX_FormNodeTab(path, formNode) {
  this.path = path;
  this.tabNodeIndex = formNode.tabNodeIndex;
}

EBX_FormNodeTab.prototype = {
  constructor: EBX_FormNodeTab,

  focus: function () {
    // TODO CCH
  },

  setSeverityFlag: function (severity) {
    // TODO CCH
  }
};

function EBX_FormNodeLine() {
}

EBX_FormNodeLine.getTRElement = function () {
  if (this.trElement === undefined) {
    this.trElement = document.getElementById(this.trElementId);
  }
  return this.trElement;
};

EBX_FormNodeLine.getParent = function () {
  if (this.parent === undefined) {
    this.parent = EBX_FormNodeIndex.getFormNode(EBX_FormNodeIndex.getParentPath(this.path));
  }
  return this.parent;
};

EBX_FormNodeLine.setSeverityFlag = function (severity) {
  // disabled for the moment
  return;

  //	var element = this.getTRElement();
  //
  //	// FIXME CCH list occurrences (li) does not work for the moment
  //	if (element !== null) {
  //		var cssSuffix = "";
  //		if (severity !== null) {
  //			cssSuffix = severity.cssSuffix;
  //		}
  //		element.className = EBX_FormNodeLine.replaceNeutralCssClass(element.className, this.neutralCssClass, cssSuffix);
  //	}
  //
  //	// disabled for the moment (problem of siblings with severity & parent refresh)
  //	//  for this case, it would be a childrenSeverity:map<Node,Severity> for each level
  //	//   but we have problem of initialisation
  //	/*
  //	 if (this.getParent() !== null) {
  //	 this.getParent().setSeverityFlag(severity);
  //	 }
  //	 */
};

EBX_FormNodeLine.replaceNeutralCssClass = function (cssClass, neutralCssClass, cssClassSuffixToAdd) {
  var indexNeutralBegin = cssClass.indexOf(neutralCssClass);

  if (indexNeutralBegin < 0) {
    // neutral css class not found
    return cssClass;
  }

  var indexNeutralEnds = cssClass.indexOf(" ", indexNeutralBegin);

  var newCSSClass = [];
  newCSSClass.push(cssClass.substring(0, indexNeutralBegin));
  newCSSClass.push(neutralCssClass, cssClassSuffixToAdd);
  if (indexNeutralEnds > 0) {
    // neutral css class was the last
    newCSSClass.push(cssClass.substring(indexNeutralEnds));
  }

  return newCSSClass.join("");
};

function EBX_FormNotTerminalNode(path, formNode) {
  this.path = path;
  this.trElementId = formNode.trId;
  this.neutralCssClass = formNode.neutralCssClass;
}

EBX_FormNotTerminalNode.prototype = {
  constructor: EBX_FormNotTerminalNode,

  focus: function () {
    // TODO CCH
  },

  getTRElement: EBX_FormNodeLine.getTRElement,
  getParent: EBX_FormNodeLine.getParent,
  setSeverityFlag: EBX_FormNodeLine.setSeverityFlag
};

function EBX_DecoratedField() {
}

EBX_DecoratedField.getEditor = function () {
  if (this.editorName === undefined) {
    EBX_Logger.log("The editorName for the formNode \"" + this.path + "\" is not defined.", EBX_Logger.error);
    this.editorName = "EBX_FormNodeEditor_Missing";
  }
  if (this.editor === undefined) {
    this.editor = eval("new " + this.editorName + "(this.getDecoratorElement(), this.editorArgs);");
  }
  return this.editor;
};
EBX_DecoratedField.getDecoratorElement = function () {
  if (this.decoratorEl === undefined) {
    this.decoratorEl = document.getElementById(this.decoratorId);
  }
  return this.decoratorEl;
};
EBX_DecoratedField.MessageContainerCSSClass = "ebx_MessageContainer";
EBX_DecoratedField.getMessageContainer = function () {
  if (this.messageContainer === undefined) {
    var decoratorEl = this.getDecoratorElement();
    if (decoratorEl === null) {
      return null;
    }
    this.messageContainer = EBX_Utils.getFirstDirectChildMatchingCSSClass(decoratorEl,
        EBX_DecoratedField.MessageContainerCSSClass);
  }
  if (this.messageContainer === null) {
    this.messageContainer = document.createElement("div");
    this.messageContainer.className = EBX_DecoratedField.MessageContainerCSSClass;
  }
  return this.messageContainer;
};

EBX_DecoratedField.setMessage = function (message) {
  var messageContainer = this.getMessageContainer();
  if (messageContainer === null) {
    // case of read only form node
    return false;
  }
  var strBuf = [];
  var higherSeverity = null;
  var length, i;
  if (message.errors !== undefined) {
    higherSeverity = EBX_FormNodeIndex.SEVERITY_ERROR;
    strBuf.push("<div class=\"ebx_IconError\">");
    length = message.errors.length;
    for (i = 0; i < length; i++) {
      strBuf.push("<div class=\"ebx_Error\">", message.errors[i], "</div>");
    }
    strBuf.push("</div>");
  }
  if (message.warnings !== undefined) {
    if (higherSeverity === null) {
      higherSeverity = EBX_FormNodeIndex.SEVERITY_WARNING;
    }
    strBuf.push("<div class=\"ebx_IconWarning\">");
    length = message.warnings.length;
    for (i = 0; i < length; i++) {
      strBuf.push("<div class=\"ebx_Warning\">", message.warnings[i], "</div>");
    }
    strBuf.push("</div>");
  }
  if (message.infos !== undefined) {
    if (higherSeverity === null) {
      higherSeverity = EBX_FormNodeIndex.SEVERITY_INFO;
    }
    strBuf.push("<div class=\"ebx_IconInfo\">");
    length = message.infos.length;
    for (i = 0; i < length; i++) {
      strBuf.push("<div class=\"ebx_Info\">", message.infos[i], "</div>");
    }
    strBuf.push("</div>");
  }

  EBX_Loader.onMouseReleasedOnce(EBX_DecoratedField.setMessageDeferred, {
    content: strBuf.join("")
  }, this);

  var decoratorElement = this.getDecoratorElement();

  EBX_Utils.removeCSSClass(decoratorElement, "ebx_FieldInError");
  EBX_Utils.removeCSSClass(decoratorElement, "ebx_FieldInWarning");
  EBX_Utils.removeCSSClass(decoratorElement, "ebx_FieldInInfo");

  if (higherSeverity === EBX_FormNodeIndex.SEVERITY_ERROR) {
    EBX_Utils.addCSSClass(decoratorElement, "ebx_FieldInError");
  }
  if (higherSeverity === EBX_FormNodeIndex.SEVERITY_WARNING) {
    EBX_Utils.addCSSClass(decoratorElement, "ebx_FieldInWarning");
  }
  if (higherSeverity === EBX_FormNodeIndex.SEVERITY_INFO) {
    EBX_Utils.addCSSClass(decoratorElement, "ebx_FieldInInfo");
  }

  return higherSeverity;
};
EBX_DecoratedField.setMessageDeferred = function (args) {
  var messageContainer = this.getMessageContainer();

  // If there is no message, remove message element.
  if (args.content.length === 0) {
    if (messageContainer.parentNode) {
      messageContainer.parentNode.removeChild(this.getMessageContainer());
      messageContainer.innerHTML = "";
    }
  } else { // Else append to decorator field.
    if (!messageContainer.parentNode) {
      this.getDecoratorElement().appendChild(messageContainer);
    }
    this.getMessageContainer().innerHTML = args.content;
  }
};
EBX_DecoratedField.setWaiting = function (isWaiting) {
  if (this.isWaiting === undefined) {
    this.isWaiting = 0;
  }

  if (isWaiting === true) {
    EBX_FormPresenterStatusIndicator.incrementWaiting();
    this.isWaiting++;
  } else {
    EBX_FormPresenterStatusIndicator.decrementWaiting();
    this.isWaiting--;
  }

  // just in case...
  if (this.isWaiting < 0) {
    this.isWaiting = 0;
  }

  // this.refreshStatusFlag();
};
EBX_DecoratedField.refreshStatusFlag = function () {
  /*
   if (this.statusFlag === undefined) {
   var decoratorElement = this.getDecoratorElement();
   this.statusFlag = EBX_Utils.getFirstDirectChildMatchingCSSClass(decoratorElement, "ebx_FieldStatusFlag");
   }

   if (this.isWaiting === 1) {
   EBX_Utils.addCSSClass(this.statusFlag, "ebx_FieldStatusFlag_waiting");
   } else if (this.isWaiting === 0) {
   EBX_Utils.removeCSSClass(this.statusFlag, "ebx_FieldStatusFlag_waiting");
   }
   */
};

function EBX_FormTerminalNode(path, formNode) {
  this.path = path;
  this.trElementId = formNode.trId;
  this.editorName = formNode.editorName;
  this.editorArgs = formNode.editorArgs;
  this.neutralCssClass = formNode.neutralCssClass;
  this.decoratorId = formNode.decoId;
  this.inputName = formNode.inputName;
  // not used for the moment
  /*
   this.eventBeforeValueChanged = formNode.eventBeforeValueChanged;
   */
  this.eventAfterValueChanged = formNode.eventAfterValueChanged;
  this.isAPV = formNode.isAPV;
  this.isAjaxValueSynch = formNode.isAjaxValueSynch;
  this.messageDisplayed = {};
}

EBX_FormTerminalNode.prototype = {
  constructor: EBX_FormTerminalNode,

  focus: function () {
    // TODO CCH
  },

  getValue: function () {
    // TODO CCH complex case
    return this.getEditor().getValue();
  },

  setValue: function (value) {
    // TODO CCH complex case
    return this.getEditor().setValue(value);
  },

  setMandatory: EBX_FormNodeIndex.setMandatoryIndicator,

  serialize: function () {
    // TODO CCH complex case
    return EBX_FormPresenter.parameterName + "=" + this.inputName + "&" + this.getEditor().serialize();
  },

  setInherit: function () {
    // TODO CCH
  },

  setOverwrite: function () {
    // TODO CCH
  },

  setMessageSuper: EBX_DecoratedField.setMessage,
  setMessage: function (message) {
    this.messageDisplayed = message;
    var higherSeverity = this.setMessageSuper(message);
    this.setSeverityFlag(higherSeverity);
  },
  getMessage: function () {
    return this.messageDisplayed;
  },
  getTRElement: EBX_FormNodeLine.getTRElement,
  getParent: EBX_FormNodeLine.getParent,
  setSeverityFlag: EBX_FormNodeLine.setSeverityFlag,

  getEditor: EBX_DecoratedField.getEditor,
  getDecoratorElement: EBX_DecoratedField.getDecoratorElement,
  getMessageContainer: EBX_DecoratedField.getMessageContainer,
  setWaiting: EBX_DecoratedField.setWaiting,
  refreshStatusFlag: EBX_DecoratedField.refreshStatusFlag
};

function EBX_FormSubTerminalNode(path, formNode) {
  this.path = path;
  this.trElementId = formNode.trId;
  this.editorName = formNode.editorName;
  this.editorArgs = formNode.editorArgs;
  this.neutralCssClass = formNode.neutralCssClass;
  this.decoratorId = formNode.decoId;
  this.inputName = formNode.inputName;
  // not used for the moment
  /*
   this.eventBeforeValueChanged = formNode.eventBeforeValueChanged;
   */
  this.eventAfterValueChanged = formNode.eventAfterValueChanged;
  this.isAPV = formNode.isAPV;
  this.isAjaxValueSynch = formNode.isAjaxValueSynch;
  this.messageDisplayed = {};
}

EBX_FormSubTerminalNode.prototype = {
  constructor: EBX_FormSubTerminalNode,

  focus: function () {
    // TODO CCH
  },

  getValue: function () {
    // TODO CCH complex case
    return this.getEditor().getValue();
  },

  setValue: function (value) {
    // TODO CCH complex case
    return this.getEditor().setValue(value);
  },

  setMandatory: EBX_FormNodeIndex.setMandatoryIndicator,

  serialize: function () {
    // TODO CCH complex case
    return EBX_FormPresenter.parameterName + "=" + this.inputName + "&" + this.getEditor().serialize();
  },

  setMessageSuper: EBX_DecoratedField.setMessage,
  setMessage: function (message) {
    this.messageDisplayed = message;
    var higherSeverity = this.setMessageSuper(message);
    this.setSeverityFlag(higherSeverity);
  },
  getMessage: function () {
    return this.messageDisplayed;
  },
  getTRElement: EBX_FormNodeLine.getTRElement,
  getParent: EBX_FormNodeLine.getParent,
  setSeverityFlag: EBX_FormNodeLine.setSeverityFlag,

  getEditor: EBX_DecoratedField.getEditor,
  getDecoratorElement: EBX_DecoratedField.getDecoratorElement,
  getMessageContainer: EBX_DecoratedField.getMessageContainer,
  setWaiting: EBX_DecoratedField.setWaiting,
  refreshStatusFlag: EBX_DecoratedField.refreshStatusFlag
};

function EBX_SubTerminalRawNode(path, formNode) {
  this.path = path;
  this.editorName = formNode.editorName;
  this.editorArgs = formNode.editorArgs;
  this.decoratorId = formNode.decoId;
  this.inputName = formNode.inputName;
  // not used for the moment
  /*
   this.eventBeforeValueChanged = formNode.eventBeforeValueChanged;
   */
  this.eventAfterValueChanged = formNode.eventAfterValueChanged;
  this.isAPV = formNode.isAPV;
  this.isAjaxValueSynch = formNode.isAjaxValueSynch;
  this.messageDisplayed = {};
}

EBX_SubTerminalRawNode.prototype = {
  constructor: EBX_FormSubTerminalNode,

  getValue: function () {
    return this.getEditor().getValue();
  },

  setValue: function (value) {
    return this.getEditor().setValue(value);
  },

  setMandatory: EBX_FormNodeIndex.setMandatoryIndicator,

  serialize: function () {
    return EBX_FormPresenter.parameterName + "=" + this.inputName + "&" + this.getEditor().serialize();
  },

  getEditor: EBX_DecoratedField.getEditor,
  getDecoratorElement: EBX_DecoratedField.getDecoratorElement,
  getMessageContainer: EBX_DecoratedField.getMessageContainer,
  setMessage: function (message) {
    this.messageDisplayed = message;
    EBX_DecoratedField.setMessage.call(this, message);
  },
  getMessage: function () {
    return this.messageDisplayed;
  },
  setWaiting: EBX_DecoratedField.setWaiting,
  refreshStatusFlag: EBX_DecoratedField.refreshStatusFlag
};

/* END Form nodes */

/* START Form presenter */

function EBX_FormPresenter() {
}

EBX_FormPresenter.addAPVElementListener = function (element) {
  if (element.tagName == "SELECT") {
    // particular case for <select>: onchange is better than blur
    YAHOO.util.Event.addListener(element, "change", EBX_FormPresenter.blurFieldListener, element);
  } else {
    YAHOO.util.Event.addListener(element, "blur", EBX_FormPresenter.blurFieldListener, element);
  }
};

EBX_FormPresenter.blurFieldListener = function (event, element) {
  EBX_FormPresenter.stackElementForValidation(element);
};

EBX_FormPresenter.callComponentEvent = function (componentEvent, value) {
  if (componentEvent === undefined) {
    return true;
  }
  try {
    var fn = eval(componentEvent.fn);
    return fn.call(window, value, componentEvent.arg);
  } catch (error) {
    EBX_UserMessageManager.addMessage(
        "JsFunctionCall on widget<br/>Error on calling <i>" + componentEvent.fn + "</i> :<br/><b>" + error.message
        + "</b>", EBX_UserMessageManager.ERROR);
    return false;
  }
};

/**
 * This method can be used by components to request the validation.
 */
EBX_FormPresenter.stackElementForValidation = function (element) {
  var id = element.id;

  var path = EBX_FormNodeIndex.fieldsIdPath[id];
  if (path === undefined) {
    return;
  }

  EBX_FormPresenter.stackPathForValidation(path);
};
EBX_FormPresenter.pendingPathsToValidate = [];
EBX_FormPresenter.pendingValidateRequest = null;
EBX_FormPresenter.stackPathForValidation = function (path) {
  EBX_FormPresenter.pendingPathsToValidate.push(path);
  clearTimeout(EBX_FormPresenter.pendingValidateRequest);
  EBX_FormPresenter.pendingValidateRequest = setTimeout(function () {
    EBX_FormPresenter.stackListPathForValidation(EBX_FormPresenter.pendingPathsToValidate,
        EBX_FormPresenter.prevalidateRequestParameter);
    EBX_FormPresenter.pendingPathsToValidate = [];
  }, 20);
};
EBX_FormPresenter.stackListPathForValidationOnPaste = function (paths) {
  EBX_FormPresenter.stackListPathForValidation(paths, EBX_FormPresenter.prevalidateForPasteRequestParameter);
};
EBX_FormPresenter.stackListPathForValidation = function (paths, requestParameter) {
  var nodesToPrevalidate = [];
  var nodesToValueSynch = [];
  for (var i = 0, length = paths.length; i < length; i++) {
    var path = paths[i];
    var formNode = EBX_FormNodeIndex.getFormNode(path);
    if (formNode === null) {
      continue;
    }

    if (formNode.isAPV === true) {
      nodesToPrevalidate.push(formNode);
      continue;
    }

    if (formNode.isAjaxValueSynch === true) {
      nodesToValueSynch.push(formNode);
      continue;
    }

    // not used for the moment
    /*
     var canSend = EBX_FormPresenter.callComponentEvent(formNode.eventBeforeValueChanged, formNode.getValue());
     if (canSend !== true) {
     return;
     }
     */

    EBX_FormPresenter.callComponentEvent(formNode.eventAfterValueChanged, formNode.getValue());
  }
  if (nodesToPrevalidate.length > 0) {
    EBX_FormPresenter.prevalidateList(nodesToPrevalidate, requestParameter);
  }
  if (nodesToValueSynch.length > 0) {
    EBX_FormPresenter.setValueSynch(nodesToValueSynch);
  }
};

/**
 * This method can be used by components to request the update.
 */
EBX_FormPresenter.stackElementForUpdate = function (element) {
  var id = element.id;

  var path = EBX_FormNodeIndex.fieldsIdPath[id];
  if (path === undefined) {
    return;
  }

  EBX_FormPresenter.stackPathForUpdate(path, false);
};
/**
 *
 * @param path {string}
 * @param displayUpdateMessage {boolean}
 */
EBX_FormPresenter.stackPathForUpdate = function (path, displayUpdateMessage) {
  EBX_FormPresenter.stackPathListForUpdate([path], displayUpdateMessage);
};
/**
 * Ask server the updated values for given paths, a single request is sent.
 *
 * Paths not leading to an [EBX_FormNode] are ignored.
 *
 * @param pathList {string[]}
 * @param displayUpdateMessage {boolean}
 */
EBX_FormPresenter.stackPathListForUpdate = function (pathList, displayUpdateMessage) {
  var formNodeList = [];
  for (var i = 0, length = pathList.length; i < length; i++) {
    var formNode = EBX_FormNodeIndex.getFormNode(pathList[i]);
    if (formNode !== null) {
      formNodeList.push(formNode);
    }
  }
  EBX_FormPresenter.update(formNodeList, displayUpdateMessage);
};

EBX_FormPresenter.stackPathForReset = function (path, displayUpdateMessage) {
  var formNode = EBX_FormNodeIndex.getFormNode(path);
  if (formNode === null) {
    return;
  }

  EBX_FormPresenter.reset(formNode, displayUpdateMessage);
};

EBX_FormPresenter.globalAJAXResponseListeners = [];
EBX_FormPresenter.addGlobalAJAXResponseListener = function (fn, scope, additionnalArgs) {
  EBX_FormPresenter.globalAJAXResponseListeners.push({
    fn: fn,
    scope: scope,
    args: additionnalArgs
  });
};

EBX_FormPresenter.dataSource = new YAHOO.util.XHRDataSource();
EBX_FormPresenter.dataSource.responseType = YAHOO.util.DataSource.TYPE_TEXT;
EBX_FormPresenter.dataSource.connXhrMode = "queueRequests";
EBX_FormPresenter.dataSource.connMethodPost = true;
EBX_FormPresenter.dataSource.liveData = EBX_FormPresenter.baseURL;
EBX_FormPresenter.dataSource.handleResponse = function (oRequest, oRawResponse, oCallback, oCaller, tId) {
  var parsedJSONResponse = null, formNodes = oCallback.argument, formNode, i, len;

  if (EBX_Utils.isArray(formNodes) === false) {
    formNode = formNodes;
    formNodes = [];
    formNodes.push(formNode);
  }

  if (oRawResponse.responseText !== "") {
    parsedJSONResponse = YAHOO.lang.JSON.parse(oRawResponse.responseText);
    EBX_FormPresenter.receive(parsedJSONResponse);
    EBX_FormPresenter.callGlobalAJAXResponseListeners(oCallback.eventType, formNodes, parsedJSONResponse);
  }

  for (i = 0, len = formNodes.length; i < len; i++) {
    formNode = formNodes[i];
    formNode.setWaiting(false);
    EBX_FormPresenter.callComponentEvent(formNode.eventAfterValueChanged, formNode.getValue());
  }
};

// This request only set the user input in the value context if it is valid according to the defined data type.
EBX_FormPresenter.setValueSynch = function (formNodeOrList) {
  EBX_FormPresenter.dataSource.liveData = EBX_FormPresenter.baseURL;
  var request = "";
  if (EBX_Utils.isArray(formNodeOrList) === true) {
    for (i = 0, len = formNodeOrList.length; i < len; i++) {
      formNodeOrList[i].setWaiting(true);
      request += "&" + formNodeOrList[i].serialize();
    }
  } else {
    request = formNodeOrList.serialize();
  }

  EBX_FormPresenter.dataSource.sendRequest(request + EBX_FormPresenter.setValueSynchRequestParameter, {
    failure: EBX_FormPresenter.receiveFailure,
    argument: formNodeOrList,
    eventType: "setValueSynch"
  });
};

//This request set the user input in the value context if it is valid according to the
// defined data type and, then check the defined constraints.
EBX_FormPresenter.prevalidateList = function (formNodes, requestParameter) {
  EBX_FormPresenter.dataSource.liveData = EBX_FormPresenter.baseURL;

  var request = "";
  if (EBX_Utils.isArray(formNodes) === true) {
    for (i = 0, len = formNodes.length; i < len; i++) {
      formNodes[i].setWaiting(true);
      request += "&" + formNodes[i].serialize();
    }
  }

  EBX_FormPresenter.dataSource.sendRequest(request + requestParameter, {
    failure: EBX_FormPresenter.receiveFailure,
    argument: formNodes,
    eventType: "prevalidate"
  });
};

/**
 * This request ask the up to date value of the given form node to the value context.
 * @param formNodeList {EBX_FormNode<Object>[]}
 * @param displayUpdateMessage {boolean}
 */
EBX_FormPresenter.update = function (formNodeList, displayUpdateMessage) {
  EBX_FormPresenter.dataSource.liveData = EBX_FormPresenter.baseURL;

  var request = EBX_FormPresenter.displayUpdateMessage + "=" + displayUpdateMessage;
  for (var i = 0, length = formNodeList.length; i < length; i++) {
    var formNode = formNodeList[i];
    formNode.setWaiting(true);
    request += "&" + EBX_FormPresenter.parameterName + "=" + formNode.inputName;
  }

  EBX_FormPresenter.dataSource.sendRequest(request + EBX_FormPresenter.updateRequestParameter, {
    failure: EBX_FormPresenter.receiveFailure,
    argument: formNodeList,
    eventType: "update"
  });
};

// This request sets and returns the persisted value of the given form node to the value context.
EBX_FormPresenter.reset = function (formNode, displayUpdateMessage) {
  EBX_FormPresenter.dataSource.liveData = EBX_FormPresenter.baseURL;
  formNode.setWaiting(true);
  var request = EBX_FormPresenter.parameterName + "=" + formNode.inputName;
  request += "&" + EBX_FormPresenter.displayUpdateMessage + "=" + displayUpdateMessage;
  EBX_FormPresenter.dataSource.sendRequest(request + EBX_FormPresenter.resetRequestParameter, {
    failure: EBX_FormPresenter.receiveFailure,
    argument: formNode,
    eventType: "reset"
  });
};
EBX_FormPresenter.resetRecord = function (recordId, formNodesToUpdate) {
  var request, i, len;

  EBX_FormPresenter.dataSource.liveData = EBX_FormPresenter.baseURL;

  request = EBX_FormPresenter.reset_recordId_pName + "=" + recordId;

  if (EBX_Utils.isArray(formNodesToUpdate) === true) {
    for (i = 0, len = formNodesToUpdate.length; i < len; i++) {
      formNodesToUpdate[i].setWaiting(true);
      request += "&" + EBX_FormPresenter.parameterName + "=" + formNodesToUpdate[i].inputName;
    }
  }

  EBX_FormPresenter.dataSource.sendRequest(request + EBX_FormPresenter.resetRequestParameter, {
    failure: EBX_FormPresenter.receiveFailure,
    argument: formNodesToUpdate,
    eventType: "resetRecord"
  });
};

EBX_FormPresenter.updateDataSource = new YAHOO.util.XHRDataSource();
EBX_FormPresenter.updateDataSource.responseType = YAHOO.util.DataSource.TYPE_TEXT;
EBX_FormPresenter.updateDataSource.connXhrMode = "queueRequests";
EBX_FormPresenter.updateDataSource.connMethodPost = true;
EBX_FormPresenter.updateDataSource.handleResponse = function (oRequest, oRawResponse, oCallback, oCaller, tId) {
  var json = YAHOO.lang.JSON.parse(oRawResponse.responseText), i, len;

  if (json.length === 0) {
    return;
  }

  if (json[0].messages !== "") {
    ebx_alert(json[0].messages);
  }

  var pathsToUpdate = json[1].map(function (item) {
    return item.path
  });
  EBX_FormPresenter.stackPathListForUpdate(pathsToUpdate, true);
};

//This request ask the up to date value of the given form node to the value context.
EBX_FormPresenter.updateFromSubSession = function () {
  EBX_FormPresenter.updateDataSource.liveData = EBX_FormPresenter.updateRequestFromSubSession;
  EBX_FormPresenter.updateDataSource.sendRequest("");
};

EBX_FormPresenter.receiveFailure = function (oRequest, oParsedResponse, singleFormNodeOrList) {
  if (oParsedResponse.status == 401) {
    EBX_Loader.gotoTimeoutPage();
  } else {
    // TODO CCH it could be beautiful to add an iFrame with the result of the page (whole HTML content)
    // oParsedResponse.responseText
    // TODO CCH Filter the response code so that user is not annoyed by error messages which he do not bother.
    // EBX_UserMessageManager.addMessage("Error #" + oParsedResponse.status + ": " + oParsedResponse.statusText, EBX_UserMessageManager.ERROR);
  }
  if (EBX_Utils.isArray(singleFormNodeOrList)) {
    singleFormNodeOrList.forEach(function (formNode) {
      formNode.setWaiting(false)
    });
  } else {
    singleFormNodeOrList.setWaiting(false);
  }

};

EBX_FormPresenter.receive = function (response) {
  if (response.update !== undefined) {
    var update = response.update, i;
    var length = update.length;
    for (i = 0; i < length; i++) {
      var updateItem = update[i];
      var nodePath = updateItem.path;
      var formNode = EBX_FormNodeIndex.getFormNode(nodePath);

      // can happen if this method is called from the grid edit
      // the grid edit didn't load the widgets, but had generate an APV document that contains info
      if (formNode === null) {
        continue;
      }

      // message
      if (updateItem.message !== undefined) {
        formNode.setMessage(updateItem.message);
      } else {
        formNode.setMessage({});
      }

      // value
      if (updateItem.value !== undefined) {
        formNode.setValue(updateItem.value);
      }
    }
  }
};

EBX_FormPresenter.callGlobalAJAXResponseListeners = function (eventType, widgetFormNodesEventSource,
    parsedJSONResponse) {
  var i, len, listener, fn;

  for (i = 0, len = EBX_FormPresenter.globalAJAXResponseListeners.length; i < len; i++) {
    listener = EBX_FormPresenter.globalAJAXResponseListeners[i];
    fn = eval(listener.fn);
    fn.call(listener.scope, eventType, widgetFormNodesEventSource, parsedJSONResponse, listener.args);
  }
};

/* END Form presenter */

/* START Form Presenter Status Indicator */

function EBX_FormPresenterStatusIndicator() {
}

EBX_FormPresenterStatusIndicator.waiting = 0;

EBX_FormPresenterStatusIndicator.incrementWaiting = function () {
  var refreshNeeded = false;
  if (EBX_FormPresenterStatusIndicator.waiting === 0) {
    refreshNeeded = true;
  }

  EBX_FormPresenterStatusIndicator.waiting++;

  if (refreshNeeded) {
    EBX_FormPresenterStatusIndicator.refreshContent();
  }
};

EBX_FormPresenterStatusIndicator.decrementWaiting = function () {
  var refreshNeeded = false;
  if (EBX_FormPresenterStatusIndicator.waiting === 1) {
    refreshNeeded = true;
  }

  EBX_FormPresenterStatusIndicator.waiting--;
  // just in case...
  if (EBX_FormPresenterStatusIndicator.waiting < 0) {
    EBX_FormPresenterStatusIndicator.waiting = 0;
  }

  if (refreshNeeded) {
    EBX_FormPresenterStatusIndicator.refreshContent();
    EBX_FormPresenterStatusIndicator.callListener();
  }
};

EBX_FormPresenterStatusIndicator.isWaiting = function () {
  return EBX_FormPresenterStatusIndicator.waiting > 0;
};

EBX_FormPresenterStatusIndicator.elementId = "ebx_FormStatusFlag";
EBX_FormPresenterStatusIndicator.element = null;
EBX_FormPresenterStatusIndicator.elementEnabledCSSClass = "ebx_FormStatusFlagEnabled";

EBX_FormPresenterStatusIndicator.refreshContent = function () {
  if (EBX_FormPresenterStatusIndicator.element === null) {
    EBX_FormPresenterStatusIndicator.element = document.getElementById(EBX_FormPresenterStatusIndicator.elementId);
    if (EBX_FormPresenterStatusIndicator.element === null) {
      return;
    }
  }

  if (EBX_FormPresenterStatusIndicator.isWaiting()) {
    EBX_Utils.addCSSClass(EBX_FormPresenterStatusIndicator.element,
        EBX_FormPresenterStatusIndicator.elementEnabledCSSClass);
  } else {
    EBX_Utils.removeCSSClass(EBX_FormPresenterStatusIndicator.element,
        EBX_FormPresenterStatusIndicator.elementEnabledCSSClass);
  }
};

EBX_FormPresenterStatusIndicator.listenerToCallOnWaitingEnd = null;

EBX_FormPresenterStatusIndicator.setListenerOnWaitingEnd = function (listener) {
  if (EBX_FormPresenterStatusIndicator.isWaiting()) {
    EBX_FormPresenterStatusIndicator.listenerToCallOnWaitingEnd = listener;
  } else {
    window.setTimeout(listener, 0);
  }
};

EBX_FormPresenterStatusIndicator.callListener = function () {
  if (EBX_FormPresenterStatusIndicator.listenerToCallOnWaitingEnd !== null) {
    window.setTimeout(EBX_FormPresenterStatusIndicator.listenerToCallOnWaitingEnd, 0);
    EBX_FormPresenterStatusIndicator.listenerToCallOnWaitingEnd = null;
  }
};

/* END Form Presenter Status Indicator */

/********* ebx_form.js *********/
/*
 * Copyright TIBCO Software Inc. 2001-2021. All rights reserved.
 */

function EBX_Form() {
}

EBX_Form.WorkspaceFormId = "ebx_WorkspaceContentForm";
/* Overwritten by UITreeForm if needed */
EBX_Form.initWorkspaceFormTreeTabview = false;
EBX_Form.WorkspaceFormTabviewId = "ebx_WorkspaceFormTabview";
EBX_Form.WorkspaceFormTabContentCSSClass = "ebx_WorkspaceFormTabContent";
EBX_Form.WorkspaceFormBottomBarWithScrollCSSClass = "ebx_WorkspaceFormFooter_with-scroll";
/* Default value. Overwritten by UIConstantsJS */
EBX_Form.inputWidth = 300;

EBX_Form.formIdsDetectionOfLostModificationDisabled = [];

EBX_Form.initWorkspaceFormTreeTask = function () {
  EBX_Loader.changeTaskState(EBX_Loader_taskId_workspace_form, EBX_Loader.states.processing);
  EBX_Form.initWorkspaceFormTree();
  EBX_Loader.changeTaskState(EBX_Loader_taskId_workspace_form, EBX_Loader.states.done);
};

EBX_Form.initWorkspaceFormTree = function () {
  if (EBX_Form.initWorkspaceFormTreeTabview === true) {
    EBX_Form.WorkspaceFormTabview = new YAHOO.widget.TabView(EBX_Form.WorkspaceFormTabviewId);

    EBX_Form.WorkspaceFormTabview.addListener("activeTabChange", EBX_Form.tabSelectedListener);
    EBX_Form.WorkspaceFormTabview.addListener("activeTabChange",
        EBX_Form.activeTabChangeListenerForLaunchComponentJSCmd);
    EBX_Form.isTabFormReady = true;

    YAHOO.util.Event.addListener(EBX_Form.getWorkspaceFormTabviewTabs(), "scroll", EBX_Form.handleTabviewTabsScroll);
  }

  EBX_Form.addResizeListenerToScrollContent();

  EBX_Form.initWorkspaceFormTreeComponents();
  EBX_Form.initWorkspaceFormTreeExtensions();

  if (EBX_Form.initWorkspaceFormTreeTabview === true) {
    if (EBX_Form.WorkspaceFormTabview.get("activeIndex") === null) {
      EBX_Form.WorkspaceFormTabview.selectTab(0);
      EBX_Form.activeTabChangeListenerForLaunchComponentJSCmd({
        newValue: EBX_Form.WorkspaceFormTabview.getTab(0)
      });
    } else {
      EBX_Form.activeTabChangeListenerForLaunchComponentJSCmd({
        newValue: EBX_Form.WorkspaceFormTabview.getTab(EBX_Form.WorkspaceFormTabview.get("activeIndex"))
      });
    }

    if (EBX_Form.tabViews[EBX_Form.WorkspaceFormTabviewId] === undefined) {
      EBX_Form.tabViews[EBX_Form.WorkspaceFormTabviewId] = {};
    }

    EBX_Form.tabViews[EBX_Form.WorkspaceFormTabviewId].yuiTabView = EBX_Form.WorkspaceFormTabview;
  }

  EBX_Form.initFocusEvents(EBX_Form.WorkspaceFormId);

  EBX_Form.resizeFormBody();
};

EBX_Form.addResizeListenerToScrollContent = function () {
  var watchedElementsChildren = [];
  if (EBX_Form.initWorkspaceFormTreeTabview) {
    // Watch each tab content size
    var workspaceFormTabContent = document.querySelectorAll("." + EBX_Form.WorkspaceFormTabContentCSSClass);
    for (var i = 0; workspaceFormTabContent && i < workspaceFormTabContent.length; i++) {
      var tabContentEl = workspaceFormTabContent[i];

      // If Tab includes a sub form pane with tabs, watch those sub tabs instead.
      if (EBX_Utils.matchCSSClass(tabContentEl, EBX_Form.tabContentEmbeddingTabbedPaneCSSClass)) {
        // use this feature under root tab only (for now)
        var subNavSetEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(tabContentEl, "yui-navset");
        var subContentEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(subNavSetEl, "yui-content");
        var subTabContentEl = EBX_Utils.firstElementChild(subContentEl);
        do {
          watchedElementsChildren.push(subTabContentEl);
        } while ((subTabContentEl = EBX_Utils.nextElementSibling(subTabContentEl)) !== null);
      } else {
        watchedElementsChildren.push(tabContentEl);
      }
    }
  } else {
    watchedElementsChildren.push(EBX_Form.getFormBody());
  }

  var listener = new ResizeObserver(function (entries) {
    EBX_Form.resizeFormBody();
  });

  // There is no content wrapper around datas, so have to listen to each children.
  for (var j = 0, length = watchedElementsChildren.length; j < length; j++) {
    var watchedElement = EBX_Utils.firstElementChild(watchedElementsChildren[j]);
    while (watchedElement !== null) {
      if (!watchedElement.classList.contains("ebx_form_bottom_bar_spacer") && watchedElement.id
          !== "ebx_ScrollShadow") {
        listener.observe(watchedElement);
      }
      watchedElement = EBX_Utils.nextElementSibling(watchedElement);
    }
  }

  window.addEventListener('beforeunload', function (event) {
    listener.disconnect();
  });
};

EBX_Form.initWorkspaceFormTreeComponents = function () {
// This function must be overridden by the main form in the page (script in body)
};
EBX_Form.initWorkspaceFormTreeExtensions = function () {
// This function must be overridden by the main form in the page (script in body)
};

EBX_Form.scrollShadow = null;
EBX_Form.getScrollShadow = function () {
  if (EBX_Form.scrollShadow === null) {
    EBX_Form.scrollShadow = document.getElementById("ebx_ScrollShadow");
  }
  return EBX_Form.scrollShadow;
};

EBX_Form.displayShadowOnScroll = function () {
  var scrollShadow = EBX_Form.getScrollShadow();
  if (scrollShadow === null) {
    return;
  }

  if (EBX_ModelExtensionFrame.isInExtension()) {
    scrollShadow.style.display = "none";
    return;
  }

  if (EBX_Form.getFormBody().scrollTop > 0) {
    scrollShadow.style.display = "block"
  } else {
    scrollShadow.style.display = "none";
  }
};

EBX_Form.tabSelectedListener = function (event) {
  if (EBX_Form.isCustomLayout) {
    EBX_Form.customTabSelectedListener(event, EBX_Form.WorkspaceFormTabviewId);
  } else {
    var nodeIndex = event.newValue.get("contentEl").id.substr(EBX_Form.tabIdPrefix.length);
    EBX_Form.sendSelectTabNodeIndex(nodeIndex);
  }

  // Refresh workspace form content height according if a validation report is displayed or not.
  EBX_Form.resizeFormBody();
};
EBX_Form.yuiDataSourceCustomSelectTab = null;
EBX_Form.customTabSelectedListener = function (event, formTabbedPaneId) {
  if (EBX_Form.yuiDataSourceCustomSelectTab === null) {
    EBX_Form.yuiDataSourceCustomSelectTab = new YAHOO.util.XHRDataSource(EBX_Form.customSelectTabRequest);
  }

  var tabId = event.newValue.get("contentEl").id;

  var request = [];
  request.push(EBX_Form.selectedTabbedPaneParameter, formTabbedPaneId);
  request.push(EBX_Form.selectedTabParameter, tabId);
  EBX_Form.yuiDataSourceCustomSelectTab.sendRequest(request.join(""), null);

  // Refresh workspace form content height according if a validation report is displayed or not.
  EBX_Form.resizeFormBody();
};
EBX_Form.yuiDataSourceSelectTab = null;
EBX_Form.sendSelectTabNodeIndex = function (nodeIndex) {
  if (EBX_Form.yuiDataSourceSelectTab === null) {
    EBX_Form.yuiDataSourceSelectTab = new YAHOO.util.XHRDataSource(EBX_Form.selectTabRequest);
  }
  EBX_Form.yuiDataSourceSelectTab.sendRequest(EBX_Form.selectedTabNodeIndexParameter + nodeIndex, null);
};

EBX_Form.WorkspaceFormTabviewTabsId = "ebx_WorkspaceFormTabviewTabs";
EBX_Form.tabViewScrollerId = "ebx_TabScroller";
EBX_Form.tabViewScrollLeftId = "ebx_TabScrollLeft";
EBX_Form.tabViewScrollRightId = "ebx_TabScrollRight";
EBX_Form.WorkspaceFormTabviewTabsEl = null;
EBX_Form.tabViewScrollerEl = null;
EBX_Form.tabViewScrollLeftButton = null;
EBX_Form.tabViewScrollRightButton = null;
EBX_Form.getWorkspaceFormTabviewTabs = function () {
  if (EBX_Form.WorkspaceFormTabviewTabsEl === null) {
    EBX_Form.WorkspaceFormTabviewTabsEl = document.getElementById(EBX_Form.WorkspaceFormTabviewTabsId);
  }
  return EBX_Form.WorkspaceFormTabviewTabsEl;
};
EBX_Form.getTabViewScrollLeft = function () {
  if (EBX_Form.tabViewScrollLeftButton === null) {
    EBX_Form.tabViewScrollLeftButton = document.getElementById(EBX_Form.tabViewScrollLeftId);
  }
  return EBX_Form.tabViewScrollLeftButton;
};
EBX_Form.getTabViewScrollRight = function () {
  if (EBX_Form.tabViewScrollRightButton === null) {
    EBX_Form.tabViewScrollRightButton = document.getElementById(EBX_Form.tabViewScrollRightId);
  }
  return EBX_Form.tabViewScrollRightButton;
};
EBX_Form.getTabViewScroller = function () {
  if (EBX_Form.tabViewScrollerEl === null) {
    EBX_Form.tabViewScrollerEl = document.getElementById(EBX_Form.tabViewScrollerId);
  }
  return EBX_Form.tabViewScrollerEl;
};

EBX_Form.tabViewScrollIntervalTime = 50;
// ms
EBX_Form.tabViewScrollIncrementSlow = 1;
EBX_Form.tabViewScrollIncrementNormal = 10;

EBX_Form.tabViewScrollInterval = null;

EBX_Form.tabViewScrollMouseDownCSSClass = "ebx_mousedown";

EBX_Form.tabViewScrollLeftSlow = function () {
  var ul = EBX_Form.getWorkspaceFormTabviewTabs();
  ul.scrollLeft -= EBX_Form.tabViewScrollIncrementSlow;
};
EBX_Form.tabViewScrollRightSlow = function () {
  var ul = EBX_Form.getWorkspaceFormTabviewTabs();
  ul.scrollLeft += EBX_Form.tabViewScrollIncrementSlow;
};

EBX_Form.tabViewScrollLeft = function () {
  var ul = EBX_Form.getWorkspaceFormTabviewTabs();
  ul.scrollLeft -= EBX_Form.tabViewScrollIncrementNormal;
};
EBX_Form.tabViewScrollRight = function () {
  var ul = EBX_Form.getWorkspaceFormTabviewTabs();
  ul.scrollLeft += EBX_Form.tabViewScrollIncrementNormal;
};

EBX_Form.setButtonLeftMouseDownCSS = function () {
  EBX_Utils.addCSSClass(EBX_Form.getTabViewScrollLeft(), EBX_Form.tabViewScrollMouseDownCSSClass);
};
EBX_Form.setButtonRightMouseDownCSS = function () {
  EBX_Utils.addCSSClass(EBX_Form.getTabViewScrollRight(), EBX_Form.tabViewScrollMouseDownCSSClass);
};
EBX_Form.removeButtonLeftMouseDownCSS = function () {
  EBX_Utils.removeCSSClass(EBX_Form.getTabViewScrollLeft(), EBX_Form.tabViewScrollMouseDownCSSClass);
};
EBX_Form.removeButtonRightMouseDownCSS = function () {
  EBX_Utils.removeCSSClass(EBX_Form.getTabViewScrollRight(), EBX_Form.tabViewScrollMouseDownCSSClass);
};

EBX_Form.tabViewScrollLeftMouseOver = function () {
  window.clearInterval(EBX_Form.tabViewScrollInterval);

  EBX_Form.tabViewScrollInterval = window.setInterval(EBX_Form.tabViewScrollLeftSlow,
      EBX_Form.tabViewScrollIntervalTime);
};
EBX_Form.tabViewScrollRightMouseOver = function () {
  window.clearInterval(EBX_Form.tabViewScrollInterval);

  EBX_Form.tabViewScrollInterval = window.setInterval(EBX_Form.tabViewScrollRightSlow,
      EBX_Form.tabViewScrollIntervalTime);
};

EBX_Form.tabViewScrollLeftMouseDown = function () {
  EBX_Form.setButtonLeftMouseDownCSS();

  EBX_Form.tabViewScrollLeft();

  window.clearInterval(EBX_Form.tabViewScrollInterval);

  EBX_Form.tabViewScrollInterval = window.setInterval(EBX_Form.tabViewScrollLeft, EBX_Form.tabViewScrollIntervalTime);
};
EBX_Form.tabViewScrollRightMouseDown = function () {
  EBX_Form.setButtonRightMouseDownCSS();

  EBX_Form.tabViewScrollRight();

  window.clearInterval(EBX_Form.tabViewScrollInterval);

  EBX_Form.tabViewScrollInterval = window.setInterval(EBX_Form.tabViewScrollRight, EBX_Form.tabViewScrollIntervalTime);
};

EBX_Form.tabViewScrollLeftMouseUp = function () {
  EBX_Form.removeButtonLeftMouseDownCSS();
  EBX_Form.tabViewScrollLeftMouseOver();
};
EBX_Form.tabViewScrollRightMouseUp = function () {
  EBX_Form.removeButtonRightMouseDownCSS();
  EBX_Form.tabViewScrollRightMouseOver();
};

EBX_Form.tabViewScrollLeftMouseOut = function () {
  EBX_Form.removeButtonLeftMouseDownCSS();
  window.clearInterval(EBX_Form.tabViewScrollInterval);
};
EBX_Form.tabViewScrollRightMouseOut = function () {
  EBX_Form.removeButtonRightMouseDownCSS();
  window.clearInterval(EBX_Form.tabViewScrollInterval);
};

EBX_Form.handleTabviewTabsScroll = function (event) {
  EBX_Form.refreshTabViewScrollButtons();
};
EBX_Form.refreshTabViewScrollButtons = function () {
  var ul = EBX_Form.getWorkspaceFormTabviewTabs();
  var tabLeft = EBX_Form.getTabViewScrollLeft();
  var tabRight = EBX_Form.getTabViewScrollRight();

  if (ul.scrollLeft === 0) {
    EBX_Utils.addCSSClass(tabLeft, EBX_ButtonUtils.disabledButtonCSSClass);
  } else {
    EBX_Utils.removeCSSClass(tabLeft, EBX_ButtonUtils.disabledButtonCSSClass);
  }

  if (ul.scrollLeft === (ul.scrollWidth - ul.clientWidth)) {
    EBX_Utils.addCSSClass(tabRight, EBX_ButtonUtils.disabledButtonCSSClass);
  } else {
    EBX_Utils.removeCSSClass(tabRight, EBX_ButtonUtils.disabledButtonCSSClass);
  }
};

EBX_Form.refreshTabViewScrollDiv = function () {
  var ul = EBX_Form.getWorkspaceFormTabviewTabs();
  var scroller = EBX_Form.getTabViewScroller();

  // default is none
  scroller.style.display = "";
  ul.style.paddingRight = "";
  ul.lastElementChild.style.marginRight = "0";

  if (ul.scrollWidth > ul.clientWidth) {
    scroller.style.display = "block";
    ul.style.paddingRight = "0";
    ul.lastElementChild.style.marginRight = "56px";
    EBX_Form.refreshTabViewScrollButtons();
  }
};

/* Default value. Overwritten by UIConstantsJS */
EBX_Form.scrollTabViewMarginAroundTab = 15;
// to view a piece of the sibling tab
EBX_Form.scrollTabViewForSelectedTab = function () {
  var ul = EBX_Form.getWorkspaceFormTabviewTabs();
  var selectedTab = EBX_Utils.getFirstDirectChildMatchingCSSClass(ul, "selected");
  EBX_Form.scrollTabViewForTab(selectedTab);
};

EBX_Form.scrollTabViewForTab = function (tabEl) {
  var ul = EBX_Form.getWorkspaceFormTabviewTabs();

  var ulX = YAHOO.util.Dom.getX(ul);
  var selectedTabX = YAHOO.util.Dom.getX(tabEl);

  var cutAtLeft = selectedTabX - EBX_Form.scrollTabViewMarginAroundTab < ulX;
  var cutAtRight = selectedTabX + tabEl.offsetWidth + EBX_Form.scrollTabViewMarginAroundTab > ulX + ul.clientWidth;

  // do not scroll if the tab is entirely displayed
  if (!cutAtLeft && !cutAtRight) {
    return;
  }

  var selectedTabOffsetLeftScroll = tabEl.offsetLeft;
  if (tabEl.offsetParent != ul) {
    selectedTabOffsetLeftScroll -= ul.offsetLeft;
  }

  // 'l' left or 'c' center or 'r' right
  var align;

  // if the tab is cut at left and right at the same time (when the tab is larger than the list)
  if (cutAtLeft && cutAtRight) {
    // align left
    align = 'l';
  } else {
    if (cutAtLeft) {
      // if it is not visible at all
      if (selectedTabX + tabEl.offsetWidth < ulX) {
        // then align center
        align = 'c';
      } else {
        // align left
        align = 'l';
      }
    } else {// cut at right
      // if it is not visible at all
      if (selectedTabX > ulX + ul.clientWidth) {
        // then align center
        align = 'c';
      } else {
        // align right
        align = 'r';
      }
    }
  }

  var targetScrollLeft = 0; // just in case, to init the var
  var marginRight = EBX_Form.scrollTabViewMarginAroundTab;
  if (ul.scrollWidth > ul.clientWidth) {
    marginRight = 56;
  }
  switch (align) {
    case 'l':
      targetScrollLeft = selectedTabOffsetLeftScroll - marginRight;
      break;

    case 'c':
      targetScrollLeft = selectedTabOffsetLeftScroll - ul.clientWidth / 2 + tabEl.offsetWidth / 2;
      break;

    case 'r':
      targetScrollLeft = selectedTabOffsetLeftScroll - ul.clientWidth + tabEl.offsetWidth
          + marginRight;
      break;

    default:
  }

  ul.scrollLeft = targetScrollLeft;
};

EBX_Form.initFormBodyAutoHeight = function () {
  EBX_Loader.changeTaskState(EBX_Loader_taskId_workspace_form_bodyautoheight, EBX_Loader.states.processing);

  EBX_LayoutManager.bodyLayout.addListener("resize", EBX_Form.resizeFormBody, null, null);
  EBX_LayoutManager.isWorkspaceFormManageResizeWorkspaceListeners = true;

  // disable WorkspaceContent scrolls (for roll-over panes on form, like calendar)
  if (EBX_ModelExtensionFrame.isInExtension()) {
    EBX_LayoutManager.WorkspaceContentAreaEl.style.background = "transparent";
  }
  EBX_LayoutManager.WorkspaceContentEl.style.overflow = "visible";
  EBX_LayoutManager.WorkspaceContentAreaEl.style.padding = "0";

  YAHOO.util.Event.addListener(EBX_Form.getFormBody(), "scroll", EBX_Form.displayShadowOnScroll, null);

  EBX_Form.addResizeListenerToScrollContent();

  EBX_Form.resizeFormBody();

  EBX_Loader.changeTaskState(EBX_Loader_taskId_workspace_form_bodyautoheight, EBX_Loader.states.done);
};

EBX_Form.WorkspaceFormBodyEl = null;
EBX_Form.getFormBody = function () {
  var workspaceFormBodyEl = EBX_Form.WorkspaceFormBodyEl;
  if (workspaceFormBodyEl === null) {
    workspaceFormBodyEl = document.getElementById("ebx_WorkspaceFormBody");
    if (workspaceFormBodyEl === null) {
      workspaceFormBodyEl = document.getElementById("ebx_TextInWorkspace");
      if (workspaceFormBodyEl === null) {
        return null;
      } else {
        EBX_Form.WorkspaceFormBodyEl = workspaceFormBodyEl;
      }
    } else {
      EBX_Form.WorkspaceFormBodyEl = workspaceFormBodyEl;
    }
  }
  return workspaceFormBodyEl;
};

EBX_Form.getFormScrollingContainer = function (elementInFormScrollingContainer) {
  var widgetContainer = EBX_Utils.getFirstParentMatchingCSSClass(elementInFormScrollingContainer,
      "ebx_GridEditorWidgetContainer");
  if (widgetContainer !== null) {
    if (EBX_AjaxTable.widgetContainerTable[widgetContainer.id] !== undefined) {
      var ajaxTable = EBX_AjaxTable.widgetContainerTable[widgetContainer.id];
      if (ajaxTable.currentTdFocusedIsPlacedInCreatePart === true) {
        return ajaxTable.element.create.wrapper;
      } else if (ajaxTable.currentWidgetIsPlacedInFixedContainer === true) {
        return ajaxTable.element.update.fixed.scroll;
      } else {
        return ajaxTable.element.update.main.scroll;
      }
    }
  }

  var tabContent = EBX_Utils.getFirstParentMatchingCSSClass(elementInFormScrollingContainer,
      EBX_Form.WorkspaceFormTabContentCSSClass);
  if (tabContent !== null) {
    return tabContent;
  }

  var tableContent = EBX_Utils.getFirstParentMatchingCSSClass(elementInFormScrollingContainer,
      "ebx_renderWorkspaceLayout");
  if (tableContent !== null) {
    return tableContent;
  }

  if (EBX_Utils.hasParentMatchingId(elementInFormScrollingContainer, "ebx_FilterBlockList")) {
    return document.getElementById("ebx_FilterBlockList");
  }

  return EBX_Form.getFormBody();
};

EBX_Form.tabContentPaddingTop = 20;

EBX_Form.workspaceFormBodyPadding = 20;

EBX_Form.tabContentEmbeddingTabbedPaneCSSClass = "ebx_TabContentEmbeddingTabbedPane";

EBX_Form.resizeFormBody = function () {
  var workspaceFormBodyEl = EBX_Form.getFormBody();
  if (workspaceFormBodyEl === null) {
    return;
  }

  var takenSpace = 0;

  // Mantis #5631: In the generic form, the date picker disturbs the placement of the form's bottom bar
  // if (document.getElementById("ebx_WorkspaceFormFooter") !== null) {
  // 	takenSpace += document.getElementById("ebx_WorkspaceFormFooter").offsetHeight;
  //  takenSpace += 1; // form footer border tom
  // }

  var targetHeight = (EBX_LayoutManager.WorkspaceContentAreaEl.offsetHeight - takenSpace);
  if (targetHeight < 0) {
    targetHeight = 0;
  }

  if (EBX_ModelExtensionFrame.isInExtension()) {
    workspaceFormBodyEl.style.height = EBX_ModelExtensionFrame.getFormBodyHeightInExtension(targetHeight) + "px";
  } else {
    workspaceFormBodyEl.style.height = targetHeight + "px";
    var workspaceOffsetWidth = EBX_LayoutManager.WorkspaceContentAreaEl.offsetWidth;
    var workspaceFormBodyTargetWidth = workspaceOffsetWidth;
    workspaceFormBodyEl.style.width = workspaceFormBodyTargetWidth + "px";
  }

  var heightForResizeListener = targetHeight;

  var formContent = workspaceFormBodyEl;
  var formContentHeight = formContent.offsetHeight;
  var formContentHasPadding = EBX_Utils.matchCSSClass(formContent, "ebx_WorkspaceFormBodyWithPadding");
  var oldScrollTop = formContent.scrollTop;

  if (EBX_Form.initWorkspaceFormTreeTabview === true) {
    workspaceFormBodyEl.style.overflow = "hidden";
    workspaceFormBodyEl.style.padding = "0";

    var workspaceFormTabviewHeaderEl = document.getElementById("ebx_WorkspaceFormTabviewTabs").parentElement;

    var targetTabContentHeight = targetHeight - workspaceFormTabviewHeaderEl.offsetHeight;

    heightForResizeListener = targetTabContentHeight;

    var workspaceFormTabviewContentsEl = document.getElementById("ebx_WorkspaceFormTabviewContents");
    var tabContentEl = EBX_Utils.firstElementChild(workspaceFormTabviewContentsEl);
    do {
      tabContentEl.style.height = targetTabContentHeight + "px";
      tabContentEl.style.width = workspaceFormBodyTargetWidth + "px";
      var rootTabIsSelected = !EBX_Utils.matchCSSClass(tabContentEl, "yui-hidden");
      if (rootTabIsSelected) {
        formContent = tabContentEl;
        formContentHeight = targetTabContentHeight;
        formContentHasPadding = EBX_Utils.matchCSSClass(formContent, "ebx_WorkspaceFormTabContentWithPadding");
        oldScrollTop = formContent.scrollTop;
      }

      if (EBX_Utils.matchCSSClass(tabContentEl, EBX_Form.tabContentEmbeddingTabbedPaneCSSClass)) {
        // use this feature under root tab only (for now)
        var subNavSetEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(tabContentEl, "yui-navset");
        var subNavUlEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(subNavSetEl, "ebx_WorkspaceFormTabview_Header");

        var subContentEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(subNavSetEl, "yui-content");
        var subTabContentEl = EBX_Utils.firstElementChild(subContentEl);
        do {
          if (rootTabIsSelected && !EBX_Utils.matchCSSClass(subTabContentEl, "yui-hidden")) {
            formContent = subTabContentEl;
            oldScrollTop = formContent.scrollTop;
            formContentHasPadding = EBX_Utils.matchCSSClass(formContent, "ebx_WorkspaceFormTabContentWithPadding");
            var subTabWidth = workspaceFormBodyTargetWidth;
            var targetSubTabContentHeight = targetTabContentHeight - subNavUlEl.offsetHeight;
            if (formContentHasPadding) {
              subTabWidth -= 2 * EBX_Form.workspaceFormBodyPadding;
              targetSubTabContentHeight -= EBX_Form.workspaceFormBodyPadding;
            }
            formContentHeight = targetSubTabContentHeight;
            subTabContentEl.style.height = targetSubTabContentHeight + "px";
            subTabContentEl.style.width = subTabWidth + "px";
          }
        } while ((subTabContentEl = EBX_Utils.nextElementSibling(subTabContentEl)) !== null);
      }
    } while ((tabContentEl = EBX_Utils.nextElementSibling(tabContentEl)) !== null);

    EBX_Form.refreshTabViewScrollDiv();
    EBX_Form.scrollTabViewForSelectedTab();
  }
  //Hide all spacers
  document.body.classList.add("ebx_hide_form_bottom_bar_spacer");

  var scrollShadow = EBX_Form.getScrollShadow();
  if (scrollShadow !== null) {
    scrollShadow.style.top = workspaceFormBodyEl.offsetTop + "px";
    scrollShadow.style.width = workspaceFormBodyEl.clientWidth + "px";
  }

  var remainingWorkspaceHeight = heightForResizeListener;
  var remainingWorkspaceWidth = workspaceOffsetWidth;

  // /!\ Not always true for all tabs. An associaton node does not displayed the validation report /!\
  // Should be recomputed each time user change active tab
  var workspaceFormHeaderEl = EBX_Form.getFirstValidationReportFound(formContent);
  if (workspaceFormHeaderEl !== null) {
    remainingWorkspaceHeight -= workspaceFormHeaderEl.offsetHeight;
  }

  if (formContentHasPadding) {
    var formBodyPaddingBottom = 0;
    var workspaceFormFooter = document.getElementById("ebx_WorkspaceFormFooter");
    if (workspaceFormFooter === null) {
      formBodyPaddingBottom = EBX_Form.workspaceFormBodyPadding;
    }
    remainingWorkspaceHeight -= (EBX_Form.workspaceFormBodyPadding + formBodyPaddingBottom);
    remainingWorkspaceWidth -= 2 * EBX_Form.workspaceFormBodyPadding;
  }

  if (remainingWorkspaceHeight < 0) {
    remainingWorkspaceHeight = 0;
  }
  if (remainingWorkspaceWidth < 0) {
    remainingWorkspaceWidth = 0;
  }

  // To comply with the use case where a custom form has a div which have 100% height (it is a case where customer
  // want that its component takes the full height and is NOT hidden by the workspace form bottom bar).
  // We check if scrollbars are needed, that means if something is dispayed under the workspace form bottom bar.
  // To achieve that, we check if scrollbars are displayed even when form body height is reduced by the workspace height.

  // If yes, form body height takes the full height,
  // If no, form body height does not cover the form bottom bar, which renders the component having height 100% nicely.
  //
  // See sample FullHeight.java and PaneWithTabsFullHeight.java for a use case.
  var hasVerticalScroll = (formContent.scrollHeight > formContent.offsetHeight);
  var hasHorizontalScroll = (formContent.scrollWidth > formContent.offsetWidth);
  if (!hasVerticalScroll && !hasHorizontalScroll) {
    var workspaceFormFooterHeight = formContentHasPadding ? EBX_Form.getWorkspaceFormBottomBarHeight() : 0;
    var formContentAvailableHeight = formContentHeight - workspaceFormFooterHeight;
    formContent.style.height = formContentAvailableHeight + "px";
    EBX_Form.refreshWorkspaceFormBottomBarPosition(true);
    //Refresh has horizontal and vertical scroll
    hasVerticalScroll = (formContent.scrollHeight > formContentAvailableHeight);
    hasHorizontalScroll = (formContent.scrollWidth > formContent.offsetWidth);
    if (hasVerticalScroll || hasHorizontalScroll) {
      formContent.style.height = formContentHeight + "px";
      formContent.style.overflow = "auto";
    } else {
      formContent.style.overflow = "hidden";
    }
  } else {
    EBX_Form.refreshWorkspaceFormBottomBarPosition(true);
    formContent.style.overflow = "auto";
  }

  //note: There is a hole in this solution for the use where the component takes the full height, and width overflow form body width.
  //With this solution, as the horizontal scrollbar is displayed below the bottom bar, the component will have part under the bottom bar.
  document.body.classList.remove("ebx_hide_form_bottom_bar_spacer");
  formContent.scrollTop = oldScrollTop;

  // `remainingWorkspaceHeight` represents the available height for the form.
  // - The card height by default
  // - if there is a root pane with tabs, is equal to the tab pane content height (without the tab headers)
  // The value passed is set to `EBX_LayoutManager.lastWorkspaceSizeComputed`
  EBX_LayoutManager.callResizeWorkspaceListeners({
    h: remainingWorkspaceHeight - EBX_Form.getWorkspaceFormBottomBarHeight(),
    w: remainingWorkspaceWidth,
    vScroll: hasVerticalScroll ? EBX_Utils.getVScrollWidth() : 0
  }, {
    h: remainingWorkspaceHeight,
    w: remainingWorkspaceWidth,
    vScroll: hasVerticalScroll ? EBX_Utils.getVScrollWidth() : 0,
    hScroll: hasHorizontalScroll ? EBX_Utils.getHScrollHeight() : 0
  });
};
/**
 * @param bottomBarSpacerAlreadyHidden {boolean} Optional, set to true if the spacers hide/re-display is handled by the calling function.
 */
EBX_Form.refreshWorkspaceFormBottomBarPosition = function (bottomBarSpacerAlreadyHidden) {
  var workspaceFormFooter = document.getElementById("ebx_WorkspaceFormFooter");
  if (workspaceFormFooter !== null) {

    if (EBX_ModelExtensionFrame.isInExtension()) {
      workspaceFormFooter.style.padding = "0";
      workspaceFormFooter.style.bottom = "0";
    } else {

      if (!bottomBarSpacerAlreadyHidden) {
        document.body.classList.add("ebx_hide_form_bottom_bar_spacer");
      }

      var elemWithScrollApplied = null;
      var subNavSetInTabWithPadding = false;
      if (EBX_Form.initWorkspaceFormTreeTabview) {
        elemWithScrollApplied = document.querySelector(".ebx_WorkspaceFormTabContent:not(.yui-hidden)");

        // If Tab includes a sub form pane with tabs, watch those sub tabs instead.
        if (EBX_Utils.matchCSSClass(elemWithScrollApplied, EBX_Form.tabContentEmbeddingTabbedPaneCSSClass)) {
          subNavSetInTabWithPadding = EBX_Utils.matchCSSClass(elemWithScrollApplied,
              "ebx_WorkspaceFormTabContentWithPadding");

          // use this feature under root tab only (for now)
          var subNavSetEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(elemWithScrollApplied, "yui-navset");
          elemWithScrollApplied = subNavSetEl.querySelector(
              ".yui-content > .ebx_FormPaneWithTabs_Tab:not(.yui-hidden)");
        }
      } else {
        elemWithScrollApplied = EBX_Form.getFormBody();
      }

      var vScrollWidth = EBX_Utils.getVScrollWidth();

      var workspaceFormBodyTargetWidth = EBX_LayoutManager.WorkspaceContentAreaEl.clientWidth;
      var hasVerticalScroll = EBX_Form.letVerticalScrollbarDisplay || (elemWithScrollApplied.scrollHeight
          > elemWithScrollApplied.offsetHeight);
      var paddingRight = EBX_Form.workspaceFormBodyPadding;
      if (hasVerticalScroll) {
        workspaceFormBodyTargetWidth -= vScrollWidth;
        paddingRight -= vScrollWidth;
      }
      if (paddingRight < 0) {
        paddingRight = 0;
      }
      if (subNavSetInTabWithPadding) {
        // Include root tab padding in the footer width.
        workspaceFormBodyTargetWidth -= EBX_Form.workspaceFormBodyPadding;
      }

      workspaceFormFooter.style.paddingRight = paddingRight + "px";
      workspaceFormFooter.style.width = workspaceFormBodyTargetWidth + "px";

      var hasHorizontalScroll = EBX_Form.letHoritonztalScrollbarDisplay || (elemWithScrollApplied.scrollWidth
          > elemWithScrollApplied.offsetWidth);

      var paddingBottom = EBX_Form.workspaceFormBodyPadding;
      var bottom = EBX_LayoutManager.getWorkspaceContentMarginBottom();
      var hScrollHeight = EBX_Utils.getHScrollHeight();
      if (hasHorizontalScroll) {
        paddingBottom -= hScrollHeight;
        bottom += hScrollHeight;

        workspaceFormFooter.classList.add(EBX_Form.WorkspaceFormBottomBarWithScrollCSSClass);

        workspaceFormFooter.style.borderBottomLeftRadius = "0";
        workspaceFormFooter.style.borderBottomRightRadius = "0";
      } else {
        workspaceFormFooter.style.borderBottomLeftRadius = "";

        workspaceFormFooter.classList.remove(EBX_Form.WorkspaceFormBottomBarWithScrollCSSClass);

        workspaceFormFooter.style.borderBottomLeftRadius = "";
        if (hasVerticalScroll) {
          workspaceFormFooter.style.borderBottomRightRadius = "0";
        } else {
          workspaceFormFooter.style.borderBottomRightRadius = "";
        }
      }
      if (paddingBottom < 0) {
        paddingBottom = 0;
      }
      workspaceFormFooter.style.paddingBottom = paddingBottom + "px";

      workspaceFormFooter.style.bottom = bottom + "px";
    }
  }

  if (!EBX_Form.inlineStyle && EBX_Form.getFormBody() != null) {
    EBX_Form.inlineStyle = EBX_Form.getFormBody().appendChild(document.createElement("style"));
  }
  if (EBX_Form.inlineStyle) {
    // Change the height of the spacer placed after the content according to the footer height.
    EBX_Form.inlineStyle.innerHTML =
        ".ebx_form_bottom_bar_spacer {"
        + "  height: " + (EBX_Form.getWorkspaceFormBottomBarHeight() - (hasHorizontalScroll ? hScrollHeight : 0))
        + "px;"
        + "}";
  }

  if (!bottomBarSpacerAlreadyHidden) {
    document.body.classList.remove("ebx_hide_form_bottom_bar_spacer");
  }
};

EBX_Form.letScrollbarDisplay = function (scrollH, scrollV) {
  EBX_Form.letHoritonztalScrollbarDisplay = scrollH;
  EBX_Form.letVerticalScrollbarDisplay = scrollV;

  EBX_Form.refreshWorkspaceFormBottomBarPosition();
};

EBX_Form.getWorkspaceFormBottomBarHeight = function () {
  var formBottomBarHeight = 0;
  var formBottomBarElement = document.getElementById("ebx_WorkspaceFormFooter");
  if (formBottomBarElement) {
    formBottomBarHeight = formBottomBarElement.offsetHeight;
    if (formBottomBarElement.classList.contains(EBX_Form.WorkspaceFormBottomBarWithScrollCSSClass)) {
      formBottomBarHeight += EBX_Utils.getHScrollHeight();
    }
  }

  return formBottomBarHeight;
};

EBX_Form.placeFormFooter = function () {
  EBX_Logger.log("EBX_Form.placeFormFooter() is deprecated. The placement of the form footer is automatic now.",
      EBX_Logger.info);
};

EBX_Form.confirmMessages = [];
EBX_Form.setConfirmMessage = function (submitButtonId, message) {
  EBX_Form.confirmMessages[submitButtonId] = message;
};

/**
 * Callback for custom JS validation executed on form submit.
 *
 * If method returns false, form submit is cancelled.
 *
 * @callback customCheckBeforeSubmit
 * @return {boolean} False to block form submit.
 */

/**
 * Add a custom check to execute before form submit.
 * @param customCheck {customCheckBeforeSubmit}
 */
EBX_Form.addCustomCheckBeforeSubmit = function (customCheck) {
  EBX_Form.customChecksBeforeSubmit.push(customCheck);
};

/**
 *
 * @type {customCheckBeforeSubmit[]}
 */
EBX_Form.customChecksBeforeSubmit = [];

EBX_Form.AskBeforeLeavingModifiedFormCSSFlag = "ebx_AskBeforeLeavingModifiedForm";
EBX_Form.ConfirmSystem = function (p_oEvent) {

  var formConcerned = EBX_Utils.getTargetElement(p_oEvent);

  for (var i = 0, length = EBX_Form.customChecksBeforeSubmit.length; i < length; i++) {
    var customConditionEvaluation = EBX_Form.customChecksBeforeSubmit[i]();
    //Function must explicitly returns false.
    if (customConditionEvaluation === false) {
      YAHOO.util.Event.preventDefault(p_oEvent);
      return false;
    }
  }

  // TODO tlu : migrate to customChecksBeforeSubmit
  if (!EBX_Form.checkCustomConditions(formConcerned)) {
    YAHOO.util.Event.preventDefault(p_oEvent);
    return false;
  }
  // checkTechnicalConditions includes the UIFormSpec.jsFnNameToCallBeforeSubmit
  if (formConcerned.checkTechnicalConditions !== undefined && !formConcerned.checkTechnicalConditions(formConcerned)) {
    YAHOO.util.Event.preventDefault(p_oEvent);
    return false;
  }

  // confirm system is called:
  // - from a submit button when a click or a keyboard validation fires on it
  // - from a field when the ENTER key is pressed on it
  // all form submit buttons are <button> (<input type="button/submit/..."> is deprecated for many internal reasons)

  var message;
  var defaultSubmitButton;
  if (formConcerned.ebx_defaultSubmitButtonId !== null) {
    defaultSubmitButton = document.getElementById(formConcerned.ebx_defaultSubmitButtonId);
  }
  var lastSubmitFocused = formConcerned.ebx_lastSubmitFocused;
  var messageIsFromDefaultButton = false;

  if (EBX_LayoutManager.isIE) {
    EBX_Form.initSubmitNamesForIE(formConcerned);
  }
  if (lastSubmitFocused === null || lastSubmitFocused === undefined) {
    if (defaultSubmitButton !== null) {
      EBX_Utils.addCSSClass(defaultSubmitButton, EBX_ButtonUtils.buttonPushedCSSClass);
      if (EBX_LayoutManager.isIE) {
        EBX_Form.setSubmitValue(formConcerned, defaultSubmitButton.attributes.getNamedItem("value").value,
            defaultSubmitButton.ebx_name);
      }
      message = EBX_Form.confirmMessages[defaultSubmitButton.id];
      messageIsFromDefaultButton = true;
    }
  } else if (lastSubmitFocused.tagName == "BUTTON") {
    message = EBX_Form.confirmMessages[lastSubmitFocused.id];

    if (EBX_LayoutManager.isIE && lastSubmitFocused.type == "submit") {
      EBX_Form.setSubmitValue(formConcerned, lastSubmitFocused.attributes.getNamedItem("value").value,
          lastSubmitFocused.ebx_name);
    }

  }

  var _onConfigureSubmit = function () {
    // by default, considers that the submit is voluntary
    formConcerned.ebx_isVoluntarySubmit = true;

    var submitButton = null;
    if (lastSubmitFocused === null || lastSubmitFocused === undefined) {
      submitButton = defaultSubmitButton;
    } else if (lastSubmitFocused.tagName == "BUTTON") {
      submitButton = lastSubmitFocused;
    }

    // see UIButtonSpecSubmit#askBeforeLeavingModifiedForm
    if (EBX_Form.hasBeenModified(formConcerned)) {
      if (submitButton !== null && EBX_Utils.matchCSSClass(submitButton,
          EBX_Form.AskBeforeLeavingModifiedFormCSSFlag)) {
        formConcerned.ebx_isVoluntarySubmit = false;
      }
    }

    if (formConcerned.appendSerializeInActionBeforeSubmit === true) {
      var actionBuf = [];
      actionBuf.push(wbpForm.originalAction);
      actionBuf.push("?");
      actionBuf.push(EBX_Form.serialize(formConcerned));
      if (submitButton !== null) {
        var requestParameterName = submitButton.name;

        // Mantis #14593
        if (requestParameterName === "") {
          requestParameterName = wbpForm.requestParameterName;
        }

        actionBuf.push("&", requestParameterName, "=", submitButton.value);
      }
      formConcerned.action = actionBuf.join("");

      ebx_keepSessionAliveAjax();
      window.document.body.style.cursor = "wait";
    }

    if (formConcerned.hideOnSubmitId !== undefined) {
      document.getElementById(formConcerned.hideOnSubmitId).style.display = "none";
    }
    if (formConcerned.showOnSubmitId !== undefined) {
      document.getElementById(formConcerned.showOnSubmitId).style.display = "block";
    }
  };

  if (message !== undefined) { // If we need to ask user confirmation prior to submit ...
    // callack : on user confirm
    var _onConfirmSubmit = function () {
      _onConfigureSubmit();
      var submitButton = null;
      if (lastSubmitFocused === null || lastSubmitFocused === undefined) {
        submitButton = defaultSubmitButton;
      } else if (lastSubmitFocused.tagName == "BUTTON") {
        submitButton = lastSubmitFocused;
      }

      //async submit, we have to inject previous hidden submit button properties
      if (submitButton !== null) {
        var hiddenRef = document.createElement("input");
        hiddenRef.type = "hidden";
        hiddenRef.name = submitButton.name;
        hiddenRef.value = submitButton.value;
        formConcerned.insertBefore(hiddenRef, formConcerned.firstChild);
      }
      formConcerned.submit();
    };
    // callback : on user abort
    var _onAbortSubmit = function () {
      if (messageIsFromDefaultButton) {
        EBX_Utils.removeCSSClass(defaultSubmitButton, EBX_ButtonUtils.buttonPushedCSSClass);
      }
    };

    //create confirmation popup content
    var content = {};
    content.question = message;
    content.jsCommandYes = _onConfirmSubmit;
    content.jsCommandNo = _onAbortSubmit;
    content.jsCommandClose = _onAbortSubmit;
    ebx_confirm(content);

    // we stop the event, because we will submit the form later, on user confirm
    YAHOO.util.Event.preventDefault(p_oEvent);

    return false;
  } else {
    _onConfigureSubmit(); // will be submit right after
    return true;
  }
};

EBX_Form.setParentFormDiscardModifications = function (element) {
  var parentForm = EBX_Utils.getFirstParentMatchingTagName(element, 'FORM');

  if (parentForm === null) {
    return;
  }

  parentForm.ebx_isVoluntarySubmit = true;
};

// <button type="submit"/>...</button> is badly supported sometimes by IE8&9 (don't know why)
// only <input type="submit"/> is supported
// see http://msdn.microsoft.com/en-us/library/ms535123 > Community Content
EBX_Form.setSubmitValue = function (form, value, name) {
  // create an hidden field containing the right values
  var hiddenFieldSubmit = document.getElementById("ebx_HiddenFieldSubmit");
  if (hiddenFieldSubmit === null) {
    hiddenFieldSubmit = document.createElement("input");
    hiddenFieldSubmit.id = "ebx_HiddenFieldSubmit";
    hiddenFieldSubmit.type = "hidden";
  }
  form.appendChild(hiddenFieldSubmit);

  hiddenFieldSubmit.name = name;
  hiddenFieldSubmit.value = value;
};

/* This function can be overridden by the form in the page (script in body) */
EBX_Form.checkCustomConditions = function (formEl) {
  return true;
};

EBX_Form.initSubmitNamesForIE = function (form) {

  if (form.ebx_initSubmitForIEDone === true) {
    return;
  }

  var formButtons = form.getElementsByTagName("BUTTON");
  var i = formButtons.length;
  while (i) {
    var button = formButtons[--i];
    if (button.type == "submit") {
      button.ebx_name = button.name;
      button.name = "";
    }
  }
  var hiddenDefaultSubmitButton = EBX_ButtonUtils.getHiddenDefaultSubmitButton(form);
  hiddenDefaultSubmitButton.ebx_name = hiddenDefaultSubmitButton.name;
  hiddenDefaultSubmitButton.name = "";

  form.ebx_initSubmitForIEDone = true;
};

EBX_Form.initFocusTaskId = "EBX_Form_InitFocus";
EBX_Form.formIdsToInitFocus = [];
/**
 * Creates a task executed at the end of treatments
 */
EBX_Form.initFocusEvents = function (formId) {
  if (EBX_Utils.arrayContains(EBX_Form.formIdsToInitFocus, formId)) {
    return;
  }

  EBX_Form.formIdsToInitFocus.push(formId);

  // if EBX_Form.formIdsToInitFocus is already defined, don't create an other task
  if (EBX_Form.formIdsToInitFocus.length > 1) {
    return;
  }

  EBX_Loader.addDynamicallyTaskAfterTaskId(EBX_Loader_taskId_destroy_loading_layer, EBX_Form.initFocusTaskId,
      EBX_Form.initFocusTaskId,
      EBX_Loader.states.onStarting, EBX_Form.initFocusEventsAsTask, EBX_Utils.returnTrue);
};

EBX_Form.WorkspaceFormFooterId = "ebx_WorkspaceFormFooter";
EBX_Form.APVElementCSSClass = "ebx_APV";
// overwrote by FormUtils.java
EBX_Form.initialPathFocused = null;
EBX_Form.initFocusEventsAsTask = function () {
  EBX_Loader.changeTaskState(EBX_Form.initFocusTaskId, EBX_Loader.states.processing);

  var j = EBX_Form.formIdsToInitFocus.length, i, form = null;

  while (j) {
    form = document.getElementById(EBX_Form.formIdsToInitFocus[--j]);
    if (!form) {
      EBX_Loader.changeTaskState(EBX_Form.initFocusTaskId, EBX_Loader.states.done);
      return;
    }

    YAHOO.util.Event.addListener(form.elements, "focus", EBX_Form.focusField);
    YAHOO.util.Event.addListener(form.elements, "blur", EBX_Form.blurField);
    if (YAHOO.env.ua.webkit !== 0) {
      // webkit does not give the focus to a button when it is clicked
      // see http://www.quirksmode.org/dom/events/blurfocus.html#t03
      var formButtons = form.getElementsByTagName("BUTTON");
      i = formButtons.length;
      while (i) {
        var button = formButtons[--i];
        if (button.type == "submit") {
          YAHOO.util.Event.addListener(button, "click", EBX_Form.focusSubmitOnClickForWebkit);
        }
      }
    }

    i = form.elements.length;
    while (i) {
      var element = form.elements[--i];
      if (EBX_Utils.matchCSSClass(element, EBX_Form.APVElementCSSClass)) {
        EBX_FormPresenter.addAPVElementListener(element);
      }
    }

    form.ebx_lastSubmitFocused = null;
    form.ebx_initialSerialize = EBX_Form.serialize(form);
  }

  var keepScrollTop = EBX_Form.formHasAValidationReport(form);
  var elementToFocus = null;
  if ((document.activeElement === document.body) && (form !== null)) {
    if (EBX_Form.initialPathFocused != null) {
      elementToFocus = EBX_Form.findInitialInputToFocus(form);
      if (elementToFocus !== null) {
        EBX_Form.focusElementAfterContentReady(elementToFocus);
      }
    }

    // search for the first element to focus
    // if nothing is focused
    if (elementToFocus === null && EBX_Form.elementIsVisibleInWindowStack(form)) {
      var len = form.elements.length;
      var element;
      var focusSuccessful;

      for (i = 0; i < len; i++) {
        element = form.elements[i];

        //Special treatment for script editor widget
        if (EBX_Form.isHiddenInputForScriptEditor(element)) {
          var editor = EBX_Form.getScriptEditorFromHiddenInput(element);
          if (EBX_Form.elementIsVisibleInWindowStack(editor)) {
            editor.classList.add("_ebx-script-editor_widget-is-focused-init");
            break;
          }
        }

        // invisible elements have width=0
        if (element.offsetWidth <= 0) {
          continue;
        }
        if (element.disabled === true) {
          continue;
        }
        if (element.tabIndex === -1) {
          continue;
        }
        if (element.className === EBX_ButtonUtils.hiddenDefaultSubmitButtonCSSClass) {
          continue;
        }
        if (!EBX_Form.elementIsVisibleInWindowStack(element)) {
          continue;
        }

        elementToFocus = element;
        // if the form contains no fields but just a formFooter
        //  (and so the first visible element of the form is inside the formFooter)
        // then focus the default button if any
        if (EBX_Utils.hasParentMatchingId(element, EBX_Form.WorkspaceFormFooterId) === true
            && form.ebx_defaultSubmitButtonId !== undefined) {
          elementToFocus = document.getElementById(form.ebx_defaultSubmitButtonId);
          keepScrollTop = true;
        }

        focusSuccessful = EBX_Form.focusElementIfStillVisible(elementToFocus);

        // check if the element is focused
        if (focusSuccessful === false || elementToFocus !== document.activeElement) {
          continue;
        }

        break;
      }
    }
  }

  // disable the auto-scroll: keep the scroll top after focus (a key hit in a field will automatically scroll)
  if (keepScrollTop === true && elementToFocus !== null) {
    EBX_Form.getFormScrollingContainer(elementToFocus).scrollTop = 0;
  }
  EBX_Loader.changeTaskState(EBX_Form.initFocusTaskId, EBX_Loader.states.done);
};

/**
 * Check if given element is visible in this frame and also in parent frames (on same domain).
 * Added due to handle autofocus on child frames openings.
 *
 * @param testedElement {HTMLElement}
 * @return {boolean}
 */
EBX_Form.elementIsVisibleInWindowStack = function (testedElement) {
  var currentElem = testedElement;
  var currentWindow = window;
  var isHidden = false;

  while (currentElem != null && !isHidden) {
    isHidden = currentElem.classList.contains("ebx_HidingContainerHidden")
        || currentElem.classList.contains("yui-hidden");

    if (!isHidden) {
      var elemStyle = window.getComputedStyle(currentElem);
      isHidden = (elemStyle.getPropertyValue('display') === "none")
          || (elemStyle.getPropertyValue('visibility') === "hidden");
    }
    if (currentElem.parentElement != null) {
      currentElem = currentElem.parentElement;
    } else {
      var currentWindowDocument;
      try {
        currentWindowDocument = currentWindow.document; // throws a security error when it is on a different domain.
      } catch (e) {
        return true;
      }
      // Continue to check the parent frames...
      // Not-attached element have a null parentElement, but are not attached to the window.
      if (currentElem.parentNode === currentWindowDocument && currentWindow !== window.top) {
        currentElem = currentWindow.frameElement; // frameElement is null if parent is located on a different domain.
                                                  // Stop search at this step in that case.
        currentWindow = currentWindow.parent;
      } else {
        currentElem = null;
      }
    }
  }
  return !isHidden;
};

EBX_Form.findInitialInputToFocus = function (form) {
  if (EBX_FormNodeIndex.isFormNodeDefined(EBX_Form.initialPathFocused) === false) {
    return null;
  }

  var formNode = EBX_FormNodeIndex.getFormNode(EBX_Form.initialPathFocused);
  if (formNode === null) {
    return null;
  }

  // can return null if the input is not present in the form
  // it occurs for groups for example
  return document.getElementById(formNode.inputName);
};

EBX_Form.getFirstValidationReportFound = function (validationReportParentElement) {
  return EBX_Utils.getFirstRecursiveChildMatchingCSSClass(validationReportParentElement,
      EBX_LayoutManager.WorkspaceFormHeaderCSSClass);
};

EBX_Form.formHasAValidationReport = function (formElement) {
  return EBX_Form.getFirstValidationReportFound(formElement) !== null;
};
/**
 * @param formElement {HTMLInputElement}
 * @return {boolean}
 */
EBX_Form.isHiddenInputForScriptEditor = function (formElement) {
  var valueContainer = EBX_Utils.getFirstParentMatchingCSSClass(formElement, "_ebx-script-editor_value");
  return (valueContainer != null);
};
/**
 *
 * @param hiddenInputForScriptEditor {HTMLInputElement}
 * @return {HTMLElement}
 */
EBX_Form.getScriptEditorFromHiddenInput = function (hiddenInputForScriptEditor) {
  return document.getElementById(hiddenInputForScriptEditor.name + "_editor");
};

// Returns false if the focus has failed for many reasons.
// Returns true if the focus has maybe worked, but not sure.
EBX_Form.focusElementIfStillVisible = function (elementToFocus) {

  // case of fieldset (focusable on IE)
  if (elementToFocus.type === undefined) {
    return false;
  }

  // invisible elements have width=0
  if (elementToFocus.offsetWidth <= 0) {
    return false;
  }

  // if it is hidden, the offsetWidth <= 0 may not work
  // this case occurs when the first focusable element is in an hidden form tab
  try {
    elementToFocus.focus();
    return true;
  } catch (e) {
    return false;
  }
};
/**
 * Delays the set of the focus of the element which must be focused. More
 * precisely, wait for certains parent element to have finished theirs
 * rendering.
 *
 * @param {HTMLElement}
 *            elementToFocus Element which will be focused
 */
EBX_Form.focusElementAfterContentReady = function (elementToFocus) {
  EBX_Form.awaitedElementToFocus = elementToFocus;
  EBX_Form.awaitedElementRenderings = [];
  var tabbedPaneElement = EBX_Utils.getFirstParentMatchingCSSClass(elementToFocus, "yui-navset");
  while (tabbedPaneElement !== null) {
    if (tabbedPaneElement.id !== EBX_Form.WorkspaceFormTabviewId) {

      //DMA contains tabViews which are not yet initialized in EBX_Form.tabViews before content is loaded
      // TODO any: how to detect that all form pane with tabs have been initialized ?
      var tabView = EBX_Form.tabViews[tabbedPaneElement.id];
      if (tabView != null) {
        var tabbedPane = tabView.yuiTabView;
        if (tabbedPane.ebx_data_contentReady !== true) {
          EBX_Form.awaitedElementRenderings.push(tabbedPaneElement.id);
          (function (tabbedPane, id) {
            var handler = function (e) {
              var index = EBX_Utils.indexOf(EBX_Form.awaitedElementRenderings, id);
              if (index !== -1) {
                EBX_Form.awaitedElementRenderings.splice(index, 1);
                tabbedPane.unsubscribe("contentReady", handler);
                if (EBX_Form.awaitedElementRenderings.length === 0) {
                  EBX_Form.focusElementIfStillVisible(EBX_Form.awaitedElementToFocus);
                }
              }
            };
            tabbedPane.addListener("contentReady", handler);
          })(tabbedPane, tabbedPaneElement.id);
        }
      }

      tabbedPaneElement = EBX_Utils.getFirstParentMatchingCSSClass(tabbedPaneElement, "yui-navset");
    } else {
      tabbedPaneElement = null;
    }
  }

  if (EBX_Form.awaitedElementRenderings.length === 0) {
    EBX_Form.focusElementIfStillVisible(elementToFocus);
  }
};
// Returns false if the focus has failed for many reasons.
// Returns true if the focus has maybe worked, but not sure.
EBX_Form.focus = function (id) {
  var element = document.getElementById(id);
  if (element !== null) {
    return EBX_Form.focusElementIfStillVisible(element);
  }
  return false;
};

EBX_Form.IgnoreFormCheckCSSClassName = "ebx_IgnoreFormCheck";
EBX_Form.TextareaForHTMLCSSClassName = "ebx_TextareaForHTML";

EBX_Form.serialize = function (formOrContainer) {
  return EBX_Form.serialize(formOrContainer, false);
};
/* from "JavaScript for Web Developpers 2nd Edition"
 * by N.C. Zakas
 * editor Wrox
 * page 457
 */
EBX_Form.serialize = function (formOrContainer, ignoreVoidValues) {
  var elements,
      parts = [],
      field = null;

  if (formOrContainer.tagName === "FORM") {
    elements = formOrContainer.elements;
  } else {
    elements = EBX_Utils.getAllChildFormElements(formOrContainer);
  }

  for (var i = 0, len = elements.length; i < len; i++) {
    field = elements[i];

    if (field.name === "" || field.id === "ebx_HiddenFieldSubmit" || EBX_Utils.matchCSSClass(field,
        EBX_Form.IgnoreFormCheckCSSClassName)) {
      continue;
    }

    switch (field.type) {
      case "select-one":
      case "select-multiple":
        for (var j = 0, optLen = field.options.length; j < optLen; j++) {
          var option = field.options[j];
          if (option.selected) {
            var optValue = "";
            if (option.hasAttribute) {
              optValue = (option.hasAttribute("value") ? option.value : option.text);
            } else {
              optValue = (option.attributes["value"].specified ? option.value : option.text);
            }
            /* if ignoreVoidValues is true and the value equals "", don't add the value */
            if (!ignoreVoidValues || field.value !== "") {
              parts.push(encodeURIComponent(field.name) + "=" + encodeURIComponent(optValue));
            }
          }
        }
        break;

      case undefined:
        //fieldset
      case "file":
        //file input
      case "submit":
        //submit button
      case "reset":
        //reset button
      case "button":
        //custom button
        break;

      case "radio":
        //radio button
      case "checkbox":
        //checkbox
        if (!field.checked) {
          break;
        }
        /* falls through */

      case "textarea":
        // for the case of HTML editor:
        // if the initial value parsed by the HTML editor is the same than the current value (parsed),
        // then take the initial value (it is better for detecting form modifications)
        if (EBX_Utils.matchCSSClass(field, EBX_Form.TextareaForHTMLCSSClassName)) {
          // is textarea with an HTML editor
          if (EBX_Form.TextareaIdEditor[field.id] !== undefined) {
            // is the HTML editor builded
            var editor = EBX_Form.TextareaIdEditor[field.id];
            if (editor.status == "ready") {
              // is the HTML editor ready

              // If the HTML editor is in source mode,
              //  dataProcessor.toHtml does not work because it uses CKEDITOR.dom.document to resolve the HTML
              //  and CKEDITOR.dom.document is undefined (and is hard to create it correctly -- I tried for hours).
              //  It's normal, because there is no reason to enable the wysiwyg feature and then reduce memory cost.
              // So, it is impossible to convert the initial value to the CKEDITOR HTML parsed version.
              // It does not matter, because the user has enabled the source mode, and then he masters HTML.
              // So it is probabely better to NOT convert the initial value to the CKEDITOR HTML parsed version.

              // If the HTML editor is in wysiwyg mode,
              //  the user is not aware of HTML and parse differencies,
              //  so it is better to compare parsed versions,
              //  because he sees the resolved version only.

              var initialParsedHTML;
              if (editor.mode == "source") {
                // don't parse
                initialParsedHTML = field.value;
              } else {
                // parse to compare
                initialParsedHTML = editor.dataProcessor.toHtml(field.value);
              }

              var currentValue = editor.getData();

              // if HTML value has changed, then use the current parsed version of HTML value
              if (initialParsedHTML != currentValue) {
                parts.push(encodeURIComponent(field.name) + "=" + encodeURIComponent(currentValue));
                break;
              }
              // else let the algo do its original job (it will uses the initial value field.value)
            }
          }
        }

      default:
        /* if ignoreVoidValues is true and the value equals "", don't add the value */
        if (!ignoreVoidValues || field.value !== "") {
          parts.push(encodeURIComponent(field.name) + "=" + encodeURIComponent(field.value));
        }
    }
  }
  return parts.join("&");
};

EBX_Form.hasBeenModified = function (form) {
  if (form.ebx_alwaysReportAsModified == true) {
    return true;
  }

  if (form.ebx_initialSerialize === undefined) {
    return false;
  }

  return form.ebx_initialSerialize != EBX_Form.serialize(form);
};

EBX_Form.FieldClassName = "ebx_Field";
EBX_Form.FieldFocusedClassName = "ebx_Focused";
EBX_Form.FieldAncestorFocusedClassName = "ebx_FocusedAncestor";

//initialized by UITreeForm.java
EBX_Form.trParentIds = [];

EBX_Form.focusField = function (event) {
  EBX_Form.focusOrBlurField(event, true);
};
EBX_Form.blurField = function (event) {
  EBX_Form.focusOrBlurField(event, false);
};
EBX_Form.focusOrBlurField = function (event, isFocus) {
  var formElementFocused, fieldElement, firstFoundElement, parentIds, i, len;

  formElementFocused = event.target;

  fieldElement = EBX_Utils.getFirstParentMatchingCSSClass(formElementFocused, EBX_Form.FieldClassName);
  firstFoundElement = fieldElement;
  while (fieldElement !== null) {
    if (isFocus === true) {
      EBX_Utils.addCSSClass(fieldElement, EBX_Form.FieldFocusedClassName);
    } else {
      EBX_Utils.removeCSSClass(fieldElement, EBX_Form.FieldFocusedClassName);
    }
    fieldElement = EBX_Utils.getFirstParentMatchingCSSClass(fieldElement, EBX_Form.FieldClassName);
  }

  if (firstFoundElement !== null) {
    parentIds = EBX_Form.trParentIds[firstFoundElement.id];
    if (parentIds !== undefined) {
      for (i = 0, len = parentIds.length; i < len; i++) {
        if (isFocus === true) {
          EBX_Utils.addCSSClass(document.getElementById(parentIds[i]), EBX_Form.FieldAncestorFocusedClassName);
        } else {
          EBX_Utils.removeCSSClass(document.getElementById(parentIds[i]), EBX_Form.FieldAncestorFocusedClassName);
        }
      }
    }
  }

  if (isFocus === true) {
    EBX_Form.sendFormFocusChange(formElementFocused.id);
  }
};

//rolling delay between focus an element and send the path to the server (for an auto-focus for the next page)
EBX_Form.sendFocusDelay = 300;
EBX_Form.sendAJAXFocusChangedTimeoutId = null;
EBX_Form.sendFormFocusChange = function (formElementId) {
  if (EBX_Form.saveLastElemFocusedRequest !== undefined) {
    var path = EBX_FormNodeIndex.fieldsIdPath[formElementId];
    if (path === undefined) {
      return;
    }

    if (EBX_Form.sendAJAXFocusChangedTimeoutId !== null) {
      window.clearTimeout(EBX_Form.sendAJAXFocusChangedTimeoutId);
    }

    EBX_Form.sendAJAXFocusChangedTimeoutId = window.setTimeout(function () {
      EBX_Form.sendFormFocusPathChangeImmediately(path);
      EBX_Form.sendAJAXFocusChangedTimeoutId = null;
    }, EBX_Form.sendFocusDelay);
  }
};

EBX_Form.lastPathFocusedSend = null;
EBX_Form.saveLastElemFocusedRequester = null;
EBX_Form.sendFormFocusPathChangeImmediately = function (path) {
  if (EBX_Form.saveLastElemFocusedRequest === undefined) {
    return;
  }
  if (EBX_Form.lastPathFocusedSend === path) {
    return;
  }

  if (EBX_Form.saveLastElemFocusedRequester === null) {
    EBX_Form.saveLastElemFocusedRequester = new YAHOO.util.XHRDataSource(EBX_Form.saveLastElemFocusedRequest);
  }

  EBX_Form.saveLastElemFocusedRequester.sendRequest(encodeURIComponent(path));

  EBX_Form.lastPathFocusedSend = path;
};

EBX_Form.focusSubmitOnClickForWebkit = function (event) {
  var buttonEl = event.target;
  // if the submit button has an icon and if the user clicks on it,
  //  event.target will be the icon, and not the button
  if (buttonEl.tagName != "BUTTON") {
    buttonEl = EBX_Utils.getFirstParentMatchingTagName(buttonEl, "BUTTON");
  }
  EBX_Form.focusSubmit(buttonEl);
};

EBX_Form.focusSubmit = function (buttonSubmitEl) {
  buttonSubmitEl.form.ebx_lastSubmitFocused = buttonSubmitEl;
};
EBX_Form.blurSubmit = function (buttonSubmitEl) {
  buttonSubmitEl.form.ebx_lastSubmitFocused = null;
};

EBX_Form.InputClassName = "ebx_Input";
/* Default value. Overwritten by UIConstantsJS */
EBX_Form.InputPadding = 5;

EBX_Form.OverwrittenValueClassName = "ebx_OverwrittenValue";

EBX_Form.lastTabViewTaskIdSuffix = 0;
EBX_Form.currentTabViewTaskProcessing = -1;
// Map <tabViewId, { tabIds[], yuiTabView: YUITabView}>
EBX_Form.tabViews = {};
EBX_Form.tabTitleIdPrefix = "ebx_TabTitle_";
EBX_Form.hiddenTabTitleCSSClass = "ebx_HiddenTab";
EBX_Form.initYUITabView = function (tabViewId) {
  var tabView = new YAHOO.widget.TabView(tabViewId);
  if (tabView.get("activeIndex") === null) {
    tabView.selectTab(0);
  }
  tabView.addListener('activeTabChange', function (e) {
    EBX_Form.customTabSelectedListener(e, tabViewId);
  });
  tabView.addListener('contentReady', function (e) {
    tabView.ebx_data_contentReady = true;
  });

  // force the redraw of the tab for Webkit (width is not elastic)
  if (YAHOO.env.ua.webkit !== 0) {
    tabView.addListener("activeTabChange", EBX_Form.refreshWidthOfYUITab);
  }

  EBX_Form.activeTabChangeListenerForLaunchComponentJSCmd({
    newValue: tabView.getTab(tabView.get("activeIndex"))
  });

  tabView.addListener("activeTabChange", EBX_Form.activeTabChangeListenerForLaunchComponentJSCmd);

  if (EBX_Form.tabViews[tabViewId] === undefined) {
    EBX_Form.tabViews[tabViewId] = {};
  }

  EBX_Form.tabViews[tabViewId].yuiTabView = tabView;
};
EBX_Form.currentYUITabParentNode = null;
EBX_Form.refreshWidthOfYUITab = function () {
  EBX_Form.currentYUITabParentNode = this._contentParent.parentNode.parentNode;

  EBX_Form.currentYUITabParentNode.style.display = "block";

  window.setTimeout(EBX_Form.restoreStyleDisplayForCurrentYUITabParentNode, 0);
};
EBX_Form.restoreStyleDisplayForCurrentYUITabParentNode = function () {
  if (EBX_Form.currentYUITabParentNode === null) {
    return;
  }

  EBX_Form.currentYUITabParentNode.style.display = "";

  EBX_Form.currentYUITabParentNode = null;
};

EBX_Form.hideTab = function (tabId) {
  var tabTitleEl = document.getElementById(EBX_Form.tabTitleIdPrefix + tabId);

  if (tabTitleEl === null) {
    EBX_Logger.log("EBX_Form.hideTab(\"" + tabId + "\"): tab with id=" + tabId + " not found.", EBX_Logger.error);
  }

  if (EBX_Utils.matchCSSClass(tabTitleEl, "selected")) {
    // TODO CCH select next visible, or previous visible if not found
    // if all hidden: hide the whole pane
  }

  EBX_Utils.addCSSClass(tabTitleEl, EBX_Form.hiddenTabTitleCSSClass);
};

EBX_Form.showTab = function (tabId) {
  var tabTitleEl = document.getElementById(EBX_Form.tabTitleIdPrefix + tabId);

  if (tabTitleEl === null) {
    EBX_Logger.log("EBX_Form.showTab(\"" + tabId + "\"): tab with id=\"" + tabId + "\" not found.", EBX_Logger.error);
  }

  // TODO CCH if tabTitleEl is the only displayed (if the others are hidden), select it

  EBX_Utils.removeCSSClass(tabTitleEl, EBX_Form.hiddenTabTitleCSSClass);
};

EBX_Form.createHTMLEditorWhenReady = function (textAreaId, htmlEditorSpellcheckEnabled) {
  EBX_Form.launchCmdWhenAllParentHidingContainersAreVisible(
      document.getElementById(textAreaId), "EBX_Form.createHTMLEditor(\"" + textAreaId
      + "\"," + htmlEditorSpellcheckEnabled + ")");
};
EBX_Form.isTabFormReady = false;
EBX_Form.activeTabChangeListenerForLaunchComponentJSCmd = function (event) {
  if (event.prevValue !== undefined) {
    EBX_Form.setHidingContainerState(event.prevValue.get("contentEl"), true);
  }

  EBX_Form.setHidingContainerState(event.newValue.get("contentEl"), false);
};

EBX_Form.hidingContainerCSSClass = "ebx_HidingContainer";
EBX_Form.hidingContainerHiddenCSSClass = "ebx_HidingContainerHidden";

/* Map<id<HTMLElement>, HidingContainer>
 * HidingContainer: {
 * id: String, // HTML element
 * isHidden: boolean,
 * jsCmds: String [],
 * children: HidingContainer [],
 * parent: HidingContainer // null if root
 * }
 *
 * all HidingContainers in the page are not saved in the map, only the HidingContainers tree nodes leading to a jsCmd through children or not
 * the tree stays simple and clean (automatically)
 */
EBX_Form.HidingContainers = {};

EBX_Form.getFirstParentBeingAHidingContainer = function (element) {
  return EBX_Utils.getFirstParentMatchingCSSClass(element, EBX_Form.hidingContainerCSSClass);
};
EBX_Form.isElementHiddenByAHidingContainer = function (element) {
  return EBX_Utils.getFirstParentMatchingCSSClass(element, EBX_Form.hidingContainerHiddenCSSClass) !== null;
};

EBX_Form.launchCmdWhenAllParentHidingContainersAreVisible = function (element, jsCmd) {

  // the element is not in a HidingContainer which is hide state
  if (!EBX_Form.isElementHiddenByAHidingContainer(element)) {
    // launch jsCmd immediately
    window.setTimeout(jsCmd, 0);
    // nothing else to do
    return;
  }

  var firstParentBeingAHidingContainer = EBX_Form.getFirstParentBeingAHidingContainer(element);

  // the element is not in a HidingContainer at all
  if (firstParentBeingAHidingContainer === null) {
    // launch jsCmd immediately
    window.setTimeout(jsCmd, 0);
    // nothing else to do
    return;
  }

  //// the element is in a HidingContainer, and at least one of its HidingContainers is in hidden state
  // so, element is hidden and must wait that all of its HidingContainer and ancestors turns into visibe state

  var hidingContainerObj = EBX_Form.getHidingContainerObj(firstParentBeingAHidingContainer);

  hidingContainerObj.jsCmds.push(jsCmd);
};

// builds and save HidingContainer and parents if needed
EBX_Form.getHidingContainerObj = function (hidingContainerElement) {
  var hidingContainerObj = EBX_Form.HidingContainers[hidingContainerElement.id];

  if (hidingContainerObj !== undefined) {
    return hidingContainerObj;
  }

  var parentHidingContainerElement = EBX_Form.getFirstParentBeingAHidingContainer(hidingContainerElement);
  var parentHidingContainerObj = null;

  if (parentHidingContainerElement !== null) {
    parentHidingContainerObj = EBX_Form.getHidingContainerObj(parentHidingContainerElement);
  }

  var hidingContainerObj = {
    id: hidingContainerElement.id,
    isHidden: EBX_Utils.matchCSSClass(hidingContainerElement, EBX_Form.hidingContainerHiddenCSSClass),
    jsCmds: [],
    children: [],
    parent: parentHidingContainerObj
  };

  if (parentHidingContainerObj !== null) {
    parentHidingContainerObj.children.push(hidingContainerObj);
  }

  EBX_Form.HidingContainers[hidingContainerElement.id] = hidingContainerObj;

  return hidingContainerObj;
};

EBX_Form.isContainerOrOneOfParentsHidden = function (hidingContainerObj) {
  if (hidingContainerObj.isHidden === true) {
    return true;
  }
  // hidingContainerObj is not hidden

  if (hidingContainerObj.parent === null) {
    return false;
  }

  // hidingContainerObj is not hidden and have a parent
  return EBX_Form.isContainerOrOneOfParentsHidden(hidingContainerObj.parent);
};

EBX_Form.setHidingContainerState = function (hidingContainerElement, isHidden) {
  if (EBX_Form.HidingContainers[hidingContainerElement.id] === undefined) {
    // not (or not yet) referenced hidingContainerElement, so no jsCmd and no children to impact
    return;
  }

  var hidingContainerObj = EBX_Form.getHidingContainerObj(hidingContainerElement);

  if (isHidden === true) {
    hidingContainerObj.isHidden = true;
    return;
  }

  hidingContainerObj.isHidden = false;

  if (EBX_Form.isContainerOrOneOfParentsHidden(hidingContainerObj)) {
    return;
  }
  // hidingContainerObj and all parents are not hidden

  // launch jsCmds for this hidingContainerObj and all NotHidden descendants, and clean tree if necessary
  EBX_Form.launchAllJSCmdsCurrentAndNotHiddenDescendantsAndCleanTree(hidingContainerObj);
};

EBX_Form.launchAllJSCmdsCurrentAndNotHiddenDescendantsAndCleanTree = function (hidingContainerObj) {
  var i, len, children, child;

  // current hidingContainerObj
  EBX_Form.launchJSCmdsAndCleanTree(hidingContainerObj);

  children = hidingContainerObj.children.slice();// get a copy

  for (i = 0, len = children.length; i < len; i++) {
    child = children[i];
    if (child.isHidden === false) {
      // recursive call
      EBX_Form.launchAllJSCmdsCurrentAndNotHiddenDescendantsAndCleanTree(child);
    }
  }
};

EBX_Form.launchJSCmdsAndCleanTree = function (hidingContainerObj) {
  var jsCmds, jsCmd;

  jsCmds = hidingContainerObj.jsCmds;

  // use shift to remove each jsCmd launched
  jsCmd = jsCmds.shift();
  while (jsCmd !== undefined) {
    window.setTimeout(jsCmd, 0);
    // use shift to remove each jsCmd launched
    jsCmd = jsCmds.shift();
  }

  EBX_Form.cleanTree(hidingContainerObj);
};

// clean hidingContainerObj if empty, then do the same thing for parents
EBX_Form.cleanTree = function (hidingContainerObj) {
  // abort if a jsCmd is present
  if (hidingContainerObj.jsCmds.length > 0) {
    return;
  }
  // abort if a chid is present
  if (hidingContainerObj.children.length > 0) {
    return;
  }

  // remove from map
  delete EBX_Form.HidingContainers[hidingContainerObj.id];

  // remove from parent
  var parentHidingContainerObj = hidingContainerObj.parent;
  if (parentHidingContainerObj !== null) {
    var siblings = parentHidingContainerObj.children;
    var indexOfCurrentAmongSiblings = EBX_Utils.indexOf(siblings, hidingContainerObj);
    if (indexOfCurrentAmongSiblings >= 0) {
      siblings.splice(indexOfCurrentAmongSiblings, 1);
    }
    // recursive call to clean parents too
    EBX_Form.cleanTree(parentHidingContainerObj);
  }
};

/* map id -> ckEditor or null if not init */
EBX_Form.APVHTMLEditorIdEditor = [];

/* map id -> ckEditor or undefined if not init */
EBX_Form.TextareaIdEditor = [];
EBX_Form.HTMLEditorWidth = null;
EBX_Form.HTMLEditorHeight = null;
EBX_Form.CKEDITORSizesInitialized = false;

/**
 *
 * @param textAreaId {string}
 * @param htmlEditorSpellcheckEnabled {boolean}
 */
EBX_Form.createHTMLEditor = function (textAreaId, htmlEditorSpellcheckEnabled) {
  if (EBX_Form.TextareaIdEditor[textAreaId] !== undefined) {
    return;
  }

  // init CKEditor sizes once
  if (EBX_Form.CKEDITORSizesInitialized === false && EBX_Form.HTMLEditorWidth !== null && EBX_Form.HTMLEditorHeight
      !== null) {
    CKEDITOR.config.width = EBX_Form.HTMLEditorWidth;
    CKEDITOR.config.height = EBX_Form.HTMLEditorHeight;
    EBX_Form.CKEDITORSizesInitialized = true;
  }

  var editor = CKEDITOR.replace(textAreaId, {
    disableNativeSpellChecker: !htmlEditorSpellcheckEnabled
  });

  EBX_Form.TextareaIdEditor[textAreaId] = editor;

  if (EBX_Form.APVHTMLEditorIdEditor[textAreaId] !== undefined) {
    EBX_Form.APVHTMLEditorIdEditor[textAreaId] = editor;
    editor.on("blur", EBX_Form.stackHTMLEditorForValidation, null, textAreaId);
  }

  // Mantis #11012: [On Chrome] User interface problem after clicking into maximize button in HTML field.
  // When CKEditor turns into the maximized mode, all its ancestors' style is set to
  // position: fixed; z-index: 9995; width: 0px; height: 0px;
  // and CSS classes are removed
  // I don't know why, it's weird, but it works, it's brutal, but effective, except for Chrome who don't refresh the UI
  if (EBX_LayoutManager.browser === "Chrome" || EBX_LayoutManager.browser === "Safari") {
    editor.on('afterCommandExec', function (event) {
      if (event.data.name == 'maximize') {
        // if CKEditor is maximized
        if (editor.commands.maximize.state === 1) {
          // move the style of the HTML tag, to force Chrome to refresh the UI
          document.body.parentNode.style.position = "static";
        }
        // for the case un-maximized, the style of element is already restored by CKEditor
      }
    });
  }

};

EBX_Form.stackHTMLEditorForValidation = function (ckEventInfo) {
  EBX_FormPresenter.stackPathForValidation(EBX_FormNodeIndex.fieldsIdPath[ckEventInfo.listenerData]);
  if (EBX_LayoutManager.browser == "Firefox" && EBX_LayoutManager.browserVersion.indexOf("3.6") === 0) {
    // FIXME find why the first blur make the caret dissapear and the controls weird on ckEditor when the user focus it
  }
};

/********* ebx_formWidgets.js *********/
/*
 * Copyright TIBCO Software Inc. 2001-2021. All rights reserved.
 */

function EBX_FormWidgets() {
}

/* Map */
EBX_FormWidgets.messages = {};

EBX_FormWidgets.inputEmpty_CSSClass = "ebx_ValueND";
EBX_FormWidgets.inputWithEmptyButton_CSSClass = "ebx_InputWithEmptyButton";
EBX_FormWidgets.emptyButtonHidden_CSSClass = "ebx_EmptyButtonHidden";
EBX_FormWidgets.inputFocusRedirector_CSSClass = "ebx_InputFocusRedirector";

/** * START Multi Occurrences ** */

var ebx_list_occurrenceState_candidate = "OccurrenceStateCandidate";
var ebx_list_occurrenceState_delete = "OccurrenceStateDelete";
var ebx_list_occurrenceState_insert = "OccurrenceStateInsert";
var ebx_list_occurrenceState_update = "OccurrenceStateUpdate";

ebx_list_getOccurrenceState = function (path, index) {
  return EBX_MultiOccurrences.getLineState(EBX_MultiOccurrences.getLine(path, index));
}

ebx_list_setOccurrenceState = function (path, index, occurrenceState) {
  var listId = EBX_MultiOccurrences.pathToListId[path];
  if (listId === undefined) {
    return false;
  }

  var firstCandidateIndex = EBX_MultiOccurrences.countDefinedOccurenceQty(listId);
  if (index > firstCandidateIndex) {
    return false;
  }
  var lineEl = EBX_MultiOccurrences.getLine(path, index);
  if (lineEl === null) {
    return false;
  }

  var currentOccurrenceState = ebx_list_getOccurrenceState(path, index);

  var lineId = lineEl.id;

  if (occurrenceState === ebx_list_occurrenceState_insert || occurrenceState === ebx_list_occurrenceState_update) {

    if (index === firstCandidateIndex) {
      EBX_MultiOccurrences.addAnOccurrence(listId);
      return true;
    }

    if (currentOccurrenceState === ebx_list_occurrenceState_delete) {
      EBX_MultiOccurrences.undeleteLine(listId, lineId);
      EBX_ButtonUtils.setStateToToggleButton(document.getElementById(lineId + EBX_MultiOccurrences.ButtonDeleteSuffix),
          false);
      return true;
    }

  } else if (occurrenceState === ebx_list_occurrenceState_delete) {

    // delete action is only allowed on insert and update statuses
    if (currentOccurrenceState === ebx_list_occurrenceState_insert || currentOccurrenceState
        === ebx_list_occurrenceState_update) {
      EBX_MultiOccurrences.deleteLine(listId, lineId);
      EBX_ButtonUtils.setStateToToggleButton(document.getElementById(lineId + EBX_MultiOccurrences.ButtonDeleteSuffix),
          true);
      return true;
    }

  }

  return false;
}

ebx_list_getDefinedOccurrencesQuantity = function (path) {
  var listId = EBX_MultiOccurrences.pathToListId[path];
  if (listId === undefined) {
    return null;
  }
  return EBX_MultiOccurrences.countDefinedOccurenceQty(listId);
}

function EBX_MultiOccurrences() {
}

EBX_MultiOccurrences.pathToListId = {};

EBX_MultiOccurrences.getLine = function (path, index) {
  var listId = EBX_MultiOccurrences.pathToListId[path];
  if (listId === undefined) {
    return null;
  }
  var listEl = document.getElementById(listId);
  if (listEl === null) {
    return null;
  }
  return EBX_Utils.getElementChildAtIndex(listEl, index);
};

EBX_MultiOccurrences.getLineState = function (lineEl) {
  if (lineEl === null) {
    return null;
  }
  var flagEl = EBX_MultiOccurrences.getLineActionFlag(lineEl);
  if (flagEl === null) {
    return null;
  }

  switch (flagEl.value) {

    case EBX_MultiOccurrences.ActionCandidate:
      return ebx_list_occurrenceState_candidate;

    case EBX_MultiOccurrences.ActionDelete:
      return ebx_list_occurrenceState_delete;

    case EBX_MultiOccurrences.ActionInsert:
      return ebx_list_occurrenceState_insert;

    case EBX_MultiOccurrences.ActionUpdate:
      return ebx_list_occurrenceState_update;

    default:
      return null;
  }
};

EBX_MultiOccurrences.occurrenceLineSuffix = "_occurrenceLine";
EBX_MultiOccurrences.addAnOccurrence = function (listId) {
  var newLine = EBX_MultiOccurrences.getNextFreeOccurence(listId);
  if (newLine === null) {
    ebx_alert(EBX_FormWidgets.messages.UIComponent_UIMultiOccurrencesEditor_AddOccurrence_Disable);
    return;
  }

  EBX_MultiOccurrences.getLineActionFlag(newLine).value = EBX_MultiOccurrences.ActionInsert;

  EBX_Utils.removeCSSClass(newLine, EBX_Form.hidingContainerHiddenCSSClass);
  EBX_Form.setHidingContainerState(newLine, false);

  var newLineId = newLine.id;
  var webName = newLineId.substring(0, newLineId.length - EBX_MultiOccurrences.occurrenceLineSuffix.length);

  EBX_Form.focus(webName);

  EBX_MultiOccurrences.refreshDisplayAddButton(listId);
};

EBX_MultiOccurrences.getNextFreeOccurence = function (listId) {
  var line = document.getElementById(listId).firstChild;
  // get the first candidate line
  if (line === null) {
    return null;
  }
  do {
    if (!line.id) {
      continue;
    }
    if (!EBX_MultiOccurrences.getLineActionFlag(line)) {
      continue;
    }
    if (EBX_MultiOccurrences.getLineActionFlag(line).value == EBX_MultiOccurrences.ActionCandidate) {
      return line;
    }
  } while ((line = line.nextSibling));

  return null;
};

/**
 * @return an <input type="hidden"/> element which wears the action flag in its
 *         value
 */
EBX_MultiOccurrences.getLineActionFlag = function (line) {
  return document.getElementById(line.id + EBX_MultiOccurrences.ActionFlagSuffix);
};

EBX_MultiOccurrences.refreshDisplayAddButton = function (listId) {
  var addActionDiv = document.getElementById(listId + EBX_MultiOccurrences.addButtonSuffix);
  if (addActionDiv === null) {
    return;
  }

  var maxQty = EBX_MultiOccurrences.getMaxOccurenceAllowed(listId);

  var displayActionDiv = false;

  if (maxQty < 0) {
    displayActionDiv = true;
  } else {
    var currentQty = EBX_MultiOccurrences.countDefinedOccurenceQty(listId);

    // no need to display the add button when the currentQty is equal to maxQty
    if (currentQty < maxQty) {
      displayActionDiv = true;
    }
  }

  addActionDiv.style.display = displayActionDiv ? "" : "none";
};

EBX_MultiOccurrences.MaxOccurencesAllowed = [];
EBX_MultiOccurrences.setMaxOccurenceAllowed = function (listId, maxOccurenceAllowed) {
  EBX_MultiOccurrences.MaxOccurencesAllowed[listId] = maxOccurenceAllowed;
};
EBX_MultiOccurrences.getMaxOccurenceAllowed = function (listId) {
  var ret = EBX_MultiOccurrences.MaxOccurencesAllowed[listId];

  if (!ret) {
    ret = -1;
  }

  return ret;
};

EBX_MultiOccurrences.countDefinedOccurenceQty = function (listId) {
  var list = document.getElementById(listId);
  var line = list.firstChild;
  var qty = 0;

  if (line !== null) {
    do {
      if (!line.id) {
        continue;
      }
      if (!EBX_MultiOccurrences.getLineActionFlag(line)) {
        continue;
      }
      if (EBX_MultiOccurrences.getLineActionFlag(line).value == EBX_MultiOccurrences.ActionCandidate) {
        continue;
      }
      qty++;
    } while ((line = line.nextSibling));
  }

  return qty;
};

EBX_MultiOccurrences.LineContentClassName = "ebx_OccurrenceEditorContent";
EBX_MultiOccurrences.LineContentHiddenModeClassName = "ebx_OccurrenceEditorContentHidden";
EBX_MultiOccurrences.deleteLine = function (listId, lineId) {
  var line = document.getElementById(lineId);
  EBX_Utils.addCSSClass(
      EBX_Utils.getFirstRecursiveChildMatchingCSSClass(line, EBX_MultiOccurrences.LineContentClassName),
      EBX_MultiOccurrences.LineContentHiddenModeClassName);

  EBX_MultiOccurrences.getLineActionFlag(line).value = EBX_MultiOccurrences.ActionDelete;

  EBX_MultiOccurrences.refreshDisplayAddButton(listId);

  var button = document.getElementById(lineId + EBX_MultiOccurrences.ButtonDeleteSuffix);
  if (button !== null) {
    button.tabIndex = 0;
  }
};
EBX_MultiOccurrences.undeleteLine = function (listId, lineId) {
  var line = document.getElementById(lineId);
  EBX_Utils.removeCSSClass(
      EBX_Utils.getFirstRecursiveChildMatchingCSSClass(line, EBX_MultiOccurrences.LineContentClassName),
      EBX_MultiOccurrences.LineContentHiddenModeClassName);

  EBX_MultiOccurrences.getLineActionFlag(line).value = EBX_MultiOccurrences.ActionInsert;

  EBX_MultiOccurrences.refreshDisplayAddButton(listId);
  var button = document.getElementById(lineId + EBX_MultiOccurrences.ButtonDeleteSuffix);
  if (button !== null) {
    button.tabIndex = -1;
  }
};

/** *END Multi Occurrences ** */

/** *START Complex List ** */

function EBX_ComplexList() {
}

EBX_ComplexList.collapsedModeClassName = "ebx_ComplexFieldsCollapsed";

EBX_ComplexList.expand = function (listId) {
  EBX_GroupHavingChildren.saveState(listId, false);
  EBX_Utils.removeCSSClass(document.getElementById(listId), EBX_ComplexList.collapsedModeClassName);
};

EBX_ComplexList.collapse = function (listId) {
  EBX_GroupHavingChildren.saveState(listId, true);
  EBX_Utils.addCSSClass(document.getElementById(listId), EBX_ComplexList.collapsedModeClassName);
};

/** *END Complex List ** */

/** *START Localized Block (label description) ** */

function EBX_CollapsibleBlock() {
}

EBX_CollapsibleBlock.collapsedModeClassName = "ebx_CollapsibleBlockCollapsed";
EBX_CollapsibleBlock.buttonIdSuffix = "_ExpandCollapse";

EBX_CollapsibleBlock.expand = function (collapsibleBlockId) {
  EBX_Utils.removeCSSClass(document.getElementById(collapsibleBlockId), EBX_CollapsibleBlock.collapsedModeClassName);
};
EBX_CollapsibleBlock.collapse = function (collapsibleBlockId) {
  EBX_Utils.addCSSClass(document.getElementById(collapsibleBlockId), EBX_CollapsibleBlock.collapsedModeClassName);
};

EBX_CollapsibleBlock.expandHidingContainer = function (hidingContainerBlockId) {
  EBX_GroupHavingChildren.saveState(hidingContainerBlockId, false);
  var hidingContainer = document.getElementById(hidingContainerBlockId);
  EBX_Utils.removeCSSClass(hidingContainer, EBX_Form.hidingContainerHiddenCSSClass);
  EBX_Form.setHidingContainerState(hidingContainer, false);
};
EBX_CollapsibleBlock.collapseHidingContainer = function (hidingContainerBlockId) {
  EBX_GroupHavingChildren.saveState(hidingContainerBlockId, true);
  var hidingContainer = document.getElementById(hidingContainerBlockId);
  EBX_Utils.addCSSClass(hidingContainer, EBX_Form.hidingContainerHiddenCSSClass);
  EBX_Form.setHidingContainerState(hidingContainer, true);
};

EBX_CollapsibleBlock.setExpanded = function (hidingContainerBlockId, isExpanded) {
  var isCollapsed = EBX_Utils.matchCSSClass(document.getElementById(hidingContainerBlockId),
      EBX_Form.hidingContainerHiddenCSSClass);

  // if the expandCollapseBlock is in the desired state, return
  if (isExpanded && !isCollapsed) {
    return;
  }
  if (!isExpanded && isCollapsed) {
    return;
  }

  // else, click on the button
  var button = document.getElementById(hidingContainerBlockId + EBX_CollapsibleBlock.buttonIdSuffix);
  button.click();
};

/** *END Localized Block ** */

/** *START Group having children ** */

function EBX_GroupHavingChildren() {
}

EBX_GroupHavingChildren.mapIdToPath = {};
EBX_GroupHavingChildren.saveStateRequester = new YAHOO.util.XHRDataSource();

// initialized by UITreeForm.java
EBX_GroupHavingChildren.trChildrenIds = {};

EBX_GroupHavingChildren.fieldExpandCollapseTDCSSClass = "ebx_FieldExpandCollapse";

EBX_GroupHavingChildren.trProperties = {};
/**
 * Expands a group and its children.
 *
 * @param {string}
 *            trId row id
 * @param {boolean}
 *            skipSaveStateRequest Optionnal, if equals true does not save group
 *            state in session settings.
 */
EBX_GroupHavingChildren.expand = function (trId, skipSaveStateRequest) {
  if (!skipSaveStateRequest) {
    EBX_GroupHavingChildren.saveState(trId, false);
  }

  var trProperties, i, len, child;
  trProperties = EBX_GroupHavingChildren.getTrProperties(trId);
  for (i = 0, len = trProperties.children.length; i < len; i++) {
    child = trProperties.children[i];
    child.style.display = "";
    EBX_Utils.removeCSSClass(child, EBX_Form.hidingContainerHiddenCSSClass);
    EBX_Form.setHidingContainerState(child, false);
    if (EBX_GroupHavingChildren.hasChildren(child.id) && EBX_GroupHavingChildren.isOpen(child.id)) {
      EBX_GroupHavingChildren.expand(child.id, true);
    }
  }
};
/**
 * Collapses a group and its children.
 *
 * @param {string}
 *            trId row id
 * @param {boolean}
 *            skipSaveStateRequest Optionnal, if equals true does not save group
 *            state in session settings.
 */
EBX_GroupHavingChildren.collapse = function (trId, skipSaveStateRequest) {
  if (!skipSaveStateRequest) {
    EBX_GroupHavingChildren.saveState(trId, true);
  }

  var trProperties, i, len, child;
  trProperties = EBX_GroupHavingChildren.getTrProperties(trId);
  for (i = 0, len = trProperties.children.length; i < len; i++) {
    child = trProperties.children[i];
    if (EBX_GroupHavingChildren.hasChildren(child.id)) {
      EBX_GroupHavingChildren.collapse(child.id, true);
    }
    child.style.display = "none";
    EBX_Utils.addCSSClass(child, EBX_Form.hidingContainerHiddenCSSClass);
    EBX_Form.setHidingContainerState(child, true);
  }
};

/**
 * Save on server the group state, expanded/collapsed
 *
 * @param {String}
 *            trId the id of the selected form row
 * @param {Boolean}
 *            isExpanded true, if group is now expanded
 */
EBX_GroupHavingChildren.saveState = function (trId, isCollapsed) {
  if (EBX_GroupHavingChildren.saveGroupStateRequest === undefined) {
    return;
  }
  var path = EBX_GroupHavingChildren.mapIdToPath[trId];
  var request = [];
  request.push(EBX_GroupHavingChildren.saveGroupStateRequest);
  if (path) {
    request.push("&", EBX_GroupHavingChildren.requestParam_groupPath, "=", encodeURIComponent(path));
  } else {
    request.push("&", EBX_GroupHavingChildren.requestParam_groupId, "=", encodeURIComponent(trId));
  }
  request.push("&", EBX_GroupHavingChildren.requestParam_groupIsCollapsed, "=", isCollapsed);

  EBX_GroupHavingChildren.saveStateRequester.sendRequest(request.join(""),
      null);
};

EBX_GroupHavingChildren.getTrProperties = function (trId) {
  if (EBX_GroupHavingChildren.trProperties[trId] === undefined) {
    var properties;
    var trEl = document.getElementById(trId);
    if (trEl !== null) {
      properties = {};
      properties.trEl = trEl;
      var tdExpandCollapse = EBX_Utils.getFirstDirectChildMatchingCSSClass(trEl,
          EBX_GroupHavingChildren.fieldExpandCollapseTDCSSClass);
      if (tdExpandCollapse !== null) {
        properties.expandCollapseCkb = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(tdExpandCollapse,
            "ebx_ToggleButtonCkb");
      } else {
        properties.expandCollapseCkb = null;
      }
      var childrenIds = EBX_GroupHavingChildren.trChildrenIds[trId];
      if (childrenIds !== undefined) {
        var children = [];
        for (var i = 0, len = childrenIds.length; i < len; i++) {
          children.push(document.getElementById(childrenIds[i]));
        }
        properties.children = children;
      } else {
        properties.children = null;
      }
    } else {
      properties = null;
    }
    EBX_GroupHavingChildren.trProperties[trId] = properties;
  }
  return EBX_GroupHavingChildren.trProperties[trId];
};

EBX_GroupHavingChildren.hasChildren = function (trId) {
  return EBX_GroupHavingChildren.getTrProperties(trId).expandCollapseCkb !== null;
};

EBX_GroupHavingChildren.isOpen = function (trId) {
  if (EBX_GroupHavingChildren.hasChildren(trId) === false) {
    return false;
  }
  return EBX_GroupHavingChildren.getTrProperties(trId).expandCollapseCkb.checked === false;
};

/** *END Group having children ** */

var ebx_HTMLEditorPreview_content = {};
var ebx_HTMLEditorPreview_window = null;

function ebx_html_editorPreview(id, title) {
  if (!id || !ebx_HTMLEditorPreview_content[id]) {
    ebx_alert(EBX_FormWidgets.messages.Adaptation_Node_Editor_Html_Error);
    return;
  }

  if (ebx_HTMLEditorPreview_window !== null) {
    ebx_HTMLEditorPreview_window.close();
  }

  var anHTML_content = ebx_HTMLEditorPreview_content[id];

  ebx_HTMLEditorPreview_window = window.open("about:blank", 'on_editorPreview',
      'scrollbars=yes,status=no,toolbar=no,menubar=no,width=620,height=400', true);

  while (anHTML_content.indexOf("&gt;") > -1) {
    anHTML_content = anHTML_content.replace("&gt;", ">");
  }

  while (anHTML_content.indexOf("&lt;") > -1) {
    anHTML_content = anHTML_content.replace("&lt;", "<");
  }

  anHTML_content = "<html><head><title>" + title + "</title></head><body>" + anHTML_content + "</body></html>";

  window.setTimeout(function () {
    ebx_HTMLEditorPreview_window.document.body.innerHTML = anHTML_content;
  }, 100);
}

/** *START Facet Enumeration ** */
function EBX_FacetEnumeration() {
}

EBX_FacetEnumeration.firstPage = "FIRST";
EBX_FacetEnumeration.previousPage = "PREVIOUS";
EBX_FacetEnumeration.nextPage = "NEXT";
EBX_FacetEnumeration.lastPage = "LAST";
EBX_FacetEnumeration.InputFieldDisplaySuffix = "_display";

EBX_FacetEnumeration.onFacetEnum_valueField = null;
EBX_FacetEnumeration.onFacetEnum_displayField = null;

function ebx_delFacetEnumeration() {
  EBX_Utils.closeInternalPopup();

  if (EBX_FacetEnumeration.onFacetEnum_valueField !== null) {
    EBX_Form.refreshEmptyButtonFromFacetEnumField(EBX_FacetEnumeration.onFacetEnum_valueField, true);
    EBX_FacetEnumeration.onFacetEnum_valueField = null;
  }

  if (EBX_FacetEnumeration.onFacetEnum_displayField !== null) {
    EBX_FacetEnumeration.onFacetEnum_displayField.focus();
    EBX_FacetEnumeration.onFacetEnum_displayField = null;
  }
}

function ebx_getFacetEnumeration(nodePath, valueFieldId, isMultiple, isTableRef, specificPageIndexInFSMHistory) {
  // remove previous tableRef (if any)
  ebx_delFacetEnumeration();

  EBX_FacetEnumeration.onIsMultiple = isMultiple;

  EBX_FacetEnumeration.onFacetEnum_valueField = document.getElementById(valueFieldId);
  EBX_FacetEnumeration.onFacetEnum_displayField = document.getElementById(valueFieldId
      + EBX_FacetEnumeration.InputFieldDisplaySuffix);
  EBX_FacetEnumeration.onFacetEnum_isTableRef = isTableRef;

  EBX_FacetEnumeration.onFacetEnumURL_getRows = onFacetEnumURL_getRows_basic
      + "&$facetEnum_specificPageIndexInFsmHistory="
      + specificPageIndexInFSMHistory + "&$facetEnum_nodePath=" + nodePath + "&$facetEnum_paginPageIndex=";

  var height = "220";
  if (YAHOO.env.ua.webkit !== 0) {
    height = "230";
  }

  var cmdToCall = "EBX_Utils.openInternalPopup(onFacetEnumURL_getGUI, 400, " + height
      + ", {isDimmed: false,contextElement: EBX_FacetEnumeration.onFacetEnum_displayField});";

  EBX_FormPresenterStatusIndicator.setListenerOnWaitingEnd(cmdToCall);
}

function ebx_facetEnumerationTableRef_seeDetails(inputType, valueFieldId, baseURL, formatedPKPName) {
  var formatedPK = null;
  if (inputType == 'advanced') {
    formatedPK = document.getElementById(valueFieldId).value;
  }
  if (inputType == 'dropdown') {
    var select = document.getElementById(valueFieldId);
    formatedPK = select.options[select.selectedIndex].value;
  }

  if (formatedPK == null || formatedPK == ebx_nullValueForFacetEnum) {
    ebx_alert(EBX_FACET_ENUMERATION_LABEL_ALERT_SELECT_VALUE);
    return;
  }

  var finalURL = baseURL + "&" + formatedPKPName + "=" + encodeURIComponent(formatedPK);

  EBX_Utils.openInternalPopupLargeSizeHostedClose(finalURL);
}

function ebx_manageKeysForFacetEnumeration(event, nodePath, valueFieldId, isMultiple, isTableRef,
    specificPageIndexInFSMHistory) {
  if (EBX_Form.isEventToInputText(event) === false) {
    return true;
  }

  ebx_getFacetEnumeration(nodePath, valueFieldId, isMultiple, isTableRef, specificPageIndexInFSMHistory);

  //return false to ignore current input
  return false;
}

/*
// old code to delete @see UIFECSelectorAfterCreate l.107
EBX_FacetEnumeration.autoSelectNewRecord = function(inputName, labelName, inputValue, labelValue){
var facetEnumInput = parent.document.getElementById(inputName);
var facetEnumLabel = parent.document.getElementById(labelName);
if (facetEnumInput && facetEnumLabel) {
facetEnumInput.value = inputValue;
facetEnumLabel.value = labelValue;
}
parent.EBX_Utils.closeInternalPopup();
};
*/
/** *START Facet Enumeration SELECTOR ** */
EBX_FacetEnumeration.selector_valueField = false;
EBX_FacetEnumeration.selector_displayField = false;
EBX_FacetEnumeration.selector_baseURL = false;
EBX_FacetEnumeration.selector_isTableRef = true;

EBX_FacetEnumeration.selector_currentPageIndex = 0;
EBX_FacetEnumeration.selector_isLastPage = false;

EBX_FacetEnumeration.ajaxFacetEnumSelector = function () {
  this.isMultiple = parent.EBX_FacetEnumeration.onIsMultiple;

  this.onExecuteIfOK = function (responseXML, root) {
    var optionsEl = root.getElementsByTagName('options')[0];
    this.updateDropDown(optionsEl);
    EBX_FacetEnumeration.selector_currentPageIndex = parseInt(optionsEl.attributes.getNamedItem('position').nodeValue,
        10);
    EBX_FacetEnumeration.selector_isLastPage = eval(optionsEl.attributes.getNamedItem('isLast').nodeValue);

    //Redisplay input fields and hide wait div
    EBX_FacetEnumeration.selector_hideInputFields(false);
    return true;
  };

  this.onExecuteIfKO = function (responseXML) {
    EBX_FacetEnumeration.selector_resetList();
    EBX_FacetEnumeration.selector_hideInputFields(false);
  };

  this.onGetExceptedResponseCode = function (callerId) {
    return this.responseCodeOK_OptionsList;
  };

  this.onManageTimeoutResponse = function () {
    //parent.location.href;
    this.selector_closeFacetEnum();
    EBX_Loader.gotoTimeoutPage();
  };

  this.updateDropDown = function (optionsEl) {
    var recordList = document.getElementById('on_values');

    var newOptions = optionsEl.getElementsByTagName('option');
    // not used
    //		var currentDisplayValue = document.getElementById('on_display').value;

    for (var i = 0; i < newOptions.length; ++i) {
      var anOption = newOptions[i];
      var isEnabled = anOption.attributes.getNamedItem('isEnabled').nodeValue;
      var value = "";
      if (anOption.getElementsByTagName('value')[0] && anOption.getElementsByTagName('value')[0].firstChild) {
        value = anOption.getElementsByTagName('value')[0].firstChild.data;
      }

      var label = "";
      if (anOption.getElementsByTagName('label')[0] && anOption.getElementsByTagName('label')[0].firstChild) {
        label = anOption.getElementsByTagName('label')[0].firstChild.data;
      }

      var aNewOption = document.createElement('option');
      if (label) {
        aNewOption.text = label;
      } else {
        aNewOption.text = "";
      }

      aNewOption.value = value;

      //Add new option.
      recordList.options.add(aNewOption);

      if (isEnabled == "false") {
        aNewOption.style.background = "#E0E0E0";
        aNewOption.disabled = true;
      } else {
        if (EBX_FacetEnumeration.selector_valueField.value == aNewOption.value) {
          //Current value is highlighted and selected by default.
          aNewOption.style.background = "#FFF4C1";
          aNewOption.selected = true;
        }
      }
    }

    var rawValues = [];

    // Redisplay as HTML in div
    var valuesDiv = document.getElementById('on_valuesDiv');
    var html = "<select style='width: 100%;'";
    if (EBX_LayoutManager.isIPad) {
      html += " onchange='window.setTimeout(\"EBX_FacetEnumeration.selector_submit()\", 0);'";
    } else {
      html += " ondblclick='EBX_FacetEnumeration.selector_submit();'";
    }
    html += " onkeyup='EBX_FacetEnumeration.selector_listKeyUp(event, this);' size='11' id='on_values'>";
    for (i = 0; i < recordList.options.length; i++) {
      anOption = recordList.options[i];

      rawValues[i] = anOption.value;

      html += "<option";
      if (anOption.disabled) {
        html += " disabled";
      }
      if (anOption.selected) {
        html += " selected";
      }
      var style = "";
      if (anOption.style.background) {
        style += " background: " + anOption.style.background + ";";
      }
      if (anOption.value == parent.ebx_nullValueForFacetEnum) {
        style += " color: #777777; font-style: italic;";
      }
      if (style !== "") {
        html += " style=\"" + style + "\"";
      }
      html += " title=\"" + anOption.text + "\"";
      html += ">";
      html += anOption.text;
      html += "</option>";
    }
    html += "</select>";
    valuesDiv.innerHTML = html;
    valuesDiv.ebx_rawValues = rawValues;

    EBX_Utils.removeCSSClass(document.getElementById("ebx_FacetEnum_SearchButton"),
        EBX_ButtonUtils.buttonPushedCSSClass);
  };

  this.getElementsByNameStartingWith = function (inputFieldIdPart) {
    var elements = parent.document.getElementsByTagName("input");
    var matchingElements = [];
    var cmp = 0;
    for (var i = 0; i < elements.length; i++) {
      if (elements[i].type == "hidden" && elements[i].id.indexOf(inputFieldIdPart, 0) === 0 && elements[i].id.indexOf(
          'action') === -1
          && elements[i].value !== null && elements[i].value.length > 0) {
        matchingElements[cmp] = elements[i];
        cmp++;
      }
    }
    return matchingElements;
  };

  this.isFieldArrayContainValue = function (array, value) {
    for (var i = 0; i < array.length; i++) {
      if (array[i].value == value) {
        return true;
      }
    }
    return false;
  };
};
EBX_FacetEnumeration.ajaxFacetEnumSelector.prototype = new EBX_AbstractAjaxResponseManager();

EBX_FacetEnumeration.selector_init = function () {
  var waitDivText = document.getElementById('on_waitDivText');
  waitDivText.innerHTML = parent.EBX_FACET_ENUMERATION_LABEL_WAIT_DIV_TEXT;

  document.getElementById("ebx_WorkspaceContent").style.overflow = "visible";

  EBX_FacetEnumeration.selector_valueField = parent.EBX_FacetEnumeration.onFacetEnum_valueField;
  EBX_FacetEnumeration.selector_displayField = parent.EBX_FacetEnumeration.onFacetEnum_displayField;
  EBX_FacetEnumeration.selector_baseURL = parent.EBX_FacetEnumeration.onFacetEnumURL_getRows;
  EBX_FacetEnumeration.selector_isTableRef = parent.EBX_FacetEnumeration.onFacetEnum_isTableRef;
};

EBX_FacetEnumeration.selector_search = function () {
  EBX_Utils.addCSSClass(document.getElementById("ebx_FacetEnum_SearchButton"), EBX_ButtonUtils.buttonPushedCSSClass);
  EBX_FacetEnumeration.selector_ajaxCallForSearch(EBX_FacetEnumeration.firstPage);
};

EBX_FacetEnumeration.selector_getRequestURLForSearch = function () {
  var currentDisplayValue = document.getElementById('on_display');
  var buildedUrl = EBX_FacetEnumeration.selector_getRequestURL(EBX_FacetEnumeration.firstPage);
  if (currentDisplayValue) {
    buildedUrl += '&$facetEnum_userInput=' + encodeURIComponent(currentDisplayValue.value);
  }
  return buildedUrl;
};

EBX_FacetEnumeration.selector_getRequestURL = function (page) {
  var buildedUrl = "";

  if (EBX_FacetEnumeration.selector_isTableRef) {
    buildedUrl = EBX_FacetEnumeration.selector_baseURL + page;
  } else {
    if (page === EBX_FacetEnumeration.firstPage) {
      EBX_FacetEnumeration.selector_currentPageIndex = 0;
      buildedUrl = EBX_FacetEnumeration.selector_baseURL + EBX_FacetEnumeration.selector_currentPageIndex;
    }
    if (page === EBX_FacetEnumeration.previousPage) {
      if (EBX_FacetEnumeration.selector_currentPageIndex - 10 <= 0) {
        EBX_FacetEnumeration.selector_currentPageIndex = 0;
      } else {
        EBX_FacetEnumeration.selector_currentPageIndex -= 10;
      }
      buildedUrl = EBX_FacetEnumeration.selector_baseURL + EBX_FacetEnumeration.selector_currentPageIndex;
    }
    if (page === EBX_FacetEnumeration.nextPage) {
      EBX_FacetEnumeration.selector_currentPageIndex += 10;
      buildedUrl = EBX_FacetEnumeration.selector_baseURL + EBX_FacetEnumeration.selector_currentPageIndex;
    }
    if (page === EBX_FacetEnumeration.lastPage) {
      buildedUrl = EBX_FacetEnumeration.selector_baseURL + page;
    }
    // The user input is required for other enumerations.
    var currentDisplayValue = document.getElementById('on_display');
    if (currentDisplayValue) {
      buildedUrl += '&$facetEnum_userInput=' + encodeURIComponent(currentDisplayValue.value);
    }
  }

  return buildedUrl;
};

EBX_FacetEnumeration.selector_selectValue = function () {
  var recordList = document.getElementById('on_values');
  var selectedOption = recordList.options[recordList.selectedIndex];

  if (selectedOption.value == '-') {
    return;
  }
  document.getElementById('on_value').value = selectedOption.value;
  document.getElementById('on_display').value = selectedOption.text;
};

EBX_FacetEnumeration.selector_listKeyUp = function (evenement, refObj) {
  var keyCode = window.event ? evenement.keyCode : evenement.which;
  if (keyCode == EBX_Utils.keyCodes.ENTER) {
    if (refObj.id == 'on_values') {
      EBX_FacetEnumeration.selector_submit();
    }
    if (refObj.id == 'on_display') {
      EBX_FacetEnumeration.selector_search();
    }
  }

  if (refObj.id == 'on_display') {
    if (keyCode == EBX_Utils.keyCodes.DOWN || keyCode == EBX_Utils.keyCodes.UP) {
      EBX_Form.focus('on_values');
    }
  }
};

EBX_FacetEnumeration.selector_commonKeyUp = function (evenement) {
  var keyCode = window.event ? window.event.keyCode : evenement.which;
  if (keyCode == EBX_Utils.keyCodes.ESCAPE) {
    EBX_FacetEnumeration.selector_closeFacetEnum();
  }
};

EBX_FacetEnumeration.selector_submit = function () {
  var values = document.getElementById('on_values');
  var valuesDiv = document.getElementById('on_valuesDiv');
  var rawValues = valuesDiv.ebx_rawValues;

  if (values.selectedIndex < 0 && values.length > 0) {
    ebx_alert(parent.EBX_FACET_ENUMERATION_LABEL_ALERT_SELECT_VALUE);
    return;
  }
  if (values.length === 0) {
    EBX_FacetEnumeration.selector_closeFacetEnum();
    return;
  }

  var selectedOption = values.options[values.selectedIndex];
  //Can't select a disabled option. Thus return false and reset selected index.
  if (selectedOption.disabled) {
    values.selectedIndex = -1;
    values.selected = false;
    return;
  }

  EBX_FacetEnumeration.selector_displayField.value = selectedOption.text;
  EBX_FacetEnumeration.selector_valueField.value = rawValues[values.selectedIndex];

  // activate onchange event on value field
  if (EBX_FacetEnumeration.selector_valueField.onchange) {
    EBX_FacetEnumeration.selector_valueField.onchange();
  }

  EBX_FacetEnumeration.selector_closeFacetEnum();
};

EBX_FacetEnumeration.selector_closeFacetEnum = function () {
  try {
    EBX_FacetEnumeration.selector_displayField.focus();
  } catch (e) {
  }
  parent.ebx_delFacetEnumeration();
};

EBX_FacetEnumeration.selector_resetList = function () {
  var recordList = document.getElementById('on_values');
  for (var i = recordList.length - 1; i >= 0; i--) {
    var achild = recordList.options[i];
    recordList.removeChild(achild);
  }

  //Hide input fields and display wait div
  EBX_FacetEnumeration.selector_hideInputFields(true);
};

EBX_FacetEnumeration.selector_manageButtons = function () {
  // not used
  //	var valuesDiv = document.getElementById('on_valuesDiv');

  var searchButton = document.getElementById('ebx_FacetEnum_SearchButton');
  var firstPageImgLink = document.getElementById('onFacetEnum_FirstPageIcon');
  var previousPageImgLink = document.getElementById('onFacetEnum_PreviousPageIcon');
  var nextPageImgLink = document.getElementById('onFacetEnum_NextPageIcon');
  var lastPageImgLink = document.getElementById('onFacetEnum_LastPageIcon');

  if (document.getElementById('on_waitDiv').style.display == "none") {
    EBX_FacetEnumeration.selector_manageButton(searchButton, false);
    //We are in first page
    if (parseInt(EBX_FacetEnumeration.selector_currentPageIndex, 10) === 0) {
      EBX_FacetEnumeration.selector_manageButton(firstPageImgLink, true);
      EBX_FacetEnumeration.selector_manageButton(previousPageImgLink, true);
    } else {
      EBX_FacetEnumeration.selector_manageButton(firstPageImgLink, false);
      EBX_FacetEnumeration.selector_manageButton(previousPageImgLink, false);
    }

    if (EBX_FacetEnumeration.selector_isLastPage) {
      EBX_FacetEnumeration.selector_manageButton(nextPageImgLink, true);
      EBX_FacetEnumeration.selector_manageButton(lastPageImgLink, true);
    } else {
      EBX_FacetEnumeration.selector_manageButton(nextPageImgLink, false);
      EBX_FacetEnumeration.selector_manageButton(lastPageImgLink, false);
    }
  } else {
    EBX_FacetEnumeration.selector_manageButton(searchButton, true);
    EBX_FacetEnumeration.selector_manageButton(firstPageImgLink, true);
    EBX_FacetEnumeration.selector_manageButton(previousPageImgLink, true);
    EBX_FacetEnumeration.selector_manageButton(nextPageImgLink, true);
    EBX_FacetEnumeration.selector_manageButton(lastPageImgLink, true);
  }
};

EBX_FacetEnumeration.selector_manageButton = function (button, isDisabled) {
  if (!button) {
    return;
  }
  EBX_ButtonUtils.setButtonDisabled(button, isDisabled);
};

EBX_FacetEnumeration.selector_lastPage = function () {
  EBX_FacetEnumeration.selector_ajaxCall(EBX_FacetEnumeration.lastPage);
};

EBX_FacetEnumeration.selector_nextPage = function () {
  EBX_FacetEnumeration.selector_ajaxCall(EBX_FacetEnumeration.nextPage);
};

EBX_FacetEnumeration.selector_firstPage = function () {
  EBX_FacetEnumeration.selector_ajaxCall(EBX_FacetEnumeration.firstPage);
};

EBX_FacetEnumeration.selector_previousPage = function () {
  EBX_FacetEnumeration.selector_ajaxCall(EBX_FacetEnumeration.previousPage);
};

EBX_FacetEnumeration.selector_ajaxCallForSearch = function () {
  EBX_FacetEnumeration.selector_resetList();
  var ajaxFacetEnumObject = new EBX_FacetEnumeration.ajaxFacetEnumSelector();
  ajaxFacetEnumObject.onExecute(EBX_FacetEnumeration.selector_getRequestURLForSearch());
};

EBX_FacetEnumeration.selector_ajaxCall = function (page) {
  EBX_FacetEnumeration.selector_resetList();
  var ajaxFacetEnumObject = new EBX_FacetEnumeration.ajaxFacetEnumSelector();
  ajaxFacetEnumObject.onExecute(EBX_FacetEnumeration.selector_getRequestURL(page));
};

EBX_FacetEnumeration.selector_initialAjaxCall = function () {
  var recordList = document.getElementById('on_values');
  if (recordList) {
    EBX_FacetEnumeration.selector_ajaxCallForSearch();
  } else {
    setTimeout("EBX_FacetEnumeration.selector_initialAjaxCall()", 200);
  }
};
EBX_FacetEnumeration.focusValuesTaskId = "EBX_FacetEnumeration_focusValuesTask";
EBX_FacetEnumeration.selector_hideInputFields = function (hide) {
  if (hide) {
    document.getElementById("on_valuesDiv").style.display = "none";
    document.getElementById("on_waitDiv").style.display = "";
  } else {
    document.getElementById("on_valuesDiv").style.display = "";
    document.getElementById("on_waitDiv").style.display = "none";
    //        document.getElementById('on_display').focus();
    EBX_Loader.addDynamicallyTaskBeforeTaskId(EBX_Loader_taskId_destroy_loading_layer,
        EBX_FacetEnumeration.focusValuesTaskId,
        EBX_FacetEnumeration.focusValuesTaskId, EBX_Loader.states.onStarting, EBX_FacetEnumeration.focusValuesTask,
        EBX_Utils.returnTrue);
  }

  EBX_FacetEnumeration.selector_manageButtons();
};
EBX_FacetEnumeration.focusValuesTask = function () {
  EBX_Loader.changeTaskState(EBX_FacetEnumeration.focusValuesTaskId, EBX_Loader.states.processing);

  EBX_Form.focus('on_values');

  EBX_Loader.changeTaskState(EBX_FacetEnumeration.focusValuesTaskId, EBX_Loader.states.done);
};
/** *END Facet Enumeration SELECTOR ** */

/** *END Facet Enumeration ** */

/** *START Incremental Search Selector ** */

function EBX_ISS() {
}

/* Constant */
/* feed by UIIncrementalSearchSelectorManagerVC for each ISS added in the page */
EBX_ISS.mapIdPreviewURL = {};
EBX_ISS.mapIdCreateNewURL = {};
EBX_ISS.mapIdAdvancedSelectorURL = {};
EBX_ISS.mapIdPathForNodeIndex = {};
EBX_ISS.mapIdAjaxComponentIndex = {};
EBX_ISS.mapIdIsUsedForJavaScriptSelectionOnly = {};
EBX_ISS.javaScriptSelectionListener = {};
EBX_ISS.isManualSearchMode = {};

/* Constants. Null are initialized at the first display */
// height in px for list border (top and bottom) which launch auto-scroll
EBX_ISS.listScrollPadding = 20;
// rolling delay between key press and request in ms
EBX_ISS.requestDelay = 200;
// initial height in px, popup height can't be less than this value
EBX_ISS.initialHeight = 150;

EBX_ISS_State = function (className) {
  this.className = className;
};
EBX_ISS_State.ERROR = new EBX_ISS_State("ebx_ISS_list_Error");
EBX_ISS_State.WAITING_INPUT = new EBX_ISS_State("ebx_ISS_list_WaitingInput");
EBX_ISS_State.NORMAL = new EBX_ISS_State("ebx_ISS_list_Normal");
EBX_ISS_State.HAS_NEXT = new EBX_ISS_State("ebx_ISS_list_HasNext");
EBX_ISS_State.NO_RESULT = new EBX_ISS_State("ebx_ISS_list_NoResult");
EBX_ISS_State.LOADING = new EBX_ISS_State("ebx_ISS_list_Loading");
EBX_ISS_State.WAITING_APV = new EBX_ISS_State("ebx_ISS_list_WaitingAPV");

EBX_ISS.containerCSSClass = "ebx_ISS_Container";
EBX_ISS.containerFocusCSSClass = "ebx_ISS_Container_Focus";
EBX_ISS.containerActiveCSSClass = "ebx_ISS_Container_Active";

EBX_ISS.paneId = "ebx_ISS_pane";
EBX_ISS.pane = null;
EBX_ISS.resize = null;
EBX_ISS.scrollMakerCSSClass = "ebx_ISS_scrollMaker";

EBX_ISS.bodyDivId = "ebx_ISS_body";
EBX_ISS.bodyDivEl = null;
EBX_ISS.originalLabelDivId = "ebx_ISS_OriginalLabel";
EBX_ISS.originalLabelDivEl = null;
// Mantis #12657
EBX_ISS.originalLabelEnabled = false;
EBX_ISS.listId = "ebx_ISS_list";
EBX_ISS.listEl = null;
EBX_ISS.errorDivId = "ebx_ISS_Error";
EBX_ISS.errorDivEl = null;
EBX_ISS.waitingInputDivId = "ebx_ISS_WaitingInput";
EBX_ISS.waitingInputDivEl = null;
EBX_ISS.resultsDivId = "ebx_ISS_Results";
EBX_ISS.resultsDivEl = null;
EBX_ISS.hasNextDivId = "ebx_ISS_HasNext";
EBX_ISS.hasNextDivEl = null;
EBX_ISS.noResultDivId = "ebx_ISS_NoResult";
EBX_ISS.noResultDivEl = null;
EBX_ISS.loadingDivId = "ebx_ISS_Loading";
EBX_ISS.loadingDivEl = null;
EBX_ISS.toolbarDivId = "ebx_ISS_Toolbar";
EBX_ISS.toolbarDivEl = null;
EBX_ISS.createButtonId = "ebx_ISS_CreateButton";
EBX_ISS.createButtonEl = null;
EBX_ISS.advancedSelectorButtonId = "ebx_ISS_AdvancedSelectorButton";
EBX_ISS.advancedSelectorButtonEl = null;
EBX_ISS.waitingAPVDivId = "ebx_ISS_WaitingAPV";
EBX_ISS.waitingAPVDivEl = null;

EBX_ISS.itemPrefixId = "ebx_ISS_Item_";

/* Variables depending to the field */
EBX_ISS.currentScrollMaker = null;
EBX_ISS.currentScrollingContainer = null;
EBX_ISS.currentContainerEl = null;
EBX_ISS.currentInputEl = null;
EBX_ISS.currentButtonEl = null;
EBX_ISS.originalInputLabel = null;
EBX_ISS.originalInputCSSClass = null;
EBX_ISS.results = [];
EBX_ISS.highlightedItemIndex = -2;
EBX_ISS.highlightedItemIndexUI = -2;
EBX_ISS.listState = EBX_ISS_State.NORMAL;
EBX_ISS.requestedIndex = 0;
EBX_ISS.maxItemsByPage = 0;
EBX_ISS.defaultPageExtraSize = 6;
EBX_ISS.defaultItemHeight = undefined;
EBX_ISS.isShown = false;
EBX_ISS.preventBlur = false;
EBX_ISS.originalFormScrollTop = null;
EBX_ISS.currentFormScrollTop = null;
EBX_ISS.currentFormExtraHeightBottom = null;
EBX_ISS.additionnalFormHeight = 0;
EBX_ISS.isCurrentManualSearchMode = false;
EBX_ISS.lazyLoadedElements = [];

EBX_ISS.showPane = function () {
  YAHOO.util.Event.addListener(EBX_ISS.currentScrollingContainer, "scroll",
      EBX_ISS.resetFormScroll, EBX_ISS.currentScrollingContainer.scrollLeft);

  EBX_ISS.pane.show();

  //Avoid creepy graphics bugs on window resize
  EBX_LayoutManager.bodyLayout.addListener("resize", EBX_ISS.revert);

  EBX_Utils.addCSSClass(EBX_ISS.currentContainerEl, EBX_ISS.containerActiveCSSClass);

  EBX_ISS.isShown = true;

  if (EBX_ISS.isCurrentManualSearchMode === true) {
    EBX_ISS.waitingInputDivEl.innerHTML = EBX_LocalizedMessage.comboBox_pressEnterToSearch;
  } else {
    EBX_ISS.waitingInputDivEl.innerHTML = EBX_LocalizedMessage.comboBox_waitingInput;
  }
};

EBX_ISS.hidePane = function () {

  YAHOO.util.Event.removeListener(EBX_ISS.currentScrollingContainer, "scroll", EBX_ISS.resetFormScroll);
  EBX_Utils.removeCSSClass(EBX_ISS.currentContainerEl, EBX_ISS.containerActiveCSSClass);
  EBX_ButtonUtils.setStateToToggleButton(EBX_ISS.currentButtonEl, false);

  EBX_ISS.pane.hide();

  EBX_LayoutManager.bodyLayout.removeListener("resize", EBX_ISS.revert);

  EBX_Loader.onMouseReleasedOnce(EBX_ISS.resetScrollingContainerScrollTop, {
    currentScrollingContainer: EBX_ISS.currentScrollingContainer,
    originalFormScrollTop: EBX_ISS.originalFormScrollTop,
    currentScrollMaker: EBX_ISS.currentScrollMaker
  });

  window.clearTimeout(EBX_ISS.currentRequestTimeoutId);

  EBX_ISS.isShown = false;
  EBX_ISS.preventBlur = false;
  EBX_ISS.currentContainerEl = null;
  EBX_ISS.currentInputEl = null;
  EBX_ISS.currentButtonEl = null;
  EBX_ISS.originalInputLabel = null;
  EBX_ISS.originalInputCSSClass = null;
  EBX_ISS.originalFormScrollTop = null;
  EBX_ISS.currentFormScrollTop = null;
  EBX_ISS.currentFormExtraHeightBottom = null;
  EBX_ISS.additionnalFormHeight = 0;
  EBX_ISS.isCurrentManualSearchMode = false;

  // Reset scroll behavior
  var scrollCtn = EBX_ISS.currentScrollingContainer;
  EBX_ISS.currentScrollingContainer = null;
  EBX_ISS.currentScrollMaker = null;

  EBX_ISS.results = [];
  EBX_ISS.highlightedItemIndex = -2;
  EBX_ISS.highlightedItemIndexUI = -2;
  EBX_ISS.listState = EBX_ISS_State.NORMAL;
  EBX_ISS.requestedIndex = 0;

  window.setTimeout(function () {
    scrollCtn.style.overflowY = '';
  }, 100);
};

EBX_ISS.resetScrollingContainerScrollTop = function (args) {
  args.currentScrollingContainer.scrollTop = args.originalFormScrollTop;
  args.currentScrollMaker.style.height = "";
};

EBX_ISS.currentRequestTimeoutId = null;

EBX_ISS.reload = function () {
  EBX_ISS.results = [];
  EBX_ISS.highlightedItemIndex = -2;
  EBX_ISS.highlightedItemIndexUI = -2;
  EBX_ISS.listState = EBX_ISS_State.WAITING_INPUT;
  EBX_ISS.requestedIndex = 0;

  EBX_ISS.refreshUIItemsList();

  if (EBX_ISS.isShown === false) {
    EBX_ISS.showPane();
  }

  window.clearTimeout(EBX_ISS.currentRequestTimeoutId);
  if (EBX_ISS.isCurrentManualSearchMode !== true) {
    EBX_ISS.currentRequestTimeoutId = window.setTimeout(EBX_ISS.sendRequest, EBX_ISS.requestDelay);
  }
};

EBX_ISS.revert = function () {
  EBX_ISS.lazyLoadedElements.length = 0;
  EBX_ISS.currentInputEl.value = EBX_ISS.originalInputLabel;
  EBX_ISS.currentInputEl.className = EBX_ISS.originalInputCSSClass;
  EBX_ISS.hidePane();
};

EBX_ISS.blurHandler = function (inputEl) {
  EBX_Utils.removeCSSClass(EBX_Utils.getFirstParentMatchingCSSClass(inputEl, EBX_ISS.containerCSSClass),
      EBX_ISS.containerFocusCSSClass);
  if (EBX_ISS.currentInputEl !== inputEl) {
    return;
  }

  if (EBX_ISS.preventBlur === true) {
    window.setTimeout(function () {
      if (EBX_ISS.currentInputEl !== null) {
        EBX_ISS.currentInputEl.focus();
      }
    }, 0);
    return;
  }

  if (EBX_ISS.pane !== null) {
    EBX_ISS.revert();
  }
};

EBX_ISS.focusHandler = function (inputEl) {
  EBX_Utils.addCSSClass(EBX_Utils.getFirstParentMatchingCSSClass(inputEl, EBX_ISS.containerCSSClass),
      EBX_ISS.containerFocusCSSClass);
};

EBX_ISS.init = function (inputEl, clearLabel) {
  if (EBX_ISS.currentInputEl === inputEl) {
    return;
  }
  if (EBX_ISS.currentInputEl !== null) {
    EBX_ISS.blurHandler(EBX_ISS.currentInputEl);
  }
  EBX_ISS.currentContainerEl = EBX_Utils.getFirstParentMatchingCSSClass(inputEl, EBX_ISS.containerCSSClass);
  EBX_ISS.currentInputEl = inputEl;
  EBX_ISS.currentButtonEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(EBX_ISS.currentContainerEl, "ebx_DropDown");
  EBX_ISS.originalInputLabel = inputEl.value;
  EBX_ISS.originalInputCSSClass = inputEl.className;
  EBX_ISS.paneForcedHeight = undefined;
  EBX_ISS.paneForcedWidth = undefined;
  EBX_ISS.currentScrollingContainer = EBX_Form.getFormScrollingContainer(EBX_ISS.currentContainerEl);
  EBX_ISS.originalFormScrollTop = EBX_ISS.currentScrollingContainer.scrollTop;
  EBX_ISS.currentFormScrollTop = EBX_ISS.currentScrollingContainer.scrollTop;

  EBX_ISS.isCurrentManualSearchMode = EBX_ISS.isManualSearchMode[EBX_ISS.currentInputEl.id] !== undefined
      && EBX_ISS.isManualSearchMode[EBX_ISS.currentInputEl.id] === true;

  EBX_ButtonUtils.setStateToToggleButton(EBX_ISS.currentButtonEl, true);
  EBX_ISS.initPane();

  // require pane initialized
  if (EBX_ISS.gutterBottom === undefined) {
    EBX_ISS.computeGutterBottom();
  }
  if (EBX_ISS.defaultItemHeight === undefined) {
    EBX_ISS.computeDefaultItemHeight();
  }
  var D = YAHOO.util.Dom;
  var clientRegion = D.getClientRegion();
  var elRegion = D.getRegion(EBX_ISS.bodyDivEl);
  if (EBX_ISS.maxItemsByPage === 0) {
    var popupHeight = Math.max(EBX_ISS.getMinPopupHeight(clientRegion),
        EBX_ISS.getChoicesPopupMaxHeight(clientRegion, elRegion));
    EBX_ISS.maxItemsByPage = Math.ceil(popupHeight / EBX_ISS.defaultItemHeight);
  }

  EBX_ISS.initScrollMaker();
  EBX_ISS.currentFormExtraHeightBottom = EBX_ISS.getFormExtraHeightBottom();

  if (clearLabel) {
    // Chrome has some problem to align an inline-flex empty input with other elements :
    //https://bugs.chromium.org/p/chromium/issues/detail?id=401185&q=inline%20align%20component%3ABlink%3ELayout%3EFlexbox&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified
    // We should always provide something to let him fix its vertical alignment.
    if (EBX_LayoutManager.browser === "Chrome") {
      inputEl.placeholder = " ";
    }
    inputEl.value = "";
    inputEl.className = "";
  }
};
/**
 * Compute the height of a simple list item.
 */
EBX_ISS.computeDefaultItemHeight = function () {
  var content = [];
  var item = {
    labelForDisplay: 'Not Defined',
    previewURL: ''
  };
  EBX_ISS.createUIItem(content, 0, item);

  if ((EBX_ISS.resultsDivEl !== null) && (EBX_ISS.listEl !== null)) {
    EBX_ISS.resultsDivEl.innerHTML = content.join("");
    EBX_ISS.defaultItemHeight = EBX_ISS.listEl.offsetHeight;
    EBX_ISS.resultsDivEl.innerHTML = "";
  } else {
    EBX_ISS.defaultItemHeight = 22; //fallback
  }
};
/**
 * Set the bottom gutter to use for this combo box.
 */
EBX_ISS.computeGutterBottom = function () {
  var D = YAHOO.util.Dom;
  var clientRegion = D.getClientRegion();
  var wkRegion = D.getRegion(EBX_ISS.currentScrollingContainer);

  var hoveringBottomBar = 0;
  //Overflow auto implies that workspace form bottom bar is positionned over the workspace content.
  if (EBX_ISS.currentScrollingContainer.style.overflow === "auto") {
    hoveringBottomBar = EBX_Form.getWorkspaceFormBottomBarHeight();
  }
  var workspaceContentHeight = wkRegion.bottom - hoveringBottomBar;
  EBX_ISS.gutterBottom = clientRegion.bottom - workspaceContentHeight;
};
/**
 * Return the maximal height of the choices popup. Popup pane shall be yet
 * aligned on input element.
 *
 * @param {YAHOO.util.Region }
 *            clientRegion window client region
 * @param {YAHOO.util.Region }
 *            elRegion choices popup pane element
 * @return {int} the available space height
 */
EBX_ISS.getChoicesPopupMaxHeight = function (clientRegion, elRegion) {
  return clientRegion.bottom - elRegion.top - EBX_ISS.gutterBottom;
};

EBX_ISS.getFormExtraHeightBottom = function () {

  var D = YAHOO.util.Dom;
  var formBodyRegion = D.getRegion(EBX_ISS.currentScrollingContainer);
  var scrollMakerRegion = D.getRegion(EBX_ISS.currentScrollMaker);

  var ret = formBodyRegion.bottom - scrollMakerRegion.bottom;
  if (ret < 0) {
    ret = 0;
  }

  return ret;
};
EBX_ISS.initScrollMaker = function () {
  var scrollMaker = EBX_Utils.getFirstDirectChildMatchingCSSClass(EBX_ISS.currentScrollingContainer,
      EBX_ISS.scrollMakerCSSClass);
  if (scrollMaker === null) {
    scrollMaker = document.createElement("div");
    scrollMaker.className = EBX_ISS.scrollMakerCSSClass;
    EBX_ISS.currentScrollingContainer.appendChild(scrollMaker);
  }
  EBX_ISS.currentScrollMaker = scrollMaker;
};

EBX_ISS.keyDownHandler = function (inputEl, event) {
  if (!EBX_ISS.isAnInterestingKeyEvent(event)) {
    return;
  }

  var clearLabel = true;
  // if the field is defined
  if (EBX_ISS.mapIdIsUsedForJavaScriptSelectionOnly[inputEl.id] !== true
      && EBX_FormNodeIndex.getFormNode(EBX_ISS.mapIdPathForNodeIndex[inputEl.id]).getValue() !== null) {
    clearLabel = false;
  }
  EBX_ISS.init(inputEl, clearLabel);

  if (event.keyCode === EBX_Utils.keyCodes.DOWN) {
    if (EBX_ISS.listState === EBX_ISS_State.WAITING_INPUT) {
      window.clearTimeout(EBX_ISS.currentRequestTimeoutId);
      EBX_ISS.highlightedItemIndex++;
      // avoid highlight index -1 (original value) if original label disabled or JS selection only
      if ((EBX_ISS.originalLabelEnabled === false
          || EBX_ISS.mapIdIsUsedForJavaScriptSelectionOnly[EBX_ISS.currentInputEl.id] === true)
          && EBX_ISS.highlightedItemIndex === -1) {
        EBX_ISS.highlightedItemIndex++;
      }
      EBX_ISS.sendRequest();
    } else if (EBX_ISS.isShown === false) {
      EBX_ISS.showPane();
      EBX_ISS.highlightedItemIndex++;
      // avoid highlight index -1 (original value) if original label disabled or JS selection only
      if ((EBX_ISS.originalLabelEnabled === false
          || EBX_ISS.mapIdIsUsedForJavaScriptSelectionOnly[EBX_ISS.currentInputEl.id] === true)
          && EBX_ISS.highlightedItemIndex === -1) {
        EBX_ISS.highlightedItemIndex++;
      }
      EBX_ISS.sendRequest();
    } else {
      EBX_ISS.highlightNextItem();
    }
    return;
  }

  if (event.keyCode === EBX_Utils.keyCodes.UP) {
    EBX_ISS.highlightPreviousItem();
    return;
  }

  if (event.keyCode === EBX_Utils.keyCodes.ESCAPE) {
    EBX_ISS.revert();
    return;
  }

  EBX_ISS.reload();
};

EBX_ISS.keyPressHandler = function (inputEl, event) {
  if (event.keyCode === EBX_Utils.keyCodes.ENTER) {
    if (EBX_ISS.isCurrentManualSearchMode === true) {
      if (EBX_ISS.listState === EBX_ISS_State.WAITING_INPUT) {
        window.clearTimeout(EBX_ISS.currentRequestTimeoutId);
        EBX_ISS.sendRequest();
        YAHOO.util.Event.stopEvent(event);
        return;
      } else if (EBX_ISS.isShown === false) {
        EBX_ISS.showPane();
        EBX_ISS.sendRequest();
        YAHOO.util.Event.stopEvent(event);
        return;
      }
    }

    if (EBX_ISS.isShown === true) {
      EBX_ISS.selectCurrentHighlight();
      YAHOO.util.Event.stopEvent(event);
    }
  }
};

EBX_ISS.launchButtonOnHandler = function (inputId) {
  var inputEl = document.getElementById(inputId);
  inputEl.focus();
  EBX_ISS.init(inputEl, true);
  EBX_ISS.reload();
  window.clearTimeout(EBX_ISS.currentRequestTimeoutId);
  EBX_ISS.sendRequest();
};
EBX_ISS.launchButtonOffHandler = function () {
  EBX_ISS.revert();
};

EBX_ISS.selectCurrentHighlight = function () {
  if (EBX_ISS.highlightedItemIndex < -1) {
    return;
  }
  // -1 is the index of static original item
  if (EBX_ISS.highlightedItemIndex === -1) {
    EBX_ISS.revert();
    return;
  }
  EBX_ISS.selectIndex(EBX_ISS.highlightedItemIndex);
};

EBX_ISS.selectIndex = function (index) {
  var dataItem = EBX_ISS.results[index];

  if (EBX_ISS.mapIdIsUsedForJavaScriptSelectionOnly[EBX_ISS.currentInputEl.id] === true) {
    var currentFormScrollHeight = EBX_ISS.currentScrollingContainer.scrollHeight;

    var javaScriptSelectionListener = EBX_ISS.javaScriptSelectionListener[EBX_ISS.currentInputEl.id];
    if (javaScriptSelectionListener !== undefined) {
      var fn = eval(javaScriptSelectionListener.fn);
      // not safe, but internal for now
      fn.call(window, dataItem, javaScriptSelectionListener.arg);
    }

    if (EBX_ISS.currentScrollingContainer) {
      var newFormScrollHeight = EBX_ISS.currentScrollingContainer.scrollHeight;
      if (currentFormScrollHeight < newFormScrollHeight) {
        EBX_ISS.originalFormScrollTop += newFormScrollHeight - currentFormScrollHeight;
        // also refresh scrolltop
        EBX_ISS.refreshUIItemsList();
      }
      EBX_ISS.setContext();
    }
  } else {
    EBX_ISS.mapIdPreviewURL[EBX_ISS.currentInputEl.id] = EBX_ISS.results[index].previewURL;

    dataItem.labelLoaded = true;
    EBX_FormNodeIndex.getFormNode(EBX_ISS.mapIdPathForNodeIndex[EBX_ISS.currentInputEl.id]).setValue(dataItem);
    EBX_FormPresenter.stackElementForValidation(EBX_ISS.currentInputEl);

    EBX_ISS.hidePane();
  }
};

EBX_ISS.highlightIndex = function (index, enableAutoScroll) {
  EBX_ISS.highlightedItemIndex = index;

  EBX_ISS.refreshUIHighlightedItem(enableAutoScroll);
};

EBX_ISS.highlightNextItem = function () {
  var indexMaxBound = EBX_ISS.results.length - 1;
  if (EBX_ISS.listState === EBX_ISS_State.HAS_NEXT) {
    indexMaxBound++;
  }

  if (EBX_ISS.highlightedItemIndex >= indexMaxBound) {
    return;
  }

  var newHighlightedIndex = EBX_ISS.highlightedItemIndex + 1;
  // avoid highlight index -1 (original value) if original label disabled or JS selection only
  if ((EBX_ISS.originalLabelEnabled === false
      || EBX_ISS.mapIdIsUsedForJavaScriptSelectionOnly[EBX_ISS.currentInputEl.id] === true)
      && EBX_ISS.highlightedItemIndex === -1) {
    newHighlightedIndex = EBX_ISS.highlightedItemIndex + 1;
  }

  if (newHighlightedIndex !== EBX_ISS.results.length) {
    EBX_ISS.highlightedItemIndex = newHighlightedIndex;
    EBX_ISS.refreshUIHighlightedItem(true);
  } else {
    EBX_ISS.loadNextPage();
  }
};

EBX_ISS.highlightPreviousItem = function () {
  // -1 is the index of static original item
  if (EBX_ISS.highlightedItemIndex < -1) {
    return;
  }

  EBX_ISS.highlightedItemIndex--;
  // avoid highlight index -1 (original value) if original label disabled or JS selection only
  if ((EBX_ISS.originalLabelEnabled === false
      || EBX_ISS.mapIdIsUsedForJavaScriptSelectionOnly[EBX_ISS.currentInputEl.id] === true)
      && EBX_ISS.highlightedItemIndex === -1) {
    EBX_ISS.highlightedItemIndex--;
  }

  EBX_ISS.refreshUIHighlightedItem(true);
};

EBX_ISS.refreshUIHighlightedItem = function (enableAutoScroll) {
  // clear the current highlight
  var elToUnHighlight = null;
  // -1 is the index of static original item
  if (EBX_ISS.highlightedItemIndexUI >= -1) {
    if (EBX_ISS.highlightedItemIndexUI === -1) {
      // -1 is the index of static original item
      elToUnHighlight = EBX_ISS.originalLabelDivEl;
    } else if (EBX_ISS.highlightedItemIndexUI !== EBX_ISS.results.length) {
      var idToHighlight = EBX_ISS.itemPrefixId + EBX_ISS.highlightedItemIndexUI;
      elToUnHighlight = document.getElementById(idToHighlight);
    }
    if (elToUnHighlight !== null) {
      EBX_Utils.removeCSSClass(elToUnHighlight, "_ebx_ISS_Item-highlighted");
    }
    // -1 is the index of static original item
    // -2 is the undefined value
    EBX_ISS.highlightedItemIndexUI = -2;
  }

  // apply the highlight

  // -1 is the index of static original item
  if (EBX_ISS.highlightedItemIndex < -1) {
    return;
  }

  //TODO tlu : #26374: when loading next items by pressing key "down",
  // give the loading panel a selected style and then select the first loaded item.
  // => To achieve that, we need the keep the previously highlighted element in a field
  // => Implies to change the EBX_ISS.highlightedItemIndex system
  var elToHighlight = null;
  if (EBX_ISS.highlightedItemIndex === -1) {
    // -1 is the index of static original item
    elToHighlight = EBX_ISS.originalLabelDivEl;
    enableAutoScroll = false;
  } else if (EBX_ISS.highlightedItemIndex !== EBX_ISS.results.length) {
    var idToHighlight = EBX_ISS.itemPrefixId + EBX_ISS.highlightedItemIndex;
    elToHighlight = document.getElementById(idToHighlight);
  }
  if (elToHighlight !== null) {
    EBX_Utils.addCSSClass(elToHighlight, "_ebx_ISS_Item-highlighted");

    // auto scroll
    if (enableAutoScroll) {
      var itemOffsetTop = elToHighlight.offsetTop;
      var itemHeight = elToHighlight.offsetHeight;
      var scrollTop = EBX_ISS.listEl.scrollTop;
      var listHeight = EBX_ISS.listEl.clientHeight;
      var isAbove = itemOffsetTop < scrollTop + EBX_ISS.listScrollPadding;
      if (isAbove) {
        EBX_ISS.listEl.scrollTop = itemOffsetTop - EBX_ISS.listScrollPadding;
      } else {
        var isBelow = itemOffsetTop + itemHeight + EBX_ISS.listScrollPadding > scrollTop + listHeight;
        if (isBelow) {
          EBX_ISS.listEl.scrollTop = itemOffsetTop + itemHeight + EBX_ISS.listScrollPadding - listHeight;
        }
      }
    }
  }

  EBX_ISS.highlightedItemIndexUI = EBX_ISS.highlightedItemIndex;
};

EBX_ISS.initPane = function () {

  if (EBX_ISS.pane === null) {
    EBX_ISS.pane = new YAHOO.widget.Overlay(EBX_ISS.paneId, {
      constraintoviewport: true,
      visible: false
    });

    EBX_ISS.pane.render(document.body);

    var paneBodyContent = [];

    paneBodyContent.push("<div");
    paneBodyContent.push(" id=\"", EBX_ISS.bodyDivId, "\"");
    paneBodyContent.push(" onmouseOver=\"EBX_ISS.preventBlur = true;\"");
    paneBodyContent.push(" onmouseOut=\"EBX_ISS.preventBlur = false;\"");
    paneBodyContent.push(">");

    paneBodyContent.push("<div");
    paneBodyContent.push(" id=\"", EBX_ISS.originalLabelDivId, "\"");
    paneBodyContent.push(" onclick=\"EBX_ISS.revert();\"");
    paneBodyContent.push(" onmouseover=\"EBX_ISS.highlightIndex(-1, false);\"");
    paneBodyContent.push(">");
    paneBodyContent.push("</div>");

    paneBodyContent.push("<div");
    paneBodyContent.push(" id=\"", EBX_ISS.listId, "\"");
    paneBodyContent.push(">");

    paneBodyContent.push("<div");
    paneBodyContent.push(" id=\"", EBX_ISS.errorDivId, "\"");
    paneBodyContent.push(" class=\"", "ebx_Error", " ", "ebx_IconError", "\"");
    paneBodyContent.push(">");
    paneBodyContent.push("</div>");

    paneBodyContent.push("<div");
    paneBodyContent.push(" id=\"", EBX_ISS.waitingInputDivId, "\"");
    paneBodyContent.push(">");
    paneBodyContent.push(EBX_LocalizedMessage.comboBox_waitingInput);
    paneBodyContent.push("</div>");

    paneBodyContent.push("<div");
    paneBodyContent.push(" id=\"", EBX_ISS.resultsDivId, "\"");
    paneBodyContent.push(">");
    paneBodyContent.push("</div>");

    paneBodyContent.push("<div");
    paneBodyContent.push(" id=\"", EBX_ISS.hasNextDivId, "\"");
    paneBodyContent.push(" onclick=\"EBX_ISS.loadNextPage();\"");
    paneBodyContent.push(" title=\"" + EBX_LocalizedMessage.comboBox_more + "\"");
    paneBodyContent.push(">");
    paneBodyContent.push("<div class=\"ebx_Icon\">&nbsp;</div>");
    paneBodyContent.push("</div>");

    paneBodyContent.push("<div");
    paneBodyContent.push(" id=\"", EBX_ISS.noResultDivId, "\"");
    paneBodyContent.push(">");
    paneBodyContent.push(EBX_LocalizedMessage.comboBox_empty);
    paneBodyContent.push("</div>");

    paneBodyContent.push("<div");
    paneBodyContent.push(" id=\"", EBX_ISS.loadingDivId, "\"");
    paneBodyContent.push(" class=\"", "ebx_IconAnimWait", "\"");
    paneBodyContent.push(">");
    paneBodyContent.push(EBX_LocalizedMessage.comboBox_loading);
    paneBodyContent.push("</div>");

    paneBodyContent.push("<div");
    paneBodyContent.push(" id=\"", EBX_ISS.waitingAPVDivId, "\"");
    paneBodyContent.push(" class=\"", "ebx_IconAnimWait", "\"");
    paneBodyContent.push(">");
    paneBodyContent.push(EBX_LocalizedMessage.form_waitingForAPV);
    paneBodyContent.push("</div>");

    // end of list
    paneBodyContent.push("</div>");

    paneBodyContent.push("<div");
    paneBodyContent.push(" id=\"", EBX_ISS.toolbarDivId, "\"");
    paneBodyContent.push(" onclick=\"EBX_ISS.onClickFooter(event);\"");
    paneBodyContent.push(">");

    paneBodyContent.push("<button");
    paneBodyContent.push(" type=\"button\"");
    paneBodyContent.push(" id=\"", EBX_ISS.createButtonId, "\"");
    paneBodyContent.push(" class=\"ebx_FlatButtonNoBorder ebx_TextAndIconLeftButton ebx_Add\"");
    paneBodyContent.push(" onclick=\"EBX_ISS.openCurrentCreate();\"");
    paneBodyContent.push(">");
    paneBodyContent.push("<span class=\"ebx_Icon\">&nbsp;</span>");
    paneBodyContent.push(EBX_LocalizedMessage.comboBox_create);
    paneBodyContent.push("</button>");

    paneBodyContent.push("<button");
    paneBodyContent.push(" type=\"button\"");
    paneBodyContent.push(" id=\"", EBX_ISS.advancedSelectorButtonId, "\"");
    paneBodyContent.push(" class=\"ebx_FlatButtonNoBorder ebx_TextAndIconRightButton ebx_Open\"");
    paneBodyContent.push(" onclick=\"EBX_ISS.openCurrentAdvancedSelector();\"");
    paneBodyContent.push(">");
    paneBodyContent.push(EBX_LocalizedMessage.comboBox_advancedSelector);
    paneBodyContent.push("<span class=\"ebx_Icon\">&nbsp;</span>");
    paneBodyContent.push("</button>");

    paneBodyContent.push("</div>");

    // end of content
    paneBodyContent.push("</div>");

    EBX_ISS.pane.setBody(paneBodyContent.join(""));

    EBX_ISS.listEl = document.getElementById(EBX_ISS.listId);
    //Handle lazy loading for items in list element
    YAHOO.util.Event.addListener(EBX_ISS.listEl, "scroll", EBX_ISS.onScrollInList);

    EBX_ISS.bodyDivEl = document.getElementById(EBX_ISS.bodyDivId);
    EBX_ISS.originalLabelDivEl = document.getElementById(EBX_ISS.originalLabelDivId);
    EBX_ISS.errorDivEl = document.getElementById(EBX_ISS.errorDivId);
    EBX_ISS.waitingInputDivEl = document.getElementById(EBX_ISS.waitingInputDivId);
    YAHOO.util.Event.addListener(EBX_ISS.waitingInputDivEl, "click", function (event) {
      YAHOO.util.Event.stopEvent(event);
    });
    EBX_ISS.resultsDivEl = document.getElementById(EBX_ISS.resultsDivId);
    EBX_ISS.hasNextDivEl = document.getElementById(EBX_ISS.hasNextDivId);
    YAHOO.util.Event.addListener(EBX_ISS.hasNextDivEl, "click", function (event) {
      YAHOO.util.Event.stopEvent(event);
    });
    EBX_ISS.noResultDivEl = document.getElementById(EBX_ISS.noResultDivId);
    YAHOO.util.Event.addListener(EBX_ISS.noResultDivEl, "click", function (event) {
      YAHOO.util.Event.stopEvent(event);
    });
    EBX_ISS.loadingDivEl = document.getElementById(EBX_ISS.loadingDivId);
    YAHOO.util.Event.addListener(EBX_ISS.loadingDivEl, "click", function (event) {
      YAHOO.util.Event.stopEvent(event);
    });
    EBX_ISS.waitingAPVDivEl = document.getElementById(EBX_ISS.waitingAPVDivId);
    YAHOO.util.Event.addListener(EBX_ISS.waitingAPVDivEl, "click", function (event) {
      YAHOO.util.Event.stopEvent(event);
    });
    EBX_ISS.toolbarDivEl = document.getElementById(EBX_ISS.toolbarDivId);
    EBX_ISS.createButtonEl = document.getElementById(EBX_ISS.createButtonId);
    EBX_ISS.advancedSelectorButtonEl = document.getElementById(EBX_ISS.advancedSelectorButtonId);

    EBX_ISS.resize = new YAHOO.util.Resize(EBX_ISS.bodyDivEl, {
      handles: ["br"],
      proxy: true,
      ghost: true,
      setSize: false
    });
    EBX_ISS.resize.subscribe("endResize", EBX_ISS.resizeListener, null, false);
    EBX_ISS.resize.subscribe("startResize", EBX_ISS.resetProxyPosition, null, false);
    EBX_ISS.resize.subscribe("proxyResize", EBX_ISS.computeProxyWidth, null, false);
  }

  EBX_ISS.pane.cfg.setProperty("width", EBX_ISS.getMinPopupWidth() + "px");
  EBX_ISS.listEl.style.maxHeight = EBX_ISS.initialHeight + "px";
  EBX_ISS.resize.set("minWidth", EBX_ISS.currentContainerEl.offsetWidth + EBX_ISS.getLastIEGap());
  EBX_ISS.resize.set("width", EBX_ISS.currentContainerEl.offsetWidth + EBX_ISS.getLastIEGap());

  EBX_ISS.setContext();

  var originalLabelContent = [];

  EBX_ISS.addItemLabel(
      originalLabelContent,
      EBX_ISS.originalInputLabel && EBX_ISS.originalInputLabel.replace(/</g, "&lt;").replace(/>/g, "&gt;"),
      EBX_ISS.mapIdPreviewURL[EBX_ISS.currentInputEl.id] !== undefined,
      "EBX_ISS.openCurrentPreview(event);");
  EBX_ISS.originalLabelDivEl.innerHTML = originalLabelContent.join("");

  EBX_ISS.originalLabelDivEl.className = EBX_ISS.originalInputCSSClass;

  if (EBX_ISS.originalLabelEnabled === false || EBX_ISS.mapIdIsUsedForJavaScriptSelectionOnly[EBX_ISS.currentInputEl.id]
      === true) {
    EBX_ISS.originalLabelDivEl.style.display = "none";
  } else {
    EBX_ISS.originalLabelDivEl.style.display = "";
  }

  var createButtonEnabled = EBX_ISS.mapIdCreateNewURL[EBX_ISS.currentInputEl.id] !== undefined;
  var advancedSelectorButtonEnabled = EBX_ISS.mapIdAdvancedSelectorURL[EBX_ISS.currentInputEl.id] !== undefined;

  if (createButtonEnabled || advancedSelectorButtonEnabled) {
    EBX_ISS.toolbarDivEl.style.display = "block";
  } else {
    EBX_ISS.toolbarDivEl.style.display = "none";
  }

  if (createButtonEnabled === true) {
    EBX_ISS.createButtonEl.style.display = "";
  } else {
    EBX_ISS.createButtonEl.style.display = "none";
  }

  if (advancedSelectorButtonEnabled === true) {
    EBX_ISS.advancedSelectorButtonEl.style.display = "";
  } else {
    EBX_ISS.advancedSelectorButtonEl.style.display = "none";
  }
};

EBX_ISS.setContext = function () {
  // [-1, -1] for left outline and no border bottom to the container
  EBX_ISS.pane.cfg.setProperty("context", [EBX_ISS.currentInputEl, 'tl', 'bl', null, [-1, -1]]);
};

EBX_ISS.resetProxyPosition = function (yuiEvent) {
  var proxyEl = EBX_ISS.resize.getProxyEl();
  proxyEl.style.top = "0";
  proxyEl.style.left = "0";

  // compute max bounds

  // compute resizeMaxBounds
  var D = YAHOO.util.Dom;
  var clientRegion = D.getClientRegion();
  var elRegion = D.getRegion(EBX_ISS.bodyDivEl);

  EBX_ISS.resize.set("maxWidth", clientRegion.right - elRegion.left - YAHOO.widget.Overlay.VIEWPORT_OFFSET);
  EBX_ISS.resize.set("maxHeight", EBX_ISS.getChoicesPopupMaxHeight(clientRegion, elRegion));
};

EBX_ISS.computeProxyWidth = function (yuiEvent) {
  var proxyEl = EBX_ISS.resize.getProxyEl();
  var gap = 2;
  if (YAHOO.env.ua.gecko !== 0) {
    gap--;
  }
  proxyEl.style.width = yuiEvent.width - gap + "px";
};

EBX_ISS.resizeListener = function (yuiEvent) {
  EBX_ISS.resizeListHeight(yuiEvent.height);
  EBX_ISS.paneForcedHeight = yuiEvent.height;
  EBX_ISS.paneForcedWidth = yuiEvent.width;

  // set width
  // + 2 for right border and outline
  var gap = 2;
  if (YAHOO.env.ua.gecko !== 0) {
    gap++;
  }
  var totalWidth = yuiEvent.width + gap;
  EBX_ISS.pane.cfg.setProperty("width", totalWidth + "px");

  //TODO bug new skin #105 : If resize is release outside the iframe, input is no more focused and EBX_ISS.currentInput is null
  // It is not possible to cancel the resize when input field is blured (tried destroy() and reset() methods)
  if (EBX_ISS.currentInputEl) {
    var request = [];
    request.push(EBX_ISS.saveWidthRequest);
    request.push("&", EBX_ISS.requestParam_ajaxComponentIndex, "=",
        encodeURIComponent(EBX_ISS.mapIdAjaxComponentIndex[EBX_ISS.currentInputEl.id]));
    request.push("&", EBX_ISS.requestParam_paginPageIndex, "=", EBX_ISS.requestedIndex);
    request.push("&", EBX_ISS.requestParam_popupWidth, "=", totalWidth);
    request.push("&", EBX_ISS.requestParam_popupHeight, "=", Math.max(yuiEvent.height, EBX_ISS.initialHeight));

    EBX_ISS.saveWidthRequester.sendRequest(request.join(""), null);
  }
};
EBX_ISS.resizeListHeight = function (height) {
  var availableHeight = height;
  availableHeight -= EBX_ISS.originalLabelDivEl.offsetHeight;
  availableHeight -= EBX_ISS.toolbarDivEl.offsetHeight;

  // set height
  EBX_ISS.listEl.style.maxHeight = availableHeight + "px";
};

/**
 * It is impossible to prevent the scroll of the form, so the only solution
 * found is to reset scroll positions.
 * http://www.quirksmode.org/dom/events/scroll.html "You cannot prevent the
 * scrolling."
 */
EBX_ISS.resetFormScroll = function (event, scrollLeft) {
  EBX_ISS.currentScrollingContainer.scrollTop = EBX_ISS.currentFormScrollTop;
  EBX_ISS.currentScrollingContainer.scrollLeft = scrollLeft;
};

EBX_ISS.refreshUIItemsList = function () {
  var content = [], resultItem;
  for (var i = 0, length = EBX_ISS.results.length; i < length; i++) {
    resultItem = EBX_ISS.results[i];
    EBX_ISS.createUIItem(content, i, resultItem);
  }
  EBX_ISS.resultsDivEl.innerHTML = content.join("");
  if (EBX_ISS.listState === EBX_ISS_State.HAS_NEXT) {
    EBX_ISS.addLazyLoadHandler(EBX_ISS.hasNextDivEl, EBX_ISS.loadNextPage);
  }
  EBX_ISS.refreshUIHighlightedItem(true);
  EBX_ISS.refreshUIItemsListPosition();
};
/**
 * Set popup dimensions and positions. Dimensions will fit to workspace.
 */
EBX_ISS.refreshUIItemsListPosition = function () {
  if (EBX_ISS.currentScrollingContainer !== undefined) {
    var resizeMinHeight = Math.max(EBX_ISS.defaultItemHeight + 4, EBX_ISS.listEl.offsetHeight);
    if (resizeMinHeight > EBX_ISS.initialHeight) {
      resizeMinHeight = EBX_ISS.initialHeight;
    }
    EBX_ISS.resize.set("minHeight", resizeMinHeight);
    EBX_ISS.listEl.className = EBX_ISS.listState.className;
    // The max list height available space
    var D = YAHOO.util.Dom;
    var clientRegion = D.getClientRegion();
    var elRegion = D.getRegion(EBX_ISS.pane.element);
    var maxListHeight = EBX_ISS.getChoicesPopupMaxHeight(clientRegion, elRegion);
    var availSpace = Math.max(maxListHeight, EBX_ISS.getMinPopupHeight(clientRegion));
    var workspaceSpaceBottomWidget = EBX_ISS.currentScrollingContainer.scrollHeight
        - YAHOO.widget.Overlay.VIEWPORT_OFFSET
        - (EBX_ISS.currentInputEl.offsetHeight + EBX_ISS.currentInputEl.offsetTop);
    if (workspaceSpaceBottomWidget > 0) {
      availSpace = Math.min(availSpace, workspaceSpaceBottomWidget);
    }
    //The actual height of the list
    var listHeight = 0;
    if ((EBX_ISS.listState === EBX_ISS_State.NO_RESULT) || (EBX_ISS.listState === EBX_ISS_State.WAITING_INPUT)) {
      listHeight = EBX_ISS.getMinPopupHeight(clientRegion);
    } else {
      listHeight = EBX_ISS.resultsDivEl.offsetHeight;
    }
    listHeight += EBX_ISS.originalLabelDivEl.offsetHeight + EBX_ISS.toolbarDivEl.offsetHeight
        + EBX_Utils.getHScrollHeight();
    //if a height is fixed, will use this one
    if (EBX_ISS.paneForcedHeight !== undefined) {
      listHeight = Math.min(listHeight, EBX_ISS.paneForcedHeight);
    }
    var paneHeight = Math.min(listHeight, availSpace);
    paneHeight = Math.max(paneHeight, resizeMinHeight);
    EBX_ISS.pane.element.style.height = paneHeight + "px";
    //If a width is fixed will use this one
    if (EBX_ISS.paneForcedWidth !== undefined) {
      var maxWidth = clientRegion.right - elRegion.left - YAHOO.widget.Overlay.VIEWPORT_OFFSET;
      maxWidth = Math.min(maxWidth, EBX_ISS.paneForcedWidth);
      maxWidth = Math.max(maxWidth, EBX_ISS.getMinPopupWidth());
      EBX_ISS.pane.element.style.width = maxWidth + "px";
    }
    EBX_ISS.resizeListHeight(paneHeight);
    elRegion = D.getRegion(EBX_ISS.pane.element);
    var excessHeight = elRegion.bottom - clientRegion.bottom + EBX_ISS.gutterBottom;
    if (excessHeight > 0) {
      EBX_ISS.additionnalFormHeight += excessHeight;
      //In a form with currently no scroll, prevent scroll bar appears
      if ((EBX_ISS.currentFormExtraHeightBottom > 0) && (excessHeight > 0)) {
        EBX_ISS.currentScrollingContainer.style.overflowY = 'hidden';
      }
      EBX_ISS.currentScrollMaker.style.height =
          EBX_ISS.currentFormExtraHeightBottom + EBX_ISS.additionnalFormHeight + "px";
      EBX_ISS.currentFormScrollTop = EBX_ISS.originalFormScrollTop + EBX_ISS.additionnalFormHeight;
      EBX_ISS.currentScrollingContainer.scrollTop = EBX_ISS.currentFormScrollTop;
    }
    // [-1, -1] for left outline and no border bottom to the container
    EBX_ISS.pane.align('tl', 'bl', [-1, -1]);
    if ((EBX_ISS.highlightedItemIndex <= -1) && (EBX_ISS.results.length > 0)) {
      EBX_ISS.highlightIndex(0);
    }
  }
};
/**
 * Create an item in the result list
 */
EBX_ISS.createUIItem = function (content, index, item) {
  content.push("<div");
  content.push(" id=\"", EBX_ISS.itemPrefixId, index, "\"");
  content.push(" class=\"ebx_ISS_Item");
  if (item.cssClass !== undefined) {
    content.push(" ", item.cssClass);
  }
  content.push("\"");
  content.push(" onclick=\"EBX_ISS.selectIndex(" + index + ");\"");
  content.push(" onmouseover=\"EBX_ISS.highlightIndex(" + index + ", false);\"");
  content.push(">");
  EBX_ISS.addItemLabel(content, item.labelForDisplay, item.previewURL
      !== undefined, "EBX_ISS.openPreviewResultIndex(event, " + index + ");");
  content.push("</div>");
};

EBX_ISS.addItemLabel = function (bufferArray, labelForDisplay, isPreviewEnabled, onclick) {
  if (isPreviewEnabled) {
    bufferArray.push("<div");
    bufferArray.push(" class=\"ebx_ISS_Item_WithPreview\"");
    bufferArray.push(">");
  }

  if (labelForDisplay.length === 0) {
    labelForDisplay = " ";
  }
  /* if the labelForDisplay is made of spaces only, it must not be collapsed */
  bufferArray.push(labelForDisplay.replace(" ", "&nbsp;"));

  if (isPreviewEnabled) {
    bufferArray.push("<button");
    bufferArray.push(" type=\"button\"");
    bufferArray.push(" class=\"ebx_FlatButton ebx_IconButton ebx_Open\"");
    bufferArray.push(" title=\"", EBX_LocalizedMessage._general_preview, "\"");
    bufferArray.push(" onclick=\"", onclick, "\"");
    bufferArray.push(">");
    bufferArray.push("<span class=\"ebx_Icon\">&nbsp;</span>");
    bufferArray.push("</button>");

    bufferArray.push("</div>");
  }
};

EBX_ISS.dataSource = new YAHOO.util.XHRDataSource();
EBX_ISS.dataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
EBX_ISS.dataSource.responseSchema = {
  resultsList: "items",
  fields: [{
    key: "key"
  }, {
    key: "label"
  }, {
    key: "labelForDisplay"
  }, {
    key: "cssClass"
  }, {
    key: "previewURL"
  }],
  metaFields: {
    hasNext: "hasNext",
    nextIndex: "nextIndex",
    fixedWidth: "fixedWidth",
    fixedHeight: "fixedHeight",
  }
};
EBX_ISS.saveWidthRequester = new YAHOO.util.XHRDataSource();

EBX_ISS.loadNextPage = function () {
  EBX_ISS.sendRequest();
};

EBX_ISS.sendRequest = function () {
  if (EBX_FormPresenterStatusIndicator.isWaiting()) {
    EBX_FormPresenterStatusIndicator.setListenerOnWaitingEnd(EBX_ISS.sendRequest);
    EBX_ISS.listState = EBX_ISS_State.WAITING_APV;
    EBX_ISS.refreshUIItemsList();
    return;
  }

  var request = [];
  request.push(EBX_ISS.sendingRequest);
  request.push("&", EBX_ISS.requestParam_ajaxComponentIndex, "=",
      encodeURIComponent(EBX_ISS.mapIdAjaxComponentIndex[EBX_ISS.currentInputEl.id]));
  request.push("&", EBX_ISS.requestParam_userInput, "=", encodeURIComponent(EBX_ISS.currentInputEl.value));
  request.push("&", EBX_ISS.requestParam_paginPageIndex, "=", EBX_ISS.requestedIndex);
  request.push("&", EBX_ISS.requestParam_maxItemsByPage, "=", Math.max(EBX_ISS.maxItemsByPage, 10)
      + EBX_ISS.defaultPageExtraSize);
  EBX_ISS.dataSource.sendRequest(request.join(""), {
    success: EBX_ISS.receiveSuccess,
    failure: EBX_ISS.receiveFailure,
    argument: EBX_ISS.currentInputEl.value
  });

  EBX_ISS.listState = EBX_ISS_State.LOADING;
  EBX_ISS.refreshUIItemsList();
};

EBX_ISS.receiveSuccess = function (oRequest, oParsedResponse, argument) {
  // reject outdated requests
  if (!EBX_ISS.currentInputEl || (argument !== EBX_ISS.currentInputEl.value)) {
    return;
  }

  EBX_ISS.results = EBX_ISS.results.concat(oParsedResponse.results);
  EBX_ISS.paneForcedWidth = oParsedResponse.meta.fixedWidth;
  EBX_ISS.paneForcedHeight = oParsedResponse.meta.fixedHeight;

  if (oParsedResponse.meta.hasNext) {
    EBX_ISS.listState = EBX_ISS_State.HAS_NEXT;
  } else if (EBX_ISS.results.length === 0) {
    EBX_ISS.listState = EBX_ISS_State.NO_RESULT;
  } else {
    EBX_ISS.listState = EBX_ISS_State.NORMAL;
  }
  EBX_ISS.requestedIndex = oParsedResponse.meta.nextIndex;

  EBX_ISS.refreshUIItemsList();
};

EBX_ISS.receiveFailure = function (oRequest, oParsedResponse, argument) {
  if (EBX_ISS.currentInputEl === null) {
    return;
  }
  // reject outdated requests
  if (argument !== EBX_ISS.currentInputEl.value) {
    return;
  }

  if (oParsedResponse.status == 401) {
    EBX_Loader.gotoTimeoutPage();
  } else {
    // TODO CCH it could be beautiful to add an iFrame with the result of the page (whole HTML content)
    // oParsedResponse.responseText
    // TODO CCH Filter the response code so that user is not annoyed by error messages which he do not bother.
    // EBX_UserMessageManager.addMessage("Error #" + oParsedResponse.status + ": " + oParsedResponse.statusText, EBX_UserMessageManager.ERROR);
    EBX_ISS.errorDivEl.innerHTML = decodeURIComponent(oParsedResponse.statusText);
  }
  EBX_ISS.listState = EBX_ISS_State.ERROR;
  EBX_ISS.refreshUIItemsList();
};

/**
 * Return true if the key pressed is not Alt, Meta or other specials unused
 */
EBX_ISS.isAnInterestingKeyEvent = function (event) {
  // when metaKey is pressed
  if (event.metaKey === 1 || event.keyCode === EBX_Utils.keyCodes.WIN_KEY) {
    return false;
  }

  // when contextual menu is pressed
  if (event.keyCode === EBX_Utils.keyCodes.WIN_MENU) {
    return false;
  }

  if (event.ctrlKey === 1) {
    // paste action (CTRL+V) is allowed
    if (event.keyCode !== EBX_Utils.keyCodes.KEY_V) {
      // both ctrl & alt is allowed
      if (event.altKey === 0) {
        return false;
      }
    }
  } else {
    if (event.altKey === 1) {
      return false;
    }
  }

  // when ctrl is pressed alone
  if (event.keyCode === EBX_Utils.keyCodes.CTRL) {
    return false;
  }

  // when alt is pressed alone
  if (event.keyCode === EBX_Utils.keyCodes.ALT) {
    return false;
  }

  // when shift is pressed alone
  if (event.shiftKey === 1 || event.keyCode === EBX_Utils.keyCodes.SHIFT) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.CAPS_LOCK) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.NUM_LOCK) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.SCROLL_LOCK) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.TAB) {
    // disable preventBlur even if the mouse is inside the list area
    EBX_ISS.preventBlur = false;
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.ENTER) {
    return false;
  }

  if (EBX_Utils.isFunctionKey(event.keyCode)) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.PAUSE) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.PAGE_DOWN || event.keyCode === EBX_Utils.keyCodes.PAGE_UP) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.LEFT || event.keyCode === EBX_Utils.keyCodes.RIGHT) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.HOME || event.keyCode === EBX_Utils.keyCodes.END) {
    return false;
  }

  // when UP_ARROW is pressed while ISS is not shown
  if (event.keyCode === EBX_Utils.keyCodes.UP && EBX_ISS.isShown === false) {
    return false;
  }

  // when ESCAPE is pressed while ISS is not shown
  if (event.keyCode === EBX_Utils.keyCodes.ESCAPE && EBX_ISS.isShown === false) {
    return false;
  }

  return true;
};

EBX_ISS.emptyButtonHandler = function (labelInputId) {
  EBX_ISS.mapIdPreviewURL[labelInputId] = undefined;
  var labelEl = document.getElementById(labelInputId);
  EBX_FormNodeIndex.getFormNode(EBX_ISS.mapIdPathForNodeIndex[labelInputId]).setValue(null);
  EBX_FormPresenter.stackElementForValidation(labelEl);
  labelEl.focus();
};

EBX_ISS.openPreviewResultIndex = function (event, resultIndex) {
  var previewURL = EBX_ISS.results[resultIndex].previewURL;
  if (previewURL === undefined) {
    return;
  }
  EBX_ISS.preventBlur = false;
  YAHOO.util.Event.stopEvent(event);
  EBX_Utils.openInternalPopupLargeSizeHostedClose(previewURL);
};
EBX_ISS.openCurrentPreview = function (event) {
  var previewURL = EBX_ISS.mapIdPreviewURL[EBX_ISS.currentInputEl.id];
  if (previewURL === undefined) {
    return;
  }
  YAHOO.util.Event.stopEvent(event);
  EBX_Utils.openInternalPopupLargeSizeHostedClose(previewURL);
};
EBX_ISS.openCurrentCreate = function () {
  var createNewURL = EBX_ISS.mapIdCreateNewURL[EBX_ISS.currentInputEl.id];
  if (createNewURL === undefined) {
    return;
  }
  EBX_ISS.preventBlur = false;
  EBX_Utils.openInternalPopupLargeSizeHostedClose(createNewURL);
};
EBX_ISS.openCurrentAdvancedSelector = function () {
  var advancedSelectorURL = EBX_ISS.mapIdAdvancedSelectorURL[EBX_ISS.currentInputEl.id];
  if (advancedSelectorURL === undefined) {
    return;
  }
  EBX_ISS.preventBlur = false;
  EBX_Utils.openInternalPopupLargeSizeHostedClose(advancedSelectorURL);
};
EBX_ISS.onClickFooter = function (event) {
  if (EBX_ISS.preventBlur) {
    YAHOO.util.Event.stopEvent(event);
    if (EBX_ISS.currentInputEl !== null) {
      EBX_ISS.currentInputEl.focus();
    }
  }
};

EBX_ISS.openPreview = function (inputId) {
  var previewURL = EBX_ISS.mapIdPreviewURL[inputId];
  if (previewURL === undefined) {
    return;
  }
  EBX_Utils.openInternalPopupLargeSizeHostedClose(previewURL);
};
/**
 * Compute the pop up height basis
 *
 * @param {Region} clientRegion the window region
 * @return {int} the popup height
 */
EBX_ISS.getMinPopupHeight = function (clientRegion) {
  var minItemsDisplayed = clientRegion.height > 700 ? 8 : 3;

  var height = 0;
  if (EBX_ISS.results && EBX_ISS.results.length > minItemsDisplayed) {
    height = (minItemsDisplayed+ 0.5) * EBX_ISS.defaultItemHeight; //0.5 in order to show if there is something to scroll
  } else {
    height = Math.max(1, EBX_ISS.results.length) * EBX_ISS.defaultItemHeight;
  }
  height += EBX_ISS.toolbarDivEl.offsetHeight + EBX_Utils.getHScrollHeight();
  return height;
};
/**
 * Compute the pop up width basis
 *
 * @return {int} the popup width
 */
EBX_ISS.getMinPopupWidth = function () {
  // + 2 for right border and outline
  var gap = 2;
  var lastIEGap = EBX_ISS.getLastIEGap();
  if (YAHOO.env.ua.gecko !== 0 || EBX_LayoutManager.browser == "Chrome") {
    gap++;
  }
  return EBX_ISS.currentContainerEl.offsetWidth + gap + lastIEGap;
};
EBX_ISS.getLastIEGap = function () {
  var lastIEGap = 0;
  if (EBX_LayoutManager.browser == "IE" || EBX_LayoutManager.browser == "MSIE" || EBX_LayoutManager.browser == "Edge") {
    lastIEGap = 1;
  }
  return lastIEGap;
};
/**
 * Add an element which will be lazy loaded on scroll. Element shall be in popup
 * list elements
 *
 * @param {element}
 *            elem the lazy laoded element
 * @param {function}
 *            onLazyLoad callback fired when element is visible
 */
EBX_ISS.addLazyLoadHandler = function (elem, onLazyLoad) {
  var elemLazyLoaded = {
    element: elem,
    onLazyLoad: onLazyLoad
  };
  EBX_ISS.lazyLoadedElements.push(elemLazyLoaded);
};
EBX_ISS.onScrollInList = function (e) {
  clearTimeout(EBX_ISS.onScrollInListTimeout);
  EBX_ISS.onScrollInListTimeout = setTimeout(function () {

    EBX_Loader.onMouseReleasedOnce(EBX_ISS.handleLazyLoading);
  }, 100);
};
/**
 * Iterate over scruted elements and fire lazy load event if they are visible
 */
EBX_ISS.handleLazyLoading = function () {
  for (var i = 0; i < EBX_ISS.lazyLoadedElements.length; i++) {
    var elemLazyLoaded = EBX_ISS.lazyLoadedElements[i];
    var elem = elemLazyLoaded.element;
    var onLazyLoad = elemLazyLoaded.onLazyLoad;

    //elem is visible ?
    var D = YAHOO.util.Dom;
    var listRegion = D.getRegion(EBX_ISS.listEl);
    var elRegion = D.getRegion(elem);
    var isVisible = ((listRegion.top <= elRegion.top) && (listRegion.bottom >= elRegion.bottom));
    if (isVisible) {
      EBX_ISS.lazyLoadedElements.splice(i, 1);
      onLazyLoad();
    }
  }
};
EBX_ISS.notifyInputPositionChanged = function () {
  if (EBX_ISS.pane !== null) {
    EBX_ISS.pane.align('tl', 'bl', [-1, -1]);
  }
};

/** *END Incremental Search Selector ** */

/** START ISS advanced selector */

function ebx_parentISSAdvancedSelectKeyAndClosePopup(issPath, keyValue) {
  parent.EBX_FormNode.setValue(issPath, {
    key: keyValue
  });
  parent.EBX_Utils.closeInternalPopup();
}

/** END ISS advanced selector */

/** *START List ComboBox ** */

function EBX_LCB() {
};

EBX_LCB.previewURLs = [];
EBX_LCB.listId = [];
EBX_LCB.previewButton = [];
EBX_LCB.deleteButton = [];
EBX_LCB.isListHiddenIfEmpty = [];

EBX_LCB.containerCSSClass = "ebx_LCB_Container";
EBX_LCB.displayListCSSClass = "ebx_LCB_DisplayList";
EBX_LCB.stateEmptyCSSClass = "ebx_LCB_StateEmpty";
EBX_LCB.lineActionsCSSClass = "ebx_LCB_LineActions";
EBX_LCB.freshlyAddedCSSClass = "ebx_LCB_FreshlyAdded";

EBX_LCB.previewLine = function (button, valuesSelectId) {
  var itemEl = button.parentNode.parentNode;
  var index = EBX_Utils.getIndex(itemEl);

  var previewURLsForThisList = EBX_LCB.previewURLs[valuesSelectId];
  if (previewURLsForThisList === undefined) {
    return;
  }

  var previewURL = previewURLsForThisList[index];
  if (previewURL === undefined) {
    return;
  }

  EBX_Utils.openInternalPopupLargeSizeHostedClose(previewURL);
};

EBX_LCB.deleteLine = function (button, path) {
  var itemEl = button.parentNode.parentNode;
  var listEl = itemEl.parentNode;

  var index = EBX_Utils.getIndex(itemEl);
  var previousValue = ebx_form_getNodeValue(path) || [];
  var newValue = previousValue.slice(0, index).concat(previousValue.slice(index + 1));

  ebx_form_setNodeValue(path, newValue);

  var node = EBX_FormNodeIndex.getFormNode(path);
  var valuesSelectId = node.getEditor().getValuesSelectId();

  var valuesSelect = document.getElementById(valuesSelectId);

  listEl.parentNode.scrollTop = listEl.parentNode.scrollHeight;

  EBX_LCB.refreshCSSClasses(valuesSelectId,
      EBX_Utils.getFirstParentMatchingCSSClass(listEl, EBX_LCB.containerCSSClass), valuesSelect.length === 0);
};

EBX_LCB.createLine = function (value, path) {
  if (value === null) {
    return;
  }

  var previousValue = ebx_form_getNodeValue(path) || [];
  var newValue = [];
  EBX_Utils.forEach(previousValue, function (item) {
    newValue.push(item);
  });
  newValue.push(value);

  ebx_form_setNodeValue(path, newValue);

  var node = EBX_FormNodeIndex.getFormNode(path);
  var valuesSelectId = node.getEditor().getValuesSelectId();

  var valuesSelect = document.getElementById(valuesSelectId);
  var listEl = document.getElementById(EBX_LCB.listId[valuesSelectId]);

  listEl.parentNode.scrollTop = listEl.parentNode.scrollHeight;

  EBX_ISS.revert();
  EBX_LCB.refreshCSSClasses(valuesSelectId,
      EBX_Utils.getFirstParentMatchingCSSClass(listEl, EBX_LCB.containerCSSClass), valuesSelect.length === 0);
};

EBX_LCB.refreshCSSClasses = function (valuesSelectId, containerEl, isEmpty) {

  if (containerEl === null) {
    return;
  }

  if (isEmpty) {
    EBX_Utils.addCSSClass(containerEl, EBX_LCB.stateEmptyCSSClass);
  } else {
    EBX_Utils.removeCSSClass(containerEl, EBX_LCB.stateEmptyCSSClass);
  }

  if (EBX_LCB.isListHiddenIfEmpty[valuesSelectId] === true) {
    // if this boolean is not specified, EBX_LCB.displayListCSSClass is already set on containerEl
    if (isEmpty) {
      EBX_Utils.removeCSSClass(containerEl, EBX_LCB.displayListCSSClass);
    } else {
      EBX_Utils.addCSSClass(containerEl, EBX_LCB.displayListCSSClass);
    }
  }

};

/** *END List ComboBox ** */

/** *START Preview Image ** */

EBX_Form.previewPanel = null;
EBX_Form.previewPanelId = "ebx_Form_PreviewPanel";

EBX_Form.previewImage = function (externalResourcePath, webName) {
  var selectElement = document.getElementById(webName);

  if (selectElement.selectedIndex < 0) {
    return;
  }

  if (selectElement.options[selectElement.selectedIndex].value == ebx_nullValueForFacetEnum) {
    return;
  }

  var imageFileName = selectElement.options[selectElement.selectedIndex].text;
  EBX_Form.openPreviewImage(externalResourcePath + imageFileName, imageFileName);
};

EBX_Form.previewImage = function (externalResourcePath, webName) {
  var selectElement = document.getElementById(webName);

  if (selectElement.selectedIndex < 0) {
    return;
  }

  if (selectElement.options[selectElement.selectedIndex].value == ebx_nullValueForFacetEnum) {
    return;
  }

  var imageFileName = selectElement.options[selectElement.selectedIndex].text;
  EBX_Form.openPreviewImage(externalResourcePath + imageFileName, imageFileName);
};

EBX_Form.openPreviewImage = function (imageURL, altText) {
  if (EBX_Form.previewPanel === null) {
    EBX_Form.previewPanel = new YAHOO.widget.Panel(EBX_Form.previewPanelId, {
      close: true,
      draggable: false,
      modal: true,
      fixedCenter: true,
      visible: false
    });
    EBX_Form.previewPanel.render(document.body);
  }

  var previewPanelBodyContent = [];

  previewPanelBodyContent.push("<div id=\"ebx_Form_PreviewPanelScroller\"");
  previewPanelBodyContent.push("style=\"");
  previewPanelBodyContent.push("max-height:", document.body.clientHeight - 65, "px;");
  previewPanelBodyContent.push("max-width:", document.body.clientWidth - 50, "px;");
  previewPanelBodyContent.push("\"");
  previewPanelBodyContent.push(">");

  var extension = imageURL.substring(imageURL.lastIndexOf("."), imageURL.length);

  switch (extension) {
    case ".swf":
      previewPanelBodyContent.push("<embed");
      previewPanelBodyContent.push(" src=\"", imageURL, "\"");
      previewPanelBodyContent.push(" quality=\"best\"/");
      previewPanelBodyContent.push(" onload=\"EBX_Form.previewPanel.show()\"");
      previewPanelBodyContent.push("/>");
      break;

    case ".gif":
    case ".jpg":
    case ".jpeg":
    case ".png":
    case ".bmp":
      previewPanelBodyContent.push("<img");
      previewPanelBodyContent.push(" src=\"", imageURL, "\"");
      previewPanelBodyContent.push(" alt=\"", altText, "\"");
      previewPanelBodyContent.push(" onload=\"EBX_Form.previewPanel.show()\"");
      previewPanelBodyContent.push("/>");
      break;

    default:
      break;
  }

  previewPanelBodyContent.push("</div>");

  EBX_Form.previewPanel.setBody(previewPanelBodyContent.join(""));

  YAHOO.util.Event.addListener(EBX_Form.previewPanelId + "_mask", "click", EBX_Form.closePreviewImage);
};

EBX_Form.closePreviewImage = function () {
  EBX_Form.previewPanel.hide();
};

/** *END Preview Image ** */

EBX_Form.isEventToInputText = function (event) {
  // when metaKey is pressed
  if (event.metaKey === 1) {
    return false;
  }

  if (event.ctrlKey === 1) {
    // paste action is allowed
    if (event.keyCode !== EBX_Utils.keyCodes.KEY_V) {
      // both ctrl & alt is allowed
      if (event.altKey === 0) {
        return false;
      }
    }
  } else {
    if (event.altKey === 1) {
      return false;
    }
  }

  // when shift is pressed alone
  if (event.shiftKey === 1 && event.keyCode === EBX_Utils.keyCodes.SHIFT) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.TAB) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.ENTER) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.ESCAPE) {
    return false;
  }

  if (EBX_Utils.isFunctionKey(event.keyCode)) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.PAUSE) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.PAGE_DOWN || event.keyCode === EBX_Utils.keyCodes.PAGE_UP) {
    return false;
  }

  if (event.keyCode === EBX_Utils.keyCodes.HOME || event.keyCode === EBX_Utils.keyCodes.END) {
    return false;
  }

  return true;
};

/** *START empty, nil and overwrite buttons ** */
/** END empty buttons * */
EBX_Form.EmptySuffix = "_Empty";
/*START empty button for RadioButtonGroup */
EBX_Form.emptyRadioButtonGroup = function (radioButtonGroupName, isUserInput) {
  var radioButtonGroupElements = document.getElementsByName(radioButtonGroupName);
  var firstRadioButton = null;
  for (var i = 0; i < radioButtonGroupElements.length; i++) {
    radioButtonGroupElements[i].checked = false;
    // IE includes getElementById in getElementsByName
    // so exclude the inputFocusRedirector
    if (firstRadioButton === null && !EBX_Utils.matchCSSClass(radioButtonGroupElements[i],
        EBX_FormWidgets.inputFocusRedirector_CSSClass)) {
      firstRadioButton = radioButtonGroupElements[i];
    }
  }
  EBX_ButtonUtils.setButtonDisabled(document.getElementById(radioButtonGroupName + EBX_Form.EmptySuffix), true);

  if (firstRadioButton !== null) {
    if (isUserInput === true) {
      firstRadioButton.focus();
      EBX_FormPresenter.stackElementForValidation(firstRadioButton);
    }
  }
};
EBX_Form.refreshEmptyButtonFromRadioButton = function (radioButtonName, isUserInput) {
  var radioButtonGroupElements = document.getElementsByName(radioButtonName);
  for (var i = 0; i < radioButtonGroupElements.length; i++) {
    if (radioButtonGroupElements[i].checked === true) {
      EBX_ButtonUtils.setButtonDisabled(document.getElementById(radioButtonName + EBX_Form.EmptySuffix), false);
      if (isUserInput === true) {
        EBX_FormPresenter.stackElementForValidation(radioButtonGroupElements[i]);
      }
      return;
    }
  }
  EBX_ButtonUtils.setButtonDisabled(document.getElementById(radioButtonName + EBX_Form.EmptySuffix), true);
  if (isUserInput === true) {
    // is this code still alive? if yes, fix it about IE including getElementById in getElementsByName (inputFocusRedirector having no name)
    EBX_FormPresenter.stackElementForValidation(radioButtonGroupElements[0]);
  }
};
/*END empty button for RadioButtonGroup */
/*START empty button for String */
EBX_Form.emptyInputText = function (inputTextId) {
  document.getElementById(inputTextId).value = "";

  var emptyButton = document.getElementById(inputTextId + EBX_Form.EmptySuffix);
  if (emptyButton) {
    EBX_ButtonUtils.setButtonDisabled(emptyButton, true);
  }

  EBX_Form.focus(inputTextId);
};
EBX_Form.whenStringInputIsKeyPressedOrChange = function (inputTextEl) {
  // let moment to the browser to set new value
  setTimeout("EBX_Form.refreshEmptyButtonFromField('" + inputTextEl.id + "');", 50);
};
EBX_Form.refreshEmptyButtonFromField = function (inputTextId) {
  var emptyButton = document.getElementById(inputTextId + EBX_Form.EmptySuffix);
  if (!emptyButton) {
    return;
  }

  if (document.getElementById(inputTextId).value === "") {
    EBX_ButtonUtils.setButtonDisabled(emptyButton, true);
  } else {
    EBX_ButtonUtils.setButtonDisabled(emptyButton, false);
  }
};
/*END empty button for String */
/*START empty button for Date */
EBX_Form.dateSuffixes = function () {
};

EBX_Form.emptyDateInputs = function (dateInputsBaseName, enableValidation) {
  var dateInputsContainerEl = document.getElementById(dateInputsBaseName + EBX_Form.dateSuffixes.DateInputs);

  var firstDateField = null;
  for (var i = 0; i < dateInputsContainerEl.childNodes.length; i++) {
    if (dateInputsContainerEl.childNodes[i].nodeType === 1 && dateInputsContainerEl.childNodes[i].tagName === "INPUT"
        && dateInputsContainerEl.childNodes[i].type === "text") {
      dateInputsContainerEl.childNodes[i].value = "";
      if (firstDateField === null) {
        firstDateField = dateInputsContainerEl.childNodes[i];
      }
    }
  }
  var emptyButt = document.getElementById(dateInputsBaseName + EBX_Form.EmptySuffix);
  if (emptyButt !== null) {
    EBX_ButtonUtils.setButtonDisabled(emptyButt, true);
  }

  if (firstDateField !== null && enableValidation) {
    firstDateField.focus();
    EBX_FormPresenter.stackElementForValidation(firstDateField);
  }
};
EBX_Form.whenDateInputIsKeyPressedOrChange = function (dateInputsBaseName) {
  // let a moment to the browser to set new value
  // inputting value is already listen by the default system
  setTimeout("EBX_Form.refreshEmptyButtonFromDateField('" + dateInputsBaseName + "', false);", 50);
};

EBX_Form.refreshEmptyButtonFromDateField = function (dateInputsBaseName, enableValidation) {
  var dateInputsContainerEl = document.getElementById(dateInputsBaseName + EBX_Form.dateSuffixes.DateInputs);
  if (enableValidation === true) {
    var firstInput = EBX_Utils.getFirstRecursiveChildMatchingTagName(dateInputsContainerEl, "input");
    if (firstInput !== null) {
      EBX_FormPresenter.stackElementForValidation(firstInput);
    }
  }

  if (!document.getElementById(dateInputsBaseName + EBX_Form.EmptySuffix)) {
    return;
  }

  for (var i = 0; i < dateInputsContainerEl.childNodes.length; i++) {
    if (dateInputsContainerEl.childNodes[i].nodeType === 1 && dateInputsContainerEl.childNodes[i].tagName === "INPUT"
        && dateInputsContainerEl.childNodes[i].type === "text" && dateInputsContainerEl.childNodes[i].value !== "") {
      EBX_ButtonUtils.setButtonDisabled(document.getElementById(dateInputsBaseName + EBX_Form.EmptySuffix), false);
      return;
    }
  }
  EBX_ButtonUtils.setButtonDisabled(document.getElementById(dateInputsBaseName + EBX_Form.EmptySuffix), true);
};

EBX_Form.dateFieldBlur = function (dateInputsBaseName, dateField) {
  var dateInputsContainerEl = document.getElementById(dateInputsBaseName + EBX_Form.dateSuffixes.DateInputs);
  dateInputsContainerEl.validationTimeout = window.setTimeout(function () {
    EBX_FormPresenter.stackElementForValidation(dateField);
  }, 100);
};
EBX_Form.dateFieldFocus = function (dateInputsBaseName) {
  var dateInputsContainerEl = document.getElementById(dateInputsBaseName + EBX_Form.dateSuffixes.DateInputs);
  if (dateInputsContainerEl.validationTimeout !== undefined) {
    window.clearTimeout(dateInputsContainerEl.validationTimeout);
    dateInputsContainerEl.validationTimeout = undefined;
  }
};

/*END empty button for Date */
/*START empty button for FacetEnum */
EBX_Form.emptyFacetEnum = function (fieldId, isUserInput) {
  var fieldEl = document.getElementById(fieldId);
  fieldEl.value = ebx_nullValueForFacetEnum;

  document.getElementById(fieldId
      + EBX_FacetEnumeration.InputFieldDisplaySuffix).value = EBX_FACET_ENUMERATION_LABEL_NULL_VALUE;

  var emptyButton = document.getElementById(fieldId + EBX_Form.EmptySuffix);
  if (emptyButton !== null) {
    EBX_ButtonUtils.setButtonDisabled(emptyButton, true);
  }

  if (isUserInput === true) {
    EBX_Form.focus(fieldId + EBX_FacetEnumeration.InputFieldDisplaySuffix);
    EBX_FormPresenter.stackElementForValidation(fieldEl);
  }
};
EBX_Form.refreshEmptyButtonFromFacetEnumField = function (fieldEl, isUserInput) {

  if (isUserInput === true) {
    EBX_FormPresenter.stackElementForValidation(fieldEl);
  }

  var emptyButton = document.getElementById(fieldEl.id + EBX_Form.EmptySuffix);
  if (emptyButton === null) {
    return;
  }
  if (fieldEl.value == ebx_nullValueForFacetEnum) {
    EBX_ButtonUtils.setButtonDisabled(emptyButton, true);
  } else {
    EBX_ButtonUtils.setButtonDisabled(emptyButton, false);
  }
};
/*END empty button for FacetEnum */
/** END empty buttons * */

EBX_Form.focusInputField = function (webName) {

  var el = document.getElementById(webName);

  if (el === null) {
    return;
  }

  EBX_Form.focusElementIfStillVisible(el);

  // TODO CCH
  // if null : redirect on the null button
  // else if an element is find with webName, focus it
  // else focus the first visible input in the ebx_InputFieldWrapper
};

/** START nil buttons * */

EBX_Form.NilClassName = "ebx_Nil";
EBX_Form.NullSuffix = "_isNull";

EBX_Form.isNil = function (fieldWrapperId) {
  return EBX_Utils.matchCSSClass(EBX_Utils.getFirstParentMatchingCSSClass(document.getElementById(fieldWrapperId),
      EBX_Form.OverwrittenValueClassName), EBX_Form.NilClassName);
};
/*START nil button for String */
EBX_Form.setStringNullOn = function (webName) {
  var form = document.getElementById(EBX_Form.WorkspaceFormId);
  var inputTextEl = form[webName];

  inputTextEl.oldValue = inputTextEl.value;

  EBX_Form.emptyInputText(inputTextEl.id);
  inputTextEl.readOnly = true;

  EBX_Utils.addCSSClass(EBX_Utils.getFirstParentMatchingCSSClass(inputTextEl, EBX_Form.OverwrittenValueClassName),
      EBX_Form.NilClassName);

  inputTextEl.value = "";

  var button = document.getElementById(webName + EBX_Form.NullSuffix);
  if (button) {
    button.tabindex = "0";
  }
};
EBX_Form.setStringNullOff = function (webName) {
  var form = document.getElementById(EBX_Form.WorkspaceFormId);
  var inputTextEl = form[webName];

  inputTextEl.readOnly = false;

  EBX_Utils.removeCSSClass(EBX_Utils.getFirstParentMatchingCSSClass(inputTextEl, EBX_Form.OverwrittenValueClassName),
      EBX_Form.NilClassName);

  if (inputTextEl.oldValue) {
    inputTextEl.value = inputTextEl.oldValue;
  } else {
    inputTextEl.value = "";
  }
  EBX_Form.refreshEmptyButtonFromField(webName);

  var button = document.getElementById(webName + EBX_Form.NullSuffix);
  if (button) {
    button.tabindex = "-1";
  }

  inputTextEl.focus();
};
/*END nil button for String */
/*START nil button for Complex or List */
EBX_Form.setComplexOrListNullOn = function (webName) {
  EBX_Utils.addCSSClass(
      EBX_Utils.getFirstParentMatchingCSSClass(document.getElementById(webName + EBX_Form.InputFieldWrapperSuffix),
          EBX_Form.OverwrittenValueClassName), EBX_Form.NilClassName);

  var button = document.getElementById(webName + EBX_Form.NullSuffix);
  if (button) {
    button.tabindex = "0";
  }
};
EBX_Form.setComplexOrListNullOff = function (webName) {
  EBX_Utils.removeCSSClass(
      EBX_Utils.getFirstParentMatchingCSSClass(document.getElementById(webName + EBX_Form.InputFieldWrapperSuffix),
          EBX_Form.OverwrittenValueClassName), EBX_Form.NilClassName);

  var button = document.getElementById(webName + EBX_Form.NullSuffix);
  if (button) {
    button.tabindex = "-1";
  }

  EBX_Form.focusInputField(webName);
};
/*END nil button for Complex or List */
/** END nil buttons * */

/** START inherit button * */
EBX_Form.ActivableComponentClassName = "ebx_ActivableComponent";
EBX_Form.InheritedClassName = "ebx_Inherited";

EBX_Form.setInheritedOn = function (webName) {
  var firstParentInput = EBX_Utils.getFirstParentMatchingCSSClass(
      document.getElementById(webName + EBX_Form.InputFieldWrapperSuffix),
      EBX_Form.ActivableComponentClassName);
  if (firstParentInput == null) {
    return;
  }

  EBX_Utils.addCSSClass(firstParentInput, EBX_Form.InheritedClassName);
};
EBX_Form.setInheritedOff = function (webName) {
  var firstParentInput = EBX_Utils.getFirstParentMatchingCSSClass(
      document.getElementById(webName + EBX_Form.InputFieldWrapperSuffix),
      EBX_Form.ActivableComponentClassName);
  if (firstParentInput == null) {
    return;
  }

  EBX_Utils.removeCSSClass(firstParentInput, EBX_Form.InheritedClassName);

  EBX_Form.focusInputField(webName);
};
/** START inherit button * */

/** *END empty, nil and overwrite buttons ** */

/* ** START Calendar ** */

EBX_Form.calendar = null;
EBX_Form.calendarConfig = {
  close: true
};

EBX_Form.calendarPanel = null;
EBX_Form.calendarPanelId = "ebx_Form_CalendarPanel";

EBX_Form.calendarMaskId = "ebx_Form_CalendarMask";
EBX_Form.calendarMask = null;
EBX_Form.getCalendarMask = function () {
  if (EBX_Form.calendarMask === null) {
    EBX_Form.calendarMask = document.createElement("div");
    EBX_Form.calendarMask.id = EBX_Form.calendarMaskId;
    EBX_Form.calendarMask.style.display = "none";

    YAHOO.util.Event.addListener(EBX_Form.calendarMask, "click", EBX_Form.hideCalendarPanel);
  }

  return EBX_Form.calendarMask;
};

EBX_Form.openXPathCalendarHelper = function (inputFieldId) {
  ebx_treeHelper_hideShow(null, null);

  var inputField = document.getElementById(inputFieldId);

  if (EBX_Form.calendarPanel === null) {
    EBX_Form.calendarPanel = new YAHOO.widget.Overlay(EBX_Form.calendarPanelId, {
      constraintoviewport: true,
      visible: false,
      draggable: true,
      effect: {
        effect: YAHOO.widget.ContainerEffect.FADE,
        duration: 0.2
      }
    });
    EBX_Form.calendarPanel.render(inputField.form);
  }

  if (EBX_Form.calendar === null) {
    EBX_Form.calendar = new YAHOO.widget.Calendar(EBX_Form.calendarPanel.element, {
      close: true,
      draggable: true
    });
  }

  var today = new Date();
  var dateToSelect = today.getMonth() + 1;

  dateToSelect += "/";
  var pagedate = dateToSelect;

  dateToSelect += today.getDate();
  dateToSelect += "/";

  dateToSelect += today.getFullYear();
  pagedate += today.getFullYear();

  EBX_Form.calendar.selectEvent.unsubscribe(EBX_Form.calendarXPathSelectionHandler);
  EBX_Form.calendar.selectEvent.unsubscribe(EBX_Form.calendarSelectionHandler);

  EBX_Form.calendar.select(dateToSelect);
  EBX_Form.calendar.cfg.setProperty("pagedate", pagedate);
  EBX_Form.calendar.selectEvent.subscribe(EBX_Form.calendarXPathSelectionHandler, inputField);
  EBX_Form.calendar.hideEvent.subscribe(EBX_Form.hideCalendarPanel);
  EBX_Form.calendar.render();
  EBX_Form.calendar.show();

  EBX_Form.calendarPanel.cfg.setProperty('context', [inputField, 'tl', 'bl']);

  EBX_Form.showCalendarPanel();
};

EBX_Form.calendarXPathSelectionHandler = function (type, args, inputField) {
  var dates = args[0];
  var date = dates[0];
  var year = date[0];
  var month = date[1];
  var day = date[2];
  EBX_Form.insertTextAtCursorPosition(inputField, "'" + year + "-" + month + "-" + day + "'");

  EBX_Form.hideCalendarPanel();
};

EBX_Form.openCalendar = function (yearFieldId, monthFieldId, dayFieldId, dateInputsBaseName) {
  var fieldsObj = {
    yearField: document.getElementById(yearFieldId),
    monthField: document.getElementById(monthFieldId),
    dayField: document.getElementById(dayFieldId),
    dateInputsBaseName: dateInputsBaseName
  };

  if (EBX_Form.calendarPanel === null) {
    EBX_Form.calendarPanel = new YAHOO.widget.Overlay(EBX_Form.calendarPanelId, {
      constraintoviewport: true,
      visible: false
    });
    EBX_Form.calendarPanel.render(document.body);
  }

  if (EBX_Form.calendar === null) {
    EBX_Form.calendar = new YAHOO.widget.Calendar(EBX_Form.calendarPanel.element, EBX_Form.calendarConfig);
    EBX_Form.calendar.Style.CSS_NAV_LEFT = "ebx_FlatButton ebx_IconButton ebx_PagingPrevious";
    EBX_Form.calendar.Style.CSS_NAV = "ebx_FlatButton";
    EBX_Form.calendar.Style.CSS_NAV_RIGHT = "ebx_FlatButton ebx_IconButton ebx_PagingNext";

    EBX_Form.calendar.renderNavEvent.subscribe(function () {
      document.getElementById(EBX_Form.calendarPanelId + "_nav_cancel").className = "ebx_Button";
      document.getElementById(EBX_Form.calendarPanelId + "_nav_cancel").parentNode.className = "";
      document.getElementById(EBX_Form.calendarPanelId + "_nav_submit").className = "ebx_Button ebx_DefaultButton";
      document.getElementById(EBX_Form.calendarPanelId + "_nav_submit").parentNode.className = "";
    });

    EBX_Form.calendar.renderEvent.subscribe(EBX_Form.setCalendarPaginButtonsStyle);
  }

  var today = new Date();
  var dateToSelect = "";
  /* month/day/year */
  var monthValue = parseInt(fieldsObj.monthField.value, 10);
  if (isNaN(monthValue)) {
    dateToSelect += today.getMonth() + 1;
  } else {
    dateToSelect += monthValue;
  }

  dateToSelect += "/";
  var pagedate = dateToSelect;
  /* month/year */
  var dayValue = parseInt(fieldsObj.dayField.value, 10);
  if (isNaN(dayValue)) {
    dateToSelect += today.getDate();
  } else {
    dateToSelect += dayValue;
  }

  dateToSelect += "/";

  var yearValue = parseInt(fieldsObj.yearField.value, 10);
  if (isNaN(yearValue)) {
    dateToSelect += today.getFullYear();
    pagedate += today.getFullYear();
  } else {
    dateToSelect += yearValue;
    pagedate += yearValue;
  }

  EBX_Form.calendar.selectEvent.unsubscribe(EBX_Form.calendarSelectionHandler);
  EBX_Form.calendar.selectEvent.unsubscribe(EBX_Form.calendarXPathSelectionHandler);

  EBX_Form.calendar.select(dateToSelect);
  EBX_Form.calendar.cfg.setProperty("pagedate", pagedate);

  EBX_Form.calendar.selectEvent.subscribe(EBX_Form.calendarSelectionHandler, fieldsObj);
  EBX_Form.calendar.hideEvent.subscribe(EBX_Form.hideCalendarPanel);

  EBX_Form.calendar.render();
  EBX_Form.calendar.show();

  EBX_Form.calendarPanel.cfg.setProperty('context',
      [dateInputsBaseName + EBX_Form.dateSuffixes.DateInputs, 'tl', 'bl']);

  EBX_Form.showCalendarPanel();
};

EBX_Form.setCalendarPaginButtonsStyle = function () {
  EBX_Form.calendar.linkLeft.title = EBX_Form.calendar.linkLeft.innerHTML;
  EBX_Form.calendar.linkLeft.innerHTML = "<span class=\"ebx_Icon\">&nbsp;</span>";

  EBX_Form.calendar.linkRight.title = EBX_Form.calendar.linkRight.innerHTML;
  EBX_Form.calendar.linkRight.innerHTML = "<span class=\"ebx_Icon\">&nbsp;</span>";
};

EBX_Form.calendarSelectionHandler = function (type, args, fieldsObj) {
  var dates = args[0];
  var date = dates[0];
  var year = date[0], month = date[1], day = date[2];

  fieldsObj.yearField.value = year;
  fieldsObj.monthField.value = month;
  fieldsObj.dayField.value = day;

  EBX_Form.refreshEmptyButtonFromDateField(fieldsObj.dateInputsBaseName, true);

  EBX_Form.hideCalendarPanel();
};
EBX_Form.showCalendarPanel = function () {
  EBX_Form.calendarPanel.show();
  YAHOO.util.Event.addListener(EBX_Form.calendarPanel.element, "click", function (event) {
    YAHOO.util.Event.stopEvent(event);
  });
  EBX_Form.calendar.renderEvent.subscribe(function () {
    YAHOO.util.Event.addListener(EBX_Form.calendarPanel.element, "click", function (event) {
      YAHOO.util.Event.stopEvent(event);
    });
  });

  var calendarMask = EBX_Form.getCalendarMask();
  EBX_Form.calendarPanel.element.parentNode.appendChild(calendarMask);
  calendarMask.style.display = "";
};
EBX_Form.hideCalendarPanel = function () {
  EBX_Form.calendarPanel.hide();

  var calendarMask = EBX_Form.getCalendarMask();
  calendarMask.style.display = "none";
};

EBX_Form.fillTimeDateWithNow = function (dateInputsBaseName) {
  EBX_Form.fillTimeDate(dateInputsBaseName, new Date(), true);
};
EBX_Form.fillTimeDate = function (dateInputsBaseName, date, enableValidation) {
  EBX_Form.fillTimeDateFields(
      dateInputsBaseName,
      enableValidation,
      date.getFullYear(),
      date.getMonth() + 1,
      date.getDate(),
      date.getHours(),
      date.getMinutes(),
      date.getSeconds(),
      date.getMilliseconds()
  );
};
EBX_Form.fillTimeDateFields = function (dateInputsBaseName, enableValidation, year, month, day, hour, minute, second,
    millisecond) {
  var fieldYear = document.getElementById(dateInputsBaseName + EBX_Form.dateSuffixes.year);
  if (fieldYear) {
    fieldYear.value = year;
  }

  // fill-a-zero-before was disabled for day and month #4609

  var fieldMonth = document.getElementById(dateInputsBaseName + EBX_Form.dateSuffixes.month);
  if (fieldMonth) {
    fieldMonth.value = /*(date.getMonth() < 9 ? "0" : "") + */month;
  }

  var fieldDay = document.getElementById(dateInputsBaseName + EBX_Form.dateSuffixes.day);
  if (fieldDay) {
    fieldDay.value = /*(date.getDate() < 10 ? "0" : "") + */day;
  }

  var fieldHour = document.getElementById(dateInputsBaseName + EBX_Form.dateSuffixes.hour);
  if (fieldHour) {
    fieldHour.value = (hour < 10 ? "0" : "") + hour;
  }

  var fieldMinute = document.getElementById(dateInputsBaseName + EBX_Form.dateSuffixes.minute);
  if (fieldMinute) {
    fieldMinute.value = (minute < 10 ? "0" : "") + minute;
  }

  var fieldSecond = document.getElementById(dateInputsBaseName + EBX_Form.dateSuffixes.second);
  if (fieldSecond) {
    fieldSecond.value = (second < 10 ? "0" : "") + second;
  }

  var fieldMilliSecond = document.getElementById(dateInputsBaseName + EBX_Form.dateSuffixes.milliSecond);
  if (fieldMilliSecond) {
    fieldMilliSecond.value = (millisecond < 10 ? "00" : millisecond < 100 ? "0" : "") + millisecond;
  }

  EBX_Form.refreshEmptyButtonFromDateField(dateInputsBaseName, enableValidation);
};

/** *END Calendar ** */

/** * START Text utils ** */
EBX_Form.insertTextAtCursorPosition = function (targetObject, text) {
  var scrollPos = targetObject.scrollTop;
  if (YAHOO.env.ua.ie) {
    targetObject.focus();
    document.selection.createRange().text = text;
  } else {
    // Others
    var startPosition = targetObject.selectionStart;
    var endPosition = targetObject.selectionEnd;
    targetObject.value = targetObject.value.substring(0, startPosition) + text + targetObject.value.substring(
        endPosition);
    targetObject.setSelectionRange(startPosition + text.length, startPosition + text.length);
  }
  targetObject.scrollTop = scrollPos;
};
/** * END Text Utils ** */

/** *START Hierarchy popup ** */

/**
 * Opens a pop-up to view (and edit) the data for the clicked node.
 */
ebx_openHRINodeInPopup = function (popupUrl) {
  var popupHriNode = window.open(popupUrl, 'EditHriNode',
      'width=800,height=600,scrollbars=yes,resizable=yes,menu=no,dependent=yes,status=yes');
  popupHriNode.window.focus();
};

/** *END Hierarchy popup ** */

/** *START Data Services ** */

function EBX_DataServices() {
}

EBX_DataServices.onSelectAll = function (tableElementId, selectAllId) {
  var tableElement = document.getElementById(tableElementId);
  var isChecked = document.getElementById(selectAllId).checked;

  var allInputs = tableElement.getElementsByTagName('INPUT');
  var length = allInputs.length;
  for (var i = 0; i < length; i++) {
    var anyInput = allInputs[i];
    if (anyInput.type === "checkbox") {
      anyInput.checked = isChecked;
    }
  }
};

EBX_DataServices.onSelectRow = function (selectRowClass, rowOperationsClass, selectRowId, selectAllId, tableElementId) {
  var tableElement = document.getElementById(tableElementId);
  var selectRowInput = document.getElementById(selectRowId);

  //select all operation for row
  {
    var operationInputs = EBX_Utils.getRecursiveChildrenMatchingCSSClass(tableElement, rowOperationsClass);
    for (var i = 0; i < operationInputs.length; i++) {
      var operationInput = operationInputs[i];
      if (operationInput.type === "checkbox") {
        operationInput.checked = selectRowInput.checked;
      }
    }
  }

  //check if all rows are selected
  EBX_DataServices.checkAllRowSelected(selectRowClass, selectAllId, tableElement);
};

EBX_DataServices.onSelectOperation = function (rowOperationsClass, selectRowClass, selectRowInputId, selectAllId,
    tableElementId) {
  var tableElement = document.getElementById(tableElementId);
  var selectRowInput = document.getElementById(selectRowInputId);

  var operationInputs = EBX_Utils.getRecursiveChildrenMatchingCSSClass(tableElement, rowOperationsClass);
  var isAllSelected = true;
  for (var i = 0; i < operationInputs.length; i++) {
    if (!operationInputs[i].checked) {
      isAllSelected = false;
    }
  }

  if (isAllSelected) {
    selectRowInput.checked = true;
  } else {
    selectRowInput.checked = false;
  }

  //check if all rows are selected
  EBX_DataServices.checkAllRowSelected(selectRowClass, selectAllId, tableElement);
};

EBX_DataServices.checkAllRowSelected = function (selectRowClass, selectAllId, tableElement) {
  var isAllFirstColumnSelected = true;
  {
    var selectRowInputs = EBX_Utils.getRecursiveChildrenMatchingCSSClass(tableElement, selectRowClass);
    for (var i = 0; i < selectRowInputs.length; i++) {
      if (!selectRowInputs[i].checked) {
        isAllFirstColumnSelected = false;
      }
    }
  }

  var selectAllInput = document.getElementById(selectAllId);
  if (isAllFirstColumnSelected) {
    selectAllInput.checked = true;
  } else {
    selectAllInput.checked = false;
  }
};
/** *END Data Services ** */

/** *START Checkbox group selection ** */
EBX_FormWidgets.checkboxGroupCSSClass = "ebx_CheckboxGroup";
EBX_FormWidgets.checkboxGroupSelectAllCSSClass = "ebx_CheckboxGroupSelectAll";
EBX_FormWidgets.checkboxGroupSelectAll = function (checkboxAllEl) {
  var checkboxGroupParentElement = EBX_Utils.getFirstParentMatchingCSSClass(checkboxAllEl,
      EBX_FormWidgets.checkboxGroupCSSClass);
  var inputEls = checkboxGroupParentElement.getElementsByTagName("INPUT");

  var checked = checkboxAllEl.checked;
  var i = inputEls.length;
  while (i--) {
    var inputEl = inputEls[i];
    if (inputEl.type === "checkbox" && inputEl.disabled !== true) {
      inputEl.checked = checked;
    }
  }

  EBX_FormPresenter.stackElementForValidation(checkboxGroupParentElement);
};

EBX_FormWidgets.checkboxGroupRefreshSelectAll = function (checkboxEl, isUserInput) {
  var checkboxGroupParentElement = EBX_Utils.getFirstParentMatchingCSSClass(checkboxEl,
      EBX_FormWidgets.checkboxGroupCSSClass);
  var inputEls = checkboxGroupParentElement.getElementsByTagName("INPUT");

  var selectAllCheckboxContainer = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(checkboxGroupParentElement,
      EBX_FormWidgets.checkboxGroupSelectAllCSSClass);

  if (selectAllCheckboxContainer === null) {
    if (isUserInput === true) {
      EBX_FormPresenter.stackElementForValidation(checkboxGroupParentElement);
    }
    return;
  }

  var selectAllCheckbox = selectAllCheckboxContainer.getElementsByTagName("INPUT")[0];

  var allAreChecked = true;

  var i = inputEls.length;
  while (i--) {
    var inputEl = inputEls[i];
    if (inputEl !== selectAllCheckbox && inputEl.type === "checkbox" && inputEl.disabled !== true && inputEl.checked
        === false) {
      allAreChecked = false;
      break;
    }
  }

  selectAllCheckbox.checked = allAreChecked;

  if (isUserInput === true) {
    EBX_FormPresenter.stackElementForValidation(checkboxGroupParentElement);
  }
};
/** *END Checkbox group selection ** */

/** *START Select multiple selection ** */
EBX_FormWidgets.selectMultipleCSSClass = "ebx_SelectMultiple";
EBX_FormWidgets.selectMultipleSelectAllCSSClass = "ebx_SelectMultipleSelectAll";
EBX_FormWidgets.selectMultipleSelectAll = function (checkboxAllEl) {
  var selectMultipleParentElement = EBX_Utils.getFirstParentMatchingCSSClass(checkboxAllEl,
      EBX_FormWidgets.selectMultipleCSSClass);
  var optionEls = selectMultipleParentElement.getElementsByTagName("SELECT")[0].options;

  var checked = checkboxAllEl.checked;
  var i = optionEls.length;
  while (i--) {
    optionEls[i].selected = checked;
  }

  EBX_FormPresenter.stackElementForValidation(selectMultipleParentElement);
};
EBX_FormWidgets.selectMultipleRefreshSelectAll = function (optionOrSelectEl, isUserInput) {
  var selectMultipleParentElement = EBX_Utils.getFirstParentMatchingCSSClass(optionOrSelectEl,
      EBX_FormWidgets.selectMultipleCSSClass);
  var optionEls = selectMultipleParentElement.getElementsByTagName("SELECT")[0].options;

  var selectAllCheckboxContainer = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(selectMultipleParentElement,
      EBX_FormWidgets.selectMultipleSelectAllCSSClass);

  if (selectAllCheckboxContainer === null) {
    return;
  }

  var selectAllCheckbox = selectAllCheckboxContainer.getElementsByTagName("INPUT")[0];

  var allAreSelected = true;

  var i = optionEls.length;
  while (i--) {
    var optionEl = optionEls[i];
    if (optionEl.selected === false) {
      allAreSelected = false;
      break;
    }
  }

  selectAllCheckbox.checked = allAreSelected;

  if (isUserInput === true) {
    EBX_FormPresenter.stackElementForValidation(selectMultipleParentElement);
  }
};
/** *END Select multiple selection ** */

/** *START UDA type selector ** */

EBX_FormWidgets.udaClassesByKeyByContainerId = {};

EBX_FormWidgets.udaSelectListener = function (value, containerId) {
  var containerEl = document.getElementById(containerId);

  var cssClass = null;
  if (value !== null) {
    cssClass = EBX_FormWidgets.udaClassesByKeyByContainerId[containerId][value.key];
  }

  var child = containerEl.firstChild;
  if (child === null) {
    return null;
  }
  do {
    if (EBX_Utils.matchCSSClass(child, cssClass)) {
      child.style.display = "";
    } else {
      child.style.display = "none";
    }
  } while ((child = child.nextSibling));
};

/** *END UDA type selector ** */

/** * START Association Node ** */
function EBX_AssociationNode() {
}

EBX_AssociationNode.dataSourceAssociationNodeActionsResponseSchema = {
  resultsList: "messages",
  fields: [{
    key: "message"
  }, {
    key: "severity"
  }]
};
EBX_AssociationNode.dataSourceAssociationNodeActions = new YAHOO.util.XHRDataSource();
EBX_AssociationNode.dataSourceAssociationNodeActions.responseType = YAHOO.util.DataSource.TYPE_JSON;
EBX_AssociationNode.dataSourceAssociationNodeActions.responseSchema = EBX_AssociationNode.dataSourceAssociationNodeActionsResponseSchema;

EBX_AssociationNode.dataSourceAssociationNodeDuplicateResponseSchema = {
  resultsList: "url"
};
EBX_AssociationNode.dataSourceAssociationNodeDuplicate = new YAHOO.util.XHRDataSource();
EBX_AssociationNode.dataSourceAssociationNodeDuplicate.responseType = YAHOO.util.DataSource.TYPE_JSON;
EBX_AssociationNode.dataSourceAssociationNodeDuplicate.responseSchema = EBX_AssociationNode.dataSourceAssociationNodeDuplicateResponseSchema;

EBX_AssociationNode.sendRequest = function (requestURL, tableName) {
  EBX_AjaxTable.AjaxTableRegister[tableName].isTableReady = false;
  EBX_AjaxTable.AjaxTableRegister[tableName].setState(EBX_Table_State.LOADING);

  EBX_AssociationNode.dataSourceAssociationNodeActions.sendRequest(requestURL, {
    success: EBX_AssociationNode.actionSuccess,
    failure: EBX_AssociationNode.actionFailure,
    argument: {
      tableName: tableName
    }
  });
};

EBX_AssociationNode.sendDuplicateRequest = function (requestURL, tableName) {
  EBX_AjaxTable.AjaxTableRegister[tableName].isTableReady = false;
  EBX_AjaxTable.AjaxTableRegister[tableName].setState(EBX_Table_State.LOADING);

  EBX_AssociationNode.dataSourceAssociationNodeDuplicate.sendRequest(requestURL, {
    success: EBX_AssociationNode.duplicateSuccess,
    failure: EBX_AssociationNode.actionFailure,
    argument: {
      tableName: tableName
    }
  });
};

EBX_AssociationNode.actionSuccess = function (oRequest, oParsedResponse, argument) {
  var messages = oParsedResponse.results;
  if (messages !== undefined) {
    for (var i = 0; i < messages.length; i++) {
      var message = messages[i].message;
      var severity = messages[i].severity;
      if (severity === undefined) {
        severity = EBX_UserMessageManager.INFO;
      }
      EBX_UserMessageManager.addMessage(message, severity);
    }
  }
  EBX_AjaxTable.refreshCurrentPage(argument.tableName);
  EBX_FormPresenter.updateFromSubSession();
};

EBX_AssociationNode.duplicateSuccess = function (oRequest, oParsedResponse, argument) {
  var url = oParsedResponse.results;
  if (url !== undefined) {
    EBX_Utils.openInternalPopupLargeSizeHostedClose(url);
  }
  EBX_AjaxTable.AjaxTableRegister[argument.tableName].isTableReady = true;
  EBX_AjaxTable.AjaxTableRegister[argument.tableName].setState(EBX_Table_State.NORMAL);
};

EBX_AssociationNode.actionFailure = function (oRequest, oParsedResponse, argument) {
  // case of builder.sendError(...)
  EBX_AjaxTable.AjaxTableRegister[argument.tableName].isTableReady = true;
  EBX_AjaxTable.AjaxTableRegister[argument.tableName].setState(EBX_Table_State.ERROR);
};

/** * END Association Node ** */

/** START button icon selector * */
/* init by CtbUIBeanToolbarButtonIcon */
var EBX_BUTTON_ICON_SELECTOR_SECTION_TITLE_BUILT_IN = "";
var EBX_BUTTON_ICON_SELECTOR_SECTION_TITLE_FONT_AWESOME = "";

var EBX_BUTTON_ICON_SELECTOR_PANEL_ID = "ebx_ButtonIconSelectorPanel";
var EBX_BUTTON_ICON_SELECTOR_PANEL_LZ = null;
var EBX_BUTTON_ICON_SELECTOR_FONT_AWESOME_SECTION_ID = "ebx_ButtonIconSelectorFASection";
var EBX_BUTTON_ICON_SELECTOR_PANEL_MASK_ID = "ebx_ButtonIconSelector_Mask";

var ebx_buttonIconSelector_current_previewButtonWrapperId = null;
var ebx_buttonIconSelector_current_hiddenFieldId = null;
var ebx_buttonIconSelector_current_toggleButtonId = null;

var ebx_buttonIconSelector_currentScrollingContainer = null;
var ebx_buttonIconSelector_originalFormScrollTop = null;
var ebx_buttonIconSelector_formScrollMaker = null;

var EBX_BUTTON_ICON_SELECTOR_SELECTOR_MAX_HEIGHT = 234;//220 + 2*5(padding.top&bottom) + 2*2(border.top&bottom)

function ebx_buttonIconSelector_showPanel(previewButtonWrapperId, hiddenFieldId, toggleButtonId, iconNamesUrl) {
  if (EBX_BUTTON_ICON_SELECTOR_PANEL_LZ === null) {
    EBX_BUTTON_ICON_SELECTOR_PANEL_LZ = new YAHOO.widget.Overlay(EBX_BUTTON_ICON_SELECTOR_PANEL_ID, {
      constraintoviewport: true,
      visible: false
    });

    EBX_BUTTON_ICON_SELECTOR_PANEL_LZ.render(document.body);

    var bodyContent = [];

    bodyContent.push("<div class=\"ebx_ButtonIconSelectorPanelContent ebx_ColoredBorder ebx_SmallFormButtons\">");
    {
      bodyContent.push("<div class=\"ebx_ButtonIconSelectorPanelSection ebx_ColoredBorder\">",
          EBX_BUTTON_ICON_SELECTOR_SECTION_TITLE_BUILT_IN,
          "</div>");
      bodyContent.push(
          ebx_buttonIconSelector_buildButtonsWithHiddenFieldNextSibling(EBX_BUTTON_ICON_SELECTOR_BUILT_IN_ICON_NAMES));

      bodyContent.push("<div class=\"ebx_ButtonIconSelectorPanelSection ebx_ColoredBorder\">",
          EBX_BUTTON_ICON_SELECTOR_SECTION_TITLE_FONT_AWESOME, "</div>");
      bodyContent.push("<div id=\"", EBX_BUTTON_ICON_SELECTOR_FONT_AWESOME_SECTION_ID, "\"></div>");
    }
    bodyContent.push("</div>");

    EBX_BUTTON_ICON_SELECTOR_PANEL_LZ.setBody(bodyContent.join(""));

    ebx_buttonIconSelector_goFetchFontAwesomeIconsAndFillSection(iconNamesUrl);

    YAHOO.util.Event.addListener(EBX_BUTTON_ICON_SELECTOR_PANEL_LZ.body, "click", ebx_buttonIconSelector_clickListener);
  }

  var previewButtonWrapperEl = document.getElementById(previewButtonWrapperId);

  // auto-scroll feature
  {
    ebx_buttonIconSelector_currentScrollingContainer = EBX_Form.getFormScrollingContainer(previewButtonWrapperEl);
    ebx_buttonIconSelector_originalFormScrollTop = ebx_buttonIconSelector_currentScrollingContainer.scrollTop;
    if (ebx_buttonIconSelector_formScrollMaker === null) {
      ebx_buttonIconSelector_formScrollMaker = document.createElement("div");
      ebx_buttonIconSelector_currentScrollingContainer.appendChild(ebx_buttonIconSelector_formScrollMaker);
    }
    var D = YAHOO.util.Dom;
    var clientRegion = D.getClientRegion();
    var elRegion = D.getRegion(previewButtonWrapperEl);

    var excessHeight = elRegion.bottom + EBX_BUTTON_ICON_SELECTOR_SELECTOR_MAX_HEIGHT - clientRegion.bottom
        + YAHOO.widget.Overlay.VIEWPORT_OFFSET;
    if (excessHeight < 0) {
      excessHeight = 0;
    }
    var formBodyRegion = D.getRegion(ebx_buttonIconSelector_currentScrollingContainer);
    var scrollMakerRegion = D.getRegion(ebx_buttonIconSelector_formScrollMaker);

    var formExtraHeightBottom = formBodyRegion.bottom - scrollMakerRegion.bottom;
    if (formExtraHeightBottom < 0) {
      formExtraHeightBottom = 0;
    }
    ebx_buttonIconSelector_formScrollMaker.style.height = formExtraHeightBottom + excessHeight + "px";
    ebx_buttonIconSelector_currentScrollingContainer.scrollTop = ebx_buttonIconSelector_originalFormScrollTop
        + excessHeight;
  }

  EBX_BUTTON_ICON_SELECTOR_PANEL_LZ.cfg.setProperty('context', [previewButtonWrapperEl, 'tl', 'bl']);
  ebx_buttonIconSelector_showMask();
  EBX_BUTTON_ICON_SELECTOR_PANEL_LZ.show();

  ebx_buttonIconSelector_current_previewButtonWrapperId = previewButtonWrapperId;
  ebx_buttonIconSelector_current_hiddenFieldId = hiddenFieldId;
  ebx_buttonIconSelector_current_toggleButtonId = toggleButtonId;
}

function ebx_buttonIconSelector_goFetchFontAwesomeIconsAndFillSection(iconNamesUrl) {
  var callback = new Object();

  callback.success = function (response) {
    var jsonData = JSON.parse(response.responseText);

    document.getElementById(
        EBX_BUTTON_ICON_SELECTOR_FONT_AWESOME_SECTION_ID).innerHTML = ebx_buttonIconSelector_buildButtonsWithHiddenFieldNextSibling(
        jsonData.iconNames, "fa-");
  };

  callback.failure = function (response) {
    EBX_Logger.log("ebx_buttonIconSelector_goFetchFontAwesomeIconsAndFillSection: failed. Response: " + response,
        EBX_Logger.error);
  };

  YAHOO.util.Connect.asyncRequest('GET', iconNamesUrl, callback);
}

function ebx_buttonIconSelector_clickListener(event) {
  var clickedButton;
  var target = EBX_Utils.getTargetElement(event);

  if (target.tagName !== undefined && target.tagName.toLowerCase() == "button") {
    clickedButton = target;
  } else {
    clickedButton = EBX_Utils.getFirstParentMatchingTagName(target, "button");
  }

  if (clickedButton === null) {
    return;
  }

  var iconName = clickedButton.nextSibling.value;

  document.getElementById(ebx_buttonIconSelector_current_hiddenFieldId).value = iconName;
  ebx_buttonIconSelector_updatePreviewButton(ebx_buttonIconSelector_current_previewButtonWrapperId, iconName);

  ebx_buttonIconSelector_hidePanel();
}

function ebx_buttonIconSelector_buildButtonsWithHiddenFieldNextSibling(iconNames, prefix) {
  var i, len;
  var ret = [];
  if (prefix === undefined) {
    prefix = "";
  }

  for (i = 0, len = iconNames.length; i < len; i++) {
    ret.push(ebx_buttonIconSelector_buildButton(prefix + iconNames[i]));
    ret.push("<input type=\"hidden\" value=\"", prefix, iconNames[i], "\"/>");
  }

  return ret.join("");
}

function ebx_buttonIconSelector_hidePanel() {
  if (EBX_BUTTON_ICON_SELECTOR_PANEL_LZ === null) {
    return;
  }
  EBX_BUTTON_ICON_SELECTOR_PANEL_LZ.hide();
  ebx_buttonIconSelector_hideMask();
  EBX_ButtonUtils.setStateToToggleButton(document.getElementById(ebx_buttonIconSelector_current_toggleButtonId), false);
  ebx_buttonIconSelector_currentScrollingContainer.scrollTop = ebx_buttonIconSelector_originalFormScrollTop;
  ebx_buttonIconSelector_formScrollMaker.style.height = 0;

  ebx_buttonIconSelector_current_previewButtonWrapperId = null;
  ebx_buttonIconSelector_current_hiddenFieldId = null;
  ebx_buttonIconSelector_current_toggleButtonId = null;
}

function ebx_buttonIconSelector_showMask() {
  var maskEl = document.getElementById(EBX_BUTTON_ICON_SELECTOR_PANEL_MASK_ID);

  if (maskEl === null) {
    maskEl = document.createElement("div");
    maskEl.id = EBX_BUTTON_ICON_SELECTOR_PANEL_MASK_ID;
    maskEl.className = "ebx_PageMask";
    maskEl.onclick = ebx_buttonIconSelector_hidePanel;
  } else {
    maskEl.style.display = "";
  }

  document.body.appendChild(maskEl);
}

function ebx_buttonIconSelector_hideMask() {
  var maskEl = document.getElementById(EBX_BUTTON_ICON_SELECTOR_PANEL_MASK_ID);

  if (maskEl !== null) {
    maskEl.style.display = "none";
  }
}

function ebx_buttonIconSelector_updatePreviewButton(previewButtonWrapperId, iconName) {
  document.getElementById(previewButtonWrapperId).innerHTML = ebx_buttonIconSelector_buildButton(iconName);
}

function ebx_buttonIconSelector_buildButton(iconName) {
  var regexpIconNamePattern = new RegExp(EBX_BUTTON_ICON_SELECTOR_ICON_NAME_PATTERN, 'g');

  // startsWith "fa-"
  if (iconName.indexOf("fa-") === 0) {
    // special font awesome way to do
    return EBX_BUTTON_ICON_SELECTOR_BUTTON_FONT_AWESOME_TEMPLATE_HTML.replace(regexpIconNamePattern, iconName);
  } else {
    // built-in icon
    return EBX_BUTTON_ICON_SELECTOR_BUTTON_BUILT_IN_TEMPLATE_HTML.replace(regexpIconNamePattern, iconName);
  }
}

/** END button icon selector * */

/** Module Element Selector * */
function EBX_MES_Constants() {
}

/********* ebx_layoutManager.js *********/
/*
 * Copyright TIBCO Software Inc. 2001-2021. All rights reserved.
 */

function EBX_LayoutManager() {
}

EBX_LayoutManager.isIE8 = navigator.userAgent.match("MSIE 8.") !== null;
EBX_LayoutManager.isIE9 = navigator.userAgent.match("MSIE 9.") !== null;
EBX_LayoutManager.isIE = navigator.userAgent.match("MSIE ") !== null;
EBX_LayoutManager.isIPad = navigator.userAgent.match("iPad") !== null;
EBX_LayoutManager.isLegacyHeader = false;

/* see http://stackoverflow.com/questions/5916900/detect-version-of-browser */
EBX_LayoutManager.browser = (function () {
  var ua = navigator.userAgent, tem,
      M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*([\d\.]+)/i) || [];
  var Medge = ua.match(/(edge(?=\/))\/?\s*([\d\.]+)/i) || [];
  if (/edge/i.test(Medge[1])) {
    return 'Edge';
  }
  if (/trident/i.test(M[1])) {
    return 'IE';
  }
  M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
  if ((tem = ua.match(/version\/([\.\d]+)/i)) != null) {
    M[2] = tem[1];
  }
  return M[0];
})();
EBX_LayoutManager.browserVersion = (function () {
  var ua = navigator.userAgent, tem,
      M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*([\d\.]+)/i) || [];
  var Medge = ua.match(/(edge(?=\/))\/?\s*([\d\.]+)/i) || [];
  if (/edge/i.test(Medge[1])) {
    return Medge[2];
  }
  if (/trident/i.test(M[1])) {
    tem = /\brv[ :]+(\d+(\.\d+)?)/g.exec(ua) || [];
    return (tem[1] || '');
  }
  M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
  if ((tem = ua.match(/version\/([\.\d]+)/i)) != null) {
    M[2] = tem[1];
  }
  return M[1];
})();
EBX_LayoutManager.browserMajorVersion = (function () {
  return new Number(EBX_LayoutManager.browserVersion.split(".")[0]).valueOf();
})();

EBX_LayoutManager.doesBrowserSupportsCSSTransitions = (function () {
  switch (EBX_LayoutManager.browser) {
    case "Chrome":
      return true;

    case "Edge":
      return true;

    case "Firefox":
      return EBX_LayoutManager.browserVersion >= 4;

    case "MSIE":
    case "IE":
      return EBX_LayoutManager.browserVersion >= 10;

      // not supported/tested browser, but works in theory

    case "Safari":
      return true;

    case "Opera":
      return EBX_LayoutManager.browserVersion >= 10.5;

    default:
      return false; // unknown browser, sure it was not tested
  }
})();

EBX_LayoutManager.removeNoScript = function () {
  var noStyleEl = document.getElementById("ebx_Noscript");
  noStyleEl.parentNode.removeChild(noStyleEl);
};
YAHOO.util.Event.onDOMReady(EBX_LayoutManager.removeNoScript);

/* bp stands for basis point */
EBX_LayoutManager.convertNavWidthToPx = function (valueInBP) {
  return Math.round(valueInBP * YAHOO.util.Dom.getViewportWidth() / 10000);
};
EBX_LayoutManager.convertNavWidthToBP = function (valueInPx) {
  return EBX_LayoutManager.convertNavWidthToBPWindowWidth(valueInPx, YAHOO.util.Dom.getViewportWidth());
};
EBX_LayoutManager.convertNavWidthToBPWindowWidth = function (valueInPx, windowWidth) {
  return Math.round(valueInPx * 10000 / windowWidth);
};

EBX_LayoutManager.autoresizeSelectorPanelTree = function () {
  var selectorPanelContent = document.getElementById("ebx_SelectorPanelContent");
  var selectorPanelTree = document.getElementById("ebx_SelectorPanelTree");
  var selectorPanelWaiting = document.getElementById("ebx_SelectorPanelWaiting");

  if (selectorPanelContent === null || selectorPanelTree === null) {
    return;
  }

  var availableHeight = selectorPanelContent.clientHeight;

  var child = EBX_Utils.firstElementChild(selectorPanelContent);
  do {
    if (child !== selectorPanelTree && child !== selectorPanelWaiting) {
      availableHeight -= child.offsetHeight;
    }
  } while ((child = EBX_Utils.nextElementSibling(child)) !== null);

  selectorPanelTree.style.height = availableHeight + "px";
};

EBX_LayoutManager.limboId = "ebx_Limbo";
EBX_LayoutManager.getLimbo = function () {
  var limbo = document.getElementById(EBX_LayoutManager.limboId);
  if (limbo === null) {
    limbo = document.createElement("div");
    limbo.id = EBX_LayoutManager.limboId;
    limbo.style.display = "none";

    document.body.appendChild(limbo);
  }
  return limbo;
};

EBX_LayoutManager.getDocumentHead = function () {
  if (document.head === undefined) {
    document.head = document.getElementsByTagName("head")[0];
  }
  return document.head;
};

EBX_LayoutManager.currentGestureResizeId = null;

EBX_LayoutManager.tableColumnResizeId = "tableColumn";
EBX_LayoutManager.navigationResizeId = "navigation";
EBX_LayoutManager.filterResizeId = "filter";

EBX_LayoutManager.getGestureResizePermission = function (gestureResizeId) {
  if (EBX_LayoutManager.currentGestureResizeId === null) {
    EBX_LayoutManager.currentGestureResizeId = gestureResizeId;
  }
  return EBX_LayoutManager.currentGestureResizeId === gestureResizeId;
};
EBX_LayoutManager.isCurrentGestureResize = function (gestureResizeId) {
  return EBX_LayoutManager.currentGestureResizeId === gestureResizeId;
};
EBX_LayoutManager.releaseCurrentGestureResize = function () {
  EBX_LayoutManager.currentGestureResizeId = null;
};

YAHOO.widget.Overlay.VIEWPORT_OFFSET = 20;

EBX_LayoutManager.bodyUnits = function () {
};
EBX_LayoutManager.bodyUnits.workspace = {
  position: 'center',
  body: 'ebx_Workspace',
  gutter: 0
};
EBX_LayoutManager.bodyUnits.navigation = {
  position: 'left',
  width: 300,
  minWidth: 0,
  body: 'ebx_Navigation',
  gutter: 0,
  resize: true,
  useShim: true,
  collapseSize: 0,
  animate: false
  /*,
   animate : true,
   easing : YAHOO.util.Easing.backBoth*/
};
EBX_LayoutManager.bodyUnits.header = {
  position: 'top',
  /* height is computed by the method EBX_LayoutManager.renderBodyLayout to adapt its content */
  height: 40, /* logo height */
  body: "ebx_Header",
  collapseSize: 0,
  gutter: 0,
  animate: false,
  scroll: null
};

EBX_LayoutManager.workspaceUnits = function () {
};
EBX_LayoutManager.workspaceUnits.center = {
  position: 'center',
  body: 'ebx_workspaceTable_container',
  id: 'ebx_WorkspaceContentAreaUnit',
  scroll: true,
  gutter: 0
};
EBX_LayoutManager.workspaceUnits.filters = {
  position: 'right',
  width: 250,
  minWidth: 100,
  maxWidth: 520,
  body: 'ebx_WorkspaceFilter',
  id: 'ebx_WorkspaceFilterUnit',
  resize: true,
  gutter: '0 0 0 0px',
  collapseSize: -9,
  animate: false,
  scroll: null
};
EBX_LayoutManager.workspaceUnits.advancedSearch = {
  position: 'top',
  // height, minHeight = EBX_AdvancedSearch.parameters.searchPaneHeight + EBX_AdvancedSearch.parameters.searchPaneMargin
  height: 200,
  minHeight: 200,
  maxHeight: 600,
  body: 'ebx_WorkspaceAdvancedSearch',
  id: 'ebx_WorkspaceAdvancedSearchUnit',
  resize: true,
  collapseSize: 0,
  scroll: null,
  gutter: '0 0 0 0px',
  duration: 0.5
};

EBX_LayoutManager.appLogoID = "ebx_AppLogo";
EBX_LayoutManager.userBlocID = "ebx_UserBloc";
EBX_LayoutManager.isCloseButtonPresent = false;
// overwrote by UIHeaderDisplay
EBX_LayoutManager.closeButtonID = "ebx_Close";
EBX_LayoutManager.renderBodyLayoutCondition = function () {
  return YAHOO.util.Dom.inDocument(EBX_LayoutManager.bodyUnits.workspace.body);
};

EBX_LayoutManager.isHeaderPresent = function (currentWindow) {
  return currentWindow.YAHOO.util.Dom.inDocument(EBX_LayoutManager.bodyUnits.header.body);
};
EBX_LayoutManager.isNavigationPresent = function (currentWindow) {
  return currentWindow.YAHOO.util.Dom.inDocument(EBX_LayoutManager.bodyUnits.navigation.body);
};

EBX_LayoutManager.renderBodyLayout = function () {
  EBX_Loader.changeTaskState(EBX_Loader_taskId_layout, EBX_Loader.states.processing);

  var arrayUnits = [];

  arrayUnits.push(EBX_LayoutManager.bodyUnits.workspace);

  var navigationIsHere = false;
  if (EBX_LayoutManager.isNavigationPresent(window) && !EBX_LayoutManager.isNavigationInitCollapsed) {
    arrayUnits.push(EBX_LayoutManager.bodyUnits.navigation);
    navigationIsHere = true;
  }

  if (EBX_LayoutManager.isHeaderPresent(window)) {
    if (!EBX_LayoutManager.isHeaderInitCollapsed) {
      arrayUnits.push(EBX_LayoutManager.bodyUnits.header);
    }
  }

  EBX_LayoutManager.bodyLayout = new YAHOO.widget.Layout({
    units: arrayUnits
  });

  EBX_LayoutManager.bodyLayout.addListener("resize", EBX_LayoutManager.resizeWorkspace);
  if (navigationIsHere) {
    EBX_LayoutManager.bodyLayout.addListener("resize", EBX_LayoutManager.resizeNavigation);
  }

  EBX_LayoutManager.bodyLayout.addListener("render", EBX_LayoutManager.onRenderBodyLayout);
  EBX_LayoutManager.bodyLayout.addListener("beforeResize", EBX_LayoutManager.onBeforeResizeBodyLayout);
  EBX_LayoutManager.bodyLayout.render();

  // move the listeners at the end of the list (after internal YUI resize listeners that really resize the workspace)
  EBX_LayoutManager.bodyLayout.removeListener("resize", EBX_LayoutManager.resizeWorkspace);
  EBX_LayoutManager.bodyLayout.addListener("resize", EBX_LayoutManager.resizeWorkspace);
  if (navigationIsHere) {
    EBX_LayoutManager.bodyLayout.removeListener("resize", EBX_LayoutManager.resizeNavigation);
    EBX_LayoutManager.bodyLayout.addListener("resize", EBX_LayoutManager.resizeNavigation);
  }

  if (navigationIsHere) {
    var navigationResizeKnob = null;
    try {
      navigationResizeKnob = EBX_LayoutManager.bodyLayout.getUnitByPosition(
          EBX_LayoutManager.bodyUnits.navigation.position)._resize._handles.r;
    } catch (e) {
    }
    if (navigationResizeKnob !== null) {
      YAHOO.util.Event.addListener(navigationResizeKnob, "dblclick", EBX_LayoutManager.resetNavigationPane);
    }
  }
};
EBX_LayoutManager.onRenderBodyLayout = function () {

  EBX_Loader.changeTaskState(EBX_Loader_taskId_layout, EBX_Loader.states.done);

  EBX_LayoutManager.delayResizeBodyLayout = !EBX_LayoutManager.isEmbedded();

  EBX_LayoutManager.applyNavigationResizeController();
};
EBX_LayoutManager.previousResizeBodyLayoutTimeout = null;
EBX_LayoutManager.delayResizeBodyLayout = false;
EBX_LayoutManager.onBeforeResizeBodyLayout = function () {
  if (!EBX_LayoutManager.delayResizeBodyLayout) {
    return true;
  }

  if (EBX_LayoutManager.previousResizeBodyLayoutTimeout !== null) {
    window.clearTimeout(EBX_LayoutManager.previousResizeBodyLayoutTimeout);
  }
  EBX_LayoutManager.previousResizeBodyLayoutTimeout = window
      .setTimeout(EBX_LayoutManager.resizeBodyLayout, EBX_LayoutManager.bodyLayoutResizeDelay);
  return false;
};
EBX_LayoutManager.resizeBodyLayout = function () {
  EBX_LayoutManager.delayResizeBodyLayout = false;
  EBX_LayoutManager.bodyLayout.resize();
  EBX_LayoutManager.delayResizeBodyLayout = true;
};

EBX_LayoutManager.isWorkspaceCardDisabled = EBX_Utils.matchCSSClass(document.body, "ebx_DisableWorkspaceCard");
EBX_LayoutManager.isParentAnMDMComponent = function () {
  if (window.parent === window) {
    return false;
  }
  if (!window.parent.EBX_Utils) {
    return false;
  }
  return EBX_Utils.matchCSSClass(window.parent.document.body, "ebx_MDMComponent");
};

EBX_LayoutManager.isAnMDMComponent = function () {
  return EBX_Utils.matchCSSClass(window.document.body, "ebx_MDMComponent");
};

EBX_LayoutManager.navigationPaneMaxLimit = 100;
EBX_LayoutManager.WorkspaceToolbarId = "ebx_WorkspaceToolbar";
EBX_LayoutManager.WorkspaceToolbarBorderBottomHeight = 0;
EBX_LayoutManager.WorkspaceContentInfoBarCssClass = "ebx_WorkspaceContentInfoBar";
EBX_LayoutManager.getWorkspaceContentMarginTop = function () {
  if (EBX_LayoutManager.isWorkspaceCardDisabled) {
    return 0;
  }

  if (EBX_LayoutManager.isParentAnMDMComponent()) {
    EBX_LayoutManager.WorkspaceContentEl.style.marginTop = "0px";
    return 0;
  }
  return EBX_LayoutManager.WorkspaceContentVerticalMargin;
};
EBX_LayoutManager.getWorkspaceContentMarginBottom = function () {
  if (EBX_LayoutManager.isWorkspaceCardDisabled)
    return 0;

  return EBX_LayoutManager.WorkspaceContentVerticalMargin;
};
EBX_LayoutManager.getWorkspaceContentMarginHorizontal = function () {
  return EBX_LayoutManager.isWorkspaceCardDisabled ? 0 : EBX_LayoutManager.WorkspaceContentHorizontalMargin;
};

EBX_LayoutManager.WorkspaceContentEl = null;
EBX_LayoutManager.WorkspaceContentAreaEl = null;
EBX_LayoutManager.WorkspaceContentAreaMargin = 20;
EBX_LayoutManager.WorkspaceContentAsLayoutCSSClass = "ebx_WorkspaceContentAsLayout";
EBX_LayoutManager.WorkspaceFormHeaderCSSClass = "ebx_WorkspaceFormHeaderValidationMessages";
EBX_LayoutManager.resizeWorkspace = function (yuiResizeEvent) {
  var workspaceContentEl = EBX_LayoutManager.WorkspaceContentEl;
  if (workspaceContentEl === null) {
    workspaceContentEl = document.getElementById("ebx_WorkspaceContent");
    if (workspaceContentEl === null) {
      return;
    } else {
      EBX_LayoutManager.WorkspaceContentEl = workspaceContentEl;
    }
  }

  if (EBX_LayoutManager.WorkspaceContentAreaEl === null) {
    EBX_LayoutManager.WorkspaceContentAreaEl = document.getElementById("ebx_WorkspaceContentArea");
  }

  if (EBX_LayoutManager.WorkspaceFilterEl === null) {
    EBX_LayoutManager.WorkspaceFilterEl = document.getElementById("ebx_WorkspaceFilter");
  }

  if (EBX_LayoutManager.WorkspaceContentAreaUnitEl === null) {
    EBX_LayoutManager.WorkspaceContentAreaUnitEl = document.getElementById("ebx_WorkspaceContentAreaUnit");
  }

  var workspaceContentParent = workspaceContentEl.parentNode;

  var verticalSpaceTakenBySiblings = EBX_LayoutManager.getWorkspaceContentMarginTop() + EBX_LayoutManager.getWorkspaceContentMarginBottom();

  var child = workspaceContentParent.firstChild;
  do {
    if (child.nodeType === 1 && child !== workspaceContentEl
        && child.id !== EBX_LayoutManager.navigationExpandKnobId) {
      verticalSpaceTakenBySiblings += child.offsetHeight;

      if(EBX_ModelExtensionFrame.isExtensionFrameHeader(child)) {
        // In extension frames, workspace title is over the content, v-aligned on the border
        verticalSpaceTakenBySiblings -= (EBX_LayoutManager.WorkspaceTitleFontSize / 2);
      }
    }
  } while ((child = child.nextSibling));

  var workspaceContentTargetHeight = yuiResizeEvent.sizes.center.h - verticalSpaceTakenBySiblings;
  if (workspaceContentTargetHeight >= 0) {
    workspaceContentEl.style.height = workspaceContentTargetHeight + "px";
  }

  var workspaceContentTargetWidth = yuiResizeEvent.sizes.center.w - EBX_LayoutManager.getWorkspaceContentMarginHorizontal() * 2;
  if (workspaceContentTargetWidth < 0) {
    workspaceContentTargetWidth = 0;
  }
  if (EBX_ModelExtensionFrame.isInExtension()) {
    // Workspace content has a border of 1px. In order to make this border appear,
    // width must be at least < 2 px compared to the workpace content area.
    workspaceContentTargetWidth -= 3;
  }
  workspaceContentEl.style.width = workspaceContentTargetWidth + "px";


  var remainingWorkspaceHeight = workspaceContentTargetHeight;
  var workspaceToolbarEl = document.getElementById(EBX_LayoutManager.WorkspaceToolbarId);
  if (workspaceToolbarEl !== null) {
    remainingWorkspaceHeight -= workspaceToolbarEl.offsetHeight - EBX_LayoutManager.WorkspaceToolbarBorderBottomHeight;
  }

  var workspaceContentInfoBarEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(workspaceContentEl,
      EBX_LayoutManager.WorkspaceContentInfoBarCssClass);
  if (workspaceContentInfoBarEl !== null) {
    remainingWorkspaceHeight -= workspaceContentInfoBarEl.offsetHeight;
  }

  var hasVerticalScroll = false;
  var hasHorizontalScroll = false;

  if (EBX_LayoutManager.WorkspaceContentAreaEl !== null) {
    EBX_LayoutManager.WorkspaceContentAreaEl.style.height = remainingWorkspaceHeight
        + "px";
    EBX_LayoutManager.WorkspaceContentAreaEl.style.width = workspaceContentTargetWidth
        + "px";

    hasVerticalScroll = (EBX_LayoutManager.WorkspaceContentAreaEl.scrollHeight
        > EBX_LayoutManager.WorkspaceContentAreaEl.offsetHeight);
    hasHorizontalScroll = (EBX_LayoutManager.WorkspaceContentAreaEl.scrollWidth
        > EBX_LayoutManager.WorkspaceContentAreaEl.offsetWidth);
  }

  if (remainingWorkspaceHeight < 0) {
    remainingWorkspaceHeight = 0;
  }

  if (EBX_LayoutManager.isWorkspaceFormManageResizeWorkspaceListeners === false) {
    EBX_LayoutManager.callResizeWorkspaceListeners({
      h: remainingWorkspaceHeight,
      w: workspaceContentTargetWidth,
      vScroll: hasVerticalScroll ? EBX_Utils.getVScrollWidth() : 0,
      hScroll: hasHorizontalScroll ? EBX_Utils.getHScrollHeight() : 0
    });
  }

  // case of DMA
  if (EBX_LayoutManager.bodyUnits.navigation.maxWidth === undefined && YAHOO.util.Dom.inDocument(
      EBX_LayoutManager.bodyUnits.navigation.body)) {
    var navigationUnit = EBX_LayoutManager.bodyLayout.getUnitByPosition(
        EBX_LayoutManager.bodyUnits.navigation.position);
    if (navigationUnit !== false) {
      navigationUnit.set('maxWidth', YAHOO.util.Dom.getViewportWidth() - EBX_LayoutManager.navigationPaneMaxLimit);
    }
  }
};

EBX_LayoutManager.isWorkspaceFormManageResizeWorkspaceListeners = false;
EBX_LayoutManager.resizeWorkspaceListeners = [];

EBX_LayoutManager.initResizeWorkspaceListeners = function () {
  EBX_Loader.changeTaskState(EBX_Loader_taskId_init_resize_workspace_listeners, EBX_Loader.states.processing);

  if (EBX_LayoutManager.resizeWorkspaceListeners.length !== 0) {
    EBX_LayoutManager.bodyLayout.resize();
  }

  EBX_Loader.changeTaskState(EBX_Loader_taskId_init_resize_workspace_listeners, EBX_Loader.states.done);
};

EBX_LayoutManager.lastWorkspaceSizeComputed = null;
EBX_LayoutManager.callResizeWorkspaceListeners = function (size, sizeWithoutFormBottomBar) {
  var i, len, fnName, fn;
  EBX_LayoutManager.lastWorkspaceSizeComputed = size;
  EBX_LayoutManager.lastWorkspaceSizeWithoutFormBottomBarComputed = sizeWithoutFormBottomBar;

  for (i = 0, len = EBX_LayoutManager.resizeWorkspaceListeners.length; i < len; i++) {
    fnName = EBX_LayoutManager.resizeWorkspaceListeners[i];
    try {
      fn = eval(fnName);
      fn.call(window, size, sizeWithoutFormBottomBar);
    } catch (error) {
      EBX_UserMessageManager.addMessage(
          "ResizeWorkspaceListener<br/>Error on calling <i>" + fnName + "</i> :<br/><b>" + error.message + "</b>",
          EBX_UserMessageManager.ERROR);
      return false;
    }
  }
};

EBX_LayoutManager.renderWorkspaceLayoutCondition = function () {
  return YAHOO.util.Dom.inDocument("ebx_WorkspaceContentArea")
      && EBX_Utils.matchCSSClass(document.getElementById("ebx_WorkspaceContentArea"), "ebx_renderWorkspaceLayout");
};
EBX_LayoutManager.renderWorkspaceLayout = function () {
  EBX_Loader.changeTaskState(EBX_Loader_taskId_layout_workspace, EBX_Loader.states.processing);

  var arrayUnits = [EBX_LayoutManager.workspaceUnits.center];

  if (YAHOO.util.Dom.inDocument(EBX_LayoutManager.workspaceUnits.filters.body)) {
    arrayUnits.push(EBX_LayoutManager.workspaceUnits.filters);
  }

  if (YAHOO.util.Dom.inDocument(EBX_LayoutManager.workspaceUnits.advancedSearch.body)) {
    arrayUnits.push(EBX_LayoutManager.workspaceUnits.advancedSearch);
  }

  EBX_LayoutManager.workspaceLayout = new YAHOO.widget.Layout("ebx_WorkspaceContentArea", {
    parent: EBX_LayoutManager.bodyLayout,
    units: arrayUnits
  });

  EBX_LayoutManager.workspaceLayout.addListener("render", EBX_LayoutManager.onRenderWorkspaceLayout);

  EBX_LayoutManager.workspaceLayout.render();
};
EBX_LayoutManager.onRenderWorkspaceLayout = function () {

  if (YAHOO.util.Dom.inDocument(EBX_LayoutManager.workspaceUnits.filters.body)) {
    EBX_LayoutManager.workspaceLayout.addListener("resize", EBX_LayoutManager.resizeFilterBlockList);
    EBX_LayoutManager.workspaceLayout.addListener("resize", EBX_LayoutManager.saveFilterSize);
    if (EBX_LayoutManager.isIPad === true) {
      EBX_LayoutManager.applyFilterResizeControllerForIpad();
    }
  }

  EBX_Loader.changeTaskState(EBX_Loader_taskId_layout_workspace, EBX_Loader.states.done);

};

EBX_LayoutManager.initAdvancedSearch = function () {
  EBX_Loader.changeTaskState("Workspace_AdvancedSearch", EBX_Loader.states.processing);

  if (EBX_LayoutManager.workspaceLayout) {
    var advancedSearchUnit = EBX_LayoutManager.workspaceLayout.getUnitByPosition(
        EBX_LayoutManager.workspaceUnits.advancedSearch.position);
    if (advancedSearchUnit !== false) {
      advancedSearchUnit.set("animate", false);
      var searchPane = document.getElementById('ebx_WorkspaceAdvancedSearch');
      var searchPaneOpened = searchPane != null &&
          EBX_Utils.matchCSSClass(searchPane, "ebx_AdvancedSearchPaneOpened");

      if (!searchPaneOpened) {
        advancedSearchUnit.collapse();
      }

    }
  }

  AdvancedSearchComponents.init();

  EBX_Loader.changeTaskState("Workspace_AdvancedSearch", EBX_Loader.states.done);
};

EBX_LayoutManager.FilterBlockListEl = null;
EBX_LayoutManager.WorkspaceFilterEl = null;
EBX_LayoutManager.WorkspaceContentAreaUnitEl = null;
EBX_LayoutManager.filterPaneTitleCssClass = "ebx_FilterPaneTitle";
EBX_LayoutManager.resizeFilterBlockList = function (yuiResizeEvent) {
  var filterBlockListEl = EBX_LayoutManager.FilterBlockListEl;
  if (filterBlockListEl === null) {
    filterBlockListEl = document.getElementById("ebx_FilterBlockList");
    if (filterBlockListEl === null) {
      return;
    } else {
      EBX_LayoutManager.FilterBlockListEl = filterBlockListEl;
    }
  }

  var workspaceFilter = filterBlockListEl.parentNode;
  var filterPaneTitleElement = EBX_Utils.getFirstDirectChildMatchingCSSClass(workspaceFilter,
      EBX_LayoutManager.filterPaneTitleCssClass);

  var takenSpace = 0;

  if (filterPaneTitleElement !== null) {
    takenSpace = filterPaneTitleElement.offsetHeight - 1;
  }

  filterBlockListEl.style.height = (yuiResizeEvent.sizes.left.h - takenSpace) + "px";
};
EBX_LayoutManager.applyFilterResizeControllerForIpad = function () {
  var filterUnit = EBX_LayoutManager.workspaceLayout.getUnitByPosition(
      EBX_LayoutManager.workspaceUnits.filters.position);
  // if filter unit has not been found
  if (filterUnit === false) {
    return;
  }
  if (EBX_LayoutManager.isIPad === false) {
    return;
  }

  YAHOO.util.Event.addListener(filterUnit.body, "gesturestart", EBX_LayoutManager.gestureStartResizeFilterListener,
      filterUnit, null);
  YAHOO.util.Event.addListener(filterUnit.body, "gesturechange", EBX_LayoutManager.gestureChangeResizeFilterListener,
      filterUnit, null);
  YAHOO.util.Event.addListener(filterUnit.body, "gestureend", EBX_LayoutManager.gestureEndResizeFilterListener,
      filterUnit, null);
};
EBX_LayoutManager.gestureStartResizeFilterListener = function (event, filterUnit) {
  if (!EBX_LayoutManager.getGestureResizePermission(EBX_LayoutManager.filterResizeId)) {
    return;
  }

  event.preventDefault();

  var filterResize = filterUnit._resize;
  var proxy = filterResize._proxy;

  filterResize.ebx_originalWidth = filterUnit.get('width');

  // init and display proxy
  proxy.style.zIndex = 1000;
  proxy.style.height = filterUnit.get('height') + "px";
  proxy.style.top = filterUnit.get('top') + "px";
  proxy.style.left = filterUnit.get('left') + "px";
  proxy.style.width = (filterResize.ebx_originalWidth * event.scale) + "px";
  proxy.style.visibility = "visible";
};
EBX_LayoutManager.gestureChangeResizeFilterListener = function (event, filterUnit) {
  if (!EBX_LayoutManager.isCurrentGestureResize(EBX_LayoutManager.filterResizeId)) {
    return;
  }

  event.preventDefault();

  var filterResize = filterUnit._resize;
  var proxy = filterResize._proxy;

  var width = (filterResize.ebx_originalWidth * event.scale);

  filterResize.ebx_mustBeCollapsed = false;

  if (width > EBX_LayoutManager.workspaceUnits.filters.maxWidth) {
    /* maxWidth */
    width = EBX_LayoutManager.workspaceUnits.filters.maxWidth;
  } else if (width < EBX_LayoutManager.workspaceUnits.filters.minWidth) {
    /* minWidth */
    width = EBX_LayoutManager.workspaceUnits.filters.minWidth;
  }

  proxy.style.width = width + "px";
};
EBX_LayoutManager.gestureEndResizeFilterListener = function (event, filterUnit) {
  if (!EBX_LayoutManager.isCurrentGestureResize(EBX_LayoutManager.filterResizeId)) {
    return;
  }

  event.preventDefault();

  var filterResize = filterUnit._resize;
  var proxy = filterResize._proxy;

  var width = (filterResize.ebx_originalWidth * event.scale);

  if (width > EBX_LayoutManager.workspaceUnits.filters.maxWidth) {
    /* maxWidth */
    width = EBX_LayoutManager.workspaceUnits.filters.maxWidth;
  } else if (width < EBX_LayoutManager.workspaceUnits.filters.minWidth) {
    /* minWidth */
    width = EBX_LayoutManager.workspaceUnits.filters.minWidth;
  }

  filterUnit.set('width', width);

  // hide proxy
  proxy.style.visibility = "hidden";
  proxy.style.zIndex = -1;

  EBX_LayoutManager.releaseCurrentGestureResize();
};

var ebx_LastFocusedBlockEl;
var EBX_COLORED_BORDER = "ebx_ColoredBorder";
/*
ebx_filterBlockClicked = function(filterBlockEl) {
	if (ebx_LastFocusedBlockEl !== undefined && ebx_LastFocusedBlockEl !== filterBlockEl) {
		EBX_Utils.removeCSSClass(ebx_LastFocusedBlockEl, EBX_COLORED_BORDER);
	}

	EBX_Utils.addCSSClass(filterBlockEl, EBX_COLORED_BORDER);
	document.activeElement = filterBlockEl;
	ebx_LastFocusedBlockEl = filterBlockEl;
};

ebx_filterBlockBlurred = function(filterBlockEl) {
	setTimeout(function() {
		var isUnderFilterBlock = EBX_Utils.hasParentMatchingId(document.activeElement, filterBlockEl.id);
		if (!isUnderFilterBlock && !EBX_Utils.matchCSSClass(document.activeElement, "yuimenuitemlabel")) {
			EBX_Utils.removeCSSClass(filterBlockEl, EBX_COLORED_BORDER);
		} else {
			document.activeElement = filterBlockEl;
		}
	}, 1);
};*/

EBX_LayoutManager.navigationPanePerspective = false;
EBX_LayoutManager.navigationPaneMinWidth = 100;
EBX_LayoutManager.navigationPaneCollapseLimit = 70;
EBX_LayoutManager.navigationPaneReducedWidth = 60;
EBX_LayoutManager.navigationPaneReducedCollapseLimit = 20;
EBX_LayoutManager.navigationProxyCollapsedCSSClass = "ebx_NavigationProxyCollapsed";
EBX_LayoutManager.applyNavigationResizeController = function () {
  var navUnit = EBX_LayoutManager.bodyLayout.getUnitByPosition(EBX_LayoutManager.bodyUnits.navigation.position);
  // if navigation unit has not been found
  if (navUnit === false) {
    return;
  }

  if (navUnit.ebx_ResizeControllerInstalled === true) {
    return;
  }

  if (EBX_LayoutManager.isIPad === true) {
    YAHOO.util.Event.addListener(navUnit.body, "gesturestart", EBX_LayoutManager.gestureStartResizeNavigationListener,
        navUnit, null);
    YAHOO.util.Event.addListener(navUnit.body, "gesturechange", EBX_LayoutManager.gestureChangeResizeNavigationListener,
        navUnit, null);
    YAHOO.util.Event.addListener(navUnit.body, "gestureend", EBX_LayoutManager.gestureEndResizeNavigationListener,
        navUnit, null);
  } else {
    var navResize = navUnit._resize;
    var proxy = navResize._proxy;

    // add small icon element in proxy handle
    var handle = EBX_Utils.getFirstDirectChildMatchingCSSClass(proxy, "yui-layout-handle-r");
    var smallIcon = document.createElement("div");
    smallIcon.className = "ebx_SmallIcon";
    handle.appendChild(smallIcon);

    navResize.on("startResize", function (args) {

      navResize.ebx_originalWidth = navUnit.get('width');

    }, null, true);

    navResize.on("proxyResize", function (event) {
      navResize.ebx_mustBeCollapsed = false;
      navResize.ebx_setToMin = false;
      navResize.ebx_setToReduced = false;
      var panelWidth = event.width;

      if (EBX_LayoutManager.navigationPanePerspective === true) {
        if (panelWidth < EBX_LayoutManager.navigationPaneReducedCollapseLimit) {
          /* limit for collapsing, with an 'elastic' impression */
          panelWidth = EBX_LayoutManager.navigationPaneMinWidth;
          navResize.ebx_mustBeCollapsed = true;
        } else if (panelWidth < EBX_LayoutManager.navigationPaneCollapseLimit) {
          /* limit for collapsing, with an 'elastic' impression */
          panelWidth = EBX_LayoutManager.navigationPaneReducedWidth;
          navResize.ebx_setToReduced = true;
        } else if (panelWidth < EBX_LayoutManager.navigationPaneMinWidth) {
          /* artificial minWidth */
          panelWidth = EBX_LayoutManager.navigationPaneMinWidth;
          navResize.ebx_setToMin = true;
        }
      } else {
        if (panelWidth < EBX_LayoutManager.navigationPaneCollapseLimit) {
          /* limit for collapsing, with an 'elastic' impression */
          panelWidth = EBX_LayoutManager.navigationPaneMinWidth;
          navResize.ebx_mustBeCollapsed = true;
        } else if (panelWidth < EBX_LayoutManager.navigationPaneMinWidth) {
          /* artificial minWidth */
          panelWidth = EBX_LayoutManager.navigationPaneMinWidth;
          navResize.ebx_setToMin = true;
        }
      }

      if (navResize.ebx_mustBeCollapsed === true) {
        EBX_Utils.addCSSClass(proxy, EBX_LayoutManager.navigationProxyCollapsedCSSClass);
      } else if (EBX_Utils.matchCSSClass(proxy, EBX_LayoutManager.navigationProxyCollapsedCSSClass)) {
        EBX_Utils.removeCSSClass(proxy, EBX_LayoutManager.navigationProxyCollapsedCSSClass);
      }

      proxy.style.width = panelWidth + "px";
    }, null, true);

    navResize.on("endResize", function (args) {
      if (navResize.ebx_mustBeCollapsed === true) {
        navUnit.set('width', navResize.ebx_originalWidth);
        EBX_LayoutManager.collapseNavigationPane();
      } else if (navResize.ebx_setToReduced === true) {
        navUnit.set('width', EBX_LayoutManager.navigationPaneReducedWidth);
      } else if (navResize.ebx_setToMin === true) {
        navUnit.set('width', EBX_LayoutManager.navigationPaneMinWidth);
      }
    }, null, true);
  }

  if (EBX_LayoutManager.navigationPanePerspective === true) {
    EBX_Perspective.initScrollController();
  }

  navUnit.ebx_ResizeControllerInstalled = true;
};
EBX_LayoutManager.gestureStartResizeNavigationListener = function (event, navUnit) {
  if (!EBX_LayoutManager.getGestureResizePermission(EBX_LayoutManager.navigationResizeId)) {
    return;
  }

  event.preventDefault();

  var navResize = navUnit._resize;
  var proxy = navResize._proxy;

  navResize.ebx_originalWidth = navUnit.get('width');
  navResize.ebx_maxWidth = YAHOO.util.Dom.getViewportWidth() - EBX_LayoutManager.navigationPaneMaxLimit;

  // init and display proxy
  proxy.style.zIndex = 1000;
  proxy.style.height = navUnit.get('height') + "px";
  proxy.style.top = navUnit.get('top') + "px";
  proxy.style.left = navUnit.get('left') + "px";
  proxy.style.width = (navResize.ebx_originalWidth * event.scale) + "px";
  proxy.style.visibility = "visible";
};
EBX_LayoutManager.gestureChangeResizeNavigationListener = function (event, navUnit) {
  if (!EBX_LayoutManager.isCurrentGestureResize(EBX_LayoutManager.navigationResizeId)) {
    return;
  }

  event.preventDefault();

  var navResize = navUnit._resize;
  var proxy = navResize._proxy;

  var width = (navResize.ebx_originalWidth * event.scale);

  navResize.ebx_mustBeCollapsed = false;

  if (width > navResize.ebx_maxWidth) {
    /* maxWidth */
    width = navResize.ebx_maxWidth;
  } else if (width < EBX_LayoutManager.navigationPaneCollapseLimit) {
    /* limit for collapsing, with an 'elastic' impression */
    width = EBX_LayoutManager.navigationPaneMinWidth;
    navResize.ebx_mustBeCollapsed = true;
  } else if (width < EBX_LayoutManager.navigationPaneMinWidth) {
    /* minWidth */
    width = EBX_LayoutManager.navigationPaneMinWidth;
  }

  if (navResize.ebx_mustBeCollapsed === true) {
    EBX_Utils.addCSSClass(proxy, EBX_LayoutManager.navigationProxyCollapsedCSSClass);
  } else if (EBX_Utils.matchCSSClass(proxy, EBX_LayoutManager.navigationProxyCollapsedCSSClass)) {
    EBX_Utils.removeCSSClass(proxy, EBX_LayoutManager.navigationProxyCollapsedCSSClass);
  }

  proxy.style.width = width + "px";
};
EBX_LayoutManager.gestureEndResizeNavigationListener = function (event, navUnit) {
  if (!EBX_LayoutManager.isCurrentGestureResize(EBX_LayoutManager.navigationResizeId)) {
    return;
  }

  event.preventDefault();

  var navResize = navUnit._resize;
  var proxy = navResize._proxy;

  var width = (navResize.ebx_originalWidth * event.scale);

  if (width > navResize.ebx_maxWidth) {
    /* maxWidth */
    width = navResize.ebx_maxWidth;
  } else if (width < EBX_LayoutManager.navigationPaneCollapseLimit) {
    /* limit for collapsing, with an 'elastic' impression */
    width = EBX_LayoutManager.navigationPaneMinWidth;
    navResize.ebx_mustBeCollapsed = true;
  } else if (width < EBX_LayoutManager.navigationPaneMinWidth) {
    /* minWidth */
    width = EBX_LayoutManager.navigationPaneMinWidth;
  }

  if (navResize.ebx_mustBeCollapsed === true) {
    navUnit.set('width', navResize.ebx_originalWidth);
    EBX_LayoutManager.collapseNavigationPane();
  } else {
    navUnit.set('width', width);
  }

  // hide proxy
  proxy.style.visibility = "hidden";
  proxy.style.zIndex = -1;

  EBX_LayoutManager.releaseCurrentGestureResize();
};

EBX_LayoutManager.expandNavigationPane = function () {
  if (EBX_LayoutManager.isNavigationPresent(window)) {
    if (EBX_LayoutManager.isNavigationInitCollapsed) {
      EBX_LayoutManager.bodyLayout.addListener("resize", EBX_LayoutManager.resizeNavigation);
      EBX_LayoutManager.bodyLayout.addUnit(EBX_LayoutManager.bodyUnits.navigation);
      var navigationResizeKnob = null;
      try {
        navigationResizeKnob = EBX_LayoutManager.bodyLayout.getUnitByPosition(
            EBX_LayoutManager.bodyUnits.navigation.position)._resize._handles.r;
      } catch (e) {
      }
      if (navigationResizeKnob !== null) {
        YAHOO.util.Event.addListener(navigationResizeKnob, "dblclick", EBX_LayoutManager.resetNavigationPane);
      }
      EBX_LayoutManager.applyNavigationResizeController();
      EBX_LayoutManager.isNavigationInitCollapsed = false;
    } else {
      EBX_LayoutManager.bodyLayout.getUnitByPosition(EBX_LayoutManager.bodyUnits.navigation.position).expand();
    }
    EBX_LayoutManager.showFloatingNavigationHeaderTitles();
    EBX_LayoutManager.hideNavigationExpandKnob();
    EBX_LayoutManager.sendLayoutMode();
  }
};
EBX_LayoutManager.collapseNavigationPane = function () {
  if (EBX_LayoutManager.isNavigationPresent(window) && !EBX_LayoutManager.isNavigationInitCollapsed) {
    EBX_LayoutManager.bodyLayout.getUnitByPosition(EBX_LayoutManager.bodyUnits.navigation.position).collapse();
    EBX_LayoutManager.hideFloatingNavigationHeaderTitles();
    EBX_LayoutManager.showNavigationExpandKnob();
    EBX_LayoutManager.sendLayoutMode();
  }
};

EBX_LayoutManager.navigationExpandKnobId = "ebx_NavigationExpandKnob";
EBX_LayoutManager.navigationExpandKnobDisplayedCSSClass = "ebx_NavigationExpandKnobDisplayed";
EBX_LayoutManager.navigationExpandKnob = null;
EBX_LayoutManager.getNavigationExpandKnob = function () {
  if (EBX_LayoutManager.navigationExpandKnob === null) {
    EBX_LayoutManager.navigationExpandKnob = document.getElementById(EBX_LayoutManager.navigationExpandKnobId);
  }
  return EBX_LayoutManager.navigationExpandKnob;
};
EBX_LayoutManager.showNavigationExpandKnob = function () {
  var navigationExpandKnob = EBX_LayoutManager.getNavigationExpandKnob();
  if (navigationExpandKnob === null) {
    return;
  }
  EBX_Utils.addCSSClass(navigationExpandKnob, EBX_LayoutManager.navigationExpandKnobDisplayedCSSClass);
};
EBX_LayoutManager.hideNavigationExpandKnob = function () {
  var navigationExpandKnob = EBX_LayoutManager.getNavigationExpandKnob();
  if (navigationExpandKnob === null) {
    return;
  }
  EBX_Utils.removeCSSClass(navigationExpandKnob, EBX_LayoutManager.navigationExpandKnobDisplayedCSSClass);
};

EBX_LayoutManager.isNavigationPaneDisplayed = function () {
  var navigationUnit = EBX_LayoutManager.bodyLayout.getUnitByPosition(EBX_LayoutManager.bodyUnits.navigation.position);
  // not present
  if (navigationUnit === false) {
    return false;
  }
  return navigationUnit.get("width") !== 0;
};

EBX_LayoutManager.resetNavigationPane = function (yuiEvent) {
  var navUnit = EBX_LayoutManager.bodyLayout.getUnitByPosition(EBX_LayoutManager.bodyUnits.navigation.position);
  navUnit.set('width', EBX_LayoutManager.bodyUnits.navigation.defaultWidth);
};

EBX_LayoutManager.NavigationContentEl = null;
EBX_LayoutManager.resizeNavigation = function (yuiResizeEvent) {

  EBX_LayoutManager.controlAndSaveNavigationSize();

  var navigationContentEl = EBX_LayoutManager.NavigationContentEl;
  if (navigationContentEl === null) {
    navigationContentEl = document.getElementById("ebx_NavigationContent");
    if (navigationContentEl === null) {
      return;
    } else {
      EBX_LayoutManager.NavigationContentEl = navigationContentEl;
    }
  }

  var navigationContentParent = navigationContentEl.parentNode;

  var takenSpace = 0;

  var child = navigationContentParent.firstChild;
  do {
    if (child.nodeType === 1 && child !== navigationContentEl) {
      takenSpace += child.offsetHeight;
    }
  } while ((child = child.nextSibling));

  var targetNavigationHeight = (yuiResizeEvent.sizes.left.h - takenSpace);

  navigationContentEl.style.height = targetNavigationHeight + "px";

  if (EBX_LayoutManager.navigationPanePerspective === true) {
    navigationContentEl.style.width = yuiResizeEvent.sizes.left.w + EBX_Utils.getVScrollWidth() + "px";
  }

  EBX_LayoutManager.refreshFloatingNavigationHeaderTitlesContexts();
};

EBX_LayoutManager.headerExpandKnobId = "ebx_HeaderExpandKnob";
EBX_LayoutManager.headerExpandKnobDisplayedCSSClass = "ebx_HeaderExpandKnobDisplayed";
EBX_LayoutManager.headerExpandKnob = null;
EBX_LayoutManager.getHeaderExpandKnob = function () {
  if (EBX_LayoutManager.headerExpandKnob === null) {
    EBX_LayoutManager.headerExpandKnob = document.getElementById(EBX_LayoutManager.headerExpandKnobId);
  }
  return EBX_LayoutManager.headerExpandKnob;
};
EBX_LayoutManager.showHeaderExpandKnob = function () {
  var headerExpandKnob = EBX_LayoutManager.getHeaderExpandKnob();
  if (headerExpandKnob === null) {
    return;
  }
  EBX_Utils.addCSSClass(headerExpandKnob, EBX_LayoutManager.headerExpandKnobDisplayedCSSClass);
};
EBX_LayoutManager.hideHeaderExpandKnob = function () {
  var headerExpandKnob = EBX_LayoutManager.getHeaderExpandKnob();
  if (headerExpandKnob === null) {
    return;
  }
  EBX_Utils.removeCSSClass(headerExpandKnob, EBX_LayoutManager.headerExpandKnobDisplayedCSSClass);
};

EBX_LayoutManager.expandHeaderPane = function () {
  if (EBX_LayoutManager.isHeaderPresent(window)) {
    if (EBX_LayoutManager.isHeaderInitCollapsed) {
      EBX_LayoutManager.bodyLayout.addUnit(EBX_LayoutManager.bodyUnits.header);
      EBX_LayoutManager.isHeaderInitCollapsed = false;
    } else {
      EBX_LayoutManager.bodyLayout.getUnitByPosition(EBX_LayoutManager.bodyUnits.header.position).expand();
    }
    EBX_LayoutManager.hideHeaderExpandKnob();
    EBX_LayoutManager.sendLayoutMode();
  }
};
EBX_LayoutManager.collapseHeaderPane = function () {
  if (EBX_LayoutManager.isHeaderPresent(window) && !EBX_LayoutManager.isHeaderInitCollapsed) {
    EBX_LayoutManager.bodyLayout.getUnitByPosition(EBX_LayoutManager.bodyUnits.header.position).collapse();
    EBX_LayoutManager.showHeaderExpandKnob();
    EBX_LayoutManager.sendLayoutMode();
  }
};

EBX_LayoutManager.isHeaderPaneDisplayed = function () {
  var headerUnit = EBX_LayoutManager.bodyLayout.getUnitByPosition(EBX_LayoutManager.bodyUnits.header.position);
  // not present
  if (headerUnit === false) {
    return false;
  }
  return headerUnit.get("height") !== 0;
};

/**
 * Fill with EBX_LayoutManager.iFramesToInit.push( an object with attributes
 * iframeID and iframeURL );
 */
EBX_LayoutManager.iFramesToInit = [];
EBX_LayoutManager.initIFrames = function () {
  EBX_Loader.changeTaskState("IFrames", EBX_Loader.states.processing);

  for (var i = 0; i < EBX_LayoutManager.iFramesToInit.length; i++) {
    var frameObj = EBX_LayoutManager.iFramesToInit[i];
    var urlToSet = frameObj.iframeURL;

    // if the url begins with http or https
    if (urlToSet.substr(0, 4) == "http") {
      //			urlToSet = urlToSet;
    } else if (urlToSet.substr(0, 1) == "/") {
      urlToSet = location.protocol + "//" + location.host + urlToSet;
    } else {
      // others.. ("./", "../", autre) => TODO CCH
      //			urlToSet = urlToSet;
    }

    document.getElementById(frameObj.iframeID).src = urlToSet;

    if (frameObj.jsCmdToCallOnIFrameLoad !== undefined) {
      YAHOO.util.Event.addListener(frameObj.iframeID, "load", EBX_LayoutManager.launchJSCommand,
          frameObj.jsCmdToCallOnIFrameLoad);
    }
  }

  EBX_Loader.changeTaskState("IFrames", EBX_Loader.states.done);
};
EBX_LayoutManager.launchJSCommand = function (event, jsCommand) {
  window.setTimeout(jsCommand, 0);
};

/* XXX CCH layout selector disabled, see UIWorkspaceDisplay
 EBX_LayoutManager.setLayoutMode = function(layoutModeFlag) {
 var ebxTopWindow = EBX_LayoutManager.getFirstParentSelectableLayoutWindowLZ();

 if (layoutModeFlag.indexOf("H") > -1) {
 ebxTopWindow.EBX_LayoutManager.expandHeaderPane();
 } else {
 ebxTopWindow.EBX_LayoutManager.collapseHeaderPane();
 }

 if (layoutModeFlag.indexOf("N") > -1) {
 ebxTopWindow.EBX_LayoutManager.expandNavigationPane();
 } else {
 ebxTopWindow.EBX_LayoutManager.collapseNavigationPane();
 }

 EBX_LayoutManager.sendLayoutMode(layoutModeFlag);
 };
 */

EBX_LayoutManager.saveScreenLayoutYUIDataSource = null;
EBX_LayoutManager.sendLayoutMode = function () {
  if (EBX_LayoutManager.saveScreenLayoutYUIDataSource === null) {
    EBX_LayoutManager.saveScreenLayoutYUIDataSource = new YAHOO.util.XHRDataSource(
        EBX_LayoutManager.screenLayoutRequest);
  }

  var layoutModeFlag = "";

  if (EBX_LayoutManager.isHeaderPaneDisplayed()) {
    layoutModeFlag += "H";
  }

  if (EBX_LayoutManager.isNavigationPaneDisplayed()) {
    layoutModeFlag += "N";
  }

  layoutModeFlag += "W";

  EBX_LayoutManager.saveScreenLayoutYUIDataSource.sendRequest(EBX_LayoutManager.layoutModeParameter + layoutModeFlag,
      null);
};

EBX_LayoutManager.saveNavigationSizeYUIDataSourceLZ = null;
EBX_LayoutManager.previousNavigationWidth = null;
EBX_LayoutManager.previousWindowWidth = YAHOO.util.Dom.getViewportWidth();
EBX_LayoutManager.controlAndSaveNavigationSize = function () {
  if (EBX_LayoutManager.previousNavigationWidth === null) {
    EBX_LayoutManager.previousNavigationWidth = EBX_LayoutManager.bodyUnits.navigation.width;
  }

  var navigationWidth = EBX_LayoutManager.bodyLayout.getUnitByPosition(
      EBX_LayoutManager.bodyUnits.navigation.position).get('width');
  navigationWidth = Math.round(navigationWidth);

  var windowWidth = YAHOO.util.Dom.getViewportWidth();

  // if collapsed
  if (navigationWidth <= 0) {
    // just in case
    EBX_LayoutManager.previousWindowWidth = windowWidth;
    return;
  }

  // case of resizing the window to below the navigation width
  if (navigationWidth > windowWidth - 100) {
    navigationWidth = windowWidth - 100;
    EBX_LayoutManager.previousWindowWidth = windowWidth;

    // will call this function again
    EBX_LayoutManager.bodyLayout.getUnitByPosition(EBX_LayoutManager.bodyUnits.navigation.position).set('width',
        navigationWidth);
    return;
  }

  // case of resizing the window width: resize the navigation pane proportionally
  if (EBX_Perspective.isNavigationPaneReduced === false && EBX_LayoutManager.previousNavigationWidth === navigationWidth
      && EBX_LayoutManager.previousWindowWidth !== windowWidth) {
    var previousNavigationWidthBP = EBX_LayoutManager.convertNavWidthToBPWindowWidth(navigationWidth,
        EBX_LayoutManager.previousWindowWidth);
    navigationWidth = EBX_LayoutManager.convertNavWidthToPx(previousNavigationWidthBP);

    // lower limit is EBX_LayoutManager.navigationPaneMinWidth
    // except EBX_LayoutManager.navigationPaneReducedWidth
    if (navigationWidth < EBX_LayoutManager.navigationPaneMinWidth && navigationWidth
        !== EBX_LayoutManager.navigationPaneReducedWidth) {
      navigationWidth = EBX_LayoutManager.navigationPaneMinWidth;
    }

    EBX_LayoutManager.previousWindowWidth = windowWidth;

    // prevent saving
    EBX_LayoutManager.previousNavigationWidth = navigationWidth;

    // will call this function again
    EBX_LayoutManager.bodyLayout.getUnitByPosition(EBX_LayoutManager.bodyUnits.navigation.position).set('width',
        navigationWidth);
    return;
  }

  var navigationWidthBP = EBX_LayoutManager.convertNavWidthToBP(navigationWidth);

  if (EBX_LayoutManager.previousNavigationWidth !== navigationWidth) {
    if (EBX_LayoutManager.saveNavigationSizeYUIDataSourceLZ === null) {
      EBX_LayoutManager.saveNavigationSizeYUIDataSourceLZ = new YAHOO.util.XHRDataSource(
          EBX_LayoutManager.navigatorWidthRequest);
    }

    // save navigation width or reduced
    var saveWidthURLParameters = "";

    if (EBX_LayoutManager.navigationPanePerspective === true) {
      if (navigationWidth === EBX_LayoutManager.navigationPaneReducedWidth) {
        EBX_Perspective.navigationPaneWidthBeforeReduced = EBX_LayoutManager.previousNavigationWidth;
        // don't save the current width, because if the user wants to de-reduce the panel, he must retrieve his previous pane width
        saveWidthURLParameters += EBX_LayoutManager.reducedParameter + "true";
      } else {
        saveWidthURLParameters += EBX_LayoutManager.widthParameter + navigationWidthBP;
        saveWidthURLParameters += EBX_LayoutManager.reducedParameter + "false";
      }
    } else {
      saveWidthURLParameters += EBX_LayoutManager.widthParameter + navigationWidthBP;
    }

    EBX_LayoutManager.saveNavigationSizeYUIDataSourceLZ.sendRequest(saveWidthURLParameters, null);
    EBX_LayoutManager.previousNavigationWidth = navigationWidth;
  }

  EBX_LayoutManager.processNavigationPanePerspective(navigationWidth);

  EBX_LayoutManager.fitFloatingNavigationHeaderTitlesToNavPaneNoAnimation();
};

EBX_LayoutManager.navigationPanePerspectiveReducedCSSClass = "ebx_NavigationPanePerspectiveReduced";
EBX_LayoutManager.perspectiveAvoidAnimationsOnLoadingCSSClass = "ebx_PerspectiveAvoidAnimationsOnLoading";
EBX_LayoutManager.perspectiveAvoidAnimationsOnLoadingRemoved = false;

EBX_LayoutManager.processNavigationPanePerspective = function (navigationWidth) {

  if (EBX_LayoutManager.navigationPanePerspective !== true) {
    return;
  }

  var previousState = EBX_Perspective.isNavigationPaneReduced;

  if (navigationWidth === EBX_LayoutManager.navigationPaneReducedWidth) {
    EBX_Utils.addCSSClass(document.body, EBX_LayoutManager.navigationPanePerspectiveReducedCSSClass);
    EBX_Perspective.isNavigationPaneReduced = true;
  } else {
    EBX_Utils.removeCSSClass(document.body, EBX_LayoutManager.navigationPanePerspectiveReducedCSSClass);
    EBX_Perspective.isNavigationPaneReduced = false;
  }

  EBX_Perspective.refreshNavigationPane(previousState);

  if (EBX_LayoutManager.perspectiveAvoidAnimationsOnLoadingRemoved === false) {
    window.setTimeout(function () {
      EBX_Utils.removeCSSClass(document.body, EBX_LayoutManager.perspectiveAvoidAnimationsOnLoadingCSSClass);
    }, 50);
    EBX_LayoutManager.perspectiveAvoidAnimationsOnLoadingRemoved = true;
  }
};

/** START navigation floating titles * */
EBX_LayoutManager.navigationHeaderTitleId = "ebx_NavigationHeaderTitle";
EBX_LayoutManager.navigationHeaderTitle = null;
EBX_LayoutManager.floatingNavigationHeaderTitleEnabled = false;

EBX_LayoutManager.navigationSubHeaderTitleId = "ebx_NavigationSubHeaderTitle";
EBX_LayoutManager.navigationSubHeaderTitle = null;
EBX_LayoutManager.floatingNavigationSubHeaderTitleEnabled = false;

EBX_LayoutManager.displayFloatingNavigationHeaderTitle = function (isSubHeader) {
  var navigationHeaderTitle;
  if (isSubHeader === true) {
    if (EBX_LayoutManager.navigationSubHeaderTitle === null) {
      EBX_LayoutManager.navigationSubHeaderTitle = document.getElementById(
          EBX_LayoutManager.navigationSubHeaderTitleId);
    }
    navigationHeaderTitle = EBX_LayoutManager.navigationSubHeaderTitle;
  } else {
    if (EBX_LayoutManager.navigationHeaderTitle === null) {
      EBX_LayoutManager.navigationHeaderTitle = document.getElementById(EBX_LayoutManager.navigationHeaderTitleId);
    }
    navigationHeaderTitle = EBX_LayoutManager.navigationHeaderTitle;
  }

  var navigationHeaderTitleChild = navigationHeaderTitle.firstChild;

  if (navigationHeaderTitleChild.clientWidth == navigationHeaderTitleChild.scrollWidth) {
    return;
  }

  // this operation must be done once
  navigationHeaderTitle.onmouseover = null;

  if (isSubHeader === true) {
    EBX_LayoutManager.floatingNavigationSubHeaderTitleEnabled = true;
  } else {
    EBX_LayoutManager.floatingNavigationHeaderTitleEnabled = true;
  }

  // fix the height before removing its child
  navigationHeaderTitle.style.height = navigationHeaderTitle.offsetHeight + "px";

  var overlay = EBX_LayoutManager.getFloatingNavigationHeaderTitle(isSubHeader);

  overlay.setBody(navigationHeaderTitleChild);

  EBX_LayoutManager.fitFloatingNavigationHeaderTitleToNavPaneNoAnimation(isSubHeader);

  overlay.show();

  EBX_LayoutManager.setFloatingNavigationHeaderTitleToAutoWidth(undefined, isSubHeader);

  YAHOO.util.Event.addListener(overlay.element, "mouseover",
      EBX_LayoutManager.setFloatingNavigationHeaderTitleToAutoWidth, isSubHeader, null);
  YAHOO.util.Event.addListener(overlay.element, "mouseout", EBX_LayoutManager.fitFloatingNavigationHeaderTitleToNavPane,
      isSubHeader, null);
};
EBX_LayoutManager.FloatingNavHeaderNoAnimationWidthCSSClass = "ebx_WidthNotAnimated";
EBX_LayoutManager.fitFloatingNavigationHeaderTitleToNavPaneNoAnimation = function (isSubHeader) {
  if (isSubHeader === true) {
    if (EBX_LayoutManager.floatingNavigationSubHeaderTitleEnabled === false) {
      return;
    }
  } else {
    if (EBX_LayoutManager.floatingNavigationHeaderTitleEnabled === false) {
      return;
    }
  }
  var floatingTitle = EBX_LayoutManager.getFloatingNavigationHeaderTitle(isSubHeader).element;
  EBX_Utils.addCSSClass(floatingTitle, EBX_LayoutManager.FloatingNavHeaderNoAnimationWidthCSSClass);
  EBX_LayoutManager.fitFloatingNavigationHeaderTitleToNavPane(undefined, isSubHeader);
  EBX_Utils.removeCSSClass(floatingTitle, EBX_LayoutManager.FloatingNavHeaderNoAnimationWidthCSSClass);
};
EBX_LayoutManager.fitFloatingNavigationHeaderTitleToNavPane = function (event, isSubHeader) {
  var floatingTitle = EBX_LayoutManager.getFloatingNavigationHeaderTitle(isSubHeader).element;

  // if the mouse is always on the element (mouse out called when rolling on children)
  if (event !== undefined) {

    var elementUnderMouse = document.elementFromPoint(event.clientX, event.clientY);

    if (elementUnderMouse !== null && EBX_Utils.isChildOf(elementUnderMouse, floatingTitle)) {
      return;
    }
  }

  floatingTitle.style.width = EBX_LayoutManager.getNavigationWidth() + "px";
};

EBX_LayoutManager.setFloatingNavigationHeaderTitleToAutoWidth = function (event, isSubHeader) {
  var floatingTitle = EBX_LayoutManager.getFloatingNavigationHeaderTitle(isSubHeader).element;
  //FIXME CCH /* for test */
  if (EBX_LayoutManager.navigationPanePerspective === true) {
    floatingTitle.style.width = floatingTitle.scrollWidth + 15 + "px";
    /* padding-right */
    return;
  }
  floatingTitle.style.width = floatingTitle.scrollWidth + "px";
};

EBX_LayoutManager.floatingNavigationHeaderTitleId = "ebx_FloatingNavigationHeaderTitle";
EBX_LayoutManager.floatingNavigationHeaderTitle = null;

EBX_LayoutManager.floatingNavigationSubHeaderTitleId = "ebx_FloatingNavigationSubHeaderTitle";
EBX_LayoutManager.floatingNavigationSubHeaderTitle = null;

EBX_LayoutManager.getFloatingNavigationHeaderTitle = function (isSubHeader) {
  /* zIndex 10 to be covered by the menu for menu buttons, which is 20 */
  if (isSubHeader === true) {
    if (EBX_LayoutManager.floatingNavigationSubHeaderTitle === null) {
      EBX_LayoutManager.floatingNavigationSubHeaderTitle = new YAHOO.widget.Overlay(
          EBX_LayoutManager.floatingNavigationSubHeaderTitleId, {
            visible: false,
            context: [EBX_LayoutManager.navigationSubHeaderTitle, "tl", "tl"],
            zIndex: 10
          });
      EBX_LayoutManager.floatingNavigationSubHeaderTitle.render(document.body);
    }
    return EBX_LayoutManager.floatingNavigationSubHeaderTitle;
  } else {
    if (EBX_LayoutManager.floatingNavigationHeaderTitle === null) {
      EBX_LayoutManager.floatingNavigationHeaderTitle = new YAHOO.widget.Overlay(
          EBX_LayoutManager.floatingNavigationHeaderTitleId, {
            visible: false,
            context: [EBX_LayoutManager.navigationHeaderTitle, "tl", "tl"],
            zIndex: 10
          });
      EBX_LayoutManager.floatingNavigationHeaderTitle.render(document.body);
    }
    return EBX_LayoutManager.floatingNavigationHeaderTitle;
  }
};

/*START external controls */
EBX_LayoutManager.fitFloatingNavigationHeaderTitlesToNavPaneNoAnimation = function () {
  EBX_LayoutManager.fitFloatingNavigationHeaderTitleToNavPaneNoAnimation();
  EBX_LayoutManager.fitFloatingNavigationHeaderTitleToNavPaneNoAnimation(true);
};

EBX_LayoutManager.refreshFloatingNavigationHeaderTitlesContexts = function () {
  if (EBX_LayoutManager.floatingNavigationHeaderTitle !== null) {
    EBX_LayoutManager.floatingNavigationHeaderTitle.cfg.setProperty("context",
        [EBX_LayoutManager.navigationHeaderTitle, "tl", "tl"]);
  }
  if (EBX_LayoutManager.floatingNavigationSubHeaderTitle !== null) {
    EBX_LayoutManager.floatingNavigationSubHeaderTitle.cfg.setProperty("context",
        [EBX_LayoutManager.navigationSubHeaderTitle, "tl", "tl"]);
  }
};

EBX_LayoutManager.hideFloatingNavigationHeaderTitles = function () {
  if (EBX_LayoutManager.floatingNavigationHeaderTitle !== null) {
    EBX_LayoutManager.floatingNavigationHeaderTitle.hide();
  }
  if (EBX_LayoutManager.floatingNavigationSubHeaderTitle !== null) {
    EBX_LayoutManager.floatingNavigationSubHeaderTitle.hide();
  }
};
EBX_LayoutManager.showFloatingNavigationHeaderTitles = function () {
  if (EBX_LayoutManager.floatingNavigationHeaderTitle !== null) {
    EBX_LayoutManager.floatingNavigationHeaderTitle.show();
  }
  if (EBX_LayoutManager.floatingNavigationSubHeaderTitle !== null) {
    EBX_LayoutManager.floatingNavigationSubHeaderTitle.show();
  }
  EBX_LayoutManager.refreshFloatingNavigationHeaderTitlesContexts();
};
/*END external controls */
/** END navigation floating titles * */

/* START Title Breadcrumb */
EBX_LayoutManager.cornerToolsId = "ebx_WorkspaceCornerTools";
EBX_LayoutManager.titleBreadcrumbId = "ebx_TitleBreadcrumb";
EBX_LayoutManager.titleBreadcrumbScrollId = "ebx_TitleBreadcrumbScroll";

EBX_LayoutManager.titleBreadcrumbNoScrollCSSClass = "ebx_TitleBreadcrumbNoScroll";
EBX_LayoutManager.titleBreadcrumbScrollStopLeftCSSClass = "ebx_TitleBreadcrumbScrollStopLeft";
EBX_LayoutManager.titleBreadcrumbScrollStopRightCSSClass = "ebx_TitleBreadcrumbScrollStopRight";

EBX_LayoutManager.cornerToolsEl = null;
EBX_LayoutManager.titleBreadcrumbEl = null;
EBX_LayoutManager.titleBreadcrumbScrollEl = null;

EBX_LayoutManager.titleBreadcrumbMaxScroll = 0;

EBX_LayoutManager.initTitleBreadcrumb = function () {
  EBX_Loader.changeTaskState(EBX_Loader_taskId_title_breadcrumb, EBX_Loader.states.processing);

  EBX_LayoutManager.cornerToolsEl = document.getElementById(EBX_LayoutManager.cornerToolsId);
  EBX_LayoutManager.titleBreadcrumbEl = document.getElementById(EBX_LayoutManager.titleBreadcrumbId);
  EBX_LayoutManager.titleBreadcrumbScrollEl = document.getElementById(EBX_LayoutManager.titleBreadcrumbScrollId);

  EBX_LayoutManager.bodyLayout.addListener("resize", EBX_LayoutManager.resizeTitleBreadcrumb);
  EBX_LayoutManager.resizeTitleBreadcrumb();

  new YAHOO.util.Scroll(EBX_LayoutManager.titleBreadcrumbEl, {
    scroll: {
      to: [EBX_LayoutManager.titleBreadcrumbMaxScroll, 0]
    }
  }, EBX_LayoutManager.breadcrumbScrollInitialAnimationDuration / 1000, YAHOO.util.Easing.easeBoth).animate();

  YAHOO.util.Event.addListener(EBX_LayoutManager.titleBreadcrumbEl, "scroll",
      EBX_LayoutManager.titleBreadcrumbScrollListener, null, this);

  EBX_Loader.changeTaskState(EBX_Loader_taskId_title_breadcrumb, EBX_Loader.states.done);
};

EBX_LayoutManager.resizeTitleBreadcrumb = function () {
  EBX_LayoutManager.titleBreadcrumbEl.style.width = EBX_LayoutManager.cornerToolsEl.offsetLeft + "px";

  var children = EBX_LayoutManager.titleBreadcrumbEl.children;
  var childrenSum = 0;
  for (var i = 0; i < children.length; i++) {
    childrenSum += children[i].offsetWidth;
  }

  EBX_LayoutManager.titleBreadcrumbMaxScroll = childrenSum
      - EBX_LayoutManager.titleBreadcrumbEl.clientWidth;

  if (EBX_LayoutManager.titleBreadcrumbMaxScroll <= 0) {
    EBX_LayoutManager.titleBreadcrumbScrollEl.style.display = "none";
    EBX_Utils.addCSSClass(EBX_LayoutManager.titleBreadcrumbEl, EBX_LayoutManager.titleBreadcrumbNoScrollCSSClass);
  } else {
    EBX_LayoutManager.titleBreadcrumbScrollEl.style.display = "";
    EBX_Utils.removeCSSClass(EBX_LayoutManager.titleBreadcrumbEl, EBX_LayoutManager.titleBreadcrumbNoScrollCSSClass);
  }
};

EBX_LayoutManager.titleBreadcrumbScrollListener = function () {
  var titleBreadcrumbScrollCSSClass = "";

  var breadcrumbScrollLeft = EBX_LayoutManager.titleBreadcrumbEl.scrollLeft;

  if (breadcrumbScrollLeft === 0) {
    titleBreadcrumbScrollCSSClass = EBX_LayoutManager.titleBreadcrumbScrollStopLeftCSSClass;
  } else if (breadcrumbScrollLeft === EBX_LayoutManager.titleBreadcrumbMaxScroll) {
    titleBreadcrumbScrollCSSClass = EBX_LayoutManager.titleBreadcrumbScrollStopRightCSSClass;
  }

  EBX_LayoutManager.titleBreadcrumbScrollEl.className = titleBreadcrumbScrollCSSClass;
};

EBX_LayoutManager.breadcrumbScrollInitialAnimationDuration = 500;//ms

EBX_LayoutManager.breadcrumbScrollAmount = 100;//px

/* When the user hold a scroll button.
 * The scroll is done once, then a delay, then repeated scrolls. */
EBX_LayoutManager.delayToLaunchRepeatedScrolling = 400;//ms

EBX_LayoutManager.breadcrumbScrollAnimationDuration = 100;//ms
EBX_LayoutManager.delayForRepeatedScrolling = 100;//ms

EBX_LayoutManager.scrollTimeout = null;
EBX_LayoutManager.scrollInterval = null;

EBX_LayoutManager.breadcrumbScrollLeftMouseDown = function () {
  window.setTimeout(EBX_LayoutManager.breadcrumbScrollLeft, 0);
  EBX_LayoutManager.scrollTimeout = window.setTimeout(EBX_LayoutManager.breadcrumbLaunchScrollLeftInterval,
      EBX_LayoutManager.delayToLaunchRepeatedScrolling);
};
EBX_LayoutManager.breadcrumbLaunchScrollLeftInterval = function () {
  EBX_LayoutManager.scrollInterval = window.setInterval(EBX_LayoutManager.breadcrumbScrollLeft,
      EBX_LayoutManager.delayForRepeatedScrolling);
};
EBX_LayoutManager.breadcrumbScrollLeftMouseUp = function () {
  window.clearTimeout(EBX_LayoutManager.scrollTimeout);
  window.clearInterval(EBX_LayoutManager.scrollInterval);
};
EBX_LayoutManager.breadcrumbScrollLeftMouseOut = function () {
  window.clearTimeout(EBX_LayoutManager.scrollTimeout);
  window.clearInterval(EBX_LayoutManager.scrollInterval);
};
EBX_LayoutManager.breadcrumbScrollLeft = function () {
  var targetScrollLeft = EBX_LayoutManager.titleBreadcrumbEl.scrollLeft - EBX_LayoutManager.breadcrumbScrollAmount;

  if (targetScrollLeft < 0) {
    targetScrollLeft = 0;
  }

  new YAHOO.util.Scroll(EBX_LayoutManager.titleBreadcrumbEl, {
    scroll: {
      to: [targetScrollLeft, 0]
    }
  }, EBX_LayoutManager.breadcrumbScrollAnimationDuration / 1000).animate();
};

EBX_LayoutManager.breadcrumbScrollRightMouseDown = function () {
  window.setTimeout(EBX_LayoutManager.breadcrumbScrollRight, 0);
  EBX_LayoutManager.scrollTimeout = window.setTimeout(EBX_LayoutManager.breadcrumbLaunchScrollRightInterval,
      EBX_LayoutManager.delayToLaunchRepeatedScrolling);
};
EBX_LayoutManager.breadcrumbLaunchScrollRightInterval = function () {
  EBX_LayoutManager.scrollInterval = window.setInterval(EBX_LayoutManager.breadcrumbScrollRight,
      EBX_LayoutManager.delayForRepeatedScrolling);
};
EBX_LayoutManager.breadcrumbScrollRightMouseUp = function () {
  window.clearTimeout(EBX_LayoutManager.scrollTimeout);
  window.clearInterval(EBX_LayoutManager.scrollInterval);
};
EBX_LayoutManager.breadcrumbScrollRightMouseOut = function () {
  window.clearTimeout(EBX_LayoutManager.scrollTimeout);
  window.clearInterval(EBX_LayoutManager.scrollInterval);
};
EBX_LayoutManager.breadcrumbScrollRight = function () {
  var targetScrollLeft = EBX_LayoutManager.titleBreadcrumbEl.scrollLeft + EBX_LayoutManager.breadcrumbScrollAmount;

  if (targetScrollLeft > EBX_LayoutManager.titleBreadcrumbMaxScroll) {
    targetScrollLeft = EBX_LayoutManager.titleBreadcrumbMaxScroll;
  }

  new YAHOO.util.Scroll(EBX_LayoutManager.titleBreadcrumbEl, {
    scroll: {
      to: [targetScrollLeft, 0]
    }
  }, EBX_LayoutManager.breadcrumbScrollAnimationDuration / 1000, YAHOO.util.Easing.easeBoth).animate();
};

EBX_LayoutManager.breadcrumbItemClickOnLink = function (breadcrumbItemEl, event) {
  var targetEl = EBX_Utils.getTargetElement(event);

  if (targetEl.tagName.toLowerCase() == "a") {
    return;
  }

  if (EBX_Utils.getFirstParentMatchingTagName(targetEl, "a") !== null) {
    return;
  }

  var linkChild = EBX_Utils.getFirstRecursiveChildMatchingTagName(breadcrumbItemEl, "a");
  if (linkChild !== null) {
    linkChild.focus();
    window.location.href = linkChild.href;
  }
};

/* END Title Breadcrumb */

EBX_LayoutManager.getNavigationWidth = function () {
  if (EBX_LayoutManager.previousNavigationWidth === null) {
    EBX_LayoutManager.previousNavigationWidth = EBX_LayoutManager.bodyUnits.navigation.width;
  }

  return EBX_LayoutManager.previousNavigationWidth;
};

EBX_LayoutManager.baseURLForDocSearchCookieName = "ebx_BaseURLForDocSearch";
EBX_LayoutManager.saveBaseURLForDocSearchInCookie = function () {
  EBX_Loader.changeTaskState(EBX_Loader_taskId_save_url_for_doc_search, EBX_Loader.states.processing);

  for (var i = 0; i < EBX_Constants.cookiePathForDocSearch.length; i++) {
    var path = EBX_Constants.cookiePathForDocSearch[i];

    YAHOO.util.Cookie.set(EBX_LayoutManager.baseURLForDocSearchCookieName, EBX_Constants.baseURLForDocSearch, {
      path: path // Cookie path must be set to avoid conflicts when more than one EBX application are installed on same host.
    });
  }

  EBX_Loader.changeTaskState(EBX_Loader_taskId_save_url_for_doc_search, EBX_Loader.states.done);
};

EBX_LayoutManager.perspectiveBodyCSSClass = "ebx_Perspective";

/* argsObj available fields :
 * considersEBXPerspectiveAsNotEBX: boolean
 */
EBX_LayoutManager.isEBXBody = function (document, argsObj) {
  var i, len;
  var bodyEl = document.body;
  var classes = bodyEl.className.split(EBX_Utils.CSSClassSeparator);

  if (argsObj !== undefined && argsObj.considersEBXPerspectiveAsNotEBX === true) {
    if (EBX_Utils.matchCSSClass(bodyEl, EBX_LayoutManager.perspectiveBodyCSSClass)) {
      return false;
    }
  }

  for (i = 0, len = classes.length; i < len; i++) {
    if (classes[i].indexOf('ebx_') != -1) {
      return true;
    }
  }

  return false;
};

window.EBX_LAYOUT_MANAGER_IS_EMBEDDED_VALUE_LZ = null;

/* argsObj available fields :
 * considersEBXPerspectiveAsNotEBX: boolean
 *
 * @return true if this EBX is embedded in an other EBX. To compute this, it iterates over parent windows.
 *        Returns false if parent window is on a different domain (does not throw an error).
 */
EBX_LayoutManager.isEmbedded = function (argsObj) {
  var container = ebx_getContainerWindow(window);
  var parent = container.parent;

  if (argsObj !== undefined && argsObj.considersEBXPerspectiveAsNotEBX !== undefined) {
    try {
      if (parent && parent.document != container.document) {
        return EBX_LayoutManager.isEBXBody(parent.document, argsObj);
      } else {
        return false;
      }
    } catch (e) {
      return false;
    }
  }

  if (window.EBX_LAYOUT_MANAGER_IS_EMBEDDED_VALUE_LZ === null) {
    // parent.document causes a security exception when EBX® is embedded in a iFrame with a different domain name
    // see Mantis #3686
    try {
      if (parent && parent.document != container.document) {
        window.EBX_LAYOUT_MANAGER_IS_EMBEDDED_VALUE_LZ = EBX_LayoutManager.isEBXBody(parent.document);
      } else {
        window.EBX_LAYOUT_MANAGER_IS_EMBEDDED_VALUE_LZ = false;
      }
    } catch (e) {
      window.EBX_LAYOUT_MANAGER_IS_EMBEDDED_VALUE_LZ = false;
    }
  }
  return window.EBX_LAYOUT_MANAGER_IS_EMBEDDED_VALUE_LZ;
};

EBX_LayoutManager.SelectableLayoutLZ = null;
EBX_LayoutManager.getFirstParentSelectableLayoutWindowLZ = function () {
  if (EBX_LayoutManager.SelectableLayoutLZ !== null) {
    return EBX_LayoutManager.SelectableLayoutLZ;
  } else {
    return EBX_LayoutManager.getFirstParentSelectableLayoutWindowOf(window);
  }
};
EBX_LayoutManager.getFirstParentSelectableLayoutWindowOf = function (windowToCheck) {
  if (EBX_LayoutManager.isHeaderPresent(windowToCheck) || EBX_LayoutManager.isNavigationPresent(windowToCheck)) {
    return windowToCheck;
  } else {
    return EBX_LayoutManager.getFirstParentSelectableLayoutWindowOf(windowToCheck.parent);
  }
};

EBX_LayoutManager.isPopUp = function () {
  try {
    if (window.opener && window != window.opener) {
      return EBX_LayoutManager.isEBXBody(window.opener.document);
    }
  } catch (err) {
  }

  return false;
};

EBX_LayoutManager.ViewportSizeNormal = "1024";
EBX_LayoutManager.ViewportSizeBig = "900";
EBX_LayoutManager.ViewportSizeBigger = "800";

EBX_LayoutManager.getViewportMetaEl = function () {
  var viewport = document.querySelector("meta[name=viewport]");
  if (viewport === null) {
    viewport = document.createElement("meta");
    viewport.setAttribute("name", "viewport");
    EBX_LayoutManager.getDocumentHead().appendChild(viewport);
  }
  return viewport;
};
EBX_LayoutManager.setViewportSizeNormal = function () {
  EBX_LayoutManager.setViewportSize(EBX_LayoutManager.ViewportSizeNormal, true);
};
EBX_LayoutManager.setViewportSizeBig = function () {
  EBX_LayoutManager.setViewportSize(EBX_LayoutManager.ViewportSizeBig, true);
};
EBX_LayoutManager.setViewportSizeBigger = function () {
  EBX_LayoutManager.setViewportSize(EBX_LayoutManager.ViewportSizeBigger, true);
};

EBX_LayoutManager.setViewportMenuItemChecked = function (viewportSize) {
  var menuItems = EBX_ButtonUtils.menuButtonsMenu["ebx_SizeMenuButton"];

  if (menuItems === undefined) {
    window.setTimeout("EBX_LayoutManager.setViewportMenuItemChecked(" + viewportSize + ")", 500);
    return;
  }

  var viewportSizeIndex;
  switch (viewportSize) {
    case EBX_LayoutManager.ViewportSizeNormal:
      viewportSizeIndex = 0;
      break;
    case EBX_LayoutManager.ViewportSizeBig:
      viewportSizeIndex = 1;
      break;
    case EBX_LayoutManager.ViewportSizeBigger:
      viewportSizeIndex = 2;
      break;
    default:
      viewportSizeIndex = -1;
  }

  for (var i = 0; i < menuItems.length; i++) {
    if (i === viewportSizeIndex) {
      menuItems[i].checked = true;
    } else {
      menuItems[i].checked = false;
    }
  }
};

EBX_LayoutManager.setViewportSize = function (viewportSize, storeInCookie) {
  EBX_LayoutManager.getViewportMetaEl().setAttribute("content", "width=" + viewportSize);
  if (storeInCookie) {
    EBX_LayoutManager.saveViewportSizeInCookie(viewportSize);
  }
  EBX_LayoutManager.setViewportMenuItemChecked(viewportSize);
};

EBX_LayoutManager.saveViewportSizeInCookie = function (viewportSize) {
  YAHOO.util.Cookie.set("ebx_ViewportSize", viewportSize, {
    path: location.pathname
  });
};

EBX_LayoutManager.setViewportSizeFromCookie = function () {
  var viewportSize = YAHOO.util.Cookie.get("ebx_ViewportSize");

  if (viewportSize === null) {
    EBX_LayoutManager.setViewportSizeNormal();
    return;
  }

  EBX_LayoutManager.setViewportSize(viewportSize, false);
};

EBX_LayoutManager.workspaceHeaderId = "ebx_WorkspaceHeader";

EBX_LayoutManager.getWorkspaceTitleH2 = function () {
  var titleBreadcrumb = document.getElementById(EBX_LayoutManager.titleBreadcrumbId);
  if (titleBreadcrumb != null) {
    return EBX_Utils.getFirstDirectChildMatchingTagName(titleBreadcrumb, "h2");
  }

  var workspaceHeader = document.getElementById(EBX_LayoutManager.workspaceHeaderId);
  if (workspaceHeader != null) {
    return EBX_Utils.getFirstDirectChildMatchingTagName(workspaceHeader, "h2");
  }

  return null;
};

EBX_LayoutManager.getWorkspaceTitle = function () {
  if (window.EBX_HybridModePageInfo != undefined) {
    /* get title in the newUI way */
    return window.EBX_HybridModePageInfo.title.label[0];
  }
  /* get title in the legacy way */
  var workspaceTitleH2 = EBX_LayoutManager.getWorkspaceTitleH2();
  var labelElement = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(workspaceTitleH2,
      EBX_LabelTooltip.RawLabelCSSClass);
  return labelElement.innerText;
};

EBX_LayoutManager.setWorkspaceTitle = function (workspaceTitle) {
  if (window.EBX_HybridModePageInfo != undefined) {
    /* set title in the newUI way */
    window.EBX_HybridModePageInfo.title.label[0] = workspaceTitle;
    EBX_Utils.onHybridPanelChange();
    return;
  }
  /* set title in the legacy way */
  var workspaceTitleEl = EBX_LayoutManager.getWorkspaceTitleH2();
  if (workspaceTitleEl === null) {
    return;
  }
  workspaceTitleEl.innerHTML = workspaceTitle;
};

EBX_LayoutManager.enableContextSensitiveHelpButton = function (url) {
  // Expose Help url override info to New UI
  if (EBX_HybridModePageInfo != null) {
    EBX_HybridModePageInfo.helpURL = url;
  }

  var contextualDocWrapperEl = document.getElementById("ebx_ContextualDocWrapper");
  if (contextualDocWrapperEl === null) {
    return;
  }
  contextualDocWrapperEl.style.display = "";
  EBX_ButtonUtils.jsButtonsCmds["ebx_ContextualDoc"] = "EBX_Doc.launchPopup(\"" + url + "\")";
};

EBX_LayoutManager.userPane = null;
EBX_LayoutManager.getUserPane = function () {
  if (EBX_LayoutManager.userPane === null) {
    EBX_LayoutManager.userPane = new YAHOO.widget.Panel("ebx_UserPane", {
      draggable: false,
      visible: false,
      close: false
    });
    document.body.appendChild(EBX_LayoutManager.getUserPaneMask());
    EBX_LayoutManager.userPane.render(document.body);
  }
  return EBX_LayoutManager.userPane;
};

EBX_LayoutManager.getUserPaneMask = function () {
  var maskId = "ebx_UserPane_Mask";

  var mask = document.getElementById(maskId);
  if (mask == null) {
    mask = document.createElement("div");
    mask.id = maskId;
    mask.className = "ebx_PageMask";
    mask.style.display = "none";
    mask.onclick = EBX_LayoutManager.hideUserPane;
  }

  return mask;
};

EBX_LayoutManager.showUserPane = function () {
  var userPane = EBX_LayoutManager.getUserPane();
  var userPaneButton = document.getElementById("ebx_UserPaneButton");// ou peut-�tre ebx_Header ?

  var gapWhenButtonHaveText = 0;
  if (EBX_Utils.matchCSSClass(userPaneButton, "ebx_TextAndIconRightButton")) {
    // I don't understand this bug of position detection of YUI when the button have text, or another css classes?...
    gapWhenButtonHaveText = -1;
  }

  // 5 for knob height
  userPane.cfg.setProperty('context', [userPaneButton, 'tr', 'br', null, [gapWhenButtonHaveText, 5]]);

  // because user pane can be displayed even if selector pane is displayed, because the Header is available
  if (EBX_NAVIGATION_HEADER_SELECTOR_PANEL_LZ !== null) {
    EBX_NAVIGATION_HEADER_SELECTOR_PANEL_LZ.hide();
  }

  EBX_LayoutManager.getUserPaneMask().style.display = "";
  userPane.show();
  document.activeElement.blur();
};
EBX_LayoutManager.hideUserPane = function () {
  EBX_LayoutManager.getUserPane().hide();
  EBX_LayoutManager.getUserPaneMask().style.display = "none";
  EBX_ButtonUtils.setStateToToggleButton(document.getElementById("ebx_UserPaneButton"), false);
};

/********* ebx_perspectives.js *********/
function EBX_Perspective() {}

EBX_Perspective.isNavigationPaneReduced = false;
EBX_Perspective.navigationPaneWidthBeforeReduced = null;
EBX_Perspective.toggleNavigationPaneReduced = function() {
	var targetNavigationWidth;

	if (EBX_Perspective.isNavigationPaneReduced) {
		targetNavigationWidth = EBX_Perspective.navigationPaneWidthBeforeReduced;
	} else {
		EBX_Perspective.navigationPaneWidthBeforeReduced = EBX_LayoutManager.getNavigationWidth();
		targetNavigationWidth = EBX_LayoutManager.navigationPaneReducedWidth;
	}

	EBX_LayoutManager.bodyLayout.getUnitByPosition(EBX_LayoutManager.bodyUnits.navigation.position).set('width', targetNavigationWidth);

	window.setTimeout(EBX_Perspective.refreshScrollButtons, Math.max(EBX_Perspective.sectionsReductionCSSTransitionDuration,
			EBX_Perspective.groupExpandCollapseCSSTransitionDuration));

	window.setTimeout(EBX_Perspective.scrollToSelectedElement, Math.max(EBX_Perspective.sectionsReductionCSSTransitionDuration,
			EBX_Perspective.groupExpandCollapseCSSTransitionDuration));
};

EBX_Perspective.refreshNavigationPane = function(previousState) {
	var itemFirstLevel, collapsibleBlockToClearWidth;

	// close any group root if state of pane has changed
	if (previousState !== EBX_Perspective.isNavigationPaneReduced && EBX_Perspective.buttonToClickToCollapseCurrentGroupRoot !== null) {
		EBX_Perspective.buttonToClickToCollapseCurrentGroupRoot.click();
	}

	if (EBX_Perspective.isNavigationPaneReduced) {
		// nothing to do now
	} else {

		// roll-up still-opened groups
		while ((itemFirstLevel = EBX_Perspective.stillOpenedItemFirstLevel.pop()) !== undefined) {
			EBX_Perspective.mouseleaveItemFirstLevelListener(itemFirstLevel, true, true);
		}

		// clear collapsible blocks width
		while ((collapsibleBlockToClearWidth = EBX_Perspective.collapsibleBlockToClearWidthOnExpandPane.pop()) !== undefined) {
			collapsibleBlockToClearWidth.style.width = "";
			EBX_Perspective.removeSubGroupScroll(collapsibleBlockToClearWidth);
		}
	}
};

EBX_Perspective.navigationContentEl = null;
EBX_Perspective.navigationPaneScrollTop = null;
EBX_Perspective.navigationPaneScrollBottom = null;

EBX_Perspective.initScrollController = function() {
	EBX_Perspective.navigationContentEl = document.getElementById("ebx_NavigationContent");
	EBX_Perspective.navigationPaneScrollTop = document.getElementById("ebx_NavigationPaneScrollTop");
	EBX_Perspective.navigationPaneScrollBottom = document.getElementById("ebx_NavigationPaneScrollBottom");

	YAHOO.util.Event.addListener(EBX_Perspective.navigationContentEl, "scroll", EBX_Perspective.refreshScrollButtons, null, this);

	EBX_LayoutManager.bodyLayout.addListener("resize", EBX_Perspective.refreshScrollButtons);

	// init browser's exceptions too
	if (EBX_LayoutManager.doesBrowserSupportsCSSTransitions === false) {
		EBX_Perspective.sectionsReductionCSSTransitionDuration = 0;
		EBX_Perspective.groupExpandCollapseCSSTransitionDuration = 0;
	}

	window.setTimeout(EBX_Perspective.refreshScrollButtons, EBX_Perspective.groupExpandCollapseCSSTransitionDuration);

	window.setTimeout(EBX_Perspective.scrollToSelectedElement, EBX_Perspective.groupExpandCollapseCSSTransitionDuration);
};

EBX_Perspective.scrollTopButtonEnabledCSSClass = "ebx_ScrollTopButtonEnabled";
EBX_Perspective.scrollBottomButtonEnabledCSSClass = "ebx_ScrollBottomButtonEnabled";

EBX_Perspective.maxScroll = 0;

EBX_Perspective.refreshScrollButtons = function() {
	var scrollTop = EBX_Perspective.navigationContentEl.scrollTop;
	var scrollHeight = EBX_Perspective.navigationContentEl.scrollHeight;
	var clientHeight = EBX_Perspective.navigationContentEl.clientHeight;

	EBX_Perspective.maxScroll = scrollHeight - clientHeight;

	if (scrollTop > 0) {
		EBX_Utils.addCSSClass(EBX_Perspective.navigationContentEl, EBX_Perspective.scrollTopButtonEnabledCSSClass);
	} else {
		EBX_Utils.removeCSSClass(EBX_Perspective.navigationContentEl, EBX_Perspective.scrollTopButtonEnabledCSSClass);
	}

	if (scrollHeight - scrollTop !== clientHeight) {
		EBX_Utils.addCSSClass(EBX_Perspective.navigationContentEl, EBX_Perspective.scrollBottomButtonEnabledCSSClass);
	} else {
		EBX_Utils.removeCSSClass(EBX_Perspective.navigationContentEl, EBX_Perspective.scrollBottomButtonEnabledCSSClass);
	}
};

/* Default value. Overwritten by UIConstantsJS */
EBX_Perspective.itemHeight = 40;//px

EBX_Perspective.scrollAmount = 50;//px

/* When the user hold a scroll button.
 * The scroll is done once, then a delay, then repeated scrolls. */
EBX_Perspective.delayToLaunchRepeatedScrolling = 400;//ms

EBX_Perspective.scrollAnimationDuration = 100;//ms
EBX_Perspective.delayForRepeatedScrolling = 100;//ms

EBX_Perspective.scrollTimeout = null;
EBX_Perspective.scrollInterval = null;

EBX_Perspective.scrollNavigationPaneUpMouseDown = function() {
	window.setTimeout(EBX_Perspective.scrollNavigationPaneUp, 0);
	EBX_Perspective.scrollTimeout = window.setTimeout(EBX_Perspective.scrollNavigationPaneUpLaunchScrollInterval,
			EBX_Perspective.delayToLaunchRepeatedScrolling);
};
EBX_Perspective.scrollNavigationPaneUpLaunchScrollInterval = function() {
	EBX_Perspective.scrollInterval = window.setInterval(EBX_Perspective.scrollNavigationPaneUp, EBX_Perspective.delayForRepeatedScrolling);
};

EBX_Perspective.scrollNavigationPaneDownMouseDown = function() {
	window.setTimeout(EBX_Perspective.scrollNavigationPaneDown, 0);
	EBX_Perspective.scrollTimeout = window.setTimeout(EBX_Perspective.scrollNavigationPaneDownLaunchScrollInterval,
			EBX_Perspective.delayToLaunchRepeatedScrolling);
};
EBX_Perspective.scrollNavigationPaneDownLaunchScrollInterval = function() {
	EBX_Perspective.scrollInterval = window.setInterval(EBX_Perspective.scrollNavigationPaneDown, EBX_Perspective.delayForRepeatedScrolling);
};

EBX_Perspective.stopScrollNavigationPane = function() {
	window.clearTimeout(EBX_Perspective.scrollTimeout);
	window.clearInterval(EBX_Perspective.scrollInterval);
};

EBX_Perspective.scrollNavigationPaneUp = function() {
	var targetScrollTop = EBX_Perspective.navigationContentEl.scrollTop + EBX_Perspective.scrollAmount;

	if (targetScrollTop > EBX_Perspective.maxScroll) {
		targetScrollTop = EBX_Perspective.maxScroll;
	}

	new YAHOO.util.Scroll(EBX_Perspective.navigationContentEl, {
		scroll: {
			to: [ 0, targetScrollTop ]
		}
	}, EBX_Perspective.scrollAnimationDuration / 1000).animate();
};

EBX_Perspective.scrollNavigationPaneDown = function() {
	var targetScrollTop = EBX_Perspective.navigationContentEl.scrollTop - EBX_Perspective.scrollAmount;

	if (targetScrollTop < 0) {
		targetScrollTop = 0;
	}

	new YAHOO.util.Scroll(EBX_Perspective.navigationContentEl, {
		scroll: {
			to: [ 0, targetScrollTop ]
		}
	}, EBX_Perspective.scrollAnimationDuration / 1000).animate();
};

EBX_Perspective.titleSelectedCSSClass = "ebx_perspectiveTitleSelected";
EBX_Perspective.scrollToSelectedElementAnimationDuration = 500;
EBX_Perspective.selectedElementsLZ = null;
EBX_Perspective.selectedElementsLenLZ = null;
EBX_Perspective.navigationPaneScrollTopHeightLZ = null;
EBX_Perspective.navigationPaneScrollBottomHeightLZ = null;
EBX_Perspective.scrollToSelectedElement = function() {
	if (EBX_Perspective.selectedElementsLZ === null) {
		EBX_Perspective.selectedElementsLZ = EBX_Utils.getRecursiveChildrenMatchingCSSClass(EBX_Perspective.navigationContentEl,
				EBX_Perspective.titleSelectedCSSClass);
		EBX_Perspective.selectedElementsLenLZ = EBX_Perspective.selectedElementsLZ.length;
	}

	if (EBX_Perspective.selectedElementsLenLZ === 0) {
		return null;
	}

	var minOffsetTop = null;
	var maxOffsetTop = null;
	var currentSelectedElementOffsetTop;

	for (var i = 0; i < EBX_Perspective.selectedElementsLenLZ; i++) {
		currentSelectedElementOffsetTop = EBX_Perspective.selectedElementsLZ[i].offsetTop;
		if (currentSelectedElementOffsetTop === 0) {
			// this is an element in a group, which is collapsed
			// this value must not be taken in account
			continue;
		}

		if (minOffsetTop === null) {
			minOffsetTop = maxOffsetTop = currentSelectedElementOffsetTop;
		} else if (currentSelectedElementOffsetTop < minOffsetTop) {
			minOffsetTop = currentSelectedElementOffsetTop;
		} else if (currentSelectedElementOffsetTop > maxOffsetTop) {
			maxOffsetTop = currentSelectedElementOffsetTop;
		}
	}

	var navigationContentElOffsetHeight = EBX_Perspective.navigationContentEl.offsetHeight;

	var offsetTopMedian = null;

	if (EBX_Perspective.navigationPaneScrollTopHeightLZ === null) {
		EBX_Perspective.navigationPaneScrollTopHeightLZ = EBX_Perspective.navigationPaneScrollTop.offsetHeight;
		EBX_Perspective.navigationPaneScrollBottomHeightLZ = EBX_Perspective.navigationPaneScrollBottom.offsetHeight;
	}

	var visibleHeightOfNavigationPane = navigationContentElOffsetHeight - EBX_Perspective.navigationPaneScrollTopHeightLZ
			- EBX_Perspective.navigationPaneScrollBottomHeightLZ;

	var menuItemOffsetHeight = EBX_Perspective.selectedElementsLZ[0].offsetHeight;

	// if the distance between the selected root group and the selected action
	// is higher than the pane height, both will not be visible once the scroll is done,
	// because the root group will be hidden in top, and action will be hidden in bottom
	// in this case: prefer to display the selected action, which is more important
	if (maxOffsetTop - minOffsetTop >= visibleHeightOfNavigationPane - menuItemOffsetHeight) {
		offsetTopMedian = maxOffsetTop;
	} else {
		offsetTopMedian = (minOffsetTop + maxOffsetTop) / 2;
	}

	var targetScrollTop = offsetTopMedian - navigationContentElOffsetHeight / 2 + menuItemOffsetHeight / 2;

	new YAHOO.util.Scroll(EBX_Perspective.navigationContentEl, {
		scroll: {
			to: [ 0, targetScrollTop ]
		}
	}, EBX_Perspective.scrollToSelectedElementAnimationDuration / 1000, YAHOO.util.Easing.easeBoth).animate();
};

EBX_Perspective.buttonToClickToCollapseCurrentGroupRoot = null;

/* Map group id -> Object {
 * childrenCount: Number,
 * parentGroup: String group id, (optional)
 * childrenGroup: Array of group id, (optional)
 * expanded: boolean (lazy loading: false if undefined)
 * }
 * */
EBX_Perspective.group = [];

EBX_Perspective.sectionCSSClass = "ebx_perspectiveSection";
EBX_Perspective.groupsCSSClass = "ebx_perspectiveGroups";
EBX_Perspective.groupCSSClass = "ebx_perspectiveGroup";
EBX_Perspective.actionCSSClass = "ebx_perspectiveAction";

EBX_Perspective.groupExpandedCSSClass = "ebx_PerspectiveGroupExpanded";
EBX_Perspective.itemHiddenCSSClass = "ebx_perspectiveItemHidden";
EBX_Perspective.groupExpandedHideChildrenCSSClass = "ebx_PerspectiveGroupExpandedHideChildren";

EBX_Perspective.groupCollapseTransitionCSSClass = "ebx_PerspectiveGroupCollapseTransition";

EBX_Perspective.groupSubMenuModeCSSClass = "ebx_PerspectiveGroupSubMenuMode";

EBX_Perspective.sectionsReductionCSSTransitionDuration = 500;//ms
EBX_Perspective.groupExpandCollapseCSSTransitionDuration = 500;//ms

/* Default value. Overwritten by UIConstantsJS */
EBX_Perspective.originalMarginTopOfFloatingGroupLabel = -10;
EBX_Perspective.groupMoveUpIfNoEnoughSpace_GutterHeight = 25; // height of the scroll button (just for aesthetics)

EBX_Perspective.collapsibleBlockToClearWidthOnExpandPane = [];

EBX_Perspective.getTopParentId = function(groupId) {
	var currentGroupId = groupId;

	while (EBX_Perspective.group[currentGroupId].parentGroup !== undefined) {
		currentGroupId = EBX_Perspective.group[currentGroupId].parentGroup;
	}

	return currentGroupId;
};

EBX_Perspective.getParentsNumber = function(groupId) {
	var ret = 0, currentGroupId = groupId;

	while (EBX_Perspective.group[currentGroupId].parentGroup !== undefined) {
		ret++;
		currentGroupId = EBX_Perspective.group[currentGroupId].parentGroup;
	}

	return ret;
};

EBX_Perspective.getNumberOfVisibleItemsInThisGroupFromTop = function(groupId) {
	var topGroupId, count, currentGroup, currentChildrenGroupIds, currentChild, firstChildExpanded, i, len;

	topGroupId = EBX_Perspective.getTopParentId(groupId);

	count = 1;// top parent

	currentGroup = EBX_Perspective.group[topGroupId];

	if (currentGroup.expanded === undefined) {
		currentGroup.expanded = false;
	}

	// this condition is only used for the first loop, in next loops, current group is always expanded
	while (currentGroup.expanded === true) {
		// search for an expanded child
		currentChildrenGroupIds = currentGroup.childrenGroup;
		firstChildExpanded = null;
		if (currentChildrenGroupIds !== undefined) {
			for (i = 0, len = currentChildrenGroupIds.length; i < len; i++) {
				currentChild = EBX_Perspective.group[currentChildrenGroupIds[i]];
				if (currentChild.expanded === undefined) {
					currentChild.expanded = false;
				} else if (currentChild.expanded === true) {
					firstChildExpanded = currentChild;
					break;
				}
			}
		}

		// if first expanded child found
		if (firstChildExpanded !== null) {
			// count this child
			count++;
			// and go deeper
			currentGroup = firstChildExpanded;
		} else {
			// no child is expanded, so we are at the current opened level
			// so just return the current count plus current children count
			return count + currentGroup.childrenCount;
		}
	}

	// should return 1 (if top group is not expanded)
	return count;
};

EBX_Perspective.getCurrentOpenedGroupIdFromTop = function(topGroupId) {
	var currentGroup, currentGroupid, currentChildrenGroupIds, currentChild, firstChildExpanded, firstChildExpandedId, i, len;

	currentGroup = EBX_Perspective.group[topGroupId];
	currentGroupid = topGroupId;

	firstChildExpandedId = topGroupId;// just in case

	if (currentGroup.expanded === undefined) {
		currentGroup.expanded = false;
	}

	// this condition is only used for the first loop, in next loops, current group is always expanded
	while (currentGroup.expanded === true) {
		// search for an expanded child
		currentChildrenGroupIds = currentGroup.childrenGroup;
		firstChildExpanded = null;
		if (currentChildrenGroupIds !== undefined) {
			for (i = 0, len = currentChildrenGroupIds.length; i < len; i++) {
				currentChild = EBX_Perspective.group[currentChildrenGroupIds[i]];
				if (currentChild.expanded === undefined) {
					currentChild.expanded = false;
				} else if (currentChild.expanded === true) {
					firstChildExpanded = currentChild;
					firstChildExpandedId = currentChildrenGroupIds[i];
					break;
				}
			}
		}

		// if first expanded child found
		if (firstChildExpanded !== null) {
			// and go deeper
			currentGroup = firstChildExpanded;
			currentGroupid = firstChildExpandedId;
		} else {
			// no child is expanded, so we are at the current opened level
			return currentGroupid;
		}
	}

	// if top group is not expanded
	return null;
};

EBX_Perspective.currentSubGroupCollapsibleBlockToScroll = null;
EBX_Perspective.setSubGroupScroll = function(collapsibleBlockContent, targetHeight) {
	if (EBX_Perspective.currentSubGroupCollapsibleBlockToScroll !== null
			&& EBX_Perspective.currentSubGroupCollapsibleBlockToScroll !== collapsibleBlockContent) {
		EBX_Perspective.removeCurrentSubGroupScroll();
	}

	EBX_Perspective.currentSubGroupCollapsibleBlockToScroll = collapsibleBlockContent;

	EBX_Perspective.currentSubGroupCollapsibleBlockToScroll.style.overflowY = "scroll";
	EBX_Perspective.currentSubGroupCollapsibleBlockToScroll.style.height = targetHeight + "px";

	// TODO scroll button and mask scrollbar
};

EBX_Perspective.removeSubGroupScroll = function(parentEl) {
	if (EBX_Perspective.currentSubGroupCollapsibleBlockToScroll === null) {
		return;
	}

	if (EBX_Utils.isChildOf(EBX_Perspective.currentSubGroupCollapsibleBlockToScroll, parentEl) === false) {
		return;
	}

	// TODO remove scroll buttons

	EBX_Perspective.currentSubGroupCollapsibleBlockToScroll.style.overflowY = "";
	EBX_Perspective.currentSubGroupCollapsibleBlockToScroll.style.height = "";

	EBX_Perspective.currentSubGroupCollapsibleBlockToScroll = null;
};

EBX_Perspective.updateFloatingGroupPosition = function(groupId) {
	if (EBX_Perspective.isNavigationPaneReduced === false) {
		return;
	}

	// move up if the content exceeds the bottom border of window

	var topGroupId = EBX_Perspective.getTopParentId(groupId);
	var topGroup = document.getElementById(topGroupId);

	var aElTop = EBX_Utils.getFirstDirectChildMatchingTagName(topGroup, "a");
	EBX_Perspective.initPerspectiveItemA(aElTop);

	var collapsibleBlockTop = EBX_Utils.getFirstDirectChildMatchingCSSClass(topGroup, "ebx_CollapsibleBlock");

	var visibleItemsNumber = EBX_Perspective.getNumberOfVisibleItemsInThisGroupFromTop(groupId);

	var navigationHeight = EBX_Perspective.navigationContentEl.clientHeight;
	if (collapsibleBlockTop.ebx_originalOffsetTop === undefined) {
		collapsibleBlockTop.ebx_originalOffsetTop = collapsibleBlockTop.offsetTop;
		if (EBX_LayoutManager.browser == "Firefox") {
			// take the scroll in account, because the content follows the scroll
			collapsibleBlockTop.ebx_originalOffsetTop += EBX_Perspective.navigationContentEl.scrollTop;
		}
	}
	var originalOffsetTop = collapsibleBlockTop.ebx_originalOffsetTop - EBX_Perspective.itemHeight;
	var visibleItemsHeight = visibleItemsNumber * EBX_Perspective.itemHeight;

	// case if there is no enough vertical space to display all => scroll
	if (EBX_Perspective.groupMoveUpIfNoEnoughSpace_GutterHeight + visibleItemsHeight + EBX_Perspective.groupMoveUpIfNoEnoughSpace_GutterHeight > navigationHeight) {
		var availableHeight = navigationHeight - EBX_Perspective.groupMoveUpIfNoEnoughSpace_GutterHeight * 2;
		// remove parent heights (and current group)
		var currentOpenedGroupId = EBX_Perspective.getCurrentOpenedGroupIdFromTop(topGroupId);
		var parentsHeight = (EBX_Perspective.getParentsNumber(currentOpenedGroupId) + 1) * EBX_Perspective.itemHeight;
		visibleItemsHeight = availableHeight;

		var collapsibleBlockContent = EBX_Utils.getFirstDirectChildMatchingCSSClass(EBX_Utils.getFirstDirectChildMatchingCSSClass(document
				.getElementById(currentOpenedGroupId), "ebx_CollapsibleBlock"), "ebx_CollapsibleBlockContent");

		EBX_Perspective.setSubGroupScroll(collapsibleBlockContent, availableHeight - parentsHeight);
	} else {
		EBX_Perspective.removeSubGroupScroll(document.getElementById(groupId));
	}

	var remainingSpaceBelowCollapsibleBlock = navigationHeight
			- (originalOffsetTop + visibleItemsHeight + EBX_Perspective.groupMoveUpIfNoEnoughSpace_GutterHeight);

	if (EBX_LayoutManager.browser == "Firefox") {
		// take the scroll in account, because the content follows the scroll
		remainingSpaceBelowCollapsibleBlock += EBX_Perspective.navigationContentEl.scrollTop;
	}

	var marginTopForCollapsibleBlock = 0;
	var marginTopForLabel = 0;

	// maybe the actual position of the label is enough to display collapsibleBlock below
	if (remainingSpaceBelowCollapsibleBlock + EBX_Perspective.originalMarginTopOfFloatingGroupLabel > aElTop.ebx_labelFirstLevelMarginTop) {
		// don't move the label, but define the marginTopForCollapsibleBlock from the label position
		marginTopForLabel = aElTop.ebx_labelFirstLevelMarginTop;
		marginTopForCollapsibleBlock = aElTop.ebx_labelFirstLevelMarginTop - EBX_Perspective.originalMarginTopOfFloatingGroupLabel;
	} else if (remainingSpaceBelowCollapsibleBlock < 0) {
		// there is no enough space below collapsibleBlock
		// move up

		marginTopForLabel = remainingSpaceBelowCollapsibleBlock + EBX_Perspective.originalMarginTopOfFloatingGroupLabel;

		marginTopForCollapsibleBlock = remainingSpaceBelowCollapsibleBlock;

	} else {
		// does this case exists? - even in case of scroll...?
		//		alert("move down: not implemented case");
	}

	aElTop.ebx_labelFirstLevel.style.marginTop = marginTopForLabel + "px";
	collapsibleBlockTop.style.marginTop = marginTopForCollapsibleBlock + "px";
};

EBX_Perspective.expandGroup = function(collapsibleBlockId) {
	var currentGroup, sibling, isGroupRoot, groupList, groupChild, expandCollapseButton;

	EBX_CollapsibleBlock.expand(collapsibleBlockId);

	currentGroup = EBX_Utils.getFirstParentMatchingCSSClass(document.getElementById(collapsibleBlockId), EBX_Perspective.groupCSSClass);

	EBX_Utils.addCSSClass(currentGroup, EBX_Perspective.groupExpandedCSSClass);
	EBX_Perspective.group[currentGroup.id].expanded = true;

	EBX_Perspective.updateFloatingGroupPosition(currentGroup.id);

	isGroupRoot = EBX_Perspective.group[currentGroup.id].parentGroup === undefined;

	if (isGroupRoot === true) {

		sibling = currentGroup.parentNode.parentNode.parentNode.firstChild;
		do {
			if (EBX_Utils.matchCSSClass(sibling, EBX_Perspective.sectionCSSClass)) {
				groupList = EBX_Utils.getFirstDirectChildMatchingCSSClass(sibling, EBX_Perspective.groupsCSSClass);
				// if the section is not empty (#14689)
				if (groupList !== null) {
					groupChild = groupList.firstChild;
					do {
						if (EBX_Utils.matchCSSClass(groupChild, EBX_Perspective.groupCSSClass)) {
							expandCollapseButton = EBX_Utils.getFirstRecursiveChildMatchingTagName(groupChild, "button");
							if (groupChild !== currentGroup) {
								if (EBX_Utils.matchCSSClass(expandCollapseButton, "ebx_Collapse")) {
									expandCollapseButton.click();
									// roll-up expanded group
									EBX_Perspective.mouseleaveItemFirstLevelListener(EBX_Utils.getFirstDirectChildMatchingTagName(groupChild, "a"),
											true);
								}
							} else {
								// save these in case of toggle reduced pane (collapse current group)
								EBX_Perspective.buttonToClickToCollapseCurrentGroupRoot = expandCollapseButton;
							}
						}
					} while ((groupChild = groupChild.nextSibling));
				}
			}
		} while ((sibling = sibling.nextSibling));
	} else {
		sibling = currentGroup.parentNode.firstChild;
		do {
			if (EBX_Utils.matchCSSClass(sibling, EBX_Perspective.groupCSSClass)) {
				if (sibling !== currentGroup) {
					expandCollapseButton = EBX_Utils.getFirstRecursiveChildMatchingTagName(sibling, "button");
					if (EBX_Utils.matchCSSClass(expandCollapseButton, "ebx_Collapse")) {
						expandCollapseButton.click();
					}
					EBX_Utils.addCSSClass(sibling, EBX_Perspective.itemHiddenCSSClass);
				}
			} else if (EBX_Utils.matchCSSClass(sibling, EBX_Perspective.actionCSSClass)) {
				EBX_Utils.addCSSClass(sibling, EBX_Perspective.itemHiddenCSSClass);
			}
		} while ((sibling = sibling.nextSibling));
	}

	window.setTimeout(EBX_Perspective.refreshScrollButtons, EBX_Perspective.groupExpandCollapseCSSTransitionDuration);
};

EBX_Perspective.collapseGroup = function(collapsibleBlockId) {
	var currentGroup,
		isGroupRoot,
		aEl,
		collapsibleBlock,
		sibling;

	EBX_CollapsibleBlock.collapse(collapsibleBlockId);

	currentGroup = EBX_Utils.getFirstParentMatchingCSSClass(document.getElementById(collapsibleBlockId), EBX_Perspective.groupCSSClass);

	EBX_Utils.removeCSSClass(currentGroup, EBX_Perspective.groupExpandedCSSClass);
	EBX_Perspective.group[currentGroup.id].expanded = false;

	EBX_Perspective.updateFloatingGroupPosition(currentGroup.id);

	isGroupRoot = EBX_Perspective.group[currentGroup.id].parentGroup === undefined;

	if (isGroupRoot === true) {
		//		if (EBX_Perspective.isNavigationPaneReduced === true) {
		// XXX less performant, but important if a group is expanded when the pane is expanding
		// restore the default margin-top

		EBX_Utils.addCSSClass(currentGroup, EBX_Perspective.groupCollapseTransitionCSSClass);

		aEl = EBX_Utils.getFirstDirectChildMatchingTagName(currentGroup, "a");
		if (aEl.ebx_labelFirstLevelMarginTop !== undefined) {
			aEl.ebx_labelFirstLevel.style.marginTop = aEl.ebx_labelFirstLevelMarginTop + "px";
		}

		collapsibleBlock = EBX_Utils.getFirstDirectChildMatchingCSSClass(currentGroup, "ebx_CollapsibleBlock");

		collapsibleBlock.style.marginTop = "";
		//		}

		EBX_Perspective.buttonToClickToCollapseCurrentGroupRoot = null;
	} else {
		sibling = currentGroup.parentNode.firstChild;
		do {
			if (EBX_Utils.matchCSSClass(sibling, EBX_Perspective.groupCSSClass)) {
				if (sibling !== currentGroup) {
					EBX_Utils.removeCSSClass(sibling, EBX_Perspective.itemHiddenCSSClass);
				}
			} else if (EBX_Utils.matchCSSClass(sibling, EBX_Perspective.actionCSSClass)) {
				EBX_Utils.removeCSSClass(sibling, EBX_Perspective.itemHiddenCSSClass);
			}
		} while ((sibling = sibling.nextSibling));
	}

	window.setTimeout(EBX_Perspective.refreshScrollButtons, EBX_Perspective.groupExpandCollapseCSSTransitionDuration);

	window.setTimeout(function() {
		EBX_Utils.removeCSSClass(currentGroup, EBX_Perspective.groupCollapseTransitionCSSClass);
	}, EBX_Perspective.groupExpandCollapseCSSTransitionDuration);
};

EBX_Perspective.actionLabelFirstLevelCSSClass = "ebx_PerspectiveActionLabelFirstLevel";
EBX_Perspective.groupLabelFirstLevelCSSClass = "ebx_PerspectiveGroupLabelWithButtonFirstLevel";

EBX_Perspective.labelFirstLevelFloatingCSSClass = "ebx_PerspectiveLabelFirstLevelFloating";

EBX_Perspective.groupLabelFirstLevelFloatingCloseTransitionCSSClass = "ebx_PerspectiveGroupLabelFirstLevelFloatingCloseTransition";
EBX_Perspective.groupLabelFirstLevelFloatingClosedTransitionEndCSSClass = "ebx_PerspectiveGroupLabelFirstLevelFloatingClosedTransitionEnd";

/* Default value. Overwritten by UIConstantsJS */
EBX_Perspective.paddingRightToAddToWidthForLabelFirstLevel = 20;

EBX_Perspective.currentPerspectiveItemAToSetLabelWidth = null;

EBX_Perspective.initPerspectiveItemA = function(perspectiveItemA) {
	var collapsibleBlockSibling, collapsibleBlockSiblingWidth;

	collapsibleBlockSibling = EBX_Utils.getFirstDirectChildMatchingCSSClass(perspectiveItemA.parentNode, "ebx_CollapsibleBlock");
	if (collapsibleBlockSibling != null) {
		// group

		perspectiveItemA.ebx_labelFirstLevel = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(perspectiveItemA,
				EBX_Perspective.groupLabelFirstLevelCSSClass);

		if (perspectiveItemA.ebx_originalLabelWidth === undefined) {
			perspectiveItemA.ebx_originalLabelWidth = perspectiveItemA.ebx_labelFirstLevel.offsetWidth
					+ EBX_Perspective.paddingRightToAddToWidthForLabelFirstLevel;
		}

		collapsibleBlockSiblingWidth = collapsibleBlockSibling.offsetWidth;

		if (perspectiveItemA.ebx_originalLabelWidth < collapsibleBlockSiblingWidth) {
			perspectiveItemA.ebx_originalLabelWidth = collapsibleBlockSiblingWidth;
		} else {
			// set the sub-menu to the same width of longer group title
			collapsibleBlockSibling.style.width = perspectiveItemA.ebx_originalLabelWidth + "px";

			// TODO keep it for the pane expanding, else, the sub group will not be auto-width in navigation pane expanded mode
			if (!EBX_Utils.arrayContains(EBX_Perspective.collapsibleBlockToClearWidthOnExpandPane, collapsibleBlockSibling)) {
				EBX_Perspective.collapsibleBlockToClearWidthOnExpandPane.push(collapsibleBlockSibling);
			}
		}
	} else {
		// action

		perspectiveItemA.ebx_labelFirstLevel = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(perspectiveItemA,
				EBX_Perspective.actionLabelFirstLevelCSSClass);

		perspectiveItemA.ebx_originalLabelWidth = perspectiveItemA.ebx_labelFirstLevel.offsetWidth
				+ EBX_Perspective.paddingRightToAddToWidthForLabelFirstLevel;
	}

	EBX_Utils.addCSSClass(perspectiveItemA.ebx_labelFirstLevel, EBX_Perspective.labelFirstLevelFloatingCSSClass);
};

EBX_Perspective.mouseenterItemFirstLevelListener = function(perspectiveItemA) {
	var scrollTop, marginTop;

	if (EBX_Perspective.isNavigationPaneReduced !== true) {
		return;
	}

	if (perspectiveItemA.ebx_labelFirstLevel === undefined) {
		EBX_Perspective.initPerspectiveItemA(perspectiveItemA);
	}

	// move only if not expanded
	if (EBX_Utils.matchCSSClass(perspectiveItemA.parentNode, EBX_Perspective.groupExpandedCSSClass) === false) {

		if (EBX_Utils.matchCSSClass(perspectiveItemA.parentNode, EBX_Perspective.groupCSSClass) === true) {
			EBX_Utils.removeCSSClass(perspectiveItemA.ebx_labelFirstLevel, EBX_Perspective.groupLabelFirstLevelFloatingCloseTransitionCSSClass);
			EBX_Utils.removeCSSClass(perspectiveItemA.ebx_labelFirstLevel, EBX_Perspective.groupLabelFirstLevelFloatingClosedTransitionEndCSSClass);
		}

		if (EBX_LayoutManager.browser == "Firefox") {
			// the label automatically follows the scroll: no need to apply a negative margin-top
			scrollTop = 0;
		} else {
			scrollTop = EBX_Perspective.navigationContentEl.scrollTop;
		}
		marginTop = -scrollTop + EBX_Perspective.originalMarginTopOfFloatingGroupLabel;

		perspectiveItemA.ebx_labelFirstLevelMarginTop = marginTop;
		perspectiveItemA.ebx_labelFirstLevel.style.marginTop = marginTop + "px";
	}

	if (EBX_Utils.matchCSSClass(perspectiveItemA.parentNode, EBX_Perspective.groupCSSClass) === true) {
		window.clearTimeout(perspectiveItemA.ebx_SetCSSClosedEndTransition);
	}

	// delay set width, else, no animation (because only final width set in this function/call-stack is taken into account)
	window.setTimeout(function() {
		perspectiveItemA.ebx_labelFirstLevel.style.width = perspectiveItemA.ebx_originalLabelWidth + "px";
	}, 50);
};

EBX_Perspective.stillOpenedItemFirstLevel = [];

EBX_Perspective.mouseleaveItemFirstLevelListener = function(perspectiveItemA, closeEvenIfExpanded, closeEvenIfNavigationPaneExpanded) {
	var scrollTop, marginTop;

	if (closeEvenIfNavigationPaneExpanded !== true && EBX_Perspective.isNavigationPaneReduced !== true) {
		return;
	}

	if (perspectiveItemA.ebx_labelFirstLevel === undefined) {
		EBX_Perspective.initPerspectiveItemA(perspectiveItemA);
	}

	// don't close if expanded
	if (closeEvenIfExpanded !== true && EBX_Utils.matchCSSClass(perspectiveItemA.parentNode, EBX_Perspective.groupExpandedCSSClass)) {
		// but keep it, to close it in case of expanding pane
		if (!EBX_Utils.arrayContains(EBX_Perspective.stillOpenedItemFirstLevel, perspectiveItemA)) {
			EBX_Perspective.stillOpenedItemFirstLevel.push(perspectiveItemA);
		}
		return;
	}

	if (EBX_Utils.matchCSSClass(perspectiveItemA.parentNode, EBX_Perspective.groupCSSClass) === true) {
		EBX_Utils.addCSSClass(perspectiveItemA.ebx_labelFirstLevel, EBX_Perspective.groupLabelFirstLevelFloatingCloseTransitionCSSClass);
	}

	if (EBX_LayoutManager.browser == "Firefox") {
		// the label automatically follows the scroll
		scrollTop = 0;
	} else {
		scrollTop = EBX_Perspective.navigationContentEl.scrollTop;
	}
	marginTop = -scrollTop + EBX_Perspective.originalMarginTopOfFloatingGroupLabel;

	perspectiveItemA.ebx_labelFirstLevelMarginTop = marginTop;
	perspectiveItemA.ebx_labelFirstLevel.style.marginTop = marginTop + "px";

	window.setTimeout(function() {
		perspectiveItemA.ebx_labelFirstLevel.style.width = "";// reset to 0
	}, 50);

	perspectiveItemA.ebx_SetCSSClosedEndTransition = window.setTimeout(function() {
		if (EBX_Utils.matchCSSClass(perspectiveItemA.parentNode, EBX_Perspective.groupCSSClass) === true) {
			EBX_Utils.addCSSClass(perspectiveItemA.ebx_labelFirstLevel, EBX_Perspective.groupLabelFirstLevelFloatingClosedTransitionEndCSSClass);
			EBX_Utils.removeCSSClass(perspectiveItemA.ebx_labelFirstLevel, EBX_Perspective.groupLabelFirstLevelFloatingCloseTransitionCSSClass);
		}
		perspectiveItemA.ebx_labelFirstLevel.style.marginTop = "";
	}, EBX_Perspective.sectionsReductionCSSTransitionDuration);
};

/********* ebx_perspectives_admin.js *********/
function ebx_perspectiveAdmin_onServiceChange(selection, jsonParameters) {
	var obj = JSON.parse(jsonParameters);

	if (selection == null) {
		document.getElementById(obj.id).innerHTML = "";
		return;
	}

	var ajaxHandler = new EBX_AJAXResponseHandler();

	ajaxHandler.handleAjaxResponseSuccess = function(responseContent) {
		var item = document.getElementById(obj.id);
		if (item == null) {
			document.getElementById(obj.id).innerHTML = "";
		} else {
			document.getElementById(obj.id).innerHTML = responseContent;
		}
	};

	ajaxHandler.handleAjaxResponseFailed = function(responseContent) {
		document.getElementById(obj.id).innerHTML = "";
	};

	var params = "__KEY__=" + encodeURIComponent(selection.key);

	var form = document.forms[EBX_Form.WorkspaceFormId];
	if (form != null) {
		for ( var i = 0; i < form.length; ++i) {
			var elem = form.elements[i];

			if (elem.name.indexOf("__Action_ServiceParameter_") == 0) {
				params += "&" + elem.name + "=" + encodeURIComponent(elem.value);
			}
		}
	}

	ajaxHandler.sendRequest(obj.url + "&" + params);
}

function ebx_perspectiveAdmin_onMenuItemTypeChange(selection, rootId) {
	var sectionDisplay = "none";
	var groupOrActionDisplay = "none";
	var actionDisplay = "none";

	if (selection != null) {
		switch (selection.key) {
			case "section":
				sectionDisplay = "";
				break;

			case "group":
				groupOrActionDisplay = "";
				break;

			case "action":
				groupOrActionDisplay = "";
				actionDisplay = "";
				break;
		}
	}

  document.getElementById(rootId + "_Name").style.display = actionDisplay;
	document.getElementById(rootId + "_HasTopSeparator").style.display = sectionDisplay;
	document.getElementById(rootId + "_Parent").style.display = groupOrActionDisplay;
	document.getElementById(rootId + "_Icon").style.display = groupOrActionDisplay;
	document.getElementById(rootId + "_Action").style.display = actionDisplay;
	document.getElementById(rootId + "_SelectionOnClose").style.display = actionDisplay;
}

function ebx_perspectiveAdmin_onMenuItemIconTypeChange(selection, rootId) {
	var cssDisplay = "none";
	var urlDisplay = "none";

	if (selection != null) {
		switch (selection) {
			case "css":
				cssDisplay = "";
				break;

			case "url":
				urlDisplay = "";
				break;
		}
	}

	document.getElementById(rootId + "_css").style.display = cssDisplay;
	document.getElementById(rootId + "_url").style.display = urlDisplay;
}

function ebx_perspectiveAdmin_displayIconSelector(iconDisplayId, toggleButtonId, title, iconNamesUrl) {
	var toggleButton = document.getElementById(toggleButtonId);
	toggleButton.style.cursor = "wait";

	var callback = new Object();

	callback.success = function(response) {
		var jsonData = JSON.parse(response.responseText);

		var panel = ebx_perspectiveAdmin_getIconSelectorPanel(title, jsonData.iconNames);
		panel.cfg.setProperty('context', [ iconDisplayId, 'tl', 'bl' ]);
		panel.toggleButtonId = toggleButtonId;
		panel.iconDisplayId = iconDisplayId;

		var mask = ebx_perspectiveAdmin_getMask();
		document.body.appendChild(mask);
		mask.style.display = "";

		toggleButton.style.cursor = "default";
		panel.show();
	};

	callback.failure = function(response) {
		toggleButton.style.cursor = "default";
		EBX_ButtonUtils.setStateToToggleButton(toggleButton, false);
	};

	callback.cache = true;

	YAHOO.util.Connect.asyncRequest('GET', iconNamesUrl, callback);
}

function ebx_perspectiveAdmin_hideIconSelector() {
	var panel = ebx_perspectiveAdmin_getIconSelectorPanel();

	panel.hide();
	ebx_perspectiveAdmin_getMask().style.display = "none";

	if (panel.toggleButtonId != null) {
		var toggleButton = document.getElementById(panel.toggleButtonId);
		EBX_ButtonUtils.setStateToToggleButton(toggleButton, false);
		panel.toggleButtonId = null;
	}
}

function ebx_perspectiveAdmin_onIconSelectorItemClick(iconName) {
	var iconClassName = "fa-" + iconName;

	var panel = ebx_perspectiveAdmin_getIconSelectorPanel();

	if (panel.iconDisplayId != null) {
		var iconDisplay = document.getElementById(panel.iconDisplayId);

		var className = iconDisplay.className;
		if (className == null) {
			iconDisplay.className = iconClassName;
		} else {
			var classNames = className.split(" ");

			var className = "";
			for ( var index = 0; index < classNames.length; ++index) {
				if (classNames[index].indexOf("fa-") != 0) {
					className += classNames[index];
					className += " ";
				}
			}

			className += iconClassName;
			iconDisplay.className = className;
		}
	}

	document.getElementsByName("__Icon_Reference_Css")[0].value = iconClassName;
	ebx_perspectiveAdmin_hideIconSelector();
}

function ebx_perspectiveAdmin_getIconSelectorPanel(title, iconNames) {
	var panelId = "ebx_perspectiveAdmin_IconSelector";

	var panel = window[panelId];

	if (iconNames == null) {
		return panel;
	}

	if (panel == null) {
		panel = new YAHOO.widget.Overlay("Ebx_IconSelectorPanel", {
			constraintoviewport: true,
			visible: false,
		});

		panel.render(document.body);
		window[panelId] = panel;
	}

	var content = "<div id='Ebx_IconSelectorPanel_Body' class='ebx_iconSelector ebx_ColoredBorder'>";
	if (title != null) {
		content += "<div class='ebx_iconSelectorHeader'>";
		content += title;
		content += "</div>";
	}
	content += "<div class='ebx_iconSelectorContent'>";

	var maxPos = iconNames.length;

	var pos = 0;
	while (pos < maxPos) {
		for ( var column = 0; (column < 15) && (pos < maxPos); ++column) {
			if (column >= 1) {
				content += "&nbsp;";
			}
			var iconName = iconNames[pos++];
			content += "<span class='ebx_iconSelectorItem fa fa-";
			content += iconName;
			content += "' onclick='ebx_perspectiveAdmin_onIconSelectorItemClick(\"" + iconName + "\")'></span>";
		}
		content += "<br/>";
	}
	content += "</div>";
	content += "</div>";
	panel.setBody(content);

	ebx_forceCSSReloadForIE8();

	return panel;
}

function ebx_perspectiveAdmin_getMask() {
	var maskId = "ebx_perspectiveAdmin_Mask";

	var mask = document.getElementById(maskId);
	if (mask == null) {
		mask = document.createElement("div");
		mask.id = maskId;
		mask.className = "ebx_PageMask";
		mask.style.display = "none";
		mask.onclick = ebx_perspectiveAdmin_hideIconSelector;
	}

	return mask;
}

function ebx_forceCSSReloadForIE8() {
	if ((YAHOO.env.ua.ie > 0) && (YAHOO.env.ua.ie <= 8)) {
		// This code is required with IE8 to reload CSS :before selectors.

		var head = document.getElementsByTagName('head')[0], style = document.createElement('style');
		style.type = 'text/css';
		style.styleSheet.cssText = ':before,:after{content:none !important';
		head.appendChild(style);
		setTimeout(function() {
			head.removeChild(style);
		}, 0);
	}
}

/********* ebx_perspectivesPreferences.js *********/
/*
 * This object must be initialized calling EBX_RecommendedPerspectives.init(selectedItemPath).
 * Only then, other methods will be available.
 */
var EBX_RecommendedPerspectives = (function() {
	"use strict";
	
	var selectedItemPath;
	var hasSelection = true;
	
	return {
		init: init
	};
	
	function init(selectedItemPath) {
		setSelectedItemPath(selectedItemPath);
		hasSelection = getSelectedItemRow() != null;
		fixLayout();
		EBX_LayoutManager.resizeWorkspaceListeners.push(fixLayout);
		
// -------------------- //
// ACCESSIBLE FUNCTIONS //
// -------------------- //
		
		EBX_RecommendedPerspectives = {
			select: select,
			action: action,
			eventOnSelection: eventOnSelection,
			moveTop: moveTop,
			moveUp: moveUp,
			moveDown: moveDown,
			moveBottom: moveBottom,
			deleteRow: deleteRow
		};
	}
	
// -------------- //
// IMPLEMENTATION //
// -------------- //
	
	function setSelectedItemPath(newPath) {
		selectedItemPath = newPath;
	}
	
	function getSelectedItemPath() {
		return selectedItemPath;
	}
	
	function getSelectedItemRow() {
		if (!hasSelection) {
			return null;
		}
		
		var selectedItemPath = getSelectedItemPath();
		if (!EBX_FormNodeIndex.isFormNodeDefined(selectedItemPath)) {
			return null;
		}
		
		var selectedItemRadioButtonNode = EBX_FormNodeIndex.getFormNode(selectedItemPath);
		if (!selectedItemRadioButtonNode) {
			return null;
		}

		var editor = selectedItemRadioButtonNode.getEditor();
		if (!editor) {
			return null;
		}
		
		var radioButtonElements = editor.getRdoBtns();
		
		var selectedRadioButton = EBX_Utils.filter(radioButtonElements, function(radio) {
			return radio.checked === true;
		})[0];
		
		if (!selectedRadioButton) {
			return null;
		}
		
		return selectedRadioButton.parentElement.parentElement;
	}
	
	function select(row) {
		EBX_Utils.forEach(row.parentElement.children, function(row) {
			EBX_Utils.removeCSSClass(row, "ebx_Selected");
		});
		
		EBX_Utils.addCSSClass(row, "ebx_Selected");
		hasSelection = true;
		row.children[0].children[0].click();
	}
	
	function action(url) {
		var ajaxHandler = new EBX_AJAXResponseHandler();
		
		ajaxHandler.sendRequest(url);
	}
	
	function eventOnSelection(url) {
		var selectedRow = getSelectedItemRow();
		if (selectedRow !== null) {
			window.location.href = url;
		}
	}
	
	function moveTop(ajaxUrl) {
		var selectedRow = getSelectedItemRow();
		if (selectedRow === null) return;
		
		var parent = selectedRow.parentElement;
		
		var firstElement = parent.children[0];
		if (selectedRow === firstElement) return;
		
		var ajaxHandler = new EBX_AJAXResponseHandler();
		
		ajaxHandler.handleAjaxResponseSuccess = function(responseContent) {
			parent.insertBefore(selectedRow, firstElement);
		};
		
		ajaxHandler.sendRequest(ajaxUrl);
	}
	
	function moveUp(ajaxUrl) {
		var selectedRow = getSelectedItemRow();
		if (selectedRow === null) return;
		
		var parent = selectedRow.parentElement;
		
		var previousElement = EBX_Utils.previousElementSibling(selectedRow);
		if (previousElement === null) return;
		
		var ajaxHandler = new EBX_AJAXResponseHandler();
		
		ajaxHandler.handleAjaxResponseSuccess = function(responseContent) {
			parent.insertBefore(selectedRow, previousElement);
		};
		
		ajaxHandler.sendRequest(ajaxUrl);
	}
	
	function moveDown(ajaxUrl) {
		var selectedRow = getSelectedItemRow();
		if (selectedRow === null) return;
		
		var parent = selectedRow.parentElement;
		
		var nextElement = EBX_Utils.nextElementSibling(selectedRow);
		if (nextElement === null) return;
		
		var ajaxHandler = new EBX_AJAXResponseHandler();
		
		ajaxHandler.handleAjaxResponseSuccess = function(responseContent) {
			parent.insertBefore(selectedRow, EBX_Utils.nextElementSibling(nextElement));
		};
		
		ajaxHandler.sendRequest(ajaxUrl);
	}
	
	function moveBottom(ajaxUrl) {
		var selectedRow = getSelectedItemRow();
		if (selectedRow === null) return;
		
		var parent = selectedRow.parentElement;
		
		var lastElement = parent.children[parent.children.length - 1];
		if (selectedRow === lastElement) return;
		
		var ajaxHandler = new EBX_AJAXResponseHandler();
		
		ajaxHandler.handleAjaxResponseSuccess = function(responseContent) {
			parent.insertBefore(selectedRow, EBX_Utils.nextElementSibling(lastElement));
		};
		
		ajaxHandler.sendRequest(ajaxUrl);
	}
	
	function deleteRow(ajaxUrl) {
		var selectedRow = getSelectedItemRow();
		if (selectedRow === null) return;
		
		hasSelection = false;
		
		var ajaxHandler = new EBX_AJAXResponseHandler();
		
		ajaxHandler.handleAjaxResponseSuccess = function(responseContent) {
			if (responseContent) {
				var json = YAHOO.lang.JSON.parse(responseContent);
				var redirectUrl = json.redirectUrl;
				if (redirectUrl)
					window.location.href = redirectUrl;
			}
			
			selectedRow.parentElement.removeChild(selectedRow);
			fixLayout();
		};
		
		ajaxHandler.sendRequest(ajaxUrl);
	}
	
	function fixLayout() {
		var header = document.querySelector("#ebx-defaultPerspectives .ebx-list-header");
		if (!header) return;
		
		var headerItems = document.querySelector("#ebx-defaultPerspectives .ebx-list-header > div");
		if (!headerItems) return;
		
		var firstRow = document.querySelector("#ebx-defaultPerspectives label");
		if (!firstRow) return;
		
		copyWidth(firstRow.parentElement, header);
		copyWidth(firstRow.children[1], headerItems.children[0]);
		copyWidth(firstRow.children[2], headerItems.children[1]);
		
		function copyWidth(from, to, offset) {
			var width = from.offsetWidth;
			to.style.width = width + "px";
		}
	}
	
})();

/********* ebx_webComponentLinkGenerator.js *********/
var ebx_wcg = (function() {
	"use strict";
	
	var CSS_CLASS_HIDDEN = "ebx-wcg-hidden";
	
	// list of parameters of each service
	var serviceParameters;
	
	// list of parameters of each service
	// dynamically initialized from serviceParameters
	var serviceParamIds = [];
	
	var ajaxCallbacks = {};
	
	var pathPrefix = "";

  // Preview is deferred so that the preview url can be refreshed.
  var previewCallback;
  var isPreviewRequested = false;
	
	return {
		registerAjaxCallback: registerAjaxCallback,
		registerServiceParameters: registerServiceParameters,
		generateLink: generateLink,
    setPathPrefix: setPathPrefix,
    preview: preview,
    setPreviewCallback: setPreviewCallback
	};
	
	function setPathPrefix(newPathPrefix) {
		pathPrefix = newPathPrefix;
	}
	
	function getPath(aPath) {
		return pathPrefix + "/" + aPath;
	}
	
	function registerAjaxCallback(name, url) {
		ajaxCallbacks[name] = url;
	}
	
	function registerServiceParameters(declaration) {
		serviceParameters = declaration;
		
		for (var key in serviceParameters) {
			if (!serviceParameters.hasOwnProperty(key)) {
				continue;
			}
			
			var paramList = serviceParameters[key];
			EBX_Utils.forEach(paramList, function(param) {
				if (EBX_Utils.arrayContains(serviceParamIds, param) === false) {
					serviceParamIds.push(param);
				}
			});
		}
	}
	
	function generateLink() {
    previewCallback = undefined;

		var ajaxHandler = new EBX_AJAXResponseHandler();
		
		ajaxHandler.handleAjaxResponseSuccess = function(responseContent) {
			var result = document.getElementById("ebx-wcg-result");
			result.innerHTML = responseContent;
		};

		ajaxHandler.handleAjaxResponseFailed = function(responseContent) {
			EBX_Logger.log("AJAX request failed", EBX_Logger.error);
		};

		ajaxHandler.sendRequest(ajaxCallbacks["generateLink"]);
		
		refreshView();
	}
	
	function refreshView() {
		refreshSession();
		refreshViewType();
		manageServiceParameters();
		refreshFirstCallDisplay();
		refreshFeatures();
	}
	
	function manageServiceParameters() {
		var selectedServiceParameters;
		if (isPerspective()) {
			selectedServiceParameters = [];
		} else {
			var selectedService = ebx_form_getValue(getPath("service")).key;
			selectedServiceParameters = serviceParameters[selectedService];
		}
		
		EBX_Utils.forEach(serviceParamIds, function(id) {
			var parameterRow = document.getElementById("ebx-row-" + id);
			if (selectedServiceParameters && EBX_Utils.arrayContains(selectedServiceParameters, id) === true) {
				EBX_Utils.removeCSSClass(parameterRow, CSS_CLASS_HIDDEN);
			} else {
				EBX_Utils.addCSSClass(parameterRow, CSS_CLASS_HIDDEN);
			}
		});
	}
	
	function refreshViewType() {
		var serviceRow = document.getElementById("ebx-row-service");
		var serviceParametersRow = document.querySelector("#ebx-row-service + tr");
		var perspectiveNameRow = document.getElementById("ebx-row-perspectiveName");
		var perspectiveActionIdRow = document.getElementById("ebx-row-perspectiveActionId");
    var perspectiveActionNameRow = document.getElementById("ebx-row-perspectiveActionName");
		var pageSizeRow = document.getElementById("ebx-row-pageSize");
		
		if (isPerspective()) {
			EBX_Utils.addCSSClass(serviceRow, CSS_CLASS_HIDDEN);
			EBX_Utils.addCSSClass(serviceParametersRow, CSS_CLASS_HIDDEN);
			EBX_Utils.removeCSSClass(perspectiveNameRow, CSS_CLASS_HIDDEN);
			EBX_Utils.removeCSSClass(perspectiveActionIdRow, CSS_CLASS_HIDDEN);
      EBX_Utils.removeCSSClass(perspectiveActionNameRow, CSS_CLASS_HIDDEN);

			EBX_Utils.addCSSClass(pageSizeRow, CSS_CLASS_HIDDEN);
			
		} else {
			EBX_Utils.removeCSSClass(serviceRow, CSS_CLASS_HIDDEN);
			EBX_Utils.removeCSSClass(serviceParametersRow, CSS_CLASS_HIDDEN);
			EBX_Utils.addCSSClass(perspectiveNameRow, CSS_CLASS_HIDDEN);
			EBX_Utils.addCSSClass(perspectiveActionIdRow, CSS_CLASS_HIDDEN);
      EBX_Utils.addCSSClass(perspectiveActionNameRow, CSS_CLASS_HIDDEN);

			EBX_Utils.removeCSSClass(pageSizeRow, CSS_CLASS_HIDDEN);
		}
	}
	
	function refreshSession() {
		var session = ebx_form_getValue(getPath("session"));
		var usernameRow = document.getElementById("ebx-row-username");
		var passwordRow = document.getElementById("ebx-row-password");
		var localeRow = document.getElementById("ebx-row-locale");
		var viewTypeRow = document.getElementById("ebx-row-viewType");
		
		if ("ROOT" === session) {
			EBX_Utils.removeCSSClass(usernameRow, CSS_CLASS_HIDDEN);
			EBX_Utils.removeCSSClass(passwordRow, CSS_CLASS_HIDDEN);
			EBX_Utils.removeCSSClass(localeRow, CSS_CLASS_HIDDEN);
			EBX_Utils.removeCSSClass(viewTypeRow, CSS_CLASS_HIDDEN);
		} else {
			EBX_Utils.addCSSClass(usernameRow, CSS_CLASS_HIDDEN);
			EBX_Utils.addCSSClass(passwordRow, CSS_CLASS_HIDDEN);
			EBX_Utils.addCSSClass(localeRow, CSS_CLASS_HIDDEN);
			EBX_Utils.addCSSClass(viewTypeRow, CSS_CLASS_HIDDEN);
		}
	}
	
	function refreshFirstCallDisplay() {
		var firstCallDisplayTypeRow = document.getElementById("ebx-row-serviceParam-firstCallDisplay");
		var firstCallDisplayType = ebx_form_getValue(getPath("serviceParam-firstCallDisplay"));
		
		var firstCallDisplayPredicateRow = document.getElementById("ebx-row-serviceParam-firstCallDisplayPredicate");
		if (!EBX_Utils.matchCSSClass(firstCallDisplayTypeRow, CSS_CLASS_HIDDEN) && "RECORD" === firstCallDisplayType) {
			EBX_Utils.removeCSSClass(firstCallDisplayPredicateRow, CSS_CLASS_HIDDEN);
		} else {
			EBX_Utils.addCSSClass(firstCallDisplayPredicateRow, CSS_CLASS_HIDDEN);
		}
	}
	
	function refreshFeatures(type) {
		if (!type) {
			refreshFeatures("dataset");
			refreshFeatures("view");
			refreshFeatures("record");
			return;
		}
		
		var selectedServiceParameters;
		if (isPerspective()) {
			selectedServiceParameters = [];
			EBX_Utils.addCSSClass(document.getElementById("ebx-row-" + type + "FeaturesType"), CSS_CLASS_HIDDEN);
			EBX_Utils.addCSSClass(document.getElementById("ebx-row-" + type + "FeaturesValues"), CSS_CLASS_HIDDEN);
			
		} else {
			EBX_Utils.removeCSSClass(document.getElementById("ebx-row-" + type + "FeaturesType"), CSS_CLASS_HIDDEN);
			var typeValue = ebx_form_getValue(getPath(type + "FeaturesType"));
			
			var valuesRow = document.getElementById("ebx-row-" + type + "FeaturesValues");
			if ("HIDE_SELECTION" === typeValue || "SHOW_SELECTION" === typeValue) {
				EBX_Utils.removeCSSClass(valuesRow, CSS_CLASS_HIDDEN);
			} else {
				EBX_Utils.addCSSClass(valuesRow, CSS_CLASS_HIDDEN);
			}
		}
	}
	
	function isPerspective() {
		var viewType = ebx_form_getValue(getPath("viewType"));
		var session = ebx_form_getValue(getPath("session"));
		var isPerspective = "PERSPECTIVE" === viewType && "ROOT" === session;
		
		return isPerspective;
	}

  function preview() {
    isPreviewRequested = true;

    setTimeout(function () {
      if (previewCallback != null && isPreviewRequested) {
        isPreviewRequested = false;
        previewCallback();
      }
    }, 200);
  }

  function setPreviewCallback(callback) {
    previewCallback = callback;

    if (isPreviewRequested) {
      isPreviewRequested = false;
      callback();
    }
  }
	
})();

/********* ebx_ppvFavorite.js *********/
var EBX_PpvFavorite = (function() {
	"use strict";
	
	var defaultPerspectiveName;
	var buttonConfigurations = [];
	
// -------------------- //
// ACCESSIBLE FUNCTIONS //
// -------------------- //
	
	return {
		setFavoritePerspectiveName: setFavoritePerspectiveName,
		registerButtons: registerButtons,
		initDefaultPerspectiveButtons: initDefaultPerspectiveButtons,
		setDefaultPerspective: setDefaultPerspective
	};
	
// -------------- //
// IMPLEMENTATION //
// -------------- //
	
	function setFavoritePerspectiveName(name) {
		defaultPerspectiveName = name;
	}
	
	function registerButtons(perspectiveName, setButtonId, getButtonId) {
		buttonConfigurations.push({
			perspectiveName: perspectiveName,
			setButtonId: setButtonId,
			getButtonId: getButtonId
		});
	}
	
	function initDefaultPerspectiveButtons(perspectiveName, setButtonId, getButtonId) {
		var setButton = document.getElementById(setButtonId);
		var getButton = document.getElementById(getButtonId);
		
		if (perspectiveName === defaultPerspectiveName) {
			setButton.style.display = 'none';
			getButton.style.display = 'inline';
			
		} else {
			setButton.style.display = 'inline';
			getButton.style.display = 'none';
		}
	}
	
	function setDefaultPerspective(button, event, url, perspectiveName) {
		var cursor = button.style.cursor;

		button.style.cursor = "wait";
		
		ajaxCall(url, function() {
			button.style.cursor = cursor;

			setFavoritePerspectiveName(perspectiveName);
			refreshButtons();
		});
	}
	
	function refreshButtons() {
		EBX_Utils.forEach(buttonConfigurations, function(config) {
			initDefaultPerspectiveButtons(
					config.perspectiveName,
					config.setButtonId,
					config.getButtonId);
		});
	}
	
	function ajaxCall(url, callback) {
		var handler = new YAHOO.util.XHRDataSource();
		
		handler.sendRequest(url, {
			success: callback,
			failure: callback
		});
	}
	
})();

/********* ebx_viewsConfiguration.js *********/
function ebx_selectHierarchyLevel(newLevel, submitButtonId) {
	document.getElementById(ebx_hierarchyLevelsConf_LevelPathParameter).value = newLevel;
	var hriLevelSubmitButton = document.getElementById(submitButtonId);

	// IE strikes again.
	// If not set, default button is chosen
	hriLevelSubmitButton.form.ebx_lastSubmitFocused = hriLevelSubmitButton;
	hriLevelSubmitButton.click();
}

var ebx_treeHelper_currentInputField = null;

var ebx_helperTreePanel;
var EBX_HELPER_TREE_PANEL_ID = "ebx_helperTreePanel";

function ebx_treeHelper_selectPath(value, concat) {
	if (ebx_treeHelper_currentInputField == null) {
		return;
	}

	if (concat) {
		EBX_Form.insertTextAtCursorPosition(ebx_treeHelper_currentInputField, value);
	} else {
		ebx_treeHelper_currentInputField.value = value;
	}

	ebx_treeHelper_hideShow(null, null);
}

function ebx_treeHelper_hideShow(helperDivId, inputFieldId, buttonId) {
	// Helper can be used on several fields in the same page
	if (ebx_helperTreePanel != null) {
		var toggleButton = document.getElementById(treeHelperCurrentButtonId);
		if (toggleButton !== null) {
			EBX_ButtonUtils.setStateToToggleButton(toggleButton, false);
		}
		ebx_treeHelper_currentInputField = null;
		treeHelperCurrentButtonId = null;
		ebx_helperTreePanel.destroy();
		ebx_helperTreePanel = null;
	}

	var aTreeDiv = document.getElementById(helperDivId);

	if (aTreeDiv == null) {
		return;
	}

	var matchingInputField = document.getElementById(inputFieldId);

	ebx_treeHelper_currentInputField = matchingInputField;
	treeHelperCurrentButtonId = buttonId;
	var bodyEl = document.body;
	if (ebx_helperTreePanel == null) {
		aTreeDiv.style.overflow = "auto";
		ebx_helperTreePanel = new YAHOO.widget.Panel(EBX_HELPER_TREE_PANEL_ID, {
			visible: false,
			close: false,
			draggable: false,
			height: "150px",
			width: matchingInputField.offsetWidth - 2 + "px",
			constraintoviewport: true,
			underlay: "none"
		});
		ebx_helperTreePanel.render(bodyEl);
		ebx_helperTreePanel.setBody(aTreeDiv.innerHTML);
		new YAHOO.widget.TreeView(ebx_helperTreePanel.body).render();
	}
	ebx_helperTreePanel.cfg.setProperty('context', [ inputFieldId, "tl", "bl" ]);
	ebx_helperTreePanel.show();
}

function EBX_AjaxSelectRecordObject(aCheckBox, aRowId, isHierarchyApplied) {
	this.checkBox = aCheckBox;
	this.rowId = aRowId;
	this.onGetExceptedResponseCode = function() {
		return 1;
	};

	this.onExecuteIfKO = function(responseXML) {
		this.onWBP_uncheckCheckBox();
	};

	this.onExecuteIfOK = function(responseXML, root) {
		var bodyElement = root.getElementsByTagName('responseBody')[0];
		// if the server wrote "" in the ajax response, the XML parser won't put a void CDATA
		// so by default, the response is ""
		var responseContent = "";
		if (bodyElement.firstChild) {
			responseContent = bodyElement.firstChild.data;
		}

		var nbSelectedRecord = parseInt(responseContent);

		if (isNaN(nbSelectedRecord)) {
			if (this.checkBox.checked === true) {
				onNbSelectedRecord++;
			} else {
				onNbSelectedRecord--;
			}
		} else {
			onNbSelectedRecord = nbSelectedRecord;
		}

		if (this.checkBox.checked === true) {
			this.onWBP_checkCheckBox();
		} else {
			this.onWBP_uncheckCheckBox();
		}
		this.updateLabel();
		return true;
	};

	this.onWBP_checkCheckBox = function() {
		this.checkBox.checked = true;
		if (isHierarchyApplied) {
			this.selectionPropagation(this.checkBox.id, this.checkBox.checked);
		} else {
			this.colorizeTableLine(this.rowId, "#FFC663");
		}
	};

	this.onWBP_uncheckCheckBox = function() {
		this.checkBox.checked = false;
		if (isHierarchyApplied) {
			this.selectionPropagation(this.checkBox.id, this.checkBox.checked);
		} else {
			this.colorizeTableLine(this.rowId, "");
		}
	};

	this.updateLabel = function() {
		var selectReportId = EBX_AjaxTable.pluggedComponentRegister.selectReportRegister[ebx_workspaceTableName];

		if (selectReportId === undefined) {
			EBX_Logger.log("EBX_AjaxSelectRecordObject.updateLabel: select report not found.", EBX_Logger.error);
			return;
		}

		var selectReportNumber = document.getElementById(selectReportId + EBX_AjaxTable.constants.suffixSelectionNumber);
		var selectReportLabelOne = document.getElementById(selectReportId + EBX_AjaxTable.constants.suffixSelectionLabelOne);
		var selectReportLabelMany = document.getElementById(selectReportId + EBX_AjaxTable.constants.suffixSelectionLabelMany);

		if (onNbSelectedRecord === 0) {
			selectReportNumber.innerHTML = "";
			selectReportLabelOne.style.display = "none";
			selectReportLabelMany.style.display = "none";
		} else {
			selectReportNumber.innerHTML = onNbSelectedRecord;

			if (onNbSelectedRecord > 1) {
				selectReportLabelOne.style.display = "none";
				selectReportLabelMany.style.display = "inline";
			} else {
				selectReportLabelOne.style.display = "inline";
				selectReportLabelMany.style.display = "none";
			}
		}
	};

	this.selectionPropagation = function(rowId, checked) {
		var inputs = document.getElementsByTagName("input");
		for ( var i = 0; i < inputs.length; i++) {
			var input = inputs[i];
			if (input.type == "checkbox" && input.id && input.id == rowId) {
				input.checked = checked;
        if (checked) {
          input.title = EBX_Constants.unselectCheckBox;
          EBX_Utils.addCSSClass(EBX_Utils.getFirstParentMatchingCSSClass(input, "ygtvtable"), "ebx_treeLine_selected");
        } else {
          input.title = EBX_Constants.selectCheckBox;
          EBX_Utils.removeCSSClass(EBX_Utils.getFirstParentMatchingCSSClass(input, "ygtvtable"),
              "ebx_treeLine_selected");
        }
			}
		}
	};

	this.colorizeTableLine = function(rowId, newColor) {
		var trs = document.getElementsByTagName("tr");
		for ( var i = 0; i < trs.length; i++) {
			var tr = trs[i];
			if (tr.id && tr.id.indexOf(rowId) != -1 && tr.id.indexOf("onInheritTableRight_") == -1) {
				var tds = tr.getElementsByTagName("td");
				for ( var j = 0; j < tds.length; j++) {
					var td = tds[j];
					if (td.className.indexOf("inheritTable_icon") == -1) {
						td.style.backgroundColor = newColor;
					}
				}
			}
		}
	};
}

EBX_AjaxSelectRecordObject.prototype = new EBX_AbstractAjaxResponseManager();

function EBX_ViewsManagement() {}

EBX_ViewsManagement.variables = {};
EBX_ViewsManagement.constants = {};
EBX_ViewsManagement.dataSourceChangeOrderResponseSchema = {
	resultsList: "changeOrder",
	metaFields: {
		lineId: "lineId",
		newOrder: "newOrder"
	}
};

EBX_ViewsManagement.dualListClick = function(event, listEl) {
	var targetEl = EBX_Utils.getTargetElement(event);

	// Check if we are clicking on element inside TABLE
	var tableEl = EBX_Utils.getFirstParentMatchingTagName(targetEl, "table");
	if (tableEl == null) {
		return;
	}

	// Focusing TR element
	var trEl = EBX_Utils.getFirstParentMatchingTagName(targetEl, "tr");
	if (trEl == null) {
		trEl = targetEl;
	}
	if (trEl.tagName.toLowerCase() != "tr") {
		return;
	}
	EBX_DualList.focusListLine(trEl);

	EBX_ButtonUtils.setButtonDisabled(document.getElementById("ebx_MoveTop"), false);
	EBX_ButtonUtils.setButtonDisabled(document.getElementById("ebx_MoveUp"), false);
	EBX_ButtonUtils.setButtonDisabled(document.getElementById("ebx_MoveDown"), false);
	EBX_ButtonUtils.setButtonDisabled(document.getElementById("ebx_MoveBottom"), false);
	EBX_ButtonUtils.setButtonDisabled(document.getElementById("ebx_MdvEditAssignment"), false);
	EBX_ButtonUtils.setButtonDisabled(document.getElementById("ebx_MdvDeleteAssignment"), false);

	EBX_ViewsManagement.populateHiddenFieldsWithSelectedAssignment(listEl.id);
};
EBX_ViewsManagement.getCallbackChangeOrderObject = function() {
	return {
		success: EBX_ViewsManagement.getCallbackChangeOrderSuccess,
		failure: EBX_ViewsManagement.getCallbackChangeOrderFailure,
		scope: EBX_ViewsManagement
	};
};
EBX_ViewsManagement.getCallbackChangeOrderSuccess = function(oRequest, oParsedResponse) {
	var resultObj = oParsedResponse.results;
	var orderListEl = document.querySelector("#ebx_mdv_OrderList");
	var listItemEls = orderListEl.querySelectorAll("tr");

	var resultObj_length = resultObj.length;
	for ( var i = 0; i < resultObj_length; i++) {
		var newId = resultObj[i].lineId + ";" + resultObj[i].newOrder;

		listItemEls[i].id = newId;
	}
};
EBX_ViewsManagement.getCallbackChangeOrderFailure = function(oRequest, oParsedResponse) {
	console.log("DVM Change order callBack failed: " + oParsedResponse);
};
EBX_ViewsManagement.populateHiddenFieldsWithSelectedAssignment = function(listId) {
	var orderListEl = document.querySelector("#" + listId);
	var selectedItemEl = orderListEl.querySelectorAll("tr.ebx_Selected")[0];

	if (selectedItemEl === undefined)
		return undefined;

	var viewIdAndOrder = selectedItemEl.id.split(";");
	var lineIdInputEl = document.querySelector("input[name='" + EBX_ViewsManagement.variables.paramLineIdName + "']");
	var lineOrderInputEl = document.querySelector("input[name='" + EBX_ViewsManagement.variables.paramOrderName + "']");

	lineIdInputEl.value = viewIdAndOrder[0];
	lineOrderInputEl.value = viewIdAndOrder[1];

	return selectedItemEl;
};
EBX_ViewsManagement.swapListNodes = function(direction, listId, containerId) {
	var containerDivEl = document.querySelector("#" + containerId);
	var orderListEl = document.querySelector("#" + listId);
	var itemsEls = orderListEl.rows;
	var lineToSwapPosition = EBX_DualList.getFocusedLineIndex(orderListEl);
	if (lineToSwapPosition == -1)
		return;

	if (lineToSwapPosition <= 0 && (direction == "ebx_MoveUp" || direction == "ebx_MoveTop"))
		return;
	if (lineToSwapPosition >= itemsEls.length - 1 && (direction == "ebx_MoveDown" || direction == "ebx_MoveBottom"))
		return;

	var lineToSwapEl = itemsEls[lineToSwapPosition];

	var lineIdInputEl = containerDivEl.querySelector("input[name='" + EBX_ViewsManagement.variables.paramLineIdName + "']");
	var lineOrderInputEl = containerDivEl.querySelector("input[name='" + EBX_ViewsManagement.variables.paramOrderName + "']");
	var lineDirectionInputEl = containerDivEl.querySelector("input[name='" + EBX_ViewsManagement.variables.paramDirectionName + "']");

	var lineId = lineToSwapEl.id;
	var keyVal = lineId.split(";");
	lineIdInputEl.value = keyVal[0];
	lineOrderInputEl.value = keyVal[1];
	lineDirectionInputEl.value = direction;

	var tBody = orderListEl.children[0];

	if (direction == "ebx_MoveUp") {
		tBody.insertBefore(lineToSwapEl, itemsEls[lineToSwapPosition - 1]);
	} else if (direction == "ebx_MoveDown") {
		tBody.insertBefore(itemsEls[lineToSwapPosition + 1], lineToSwapEl);
	} else if (direction == "ebx_MoveTop") {
		tBody.insertBefore(lineToSwapEl, itemsEls[0]);
	} else if (direction == "ebx_MoveBottom") {
		// "appendChild" as IE8 workaround
		tBody.appendChild(lineToSwapEl);
	}

	EBX_ViewsManagement.dataSourceChangeOrder = new YAHOO.util.XHRDataSource(EBX_ViewsManagement.constants.dataSourceChangeOrderRequestLink);
	EBX_ViewsManagement.dataSourceChangeOrder.responseType = YAHOO.util.DataSource.TYPE_JSON;
	EBX_ViewsManagement.dataSourceChangeOrder.responseSchema = EBX_ViewsManagement.dataSourceChangeOrderResponseSchema;

	var parameterBuf;
	parameterBuf = [];

	parameterBuf.push(EBX_ViewsManagement.constants.viewIdParameter, lineIdInputEl.value);
	parameterBuf.push(EBX_ViewsManagement.constants.orderParameter, lineOrderInputEl.value);
	parameterBuf.push(EBX_ViewsManagement.constants.directionParameter, lineDirectionInputEl.value);

	EBX_ViewsManagement.dataSourceChangeOrder.sendRequest(parameterBuf.join(""), EBX_ViewsManagement.getCallbackChangeOrderObject());
};

/*
 * UITableConfigurationComponentBean Dual List component JS
 * */
function EBX_DualList() {}

EBX_DualList.isUsingDataModelOrdering = false;

EBX_DualList.switchOrderingMethod = function(checkboxEl) {
  var selectedColumnsEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(checkboxEl.parentNode.parentNode.parentNode,
      "ebx_selectedColumnsList");
  var selectedOptionsEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(checkboxEl.parentNode.parentNode.parentNode,
      "ebx_hidden_selectedColumnsList");
	if (selectedColumnsEl === null || selectedOptionsEl === null) {
		return;
	}

	if (checkboxEl.checked) {
		EBX_DualList.isUsingDataModelOrdering = true;
		EBX_Utils.addCSSClass(selectedColumnsEl, "ebx_InactiveSelectedColumnsList");
	} else {
		EBX_DualList.isUsingDataModelOrdering = false;
		EBX_Utils.removeCSSClass(selectedColumnsEl, "ebx_InactiveSelectedColumnsList");
	}

	if (EBX_DualList.isUsingDataModelOrdering) {
		EBX_DualList.sortElementsAccordingToDMAOrder(selectedColumnsEl, selectedOptionsEl);
	}

	EBX_DualList.switchMiddleCtrlButtonsState(selectedColumnsEl.parentNode);
	EBX_DualList.switchFixedColumnsSelectorState(selectedColumnsEl.parentNode);
};

EBX_DualList.sortElementsAccordingToDMAOrder = function(selectedColumnsEl, selectedOptionsEl) {
	var availableColumnItems = EBX_Utils.getFirstDirectChildMatchingCSSClass(selectedColumnsEl.parentNode, "ebx_availableColumnsList").children;
	var availableOptionItems = EBX_Utils.getFirstDirectChildMatchingCSSClass(selectedColumnsEl.parentNode, "ebx_hidden_availableColumnsList").children;

	while (selectedColumnsEl.firstChild) {
		selectedColumnsEl.removeChild(selectedColumnsEl.firstChild);
	}
	while (selectedOptionsEl.firstChild) {
		selectedOptionsEl.removeChild(selectedOptionsEl.firstChild);
	}

	var available_length = availableColumnItems.length;
	for ( var i = 0; i < available_length; i++) {
		if (EBX_Utils.matchCSSClass(availableColumnItems[i], "ebx_HiddenListElement")) {
			var columnNodeToCopy = availableColumnItems[i].cloneNode(true);
			EBX_Utils.removeCSSClass(columnNodeToCopy, "ebx_HiddenListElement");
			selectedColumnsEl.appendChild(columnNodeToCopy);

			var optionNodeToCopy = availableOptionItems[i].cloneNode(true);

			// Thanks to the almighty IE8! (clone node seems to ignore 'selected')
			optionNodeToCopy.selected = true;

			selectedOptionsEl.appendChild(optionNodeToCopy);
		}
	}
};

EBX_DualList.switchMiddleCtrlButtonsState = function(dualListContainerEl) {
	var selectedColumnsCtrlsEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(dualListContainerEl, "ebx_selectedColumnsCtrls");
	if (selectedColumnsCtrlsEl === null) {
		return;
	}

	var moveTopButton = EBX_Utils.getFirstDirectChildMatchingCSSClass(selectedColumnsCtrlsEl, "ebx_MoveTop");
	var moveUpButton = EBX_Utils.getFirstDirectChildMatchingCSSClass(selectedColumnsCtrlsEl, "ebx_MoveUp");
	var moveDownButton = EBX_Utils.getFirstDirectChildMatchingCSSClass(selectedColumnsCtrlsEl, "ebx_MoveDown");
	var moveBottomButton = EBX_Utils.getFirstDirectChildMatchingCSSClass(selectedColumnsCtrlsEl, "ebx_MoveBottom");

	if (moveTopButton !== null) {
		EBX_ButtonUtils.setButtonDisabled(moveTopButton, EBX_DualList.isUsingDataModelOrdering);
	}
	if (moveUpButton !== null) {
		EBX_ButtonUtils.setButtonDisabled(moveUpButton, EBX_DualList.isUsingDataModelOrdering);
	}
	if (moveDownButton !== null) {
		EBX_ButtonUtils.setButtonDisabled(moveDownButton, EBX_DualList.isUsingDataModelOrdering);
	}
	if (moveBottomButton !== null) {
		EBX_ButtonUtils.setButtonDisabled(moveBottomButton, EBX_DualList.isUsingDataModelOrdering);
	}
};

EBX_DualList.switchFixedColumnsSelectorState = function(dualListContainerEl) {
	var fixedColumnsSelectorEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(dualListContainerEl, "ebx_fixColumnsCountSelector");

	if (fixedColumnsSelectorEl === null) {
		return;
	}

	EBX_ButtonUtils.setButtonDisabled(fixedColumnsSelectorEl, EBX_DualList.isUsingDataModelOrdering);
	fixedColumnsSelectorEl.selectedIndex = 0;
};

EBX_DualList.middleCtrls = function(btnClassName, cntnrId) {
	var container = document.querySelector("#" + cntnrId);
	var selectedColumnsEls = container.querySelector(".ebx_hidden_selectedColumnsList");
	var availableColumnsEls = container.querySelector(".ebx_hidden_availableColumnsList");
	var selectedColumnsOpts = selectedColumnsEls.options;
	var availableColumnsOpts = availableColumnsEls.options;

	var fixedColumnsSelectorEl = container.querySelector(".ebx_fixColumnsCountSelector");

	var selectedListEl = container.querySelector(".ebx_selectedColumnsList");
	var availableListEl = container.querySelector(".ebx_availableColumnsList");

	var selectedListIdx = EBX_DualList.getFocusedLineIndex(selectedListEl);
	var availableListIdx = EBX_DualList.getFocusedLineIndex(availableListEl);

	var cssDualListODFColumns = "ebx_dualList_ODFColumns";
	var cssDualListSortColumns = "ebx_dualList_SortColumns";

	var regexpODFColumns = new RegExp(cssDualListODFColumns, 'i');
	var regexpSortColumns = new RegExp(cssDualListSortColumns, 'i');
	var isCurrentActionOnODFColumns = container.id.match(regexpODFColumns);
	var isCurrentActionOnSortColumns = container.id.match(regexpSortColumns);

	if (btnClassName.indexOf("ebx_MoveAllLeft") > -1) {
		if (!EBX_DualList.isUsingDataModelOrdering) {
			var available_length = availableListEl.children.length;
			for ( var i = 0; i < available_length; i++) {
				var currentAvailableEl = availableListEl.children[i];

				if (!EBX_Utils.matchCSSClass(currentAvailableEl, "ebx_HiddenListElement")) {
					selectedListEl.appendChild(currentAvailableEl.cloneNode(true));
					currentAvailableEl.className = "ebx_HiddenListElement";

					if (EBX_LayoutManager.isIE8) {
						var optionToCopy = availableColumnsOpts[i].cloneNode(true);
						// Thanks to IE8!
						optionToCopy.selected = true;
						selectedColumnsEls.insertBefore(optionToCopy, selectedColumnsOpts[selectedColumnsOpts.length]);
					} else {
						// ... but FF 3.6.28 needs it as mandatory parameter!
						selectedColumnsOpts[selectedColumnsOpts.length] = availableColumnsOpts[i].cloneNode(false);
					}
				}
			}

			// workaround for firstElementChild (IE8)
			// Here we keep selection where it is (if there is)
			var selectedLi = EBX_Utils.getFirstDirectChildMatchingCSSClass(selectedListEl, "ebx_Selected");
			EBX_DualList.focusListLine(selectedLi);
		} else {
			while (selectedListEl.firstChild) {
				selectedListEl.removeChild(selectedListEl.firstChild);
			}

			var selectContainer = selectedColumnsEls.parentNode;
			// shallow copy to empty options list
			var newSelectedColumnsEls = selectedColumnsEls.cloneNode(false);

			var available_length = availableListEl.children.length;
			for ( var i = 0; i < available_length; i++) {
				var currentToCopyEl = availableListEl.children[i].cloneNode(true);

				if (EBX_Utils.matchCSSClass(currentToCopyEl, "ebx_HiddenListElement")) {
					EBX_Utils.removeCSSClass(currentToCopyEl, "ebx_HiddenListElement");
				} else {
					EBX_Utils.addCSSClass(availableListEl.children[i], "ebx_HiddenListElement");
				}

				selectedListEl.appendChild(currentToCopyEl);
				newSelectedColumnsEls.appendChild(availableColumnsOpts[i].cloneNode());
			}
			selectContainer.replaceChild(newSelectedColumnsEls, selectedColumnsEls);
		}

		if (fixedColumnsSelectorEl != null) {

			var numberOfColumns = selectedListEl.children.length;

			var noFixedColumnLabel = EBX_DualList.customViewNoFixedColumnLabel;
			fixedColumnsSelectorEl.options[0] = new Option(noFixedColumnLabel);
			var fixFirstColumnLabel = EBX_DualList.customViewFixFirstColumnLabel;
			fixedColumnsSelectorEl.options[1] = new Option(fixFirstColumnLabel);
			for ( var i = 2; i < numberOfColumns; i++) {
				var optionLabel = EBX_DualList.customViewFixManyColumnsLabel.replace("{0}", i);
				fixedColumnsSelectorEl.options[i] = new Option(optionLabel);
			}
		}
	}

	else if (btnClassName.indexOf("ebx_MoveAllRight") > -1) {
		var available_length = availableListEl.children.length;
		for ( var i = 0; i < available_length; i++) {
			availableListEl.children[i].className = "";
		}
		selectedListEl.innerHTML = "";

		selectedColumnsEls.length = 0;
		if (fixedColumnsSelectorEl != null) {
			fixedColumnsSelectorEl.length = 1;
		}

		// workaround for firstElementChild (IE8)
		var firstLi = EBX_Utils.getFirstDirectChildMatchingTagName(availableListEl, "li");
		EBX_DualList.focusListLine(firstLi);
	}

	else if (btnClassName.indexOf("ebx_MoveLeft") > -1 && availableListIdx > -1) {
		var optionToCopy = availableColumnsOpts[availableListIdx].cloneNode(true);

		// Thanks to IE8!
		optionToCopy.selected = true;

		selectedColumnsEls.insertBefore(optionToCopy, selectedColumnsOpts[selectedColumnsOpts.length]);

		var availableItemsEls = availableListEl.querySelectorAll("li");
		var nodeToCopy = availableItemsEls[availableListIdx].cloneNode(true);

		if (selectedListEl.className.indexOf(cssDualListSortColumns) > -1) {
			nodeToCopy.innerHTML += "<span class=\"ebx_SortingColumnButtonContainer\"><span class=\"ebx_SortingColumnLabel\">"
					+ EBX_DualList.sortAscendingLabel + "</span><button type=\"button\" " + "class=\"ebx_IconFlatButtonSmall ebx_AscendingColumn\">"
					+ "<span class=\"ebx_SmallIcon\"></span></button></span>";
		}

		if (isCurrentActionOnSortColumns || !EBX_DualList.isUsingDataModelOrdering) {
			selectedListEl.appendChild(nodeToCopy);
		}

		EBX_DualList.focusListLine(nodeToCopy);
		selectedListEl.scrollTop = nodeToCopy.offsetTop;

		availableItemsEls[availableListIdx].className = "ebx_HiddenListElement";
		EBX_DualList.focusAvailableLine(availableListIdx, availableListEl);

		// must be done after hiding availableItem
		if (isCurrentActionOnODFColumns && EBX_DualList.isUsingDataModelOrdering) {
			EBX_DualList.sortElementsAccordingToDMAOrder(selectedListEl, selectedColumnsEls);

			var newNode = document.getElementById(nodeToCopy.id);
			EBX_DualList.focusListLine(newNode);
		}

		if (fixedColumnsSelectorEl != null && selectedColumnsEls.length > 1) {
			var optionLabel = EBX_DualList.customViewFixFirstColumnLabel;
			optionLabel = EBX_DualList.customViewFixManyColumnsLabel.replace("{0}", fixedColumnsSelectorEl.length);
			fixedColumnsSelectorEl.options[fixedColumnsSelectorEl.length] = new Option(optionLabel);
		}
	}

	else if (btnClassName.indexOf("ebx_MoveRight") > -1 && selectedListIdx > -1) {
		var selectedItemsEls = selectedListEl.querySelectorAll("li");
		var toMoveEl = selectedItemsEls[selectedListIdx];
		var orderSpan = toMoveEl.querySelector("span.ebx_SortingColumnButtonContainer");

		if (orderSpan != null) {
			toMoveEl.removeChild(orderSpan);
		}

		var available_length = availableListEl.children.length;
		for ( var i = 0; i < available_length; i++) {
			if (toMoveEl.id === availableListEl.children[i].id) {
				availableListEl.children[i].className = "";
				EBX_DualList.focusListLine(availableListEl.children[i]);

				var toFocusLineEl = selectedItemsEls[selectedListIdx + 1];
				if (toFocusLineEl == null && selectedListIdx > 0) {
					toFocusLineEl = selectedItemsEls[selectedListIdx - 1];
				}
				if (toFocusLineEl != null) {
					EBX_DualList.focusListLine(toFocusLineEl);
				}
				break;
			}
		}

		selectedListEl.removeChild(toMoveEl);
		// #11140: FF 3.6 does not support remove() !?!
		selectedColumnsOpts[selectedListIdx] = null;

		if (fixedColumnsSelectorEl != null) {
			if (fixedColumnsSelectorEl.selectedIndex == fixedColumnsSelectorEl.length - 1) {
				fixedColumnsSelectorEl.selectedIndex = fixedColumnsSelectorEl.selectedIndex - 1;
			}
			if (fixedColumnsSelectorEl.length > 1) {
				fixedColumnsSelectorEl.length--;
			}

			if (fixedColumnsSelectorEl.length == 1) {
				fixedColumnsSelectorEl.selectedIndex = 0;
			}
		}
	}

	EBX_DualList.updateFixedColumns(container.querySelector(".ebx_fixColumnsCountSelector"));
};

EBX_DualList.swapListNodes = function(btnClassName, cntnrId) {
	var container = document.querySelector("#" + cntnrId);
	var selectedColumnsEl = container.querySelector(".ebx_hidden_selectedColumnsList");
	var optionsEls = selectedColumnsEl.options;

	var selectedListEl = container.querySelector(".ebx_selectedColumnsList");
	var selectedItemsEls = selectedListEl.querySelectorAll("li");
	var selectedIdx = EBX_DualList.getFocusedLineIndex(selectedListEl);

	if (selectedIdx < 0) {
		return;
	}

	if (btnClassName.indexOf("ebx_MoveUp") > -1 && selectedIdx > 0) {
		selectedColumnsEl.insertBefore(optionsEls[selectedIdx], optionsEls[selectedIdx - 1]);
		selectedListEl.insertBefore(selectedItemsEls[selectedIdx], selectedItemsEls[selectedIdx - 1]);

		EBX_DualList.scrollToElementIfNotVisible(selectedItemsEls[selectedIdx], selectedListEl);
	}
	if (btnClassName.indexOf("ebx_MoveTop") > -1) {
		selectedColumnsEl.insertBefore(optionsEls[selectedIdx], optionsEls[0]);
		selectedListEl.insertBefore(selectedItemsEls[selectedIdx], selectedItemsEls[0]);

		selectedListEl.scrollTop = 0;
	}
	if (btnClassName.indexOf("ebx_MoveDown") > -1 && selectedIdx < optionsEls.length) {
		selectedColumnsEl.insertBefore(optionsEls[selectedIdx], optionsEls[selectedIdx + 2]);

		if (selectedIdx + 2 < selectedItemsEls.length) {
			selectedListEl.insertBefore(selectedItemsEls[selectedIdx], selectedItemsEls[selectedIdx + 2]);
		} else {
			// IE8 workaround
			selectedListEl.appendChild(selectedItemsEls[selectedIdx]);
		}

		EBX_DualList.scrollToElementIfNotVisible(selectedItemsEls[selectedIdx], selectedListEl);
	}
	if (btnClassName.indexOf("ebx_MoveBottom") > -1 && selectedIdx < optionsEls.length) {
		selectedColumnsEl.insertBefore(optionsEls[selectedIdx], optionsEls[optionsEls.length]);

		// IE8 workaround
		selectedListEl.appendChild(selectedItemsEls[selectedIdx]);

		selectedListEl.scrollTop = selectedItemsEls[selectedItemsEls.length - 1].offsetTop;
	}

	EBX_DualList.updateFixedColumns(container.querySelector(".ebx_fixColumnsCountSelector"));
};

EBX_DualList.updateFixedColumns = function(selectorEl) {
	if (selectorEl == null) {
		return;
	}
	var nbOfColumnsToFix = selectorEl.selectedIndex;

	var selectedColumnsEls = document.querySelector(".ebx_hidden_selectedColumnsList");
	var selectedColumnsOpts = selectedColumnsEls.options;

	var fixedColumnsEls = document.querySelector(".ebx_hidden_fixedColumns");
	fixedColumnsEls.innerHTML = "";

	for ( var i = 0; i < nbOfColumnsToFix; i++) {
		fixedColumnsEls.appendChild(selectedColumnsOpts[i].cloneNode(true));
	}
};

EBX_DualList.getFocusedLineIndex = function(listEl) {
	var focusedEl = listEl.querySelector(".ebx_Selected");
	if (focusedEl === null) {
		return -1;
	}
	return EBX_Utils.getIndex(focusedEl);
};

EBX_DualList.focusListLine = function(lineEl) {
	if (lineEl == null) {
		return;
	}
	var parentListEl = lineEl.parentNode;
	if (parentListEl == null) {
		return;
	}

	var listLineEls = parentListEl.querySelectorAll(".ebx_Selected");
	if (listLineEls != null) {
		var list_length = listLineEls.length;
		for ( var i = 0; i < list_length; i++) {
			listLineEls[i].className = listLineEls[i].className.replace(" ebx_Selected", "");
		}
	}
	lineEl.className += " ebx_Selected";

	EBX_DualList.scrollToElementIfNotVisible(lineEl, lineEl.parentNode);
};

EBX_DualList.reverseOrder = function(orderCtrlEl, hiddenSelectName) {
	// forces to be focused before trying to change order
	EBX_DualList.focusListLine(orderCtrlEl.parentNode);

	var isAscending = true;
	var orderLabelEl = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(orderCtrlEl, "ebx_SortingColumnLabel");
	var orderButtonEl = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(orderCtrlEl, "ebx_AscendingColumn");
	if (orderButtonEl == null) {
		isAscending = false;
		orderButtonEl = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(orderCtrlEl, "ebx_DescendingColumn");
	}

	var currentClassName = orderButtonEl.className;
	if (isAscending) {
		orderLabelEl.innerHTML = EBX_DualList.sortDescendingLabel;
		orderButtonEl.className = currentClassName.replace("ebx_AscendingColumn", "ebx_DescendingColumn");
	} else {
		orderLabelEl.innerHTML = EBX_DualList.sortAscendingLabel;
		orderButtonEl.className = currentClassName.replace("ebx_DescendingColumn", "ebx_AscendingColumn");
	}

	var list = EBX_Utils.getFirstParentMatchingTagName(orderCtrlEl, "ul");
	var index = EBX_DualList.getFocusedLineIndex(list);

	var hiddenSelect = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(list.parentNode, "ebx_hidden_selectedColumnsList");
	var elementValue = hiddenSelect.options[index].value;

	var descFlag = elementValue.indexOf(":DESC");
	if (descFlag > 0) {
		elementValue = elementValue.toString().replace(":DESC", ":ASC");
	} else {
		elementValue = elementValue.toString().replace(":ASC", ":DESC");
	}
	hiddenSelect.options[index].value = elementValue;
};

EBX_DualList.focusAvailableLine = function(availableListIdx, availableListEl) {
	var lineToFocus = null;
	var available_length = availableListEl.children.length;
	for ( var i = availableListIdx; i < available_length; i++) {
		if (availableListEl.children[i].className.indexOf("ebx_HiddenListElement") < 0) {
			lineToFocus = availableListEl.children[i];
			EBX_DualList.focusListLine(lineToFocus);
			break;
		}
	}

	if (lineToFocus == null) {
		for ( var i = availableListIdx - 1; i >= 0; i--) {
			if (availableListEl.children[i].className.indexOf("ebx_HiddenListElement") < 0) {
				EBX_DualList.focusListLine(availableListEl.children[i]);
				break;
			}
		}
	}
};

EBX_DualList.scrollToElementIfNotVisible = function(itemEl, containerEl) {
	var containerElTop = containerEl.offsetTop;
	var containerElBottom = containerEl.offsetTop + containerEl.offsetHeight;
	var itemElTop = itemEl.offsetTop;

	var isElementUnderContainer = itemElTop + itemEl.offsetHeight - containerEl.scrollTop > containerElBottom;
	var isElementAboveContainer = itemElTop < containerElTop + containerEl.scrollTop;

	if (isElementUnderContainer || isElementAboveContainer) {
		containerEl.scrollTop = itemEl.offsetTop - containerEl.offsetTop;
	}
};

EBX_DualList.dualListClick = function(event, listEl) {
	var targetEl = EBX_Utils.getTargetElement(event);

	// Check if we are clicking on element inside UL
	var ulEl = EBX_Utils.getFirstParentMatchingTagName(targetEl, "ul");
	if (ulEl == null) {
		return;
	}

	var isAvailableColumnsList = ulEl.className.indexOf("ebx_availableColumnsList") >= 0;
	var isSelectedColumnsList = ulEl.className.indexOf("ebx_selectedColumnsList") >= 0;
	if (!isAvailableColumnsList && !isSelectedColumnsList) {
		return;
	}

	// Focusing LI element
	var liEl = EBX_Utils.getFirstParentMatchingTagName(targetEl, "li");
	if (liEl == null) {
		liEl = targetEl;
	}
	if (liEl.tagName.toLowerCase() != "li") {
		return;
	}
	EBX_DualList.focusListLine(liEl);

	// Test if action to do is reverse sorting order
	var sortEl = targetEl;
	var isSortingEl = EBX_Utils.matchCSSClass(sortEl, "ebx_SortingColumnButtonContainer");
	if (!isSortingEl) {
		sortEl = EBX_Utils.getFirstParentMatchingCSSClass(targetEl, "ebx_SortingColumnButtonContainer");
	}
	if (sortEl != null) {
		EBX_DualList.reverseOrder(sortEl, listEl.querySelectorAll(".ebx_hidden_selectedColumnsList")[0].name);
	}
};

function ebx_hriToggleSortStrategy() {
  var radioOrdering = document.getElementById("ebx_sortStrategyOrdering");
  var radioSort = document.getElementById("ebx_sortStrategySort");
  if (radioOrdering) {
    ebx_hriToggleSortStrategyDisplay("ebx_hriSortStrategyOrderingWrapper", radioOrdering.checked);
  }
  if (radioSort) {
    ebx_hriToggleSortStrategyDisplay("ebx_hriSortStrategySortWrapper", radioSort.checked);
  }
}

function ebx_hriToggleSortStrategyDisplay(idElement, isDisplay) {
  var el = document.getElementById(idElement);
  el.style.display = isDisplay ? "block" : "none";
}

function ebx_hriUpdateSortedCriteria() {
  var sortedColumnsList = document.getElementById("ebx_hidden_selectedColumnsList");
  var newResult = "";
	var isFirst = true;
	if(sortedColumnsList != null ){
    for (var i = 0; i < sortedColumnsList.children.length; i++) {
      if(!isFirst){
      	newResult += ";";
			}else{
      	isFirst = false;
			}
    	newResult += sortedColumnsList.children[i].value;
    }
	}
  //_ebx prefix
  var sortField = document.getElementById("$table_sort_formatedCriteria");
  sortField.value = newResult;
}

function ebx_hriSortStrategySwapListNodes(btnClassName, cntnrId) {
  EBX_DualList.swapListNodes(btnClassName, cntnrId);
  ebx_hriUpdateSortedCriteria();
}

function ebx_hriSortStrategyMiddleCtrls(btnClassName, cntnrId) {
  EBX_DualList.middleCtrls(btnClassName, cntnrId);
  ebx_hriUpdateSortedCriteria();
}

function ebx_hriSortStrategyDualListClick(event, listEl) {
  EBX_DualList.dualListClick(event, listEl);
  ebx_hriUpdateSortedCriteria();
}

/********* ebx_viewsFavorite.js *********/
var Ebx_ViewsFavorite = (function () {
  "use strict";

  var defaultViewName;
  var buttonConfigurations = [];

// -------------------- //
// ACCESSIBLE FUNCTIONS //
// -------------------- //

  return {
    setFavoriteViewName: setFavoriteViewName,
    registerButtons: registerButtons,
    initDefaultViewButtons: initDefaultViewButtons,
    setDefaultView: setDefaultView,
    unsetDefaultView: unsetDefaultView
  };

// -------------- //
// IMPLEMENTATION //
// -------------- //

  function setFavoriteViewName(name) {
    defaultViewName = name;
  }

  function registerButtons(viewName, setButtonId, getButtonId) {
    buttonConfigurations.push({
      viewName: viewName,
      setButtonId: setButtonId,
      getButtonId: getButtonId
    });
  }

  function initDefaultViewButtons(viewName, setButtonId, getButtonId) {
    var setButton = document.getElementById(setButtonId);
    var getButton = document.getElementById(getButtonId);

    if (viewName === defaultViewName) {
      setButton.classList.add("ebx_dynamicHiddenImportant");
      getButton.classList.remove("ebx_dynamicHiddenImportant");

    } else {
      getButton.classList.add("ebx_dynamicHiddenImportant");
      setButton.classList.remove("ebx_dynamicHiddenImportant");
    }
  }

  function setDefaultView(button, event, url, viewName) {
    var cursor = button.style.cursor;

    button.style.cursor = "wait";

    ajaxCall(url, function (request, response) {
      button.style.cursor = cursor;
      setFavoriteViewName(viewName);
      refreshButtons();

      var responseJsonArray = response.results;
      if (responseJsonArray !== undefined && responseJsonArray.length > 0) {
        EBX_Utils.forEach(responseJsonArray, function (item, index) {
          EBX_UserMessageManager.addMessage(item, EBX_UserMessageManager.ERROR);
        })
      }
    });
  }

  function unsetDefaultView(button, event, url) {
    var cursor = button.style.cursor;

    button.style.cursor = "wait";

    ajaxCall(url, function (request, response) {
      button.style.cursor = cursor;
      setFavoriteViewName("");
      refreshButtons();

      var responseJsonArray = response.results;
      if (responseJsonArray !== undefined && responseJsonArray.length > 0) {
        EBX_Utils.forEach(responseJsonArray, function (item, index) {
          EBX_UserMessageManager.addMessage(item, EBX_UserMessageManager.ERROR);
        })
      }

    });
  }

  function refreshButtons() {
    EBX_Utils.forEach(buttonConfigurations, function (config) {
      initDefaultViewButtons(
          config.viewName,
          config.setButtonId,
          config.getButtonId);
    });
  }

  function ajaxCall(url, callback) {
    var handler = new YAHOO.util.XHRDataSource();
    handler.responseType = YAHOO.util.DataSource.TYPE_JSARRAY;
    handler.sendRequest(url, {
      success: callback,
      failure: callback
    });
  }

})();

/********* ebx_widget.js *********/
/*START Button Utils */
function EBX_ButtonUtils() {
}

EBX_ButtonUtils.buttonPushedCSSClass = "ebx_ButtonPushed";
EBX_ButtonUtils.disabledButtonCSSClass = "ebx_Disabled";
EBX_ButtonUtils.defaultButtonCSSClass = "ebx_DefaultButton";
EBX_ButtonUtils.waitingButtonModeCSSClass = "ebx_WaitingButtonMode";

EBX_ButtonUtils.toggleButtonCkbIdSuffix = "_ckb";

EBX_ButtonUtils.buttonsConfirmMessages = [];
EBX_ButtonUtils.toggleButtonsConfirmMessagesOff = [];

EBX_ButtonUtils.jsButtonsCmds = [];
EBX_ButtonUtils.toggleButtonsCmdsOn = [];
EBX_ButtonUtils.toggleButtonsCmdsOff = [];

EBX_ButtonUtils.switchButtonsLabel1 = [];
EBX_ButtonUtils.switchButtonsLabel2 = [];
EBX_ButtonUtils.switchButtonsCSS1 = [];
EBX_ButtonUtils.switchButtonsCSS2 = [];
EBX_ButtonUtils.switchButtonsTitle1 = [];
EBX_ButtonUtils.switchButtonsTitle2 = [];
EBX_ButtonUtils.switchButtonsMenuText1 = [];
EBX_ButtonUtils.switchButtonsMenuText2 = [];
EBX_ButtonUtils.switchButtonsMenuCSSClass1 = [];
EBX_ButtonUtils.switchButtonsMenuCSSClass2 = [];
EBX_ButtonUtils.switchButtonLabelIdSuffix = "_label";

EBX_ButtonUtils.selectButtonsConfig = [];

EBX_ButtonUtils.linkButtonsDiscardFormModifications = [];

EBX_ButtonUtils.menuButtonsMenu = [];
EBX_ButtonUtils.menuButtonsTitles = [];
EBX_ButtonUtils.menuButtonsFixedWidth = [];

EBX_ButtonUtils.menuButtonArrowSpan = "<span class=\"ebx_MenuButtonArrow fa fa-caret-down\"></span>";

//[EBX_PUBLIC_API]
ebx_buttonUtils_setButtonDisabled = function (buttonEl, disabled) {
  EBX_ButtonUtils.setButtonDisabled(buttonEl, disabled);
};
EBX_ButtonUtils.setButtonDisabled = function (buttonEl, disabled) {
  if (disabled) {
    // workaround for Firefox (on Chrome, it worked)
    // it does not work for IE
    buttonEl.blur();
  }
  buttonEl.disabled = disabled;
  if (disabled) {
    EBX_Utils.addCSSClass(buttonEl, EBX_ButtonUtils.disabledButtonCSSClass);
  } else {
    EBX_Utils.removeCSSClass(buttonEl, EBX_ButtonUtils.disabledButtonCSSClass);
  }
};

//[EBX_PUBLIC_API]
ebx_buttonUtils_setButtonWaitingMode = function (buttonEl, setWaitingMode) {
  buttonEl.disabled = setWaitingMode;

  if (setWaitingMode) {
    EBX_Utils.addCSSClass(buttonEl, EBX_ButtonUtils.waitingButtonModeCSSClass);
  } else {
    EBX_Utils.removeCSSClass(buttonEl, EBX_ButtonUtils.waitingButtonModeCSSClass);
  }
};

EBX_ButtonUtils.isInADisabledParent = function (buttonEl) {
  if (EBX_Utils.getFirstParentMatchingCSSClass(buttonEl, EBX_Table_State.DRAWING.className) !== null) {
    return true;
  }

  if (EBX_Utils.getFirstParentMatchingCSSClass(buttonEl, "ebx_MDMComponentWaitingToolbar") !== null) {
    return true;
  }

  return false;
};

EBX_ButtonUtils.callEvent = function (actionString, self, event) {
  window.setTimeout(
      function () {
        new Function("event", actionString).call(self, event);
      },
      0);
};

EBX_ButtonUtils.jsButtonListener = function (buttonEl, event) {
  if (EBX_ButtonUtils.isInADisabledParent(buttonEl)) {
    return;
  }

  YAHOO.util.Event.stopEvent(event);
  if (EBX_ButtonUtils.buttonsConfirmMessages[buttonEl.id] !== undefined) {
    ebx_confirm({
      question: EBX_ButtonUtils.buttonsConfirmMessages[buttonEl.id],
      jsCommandYes: EBX_ButtonUtils.jsButtonsCmds[buttonEl.id]
    });
    return;
  }
  EBX_ButtonUtils.callEvent(
      EBX_ButtonUtils.jsButtonsCmds[buttonEl.id],
      buttonEl,
      event);
};

EBX_ButtonUtils.toggleButtonListener = function (buttonEl, event) {
  if (EBX_ButtonUtils.isInADisabledParent(buttonEl)) {
    return;
  }

  YAHOO.util.Event.stopEvent(event);
  var checkboxElement = document.getElementById(buttonEl.id + EBX_ButtonUtils.toggleButtonCkbIdSuffix);
  checkboxElement.checked = !checkboxElement.checked;
  EBX_ButtonUtils.toggleButtonCkbListener(checkboxElement, buttonEl.id, event);
};

EBX_ButtonUtils.setStateToToggleButton = function (buttonEl, stateBoolean) {
  if (stateBoolean !== true && stateBoolean !== false) {
    return;
  }

  if (buttonEl === null) {
    return;
  }

  var checkboxElement = document.getElementById(buttonEl.id + EBX_ButtonUtils.toggleButtonCkbIdSuffix);
  if (checkboxElement === null) {
    return;
  }

  checkboxElement.checked = stateBoolean;

  if (stateBoolean === true) {
    EBX_Utils.addCSSClass(buttonEl, EBX_ButtonUtils.buttonPushedCSSClass);
  } else {
    EBX_Utils.removeCSSClass(buttonEl, EBX_ButtonUtils.buttonPushedCSSClass);
  }
};

EBX_ButtonUtils.toggleButtonCkbListener = function (ckbEl, toggleButtonId, event) {
  YAHOO.util.Event.stopPropagation(event);
  if (ckbEl.checked === true) {
    if (EBX_ButtonUtils.buttonsConfirmMessages[toggleButtonId] !== undefined) {
      ebx_confirm({
        question: EBX_ButtonUtils.buttonsConfirmMessages[toggleButtonId],
        jsCommandYes: function () {
          EBX_ButtonUtils.toggleButton_activeStateOn(toggleButtonId, event);
        },
        jsCommandNo: function () {
          EBX_ButtonUtils.toggleButton_cancelStateOn(toggleButtonId);
        }
      });
      return;
    }

    EBX_ButtonUtils.toggleButton_activeStateOn(toggleButtonId, event);
  } else {
    if (EBX_ButtonUtils.toggleButtonsConfirmMessagesOff[toggleButtonId] !== undefined) {
      ebx_confirm({
        question: EBX_ButtonUtils.toggleButtonsConfirmMessagesOff[toggleButtonId],
        jsCommandYes: function () {
          EBX_ButtonUtils.toggleButton_activeStateOff(toggleButtonId, event);
        },
        jsCommandNo: function () {
          EBX_ButtonUtils.toggleButton_cancelStateOff(toggleButtonId);
        }
      });
      return;
    }

    EBX_ButtonUtils.toggleButton_activeStateOff(toggleButtonId, event);
  }
};

// state on = pushed
EBX_ButtonUtils.toggleButton_cancelStateOn = function (toggleButtonId) {
  document.getElementById(toggleButtonId + EBX_ButtonUtils.toggleButtonCkbIdSuffix).checked = false;
};
EBX_ButtonUtils.toggleButton_activeStateOn = function (toggleButtonId, event) {
  var button = document.getElementById(toggleButtonId);

  EBX_Utils.addCSSClass(button, EBX_ButtonUtils.buttonPushedCSSClass);
  EBX_ButtonUtils.callEvent(
      EBX_ButtonUtils.toggleButtonsCmdsOn[toggleButtonId],
      button,
      event);
};

//state off = unpushed
EBX_ButtonUtils.toggleButton_cancelStateOff = function (toggleButtonId) {
  document.getElementById(toggleButtonId + EBX_ButtonUtils.toggleButtonCkbIdSuffix).checked = true;
};
EBX_ButtonUtils.toggleButton_activeStateOff = function (toggleButtonId, event) {
  var button = document.getElementById(toggleButtonId);

  EBX_Utils.removeCSSClass(button, EBX_ButtonUtils.buttonPushedCSSClass);
  EBX_ButtonUtils.callEvent(
      EBX_ButtonUtils.toggleButtonsCmdsOff[toggleButtonId],
      button,
      event);
};

/**
 * Toggle the button and do the JavaScript command.
 *
 * @param {Object}
 *            buttonEl the button to toggle
 */
EBX_ButtonUtils.switchButtonListener = function (buttonEl, event) {
  if (EBX_ButtonUtils.isInADisabledParent(buttonEl)) {
    return;
  }

  YAHOO.util.Event.stopEvent(event);
  document.getElementById(buttonEl.id + EBX_ButtonUtils.toggleButtonCkbIdSuffix).click();
};

EBX_ButtonUtils.switchButtonState1 = 1;
EBX_ButtonUtils.switchButtonState2 = 2;
EBX_ButtonUtils.getStateOfSwitchButton = function (buttonEl) {
  if (document.getElementById(buttonEl.id + EBX_ButtonUtils.toggleButtonCkbIdSuffix).checked === true) {
    return EBX_ButtonUtils.switchButtonState2;
  }
  return EBX_ButtonUtils.switchButtonState1;
};

EBX_ButtonUtils.switchButtonCkbListener = function (ckbEl, switchButtonId, event) {
  YAHOO.util.Event.stopPropagation(event);

  if (ckbEl.checked === true) {
    if (EBX_ButtonUtils.buttonsConfirmMessages[switchButtonId] !== undefined) {
      ebx_confirm({
        question: EBX_ButtonUtils.buttonsConfirmMessages[switchButtonId],
        jsCommandYes: function () {
          EBX_ButtonUtils.switchButton_activeState2(switchButtonId, event);
        },
        jsCommandNo: function () {
          EBX_ButtonUtils.switchButton_cancelState2(switchButtonId);
        }
      });
      return;
    }

    EBX_ButtonUtils.switchButton_activeState2(switchButtonId, event);
  } else {
    if (EBX_ButtonUtils.toggleButtonsConfirmMessagesOff[switchButtonId] !== undefined) {
      ebx_confirm({
        question: EBX_ButtonUtils.toggleButtonsConfirmMessagesOff[switchButtonId],
        jsCommandYes: function () {
          EBX_ButtonUtils.switchButton_activeState1(switchButtonId, event);
        },
        jsCommandNo: function () {
          EBX_ButtonUtils.switchButton_cancelState1(switchButtonId);
        }
      });
      return;
    }
    EBX_ButtonUtils.switchButton_activeState1(switchButtonId, event);
  }
};

EBX_ButtonUtils.switchButton_cancelState1 = function (switchButtonId) {
  document.getElementById(switchButtonId + EBX_ButtonUtils.toggleButtonCkbIdSuffix).checked = true;
};
EBX_ButtonUtils.switchButton_activeState1 = function (switchButtonId, event) {

  // change the state of the button to 1/off
  button = document.getElementById(switchButtonId);
  button.title = EBX_ButtonUtils.switchButtonsTitle1[switchButtonId];
  button.className = EBX_ButtonUtils.switchButtonsCSS1[switchButtonId];

  buttonLabel = document.getElementById(switchButtonId + EBX_ButtonUtils.switchButtonLabelIdSuffix);
  buttonLabel.innerHTML = EBX_ButtonUtils.switchButtonsLabel1[switchButtonId];

  EBX_ButtonUtils.callEvent(
      EBX_ButtonUtils.toggleButtonsCmdsOff[switchButtonId],
      button,
      event);
};

EBX_ButtonUtils.switchButton_cancelState2 = function (switchButtonId) {
  document.getElementById(switchButtonId + EBX_ButtonUtils.toggleButtonCkbIdSuffix).checked = false;
};
EBX_ButtonUtils.switchButton_activeState2 = function (switchButtonId, event) {

  // change the state of the button to 2/on
  button = document.getElementById(switchButtonId);
  button.title = EBX_ButtonUtils.switchButtonsTitle2[switchButtonId];
  button.className = EBX_ButtonUtils.switchButtonsCSS2[switchButtonId];

  buttonLabel = document.getElementById(switchButtonId + EBX_ButtonUtils.switchButtonLabelIdSuffix);
  buttonLabel.innerHTML = EBX_ButtonUtils.switchButtonsLabel2[switchButtonId];

  EBX_ButtonUtils.callEvent(
      EBX_ButtonUtils.toggleButtonsCmdsOn[switchButtonId],
      button,
      event);
};

EBX_ButtonUtils.switchButtonMenuPanel = null;
EBX_ButtonUtils.switchButtonMenuPanelId = "ebx_OverlayForSwitchButtonMenu";
EBX_ButtonUtils.switchButtonMenuId = "ebx_SwitchButtonMenu";
EBX_ButtonUtils.switchButtonWithMenuCSSClass = "ebx_SwitchButtonWithMenu";

EBX_ButtonUtils.switchButtonProposalIsBeingChosen = false;
EBX_ButtonUtils.switchButtonMenuIsDisplayed = false;
EBX_ButtonUtils.currentSwitchButton = null;

EBX_ButtonUtils.getSwitchButtonMenuPanel = function () {
  if (EBX_ButtonUtils.switchButtonMenuPanel === null) {
    EBX_ButtonUtils.switchButtonMenuPanel = new YAHOO.widget.Overlay(EBX_ButtonUtils.switchButtonMenuPanelId);

    var menuButtonBuf = [];
    menuButtonBuf.push("<button");
    menuButtonBuf.push(" type=\"button\"");
    menuButtonBuf.push(" id=\"", EBX_ButtonUtils.switchButtonMenuId, "\"");
    menuButtonBuf.push(" class=\"ebx_Button\"");
    menuButtonBuf.push(" onclick=\"EBX_ButtonUtils.switchButtonMenuDisplay();\"");
    menuButtonBuf.push(" onmousedown=\"EBX_ButtonUtils.menuButtonMouseDownListener(event);\"");
    menuButtonBuf.push(" onmouseover=\"EBX_ButtonUtils.switchButtonMenuListenerMouseover();\"");
    menuButtonBuf.push(" onfocus=\"EBX_ButtonUtils.switchButtonMenuListenerMouseover();\"");
    menuButtonBuf.push(" onmouseout=\"EBX_ButtonUtils.switchButtonListenerMouseOut();\"");
    menuButtonBuf.push(">");
    menuButtonBuf.push(EBX_ButtonUtils.menuButtonArrowSpan);
    menuButtonBuf.push("</button>");

    EBX_ButtonUtils.switchButtonMenuPanel.setBody(menuButtonBuf.join(""));

    EBX_ButtonUtils.menuButtonsTitles[EBX_ButtonUtils.switchButtonMenuId] = [];
  }

  return EBX_ButtonUtils.switchButtonMenuPanel;
};
EBX_ButtonUtils.buildCurrentSwitchButtonMenu = function () {
  var currentCurrentSwitchButtonId = EBX_ButtonUtils.currentSwitchButton.id, item1 = {
    text: EBX_ButtonUtils.switchButtonsMenuText1[currentCurrentSwitchButtonId]
  }, item2 = {
    text: EBX_ButtonUtils.switchButtonsMenuText2[currentCurrentSwitchButtonId]
  };

  if (EBX_ButtonUtils.switchButtonsMenuCSSClass1[currentCurrentSwitchButtonId] !== undefined) {
    item1.classname = EBX_ButtonUtils.switchButtonsMenuCSSClass1[currentCurrentSwitchButtonId];
  }

  if (EBX_ButtonUtils.switchButtonsMenuCSSClass2[currentCurrentSwitchButtonId] !== undefined) {
    item2.classname = EBX_ButtonUtils.switchButtonsMenuCSSClass2[currentCurrentSwitchButtonId];
  }

  if (EBX_ButtonUtils.getStateOfSwitchButton(EBX_ButtonUtils.currentSwitchButton)
      === EBX_ButtonUtils.switchButtonState1) {
    item1.checked = true;
    item2.onclick = {
      fn: EBX_ButtonUtils.toggleCurrentSwitchButton
    };
  } else {
    item1.onclick = {
      fn: EBX_ButtonUtils.toggleCurrentSwitchButton
    };
    item2.checked = true;
  }

  return [item1, item2];
};

EBX_ButtonUtils.toggleCurrentSwitchButton = function () {
  EBX_ButtonUtils.currentSwitchButton.click();
};

EBX_ButtonUtils.switchButtonListenerFocus = function (buttonEl) {
  buttonEl.ebx_hasKbdFocus = true;
  EBX_ButtonUtils.switchButtonListenerMouseOver(buttonEl);
};

EBX_ButtonUtils.switchButtonListenerMouseOver = function (buttonEl) {
  if (EBX_ButtonUtils.switchButtonMenuIsDisplayed) {
    return;
  }

  EBX_ButtonUtils.switchButtonProposalIsBeingChosen = true;
  EBX_ButtonUtils.currentSwitchButton = buttonEl;

  var panel = EBX_ButtonUtils.getSwitchButtonMenuPanel();
  panel.render(document.body);
  panel.cfg.setProperty("context", [buttonEl, "tl", "tr", null, [-1, 0]]);
  panel.show();

  EBX_ButtonUtils.menuButtonsMenu[EBX_ButtonUtils.switchButtonMenuId] = EBX_ButtonUtils.buildCurrentSwitchButtonMenu();

  EBX_Utils.addCSSClass(buttonEl, EBX_ButtonUtils.switchButtonWithMenuCSSClass);
};

EBX_ButtonUtils.switchButtonMenuListenerMouseover = function () {
  EBX_ButtonUtils.switchButtonProposalIsBeingChosen = true;
};

EBX_ButtonUtils.switchButtonListenerBlur = function () {
  if (EBX_ButtonUtils.currentSwitchButton !== null) {
    EBX_ButtonUtils.currentSwitchButton.ebx_hasKbdFocus = false;
  }
  EBX_ButtonUtils.switchButtonListenerMouseOut();
};
EBX_ButtonUtils.switchButtonListenerMouseOut = function () {
  if (EBX_ButtonUtils.switchButtonMenuIsDisplayed) {
    return;
  }
  EBX_ButtonUtils.switchButtonProposalIsBeingChosen = false;
  window.setTimeout(EBX_ButtonUtils.hideCurrentSwitchButtonDecorations,
      EBX_ButtonUtils.hideCurrentSwitchButtonDecorationsTimeout);
};
EBX_ButtonUtils.hideCurrentSwitchButtonDecorationsTimeout = 100;
EBX_ButtonUtils.hideCurrentSwitchButtonDecorations = function () {
  if (EBX_ButtonUtils.switchButtonProposalIsBeingChosen) {
    return;
  }

  if (EBX_ButtonUtils.currentSwitchButton === null) {
    return;
  }

  if (EBX_ButtonUtils.currentSwitchButton.ebx_hasKbdFocus) {
    return;
  }

  EBX_ButtonUtils.getSwitchButtonMenuPanel().hide();

  EBX_Utils.removeCSSClass(EBX_ButtonUtils.currentSwitchButton, EBX_ButtonUtils.switchButtonWithMenuCSSClass);

  EBX_ButtonUtils.currentSwitchButton = null;
};

EBX_ButtonUtils.switchButtonListenerKeyPressed = function (event) {
  if (event.keyCode === EBX_Utils.keyCodes.DOWN) {
    document.getElementById(EBX_ButtonUtils.switchButtonMenuId).click();
  }
};

EBX_ButtonUtils.switchButtonMenuDisplay = function () {
  var hasBeenDisplayed = EBX_ButtonUtils.menuButtonDisplay(EBX_ButtonUtils.switchButtonMenuId,
      EBX_ButtonUtils.currentSwitchButton);
  if (hasBeenDisplayed === false) {
    return;
  }

  EBX_ButtonUtils.switchButtonMenuIsDisplayed = true;

  EBX_ButtonUtils.menuButtonsYUIMenu.mouseOverEvent.subscribe(EBX_ButtonUtils.switchButtonMenuListenerMouseover);
  EBX_ButtonUtils.menuButtonsYUIMenu.hideEvent.subscribe(EBX_ButtonUtils.releaseSwitchButtonMenuSubscribes);
};
EBX_ButtonUtils.releaseSwitchButtonMenuSubscribes = function () {
  EBX_ButtonUtils.menuButtonsYUIMenu.mouseOverEvent.unsubscribe(EBX_ButtonUtils.switchButtonMenuListenerMouseover);
  EBX_ButtonUtils.menuButtonsYUIMenu.hideEvent.unsubscribe(EBX_ButtonUtils.releaseSwitchButtonMenuSubscribes);
  EBX_ButtonUtils.switchButtonMenuIsDisplayed = false;
  EBX_ButtonUtils.switchButtonListenerMouseOut();
};

// deprecated / no more used since 5.7.0 (all buttons are <button>, even links)
EBX_ButtonUtils.linkListener = function (buttonEl, event) {
  if (EBX_ButtonUtils.isInADisabledParent(buttonEl)) {
    YAHOO.util.Event.preventDefault(event);
    return;
  }

  if (EBX_Utils.matchCSSClass(buttonEl, EBX_ButtonUtils.disabledButtonCSSClass) === true) {
    YAHOO.util.Event.preventDefault(event);
    return;
  }

  if (EBX_ButtonUtils.buttonsConfirmMessages[buttonEl.id] !== undefined) {
    if (window.confirm(EBX_ButtonUtils.buttonsConfirmMessages[buttonEl.id]) === false) {
      YAHOO.util.Event.preventDefault(event);
      return;
    }
  }

  if (EBX_ButtonUtils.linkButtonsDiscardFormModifications[buttonEl.id] === true) {
    EBX_Form.setParentFormDiscardModifications(buttonEl);
  }
};

EBX_ButtonUtils.hiddenDefaultSubmitButtonCSSClass = "ebx_HiddenDefaultSubmitButton";
EBX_ButtonUtils.getHiddenDefaultSubmitButton = function (formEl) {
  if (formEl.ebx_defaultSubmitButtonId
      === undefined/* || EBX_Utils.getFirstRecursiveChildMatchingCSSClass(formEl, EBX_ButtonUtils.hiddenDefaultSubmitButtonCSSClass) === null*/) {
    var hiddenDefaultSubmitButton = document.createElement("input");
    hiddenDefaultSubmitButton.type = "submit";
    hiddenDefaultSubmitButton.className = EBX_ButtonUtils.hiddenDefaultSubmitButtonCSSClass;
    hiddenDefaultSubmitButton.tabIndex = -1;
    formEl.insertBefore(hiddenDefaultSubmitButton, formEl.firstChild);
    return hiddenDefaultSubmitButton;
  }

  return EBX_Utils.getFirstRecursiveChildMatchingCSSClass(formEl, EBX_ButtonUtils.hiddenDefaultSubmitButtonCSSClass);
};
EBX_ButtonUtils.setSubmitButtonAsDefault = function (submitButtonId) {
  var submitButton = document.getElementById(submitButtonId), parentForm, currentSubmitButton,
      hiddenDefaultSubmitButton;
  if (submitButton === null) {
    return;
  }

  parentForm = submitButton.form;
  if (parentForm !== undefined) {

    currentSubmitButton = document.getElementById(parentForm.ebx_defaultSubmitButtonId);
    if (currentSubmitButton !== null) {
      EBX_Utils.removeCSSClass(currentSubmitButton, EBX_ButtonUtils.defaultButtonCSSClass);
    }

    hiddenDefaultSubmitButton = EBX_ButtonUtils.getHiddenDefaultSubmitButton(parentForm);
    hiddenDefaultSubmitButton.name = submitButton.name;
    hiddenDefaultSubmitButton.value = submitButton.value;

    EBX_Utils.addCSSClass(submitButton, EBX_ButtonUtils.defaultButtonCSSClass);
    parentForm.ebx_defaultSubmitButtonId = submitButtonId;
  }
};

EBX_ButtonUtils.menuButtonsYUIMenu = null;
EBX_ButtonUtils.menuButtonsMenuId = "ebx_MenuForMenuButtons";
EBX_ButtonUtils.hideAndGetMenuButtonMenu = function () {
  if (EBX_ButtonUtils.menuButtonsYUIMenu === null) {
    EBX_ButtonUtils.menuButtonsYUIMenu = new YAHOO.widget.Menu(EBX_ButtonUtils.menuButtonsMenuId, {
      constraintoviewport: true,
      shadow: false,
      zIndex: 20
    });
    /* zIndex 20 to cover the floating navigation title, which is 10 */
    EBX_ButtonUtils.menuButtonsYUIMenu.hideEvent.subscribe(EBX_ButtonUtils.releaseMenuButton);
  } else {
    EBX_ButtonUtils.menuButtonsYUIMenu.hide();
  }

  return EBX_ButtonUtils.menuButtonsYUIMenu;
};

EBX_ButtonUtils.menuButtonMouseDownListener = function (event) {
  YAHOO.util.Event.stopEvent(event);
};

EBX_ButtonUtils.menuButtonListenerAjax = function (buttonEl, event, menusUrl) {
  if (EBX_ButtonUtils.isInADisabledParent(buttonEl)) {
    return;
  }

  var ajaxHandler = new EBX_AJAXResponseHandler();

  ajaxHandler.handleAjaxResponseSuccess = function (data) {
    buttonEl.style.cursor = "";

    YAHOO.util.Event.stopEvent(event);

    var menu = EBX_ButtonUtils.hideAndGetMenuButtonMenu();

    menu.clearContent();

    var menuContent = JSON.parse(data);
    menu.addItems(menuContent);

    menu.cfg.setProperty("context", [buttonEl, "tl", "bl", null, [1, 0]]);
    menu.ebx_ElementToRelease = buttonEl;

    menu.render(document.body);

    menu.show();

    EBX_ButtonUtils.setMenuButtonPushed(buttonEl);
  };

  ajaxHandler.handleAjaxResponseFailed = function (responseContent) {
    buttonEl.style.cursor = "";
  };

  buttonEl.style.cursor = "wait";
  ajaxHandler.sendRequest(menusUrl);
};

EBX_ButtonUtils.menuButtonListener = function (buttonEl, event) {
  if (EBX_ButtonUtils.isInADisabledParent(buttonEl)) {
    return;
  }

  YAHOO.util.Event.stopEvent(event);
  EBX_ButtonUtils.menuButtonDisplay(buttonEl.id, buttonEl);
};

EBX_ButtonUtils.getMenuItems = function getMenuItems(menuButtonId, tableName, initCallbacks) {
  return EBX_Utils.map(
      EBX_ButtonUtils.menuButtonsMenu[menuButtonId],
      filter);

  function filter(itemGroup) {
    if (!EBX_Utils.isArray(itemGroup)) {
      return filter([itemGroup])[0];
    }

    var filterResult = EBX_Utils.map(itemGroup, function (item) {
      var displayed = true;
      var itemdata;

      if (item.submenu !== undefined) {
        if (item.submenu.itemdata !== undefined) {
          itemdata = EBX_Utils.map(item.submenu.itemdata, filter);
          if (itemdata.length == 0) {
            displayed = false;
          }
        }
      }

      if (displayed) {
        var displayPredicate = item.displayPredicate;
        if (displayPredicate !== undefined) {
          var result = eval(displayPredicate);
          if (typeof result === "boolean") {
            displayed = result;
          }

          if (typeof result === "function") {
            displayed = result(tableName);
          }
        }
      }


      return {
        item: item,
        displayed: displayed,
        itemdata: itemdata
      };
    });

    filterResult = EBX_Utils.filter(filterResult, function (itemWrapper) {
      return itemWrapper && itemWrapper.displayed;
    });

    filterResult = EBX_Utils.map(filterResult, function (itemWrapper) {

      if (initCallbacks) {
        var initCallback = itemWrapper.item.initCallback;
        if (initCallback !== undefined) {
          initCallbacks.push(initCallback);
        }
      }

      if (!itemWrapper.itemdata) {
        return itemWrapper.item;
      }

      var result = copy(itemWrapper.item);
      result.submenu = copy(result.submenu);
      result.submenu.itemdata = itemWrapper.itemdata;

      return result;
    });

    return filterResult;

    function copy(object) {
      var result = {};

      for (var attr in object) {
        if (object.hasOwnProperty(attr)) {
          result[attr] = object[attr];
        }
      }

      return result;
    }
  }
};

// enable dynamic menus, listening to table updates
(function () {
  "use strict";

  EBX_Events.on(null, EBX_AjaxTable.events.refresh, refreshMenus);

  // for now, we have no service which displaying depends on selection
//	EBX_Events.on(null, EBX_AjaxTable.events.selectionChange, refreshMenus);

  function refreshMenus(e) {
    var table = e.target;
    var tableName = table.tableName;

    var tableToolbars = EBX_AjaxTable.getToolbarNamesFromTableName(tableName);
    if (!tableToolbars) {
      return;
    }

    EBX_Utils.forEach(tableToolbars, function (toolbarId) {
      var toolbarElement = document.getElementById(toolbarId);
      if (!toolbarElement) {
        return;
      }

      var menuButtons = EBX_Utils.getRecursiveChildrenMatchingCSSClass(toolbarElement, "ebx_MenuButton");
      EBX_Utils.forEach(menuButtons, function (menuButton) {
        var menuButtonId = menuButton.id;
        var menuItems = EBX_ButtonUtils.getMenuItems(menuButtonId, tableName);

        ebx_buttonUtils_setButtonDisabled(menuButton, isEmpty(menuItems));
      });
    });
  }

  function isEmpty(menu) {
    if (!EBX_Utils.isArray(menu)) {
      return false;
    }

    var length = menu.length;

    for (var i = 0; i < length; i++) {
      if (!isEmpty(menu[i])) {
        return false;
      }
    }

    return true;
  }
})();

/**
 * @return true if the menu has been displayed, false otherwise
 */
EBX_ButtonUtils.menuButtonDisplay = function (menuButtonId, contextElOrId) {
  var menuButtonEl = document.getElementById(menuButtonId), menu, i;
  var toolbarId = getToolbarId(menuButtonEl);
  var tableName;
  if (toolbarId !== null && toolbarId !== undefined) {
    tableName = EBX_AjaxTable.getTableNameFromToolbarName(toolbarId);
    if (tableName === undefined) {
      tableName = null;
    }
  } else {
    tableName = null;
  }

  if (EBX_Utils.matchCSSClass(menuButtonEl, EBX_ButtonUtils.buttonPushedCSSClass)) {
    EBX_ButtonUtils.hideAndGetMenuButtonMenu();
    return false;
  }

  if (EBX_ButtonUtils.buttonsConfirmMessages[menuButtonId] !== undefined) {
    if (window.confirm(EBX_ButtonUtils.buttonsConfirmMessages[menuButtonId]) === false) {
      return false;
    }
  }

  menu = EBX_ButtonUtils.hideAndGetMenuButtonMenu();

  menu.clearContent();
  var initCallbacks = [];

  menu.addItems(EBX_ButtonUtils.getMenuItems(menuButtonId, tableName, initCallbacks));

  // Add the title for each group of menu items
  for (i = 0; i < EBX_ButtonUtils.menuButtonsTitles[menuButtonId].length; i++) {
    menu.setItemGroupTitle(EBX_ButtonUtils.menuButtonsTitles[menuButtonId][i], i);
  }

  // shift menu to underneath the search button
  var filtersSlimSideButtonEl = document.getElementById("ebx_FiltersSlimSideButton");
  if (contextElOrId === filtersSlimSideButtonEl) {
    contextElOrId = document.getElementById("ebx_filtersButton");
  }

  menu.cfg.setProperty("context", [contextElOrId, "tl", "bl", null, [1, 0]]);
  menu.ebx_ElementToRelease = menuButtonEl;

  menu.render(document.body);

  EBX_Utils.forEach(initCallbacks, function (initCallback) {
    eval(initCallback);
  });

  // Fix menu width to avoid size change when dynamic content is displayed
  if (EBX_ButtonUtils.menuButtonsFixedWidth[menuButtonId] === true) {
    var el = menu.element;

    var onShow = function onShow() {
      var rect = el.getBoundingClientRect();
      el.style.width = rect.width.toFixed() + "px";
    };

    var onHide = function onHide() {
      el.style.width = "";

      menu.unsubscribe("show", onShow);
      menu.unsubscribe("hide", onHide);
    };

    menu.subscribe("show", onShow);
    menu.subscribe("hide", onHide);
  }

  menu.show();

  EBX_ButtonUtils.setMenuButtonPushed(menuButtonEl);

  return true;

  function getToolbarId(element) {
    if (element.className.indexOf("ebx_Toolbar") >= 0) {
      return element.id;
    }

    var parent = element.parentElement;
    if (!parent) {
      return null;
    }

    return getToolbarId(parent);
  }
};

EBX_ButtonUtils.setMenuButtonPushed = function (menuButtonEl) {
  EBX_Utils.addCSSClass(menuButtonEl, EBX_ButtonUtils.buttonPushedCSSClass);
};

EBX_ButtonUtils.releaseMenuButton = function () {
  EBX_Utils.removeCSSClass(this.ebx_ElementToRelease, EBX_ButtonUtils.buttonPushedCSSClass);
};

EBX_ButtonUtils.executeMenuItemJSCmd = function (p_sType, p_aArgs, p_oValue) {
  window.setTimeout(p_oValue, 0);
};

EBX_ButtonUtils.executeMenuItemJSCmdWithConfirm = function (p_sType, p_aArgs, p_oValue) {
  ebx_confirm({
    question: p_oValue[1],
    jsCommandYes: p_oValue[0]
  });
};

EBX_ButtonUtils.selectAndExecuteMenuItemJSCmd = function (p_sType, p_aArgs, p_oValue) {
  var button = this.parent.ebx_ElementToRelease;
  var selectedIndex = EBX_ButtonUtils.selectButtonsConfig[button.id].selectedIndex;
  var previousConf = EBX_ButtonUtils.menuButtonsMenu[button.id][selectedIndex];
  var i;

  // change innerHTML
  button.innerHTML = p_oValue[0] + EBX_ButtonUtils.menuButtonArrowSpan;

  // remove previous class names
  var previousClassName = previousConf.onclick.obj[1];
  if (previousClassName !== undefined) {
    var previousClassNames = previousClassName.split(EBX_Utils.CSSClassSeparator);
    var previousClassNames_length = previousClassNames.length;
    for (i = 0; i < previousClassNames_length; i++) {
      EBX_Utils.removeCSSClass(button, previousClassNames[i]);
    }
  }
  // add class name
  button.className += EBX_Utils.CSSClassSeparator + p_oValue[1];

  // remove previous check
  previousConf.checked = false;

  // set item checked
  EBX_ButtonUtils.menuButtonsMenu[button.id][this.index].checked = true;

  // update selected index
  EBX_ButtonUtils.selectButtonsConfig[button.id].selectedIndex = this.index;

  window.setTimeout(p_oValue[2], 0);
};

EBX_ButtonUtils.setMenuItemChecked = function (menuButtonId, menuItemId, setChecked) {

  var menuButtonMenu = EBX_ButtonUtils.menuButtonsMenu[menuButtonId];
  EBX_ButtonUtils.checkIfMenuHasItem(menuButtonMenu, menuItemId, setChecked);

};

/**
 * This method checks if a given menu contains the specified (via its ID)
 * menuItem. If it does, the menuItem is (un)checked depending on setChecked
 * value.
 *
 * @param menuEl
 *            the menu supposed to contain the menuItem
 * @param menuItemId
 *            the menuItem being searched
 * @param setChecked
 *            whether the menuItem is to be checked (if found)
 * @returns {Boolean} true if the menuItem has been found
 */
EBX_ButtonUtils.checkIfMenuHasItem = function (menuEl, menuItemId, setChecked) {
  var i = 0;
  var itemFound = false;
  do {
    var currentMenuItem = menuEl[i];
    if (currentMenuItem.id !== undefined && currentMenuItem.id == menuItemId) {
      currentMenuItem.checked = setChecked;
      return true;
    }
    if (Object.prototype.toString.call(currentMenuItem) === '[object Array]') {
      itemFound = EBX_ButtonUtils.checkIfMenuHasItem(currentMenuItem, menuItemId, setChecked);
    }
    i++;
  } while (i < menuEl.length && !itemFound);

  return itemFound;
};

/*END Button Utils */

/*START Ajax contextual menu */
var ebx_contextualMenu_instance;
var EBX_CONTEXTUAL_MENU_ID = "EBX_ContextualMenu";

var EBX_ContextualMenu = function () {
  /*
  this.id;
  this.menu;
  this.treeLine;
  */

  this.init = function () {
    this.menu = new YAHOO.widget.Menu(EBX_CONTEXTUAL_MENU_ID, {
      shadow: false,
      visible: false
    });
    this.menu.hideEvent.subscribe(ebx_contextualMenuUnFocusLine);
  };

  this.setItems = function (items) {
    this.menu.clearContent();
    this.menu.addItems(items);
  };

  this.setId = function (newId) {
    this.id = newId;
  };

  this.getId = function () {
    return this.id;
  };

  this.show = function () {
    this.menu.show();
  };

  this.hide = function () {
    this.menu.hide();
  };

  this.render = function (appendToNode) {
    this.menu.render(appendToNode);
  };

  this.setContext = function (contextEl) {
    this.menu.cfg.setProperty('context', [contextEl, 'tl', 'bl']);
  };

  this.isDisplayed = function () {
    if (this.menu.cfg.getProperty('visible')) {
      return true;
    }

    return false;
  };

  this.setTreeLine = function (newTreeLine) {
    this.treeLine = newTreeLine;
  };

  this.getTreeLine = function () {
    return this.treeLine;
  };
};

var ebx_contextualMenu_instance = null;

function ebx_initContextualMenu() {
  ebx_contextualMenu_instance = new EBX_ContextualMenu();
  ebx_contextualMenu_instance.init();
}

function EBX_AjaxContextualMenuObject(treeLine, container, anAssistElement) {
  this.assistElement = anAssistElement;
  this.containerDiv = container;
  this.treeLine = treeLine;

  this.onGetExceptedResponseCode = function (callerId) {
    return this.responseCodeOK_OptionsList;
  };

  this.onExecuteIfKO = function (responseXML) {
    ebx_hideContextualMenu();
  };

  this.onExecuteIfOK = function (responseXML, root) {
    var menuList = this.ebx_ExtractMenuList(root);
    if (menuList && menuList.length > 0) {
      this.ebx_ShowContextualMenu(menuList);
      return true;
    }
    return false;
  };

  this.ebx_ExtractMenuList = function (rootElement) {
    var optionsElement = rootElement.getElementsByTagName("options")[0];
    if (optionsElement === undefined) {
      return rootElement;
    }
    var optionListElement = optionsElement.getElementsByTagName("option");
    var list = [];
    for (var i = 0; i < optionListElement.length; i++) {
      var optionElement = optionListElement[i];
      var optionValue = "";
      if (optionElement.getElementsByTagName("value")[0].firstChild) {
        optionValue = optionElement.getElementsByTagName("value")[0].firstChild.data;
      }
      var optionLabel = optionElement.getElementsByTagName("label")[0].firstChild.data;
      var isEnabled = "true";
      if (optionElement.attributes.getNamedItem('isEnabled')) {
        isEnabled = optionElement.attributes.getNamedItem('isEnabled').nodeValue;
      }

      list[i] = [optionLabel, optionValue, isEnabled];
    }
    return list;
  };

  this.ebx_ShowContextualMenu = function (listService) {

    if (ebx_contextualMenu_instance === null) {
      ebx_initContextualMenu();
    }

    // old format
    if (listService[0].length === 3) {
      var items = [];
      var menuItem;
      for (var i = 0; i < listService.length; i++) {
        var aService = listService[i];
        if (!aService || aService.length != 3) {
          return;
        }

        menuItem = {};

        menuItem.text = aService[0];

        if (aService[2] == "true") {
          menuItem.onclick = {
            fn: EBX_ButtonUtils.executeMenuItemJSCmd,
            obj: aService[1]
          };
        } else {
          menuItem.disabled = true;
        }

        items.push(menuItem);
      }

      ebx_contextualMenu_instance.setItems(items);

    } else {

      ebx_contextualMenu_instance.setItems(listService);

    }

    ebx_contextualMenu_instance.setId(this.assistElement.id);
    if (treeLine) {
      ebx_contextualMenu_instance.setTreeLine(this.treeLine);
    }

    ebx_contextualMenu_instance.render(document.getElementById(this.containerDiv).parentNode);
    ebx_contextualMenu_instance.setContext(this.assistElement);

    ebx_contextualMenu_button = anAssistElement;

    ebx_contextualMenu_instance.show();
  };
}

EBX_AjaxContextualMenuObject.prototype = new EBX_AbstractAjaxResponseManager();

function ebx_hideContextualMenu() {
  if (ebx_contextualMenu_instance !== null) {
    ebx_contextualMenu_instance.hide();
  }
}

function ebx_contextualMenuUnFocusLine() {
  // restore the state off for the button
  // do it in a delay to avoid re-display the menu if the user clicks on this button
  //  otherwise it will firstly clicks on the body, then set the toggle button off,
  //  and secondly at the same time but just after, click on the toggle button to enable it again ant opening menu
  // a bug remains: if the user double-clicks on the action button to open the menu,
  //  the menu is displayed, then hidden, then displayed again in a short time, creating a flash effect
  //  but it is a very low priority (users should not double-click on a button)
  if (ebx_contextualMenu_button != null) {
    ebx_contextualMenu_button_timeout = window.setTimeout(function () {
      EBX_ButtonUtils.setStateToToggleButton(ebx_contextualMenu_button, false);
      ebx_contextualMenu_button = null;
    }, 100);
  }
}

//Show or hide the contextual menu under the clicked element
function ebx_manageContextualMenu(treeLine, url, assistElementId, containerDiv) {
  var assistElement = document.getElementById(assistElementId);
  var ajaxContextualMenu = new EBX_AjaxContextualMenuObject(treeLine, containerDiv, assistElement);

  // if the previous button had not the time to set off, it is better to set it off now
  //   (otherwise it will be set off in a few time)
  if (ebx_contextualMenu_button !== null) {
    window.clearTimeout(ebx_contextualMenu_button_timeout);
    EBX_ButtonUtils.setStateToToggleButton(ebx_contextualMenu_button, false);
    ebx_contextualMenu_button = null;
  }

  if (ebx_contextualMenu_instance === null) {
    ebx_initContextualMenu();
  }

  var previousClickedElementId = ebx_contextualMenu_instance.getId();

  var isSameElement = false;
  if (previousClickedElementId && previousClickedElementId == assistElementId) {
    isSameElement = true;
  }

  if (ebx_contextualMenu_instance.isDisplayed()) {
    ebx_hideContextualMenu();
    if (!isSameElement) {
      ajaxContextualMenu.onExecute(url);
    }
  } else {
    ajaxContextualMenu.onExecute(url);
  }
}

var ebx_contextualMenu_button = null;
var ebx_contextualMenu_button_timeout = null;
/*END Ajax contextual menu */

/* START Tabular View ColumnConfiguration */
function ebx_tabularViewColumnLineSelection(aCheckBox, treeLineIndex, checkBoxIDSuffix, contentIDSuffix,
    sortImgIDSuffix) {
  var ajaxSelectTreeLine = new EBX_AjaxSelectTableColumnTreeLineObject(aCheckBox, treeLineIndex, checkBoxIDSuffix,
      contentIDSuffix, sortImgIDSuffix);
  var params = new EBX_Map();
  params.put(EBX_Constants.ajaxTreeLineIndex, treeLineIndex);
  var requestUrl;
  if (aCheckBox.checked == true) {
    requestUrl = EBX_Constants.getRequestLink(ebx_tabularViewColumnConfiguratorSelectNodeEvent, params);
  } else {
    requestUrl = EBX_Constants.getRequestLink(ebx_tabularViewColumnConfiguratorUnselectNodeEvent, params);
  }
  ajaxSelectTreeLine.onExecute(requestUrl);
}

function EBX_AjaxSelectTableColumnTreeLineObject(aCheckBox, treeLineIndex, checkBoxIDSuffix, contentIDSuffix,
    sortImgIDSuffix) {
  this.checkBox = aCheckBox;
  this.treeLineIndex = treeLineIndex;

  this.treeLineCheckBoxIDSuffix = checkBoxIDSuffix;
  this.treeLineContentIDSuffix = contentIDSuffix;
  this.treeLineSortImgIDSuffix = treeLineIndex;

  this.onGetExceptedResponseCode = function () {
    return this.responseCodeOK_OptionsList;
  };

  this.onExecuteIfKO = function (responseXML) {
    if (this.checkBox.checked == true) {
      this.checkBox.checked = false;
    } else {
      this.checkBox.checked = true;
    }
  };

  this.onExecuteIfOK = function (responseXML, root) {
    var impactedTreeLine = this.onExtractImpactedTreeLineIndexes(root);
    if (!impactedTreeLine || impactedTreeLine.length <= 0) {
      this.onExecuteIfKO(responseXML);
      return;
    }

    for (var i = 0; i < impactedTreeLine.length; i++) {
      this.onWBP_applyChange(impactedTreeLine[i], this.checkBox.checked);
    }

    return true;
  };

  this.onExtractImpactedTreeLineIndexes = function (rootElement) {
    var optionsElement = rootElement.getElementsByTagName("options")[0];
    var optionListElement = optionsElement.getElementsByTagName("option");
    var list = [];
    for (var i = 0; i < optionListElement.length; i++) {
      var optionElement = optionListElement[i];
      if (optionElement.getElementsByTagName("value")[0].firstChild) {
        var optionValue = optionElement.getElementsByTagName("value")[0].firstChild.data;
        list[i] = optionValue;
      }
    }
    return list;
  };

  this.onWBP_applyChange = function (treeLineIndex, newValue) {
    var targetCheckBox = document.getElementById(treeLineIndex + this.treeLineCheckBoxIDSuffix);
    if (!targetCheckBox) {
      return;
    }
    targetCheckBox.checked = newValue;

    var content = document.getElementById(treeLineIndex + this.treeLineContentIDSuffix);
    if (!content) {
      return;
    }
    if (newValue || newValue == 'true') {
      EBX_Utils.removeCSSClass(content, "ebx_tabularView_hiddenNode");
    } else {
      EBX_Utils.addCSSClass(content, "ebx_tabularView_hiddenNode");
    }
    var sortImg = document.getElementById(treeLineIndex + this.treeLineSortImgIDSuffix);
    if (!sortImg) {
      return;
    }
    if (!(newValue || newValue == 'true')) {
      sortImg.style.display = 'none';
    }
  };
}

EBX_AjaxSelectTableColumnTreeLineObject.prototype = new EBX_AbstractAjaxResponseManager();
/* END Tabular View ColumnConfiguration */

/*START EBX_NodeDocumentation */

function EBX_NodeDocumentation() {
}

EBX_NodeDocumentation.docPanels = [];

EBX_NodeDocumentation.yuiPanel = null;
EBX_NodeDocumentation.DocumentationPanelId = "ebx_NodeDocumentation_Panel";
/* duration in seconds */
EBX_NodeDocumentation.fadeEffectDuration = 0.25;
EBX_NodeDocumentation.getDocumentationPanel = function () {
  if (EBX_NodeDocumentation.yuiPanel === null) {
    EBX_NodeDocumentation.yuiPanel = new YAHOO.widget.Overlay(EBX_NodeDocumentation.DocumentationPanelId, {
      constraintoviewport: true,
      visible: false,
      effect: {
        effect: YAHOO.widget.ContainerEffect.FADE,
        duration: EBX_NodeDocumentation.fadeEffectDuration
      }
    });
    EBX_NodeDocumentation.yuiPanel.render(document.body);

    YAHOO.util.Event.addListener(EBX_NodeDocumentation.yuiPanel.element, "mouseover",
        EBX_NodeDocumentation.cancelTimedHideCurrentDocNoCheck,
        null, null);
    YAHOO.util.Event.addListener(EBX_NodeDocumentation.yuiPanel.element, "mouseout",
        EBX_NodeDocumentation.launchTimedHideCurrentDocNoCheck,
        null, null);
  }
  return EBX_NodeDocumentation.yuiPanel;
};

EBX_NodeDocumentation.nodeLabelCSSClass = "ebx_nodeLabel";
EBX_NodeDocumentation.documentationPanelBodyClassName = "ebx_dcpBody";

EBX_NodeDocumentation.yuiDataSource = new YAHOO.util.XHRDataSource();
EBX_NodeDocumentation.yuiDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
EBX_NodeDocumentation.yuiDataSource.responseSchema = {
  resultsList: "innerHTML",
  metaFields: {
    scriptToExecute: "ebx_scriptToExecute"
  }
};

EBX_NodeDocumentation.getDocPanelObj = function (nodeLabelElement) {
  if (nodeLabelElement === undefined) {
    return null;
  }

  var docPanel = EBX_NodeDocumentation.docPanels[nodeLabelElement.id];
  if (docPanel === undefined) {
    return null;
  }

  return docPanel;
};

EBX_NodeDocumentation.displayDocumentation = function (nodeLabelElement) {
  var docPanel = EBX_NodeDocumentation.getDocPanelObj(nodeLabelElement);
  if (docPanel === null) {
    return;
  }

  // is AJAX mode
  if (docPanel.homeKey !== undefined || docPanel.path !== undefined) {

    var requestURI = EBX_Constants.ajaxNodeDocumentationRequest;
    if (docPanel.homeKey !== undefined) {
      requestURI += EBX_Constants.ajaxNodeDocumentationParamHomeKey + docPanel.homeKey;
    }
    if (docPanel.adaptationName !== undefined) {
      requestURI += EBX_Constants.ajaxNodeDocumentationParamAdaptationName + docPanel.adaptationName;
    }
    if (docPanel.contentType !== undefined) {
      requestURI += EBX_Constants.ajaxNodeDocumentationParamContentType + docPanel.contentType;
    }
    if (docPanel.tableName !== undefined) {
      requestURI += EBX_Constants.ajaxNodeDocumentationParamTableName + docPanel.tableName;
    }
    if (docPanel.path !== undefined) {
      requestURI += EBX_Constants.ajaxNodeDocumentationParamPath + docPanel.path;
    }
    requestURI += EBX_Constants.ajaxNodeDocumentationParamAdvancedBlockEnabled + (docPanel.advancedBlockEnabled ? "true"
        : "false");

    EBX_NodeDocumentation.yuiDataSource.sendRequest(requestURI, {
      success: EBX_NodeDocumentation.displayDocumentationFromAjaxResponse,
      failure: EBX_NodeDocumentation.displayDocumentationFromAjaxFailure,
      argument: {
        nodeLabelElement: nodeLabelElement
      }
    });
  } else {
    EBX_NodeDocumentation.displayDocumentationFromNodeLabelDocPanel(nodeLabelElement, docPanel.innerHTML);
    window.setTimeout(docPanel.ebx_scriptToExecute, 0);
  }
};
EBX_NodeDocumentation.displayDocumentationFromAjaxResponse = function (oRequest, oParsedResponse, argument) {
  EBX_NodeDocumentation.docPanels[argument.nodeLabelElement.id] = {
    innerHTML: oParsedResponse.results[0],
    ebx_scriptToExecute: oParsedResponse.meta.scriptToExecute
  };

  EBX_NodeDocumentation.displayDocumentation(argument.nodeLabelElement);
};
EBX_NodeDocumentation.displayDocumentationFromAjaxFailure = function (oRequest, oParsedResponse, argument) {
  if (oParsedResponse.status == 401) {
    EBX_Loader.gotoTimeoutPage();
  }
};

EBX_NodeDocumentation.displayDocumentationFromNodeLabelDocPanel = function (nodeLabelElement, nodeLabelDocPanelHTML) {
  var documentationPanel = EBX_NodeDocumentation.getDocumentationPanel();

  documentationPanel.setBody(nodeLabelDocPanelHTML);

  documentationPanel.cfg.setProperty('context', [nodeLabelElement, 'tl', 'bl', null, [-2, 0]]);

  documentationPanel.show();

  EBX_NodeDocumentation.clearHideEvents();

  EBX_NodeDocumentation.addEventForBody();
};

EBX_NodeDocumentation.launchedDocumentationHideEvents = [];
EBX_NodeDocumentation.documentationHideTimeout = 500;
// duration in ms
EBX_NodeDocumentation.launchTimedHideCurrentDocNoCheck = function () {
  EBX_NodeDocumentation.launchedDocumentationHideEvents.push(
      window.setTimeout("EBX_NodeDocumentation.hideCurrentDocumentationNow();",
          EBX_NodeDocumentation.documentationHideTimeout));

  EBX_NodeDocumentation.addEventForBody();
};
EBX_NodeDocumentation.cancelTimedHideCurrentDocNoCheck = function () {
  EBX_NodeDocumentation.clearHideEvents();

  EBX_NodeDocumentation.removeEventForBody();
};
EBX_NodeDocumentation.hideCurrentDocumentationNow = function (event) {
  var docPanel = EBX_NodeDocumentation.getDocumentationPanel();

  if (event !== undefined) {
    var clickedEl = EBX_Utils.getTargetElement(event);
    if (clickedEl === docPanel.element || EBX_Utils.isChildOf(clickedEl, docPanel.element) === true) {
      return;
    }
  }

  docPanel.hide();

  EBX_LabelTooltip.reinitCurrentToggleButton();

  EBX_NodeDocumentation.removeEventForBody();
};

EBX_NodeDocumentation.displayDocumentationFromButton = function (yuiButtonElement) {
  EBX_NodeDocumentation.displayDocumentation(EBX_Utils.getFirstParentMatchingCSSClass(yuiButtonElement._button,
      EBX_NodeDocumentation.nodeLabelCSSClass));
};

EBX_NodeDocumentation.clearHideEvents = function () {
  while (EBX_NodeDocumentation.launchedDocumentationHideEvents.length !== 0) {
    window.clearTimeout(EBX_NodeDocumentation.launchedDocumentationHideEvents.shift());
  }
};

EBX_NodeDocumentation.addEventForBody = function () {
  if (document.body.addEventListener) {
    /* Firefox and modern browsers */
    document.body.addEventListener("click", EBX_NodeDocumentation.hideCurrentDocumentationNow, false);
  } else if (document.body.attachEvent) {
    /* IE */
    document.body.attachEvent("onclick", EBX_NodeDocumentation.hideCurrentDocumentationNow);
  }
};
EBX_NodeDocumentation.removeEventForBody = function () {
  if (document.body.addEventListener) {
    /* Firefox and modern browsers */
    document.body.removeEventListener("click", EBX_NodeDocumentation.hideCurrentDocumentationNow, false);
  } else if (document.body.attachEvent) {
    /* IE */
    document.body.detachEvent("onclick", EBX_NodeDocumentation.hideCurrentDocumentationNow);
  }
};
/*END EBX_NodeDocumentation */

/*START EBX_LabelTooltip */
EBX_LabelTooltip = function () {
};

EBX_LabelTooltip.displayAllLabelDocButtonsCSSClass = "ebx_DisplayAllLabelDocButtons";

EBX_LabelTooltip.displayAll = function () {
  EBX_Utils.addCSSClass(document.body, EBX_LabelTooltip.displayAllLabelDocButtonsCSSClass);
};
EBX_LabelTooltip.hideAll = function () {
  EBX_Utils.removeCSSClass(document.body, EBX_LabelTooltip.displayAllLabelDocButtonsCSSClass);
  EBX_NodeDocumentation.hideCurrentDocumentationNow();
};
EBX_LabelTooltip.currentLabelDocButtonId = null;
EBX_LabelTooltip.displayDocumentationFromButton = function (buttonId, labelId) {
  EBX_LabelTooltip.reinitCurrentToggleButton();
  EBX_LabelTooltip.currentLabelDocButtonId = buttonId;
  EBX_NodeDocumentation.displayDocumentation(document.getElementById(labelId));
};
EBX_LabelTooltip.reinitCurrentToggleButton = function () {
  if (EBX_LabelTooltip.currentLabelDocButtonId !== null) {
    EBX_ButtonUtils.setStateToToggleButton(document.getElementById(EBX_LabelTooltip.currentLabelDocButtonId), false);
    EBX_LabelTooltip.currentLabelDocButtonId = null;
  }
};

EBX_LabelTooltip.LabelDocButtonCSSClasses = "ebx_IconButtonSmall ebx_LabelDocButtonTooltip";
EBX_LabelTooltip.RawLabelCSSClass = "ebx_RawLabel";
EBX_LabelTooltip.DisplayLabelDocButtonCSSClass = "ebx_DisplayLabelDocButton";

EBX_LabelTooltip.currentLabelContainerElement = null;
EBX_LabelTooltip.currentLabelIsFullyDisplayed = null;

EBX_LabelTooltip.displayTooltip = function (labelContainerElement) {
  EBX_LabelTooltip.currentLabelContainerElement = labelContainerElement;

  var labelElement = EBX_Utils.getFirstRecursiveChildMatchingCSSClass(labelContainerElement,
      EBX_LabelTooltip.RawLabelCSSClass);

  var elementToClone = null;
  if (labelElement.parentNode.tagName == "A") {
    elementToClone = labelElement.parentNode;
  } else {
    elementToClone = labelElement;
  }

  var clonedLabel = elementToClone.cloneNode(true);
  clonedLabel.style.fontSize = YAHOO.util.Dom.getStyle(elementToClone, "font-size");
  clonedLabel.style.fontWeight = YAHOO.util.Dom.getStyle(elementToClone, "font-weight");
  clonedLabel.style.fontFamily = YAHOO.util.Dom.getStyle(elementToClone, "font-family");

  var labelAndButtonContainer = document.createElement("SPAN");
  labelAndButtonContainer.appendChild(clonedLabel);

  var panel = EBX_LabelTooltip.getTooltipPanel();

  panel.setBody(labelAndButtonContainer);

  var nodeLabelDocPanel = EBX_NodeDocumentation.getDocPanelObj(labelContainerElement);
  if (nodeLabelDocPanel !== null) {
    var buttonToClone = elementToClone.nextSibling;

    var buttonBuf = [];
    buttonBuf.push("<button");
    buttonBuf.push(" type=\"button\"");
    buttonBuf.push(" class=\"", EBX_LabelTooltip.LabelDocButtonCSSClasses, "\"");
    buttonBuf.push(" style=\"vertical-align: ", YAHOO.util.Dom.getStyle(buttonToClone, "vertical-align"), "\"");
    buttonBuf.push(" onclick=\"EBX_LabelTooltip.displayDocumentation();\"");
    buttonBuf.push(" title=\"", EBX_LocalizedMessage.label_showDetails, "\"");
    buttonBuf.push(">");
    buttonBuf.push("<span class=\"ebx_SmallIcon\"></span>");
    buttonBuf.push("</button>");

    labelAndButtonContainer.innerHTML += buttonBuf.join("");
  }

  panel.cfg.setProperty('context', [labelContainerElement, 'tl', 'tl']);

  panel.show();
};
EBX_LabelTooltip.hideTooltip = function () {
  EBX_LabelTooltip.getTooltipPanel().hide();
};

EBX_LabelTooltip.LabelDocButtonCSSClass = "ebx_LabelDocButton";
EBX_LabelTooltip.docButtonMarginLeft = null;
EBX_LabelTooltip.refreshDocButtonPosition = function (labelContainerEl, mouseX, mouseY) {
  var docButtonEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(labelContainerEl,
      EBX_LabelTooltip.LabelDocButtonCSSClass);

  if (docButtonEl === null) {
    return;
  }

  var labelContainerRegion = YAHOO.util.Dom.getRegion(labelContainerEl);

  var y = mouseY;

  var startX = mouseX;
  var endX = labelContainerRegion.right;
  var middleX;
  var foundEl;

  while (startX < endX) {
    middleX = Math.floor((startX + endX) / 2);

    foundEl = document.elementFromPoint(middleX, y);

    if (foundEl === null || (foundEl !== labelContainerEl && !EBX_Utils.isChildOf(foundEl, labelContainerEl))) {
      // too much on the right
      endX = middleX;
    } else {
      // too much on the left
      startX = middleX + 1;
    }
  }
  middleX = Math.floor((startX + endX) / 2);

  var gap = labelContainerRegion.right - middleX;

  docButtonEl.style.marginLeft = -(gap - EBX_LabelTooltip.docButtonMarginLeft) + "px";
  docButtonEl.style.marginRight = gap + "px";

};

EBX_LabelTooltip.displayDocumentation = function () {
  EBX_NodeDocumentation.displayDocumentation(EBX_LabelTooltip.currentLabelContainerElement);
};

EBX_LabelTooltip.ToolTipId = "ebx_LabelTooltip";
EBX_LabelTooltip.yuiPanel = null;
EBX_LabelTooltip.fadeEffectDuration = 0.25;
/* duration in seconds */
EBX_LabelTooltip.getTooltipPanel = function () {
  if (EBX_LabelTooltip.yuiPanel === null) {

    var params = {};

    EBX_LabelTooltip.yuiPanel = new YAHOO.widget.Overlay(EBX_LabelTooltip.ToolTipId, params);
    EBX_LabelTooltip.yuiPanel.render(document.body);

    YAHOO.util.Event.addListener(EBX_LabelTooltip.yuiPanel.element, "mouseover",
        EBX_LabelTooltip.cancelTimedHideCurrentNoCheck, null, null);
    YAHOO.util.Event.addListener(EBX_LabelTooltip.yuiPanel.element, "mouseout",
        EBX_LabelTooltip.launchTimedHideCurrentNoCheck, null, null);

    YAHOO.util.Event.addListener(EBX_LabelTooltip.yuiPanel.element, "mouseover",
        EBX_NodeDocumentation.cancelTimedHideCurrentDocNoCheck, null,
        null);
    YAHOO.util.Event.addListener(EBX_LabelTooltip.yuiPanel.element, "mouseout",
        EBX_NodeDocumentation.launchTimedHideCurrentDocNoCheck, null,
        null);
  }
  return EBX_LabelTooltip.yuiPanel;
};

EBX_LabelTooltip.labelContainerWaitForDisplay = null;
EBX_LabelTooltip.launchedShowEvents = [];
EBX_LabelTooltip.ShowTimeout = "1000";
// duration in ms

EBX_LabelTooltip.labelWithTooltipMouseOverListener = function (labelContainerEl, event) {
  EBX_LabelTooltip.cancelTimedHideCurrentTooltip(labelContainerEl);
  EBX_LabelTooltip.launchTimedShowCurrentTooltip(labelContainerEl, event);
};
EBX_LabelTooltip.labelWithTooltipMouseOutListener = function (labelContainerEl) {
  EBX_LabelTooltip.launchTimedHideCurrentTooltip(labelContainerEl);
  EBX_LabelTooltip.cancelTimedShowCurrentTooltip();
};

EBX_LabelTooltip.launchTimedShowCurrentTooltip = function (labelContainerEl, event) {
  // avoid titles level 2 (titles of navigation and workspace)
  if (EBX_Utils.getFirstParentMatchingTagName(labelContainerEl, "H2") !== null) {
    return;
  }
  if (EBX_Utils.getFirstParentMatchingCSSClass(labelContainerEl, "ebx_TitleBreadcrumbItem") !== null) {
    return;
  }

  EBX_LabelTooltip.labelContainerWaitForDisplay = labelContainerEl;

  EBX_LabelTooltip.currentLabelIsFullyDisplayed = EBX_Utils.isFullyDisplayed(labelContainerEl);
  if (EBX_LabelTooltip.currentLabelIsFullyDisplayed) {
    var docButtonEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(labelContainerEl,
        EBX_LabelTooltip.LabelDocButtonCSSClass);
    if (docButtonEl !== null) {
      docButtonEl.style.marginLeft = "";
      docButtonEl.style.marginRight = "";
    }
    return;
  }

  EBX_LabelTooltip.refreshDocButtonPosition(labelContainerEl, event.clientX, event.clientY);

  EBX_LabelTooltip.launchedShowEvents.push(
      setTimeout("EBX_LabelTooltip.showCurrentTooltipNow();", EBX_LabelTooltip.ShowTimeout));
};
EBX_LabelTooltip.cancelTimedShowCurrentTooltip = function () {
  EBX_LabelTooltip.clearShowEvents();
};
EBX_LabelTooltip.showCurrentTooltipNow = function () {
  EBX_LabelTooltip.displayTooltip(EBX_LabelTooltip.labelContainerWaitForDisplay);
  EBX_LabelTooltip.labelContainerWaitForDisplay = null;
};
EBX_LabelTooltip.clearShowEvents = function () {
  while (EBX_LabelTooltip.launchedShowEvents.length != 0) {
    clearTimeout(EBX_LabelTooltip.launchedShowEvents.shift());
  }
};

EBX_LabelTooltip.launchedHideEvents = [];
EBX_LabelTooltip.HideTimeout = "300";
// duration in ms
EBX_LabelTooltip.launchTimedHideCurrentTooltip = function (labelContainerEl) {
  if (labelContainerEl !== EBX_LabelTooltip.currentLabelContainerElement) {
    return;
  }
  EBX_LabelTooltip.launchTimedHideCurrentNoCheck();
};
EBX_LabelTooltip.launchTimedHideCurrentNoCheck = function () {
  EBX_LabelTooltip.launchedHideEvents.push(
      setTimeout("EBX_LabelTooltip.hideCurrentTooltipNow();", EBX_LabelTooltip.HideTimeout));
};
EBX_LabelTooltip.cancelTimedHideCurrentTooltip = function (labelContainerEl) {
  if (labelContainerEl !== EBX_LabelTooltip.currentLabelContainerElement) {
    return;
  }
  EBX_LabelTooltip.cancelTimedHideCurrentNoCheck();
};
EBX_LabelTooltip.cancelTimedHideCurrentNoCheck = function () {
  EBX_LabelTooltip.clearHideEvents();
};
EBX_LabelTooltip.hideCurrentTooltipNow = function () {
  EBX_LabelTooltip.hideTooltip();
};

EBX_LabelTooltip.clearHideEvents = function () {
  while (EBX_LabelTooltip.launchedHideEvents.length != 0) {
    clearTimeout(EBX_LabelTooltip.launchedHideEvents.shift());
  }
};

/*END EBX_LabelTooltip */

/*START EBX_Permalink */

function ebx_displayPermalink(permalink, subject) {
  EBX_Permalink.currentURL = ebx_resolvePermalink(permalink);
  EBX_Permalink.currentSubject = subject;

  if (EBX_Permalink.permalinkPanel === null) {
    EBX_Permalink.buildPermalinkPanel();
  } else {
    EBX_Permalink.displayCurrentPermalink();
  }
}

// See resolvePermalink() in PermaLink.tsx
//As Manager can be "behind" a reverse proxy, we do not know the beginning of the URL ([protocol]://[host]:[port]/...).
function ebx_resolvePermalink(permalink) {
  // If a specific entry url is fully defined
  if (permalink.indexOf("http://") > -1) {
    return permalink;
  }
  if (permalink.indexOf("https://") > -1) {
    return permalink;
  }

  if (permalink.indexOf("/") == 0) {
    return window.location.protocol + "//" + window.location.host + permalink;
  }

  if (permalink.indexOf(".") == 0) {
    return window.location.protocol + "//" + window.location.host + window.location.pathname
        + (window.location.pathname.substring(window.location.pathname.length - 1) == "/" ? "" : "/") + permalink;
  }

  var base_URL = "";
  if (window.location.href.indexOf("?") == -1) {
    base_URL = window.location.href + "?";
  } else {
    base_URL = window.location.href.substring(0, window.location.href.indexOf("?") + 1);
  }

  return base_URL + permalink;
}

function EBX_Permalink() {
}

EBX_Permalink.currentURL = null;
EBX_Permalink.currentParameters = "";
EBX_Permalink.currentSubject = null;
EBX_Permalink.currentMailTo = "";
EBX_Permalink.displayCurrentPermalink = function () {
  document.getElementById(EBX_Permalink.panelTitleSubjectId).innerHTML = EBX_Permalink.currentSubject;

  EBX_Permalink.updateLink();

  EBX_Permalink.permalinkPanel.show();
};
EBX_Permalink.updateLink = function () {
  document.getElementById(EBX_Permalink.inputLinkId).value = EBX_Permalink.getCurrentURLWithParameter();

  var mailto = [];
  mailto.push("mailto:");
  var regex = /&quot;/g;
  mailto.push("?subject=", encodeURIComponent(EBX_LocalizedMessage.permalink_title), " ",
      encodeURIComponent(EBX_Permalink.currentSubject.replace(regex, "\"")));
  mailto.push("&body=", encodeURIComponent(EBX_Permalink.getCurrentURLWithParameter()));
  EBX_Permalink.currentMailTo = mailto.join("");
};
EBX_Permalink.sendCurrentMailTo = function () {
  window.location.href = EBX_Permalink.currentMailTo;
};
EBX_Permalink.getCurrentURLWithParameter = function () {
  if (EBX_Permalink.currentParameters === "") {
    return EBX_Permalink.currentURL;
  } else {
    return EBX_Permalink.currentURL + "&" + EBX_Permalink.currentParameters;
  }
};

EBX_Permalink.canCopyToClipboard = function () {
  return false;
  /*YAHOO.env.ua.ie !== 0 || YAHOO.env.ua.gecko !== 0;*/
};

EBX_Permalink.panelContainerId = "ebx_Permalink_c";
EBX_Permalink.panelId = "ebx_Permalink";
EBX_Permalink.panelTitleSubjectId = "ebx_PermalinkTitleSubject";
EBX_Permalink.inputLinkId = "ebx_PermalinkInputLink";
EBX_Permalink.copyToClipboardId = "ebx_PermalinkCopyToClipboard";
EBX_Permalink.sendFromEmailClientId = "ebx_PermalinkSendFromEmailClient";
EBX_Permalink.parametersBlockId = "ebx_PermalinkParametersBlock";
EBX_Permalink.parametersFormId = "ebx_PermalinkParametersForm";
EBX_Permalink.parametersScopesId = "ebx_PermalinkParameterScopes";
EBX_Permalink.applyId = "ebx_PermalinkApply";

EBX_Permalink.expandedCSSClass = "ebx_PermalinkExpanded";
EBX_Permalink.scopeAutoCSSClass = "ebx_PermalinkScopeAutoEnabled";

EBX_Permalink.permalinkPanel = null;
EBX_Permalink.buildPermalinkPanel = function () {
  EBX_Permalink.yuiDataSource = new YAHOO.util.XHRDataSource();
  EBX_Permalink.yuiDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
  EBX_Permalink.yuiDataSource.responseSchema = {
    resultsList: "innerHTML",
    metaFields: {
      scriptToExecute: "ebx_scriptToExecute"
    }
  };
  EBX_Permalink.yuiDataSource.sendRequest(EBX_Permalink.panelContentRequest, {
    success: EBX_Permalink.buildPermalinkFromAjaxResponse,
    failure: EBX_Permalink.buildPermalinkFromAjaxFailure
  });
};
EBX_Permalink.buildPermalinkFromAjaxResponse = function (oRequest, oParsedResponse, argument) {

  EBX_Permalink.permalinkPanel = new YAHOO.widget.Panel(EBX_Permalink.panelId, {
    close: true,
    draggable: false,
    modal: true,
    visible: false,
    fixedcenter: true
  });

  EBX_Permalink.permalinkPanel.setBody(oParsedResponse.results[0]);

  EBX_Permalink.permalinkPanel.render(document.body);

  if (EBX_Permalink.canCopyToClipboard() === false) {
    document.getElementById(EBX_Permalink.copyToClipboardId).style.display = "none";
  }

  YAHOO.util.Event.on(EBX_Permalink.panelId + "_mask", "click", function () {
    EBX_Permalink.permalinkPanel.hide();
  });

  window.setTimeout(oParsedResponse.meta.scriptToExecute, 0);

  EBX_Permalink.displayCurrentPermalink();
};
EBX_Permalink.buildPermalinkFromAjaxFailure = function (oRequest, oParsedResponse, argument) {
  if (oParsedResponse.status == 401) {
    EBX_Loader.gotoTimeoutPage();
  }
};

EBX_Permalink.copyToClipboard = function () {
  // Works with IE and Firefox, but with big warnings
  // Thanks to:
  // http://almaer.com/blog/supporting-the-system-clipboard-in-your-web-applications-what-a-pain
  // http://www.dynamic-tools.net/toolbox/copyToClipboard/

  var textTocopy = EBX_Permalink.getCurrentURLWithParameter();

  if (window.clipboardData && clipboardData.setData) {
    clipboardData.setData("Text", textTocopy);
  } else {
    try {
      if (netscape.security.PrivilegeManager.enablePrivilege) {
        netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
      } else {
        clipdata = textTocopy;
        return;
      }
    } catch (ex) {
      clipdata = textTocopy;
      return;
    }

    var str = Components.classes["@mozilla.org/supports-string;1"].createInstance(
        Components.interfaces.nsISupportsString);
    str.data = textTocopy;

    var trans = Components.classes["@mozilla.org/widget/transferable;1"].createInstance(
        Components.interfaces.nsITransferable);
    if (!trans) {
      return false;
    }

    trans.addDataFlavor("text/unicode");
    trans.setTransferData("text/unicode", str, textTocopy.length * 2);

    var clipid = Components.interfaces.nsIClipboard;
    var clip = Components.classes["@mozilla.org/widget/clipboard;1"].getService(clipid);
    if (!clip) {
      return false;
    }

    clip.setData(trans, null, clipid.kGlobalClipboard);

  }
};

EBX_Permalink.panelContainer = null;
EBX_Permalink.getPanelContainer = function () {
  if (EBX_Permalink.panelContainer === null) {
    EBX_Permalink.panelContainer = document.getElementById(EBX_Permalink.panelContainerId);
  }
  return EBX_Permalink.panelContainer;
};

EBX_Permalink.parametersBlockHeight = null;
EBX_Permalink.getParametersBlockHeight = function () {
  if (EBX_Permalink.parametersBlockHeight === null) {
    var height = 0;
    var childEl = EBX_Utils.firstElementChild(document.getElementById(EBX_Permalink.parametersBlockId));
    do {
      height += childEl.offsetHeight;
    } while ((childEl = EBX_Utils.nextElementSibling(childEl)) !== null);
    EBX_Permalink.parametersBlockHeight = height;
  }
  return EBX_Permalink.parametersBlockHeight;
};

EBX_Permalink.expandParametersBlock = function () {
  var panelContainer = EBX_Permalink.getPanelContainer();
  var parametersBlockHeight = EBX_Permalink.getParametersBlockHeight();
  EBX_Utils.addCSSClass(panelContainer, EBX_Permalink.expandedCSSClass);
  panelContainer.style.marginTop = -(parametersBlockHeight / 2) + "px";
  document.getElementById(EBX_Permalink.parametersBlockId).style.height = parametersBlockHeight + "px";
};
EBX_Permalink.collapseParametersBlock = function () {
  var panelContainer = EBX_Permalink.getPanelContainer();
  EBX_Utils.removeCSSClass(panelContainer, EBX_Permalink.expandedCSSClass);
  panelContainer.style.marginTop = "";
  document.getElementById(EBX_Permalink.parametersBlockId).style.height = "";
};

EBX_Permalink.parametersForm = null;
EBX_Permalink.getPermalinkParametersForm = function () {
  if (EBX_Permalink.parametersForm === null) {
    EBX_Permalink.parametersForm = document.getElementById(EBX_Permalink.parametersFormId);
  }
  return EBX_Permalink.parametersForm;
};

EBX_Permalink.scopeParameterName = "scope";
EBX_Permalink.autoScopeCkbListener = function (checkboxEl) {
  if (checkboxEl.checked) {
    EBX_Utils.addCSSClass(document.getElementById(EBX_Permalink.parametersScopesId), EBX_Permalink.scopeAutoCSSClass);
  } else {
    EBX_Utils.removeCSSClass(document.getElementById(EBX_Permalink.parametersScopesId),
        EBX_Permalink.scopeAutoCSSClass);
  }

  var paramForm = EBX_Permalink.getPermalinkParametersForm();

  var checkedOnce = false;

  for (var i = 0, len = paramForm.elements.length; i < len; i++) {
    field = paramForm.elements[i];
    if (field.name === EBX_Permalink.scopeParameterName) {
      if (checkboxEl.checked) {
        field.disabled = true;
        field.checked = false;
      } else {
        if (!checkedOnce) {
          field.checked = true;
          checkedOnce = true;
        }
        field.disabled = false;
      }
      field.disabled = checkboxEl.checked;
    }
  }
  EBX_Permalink.updateApplyButton();
};

EBX_Permalink.applyParametersButton = null;
EBX_Permalink.getApplyParametersButton = function () {
  if (EBX_Permalink.applyParametersButton === null) {
    EBX_Permalink.applyParametersButton = document.getElementById(EBX_Permalink.applyId);
  }
  return EBX_Permalink.applyParametersButton;
};

EBX_Permalink.updateApplyButton = function () {
  var applyButton = EBX_Permalink.getApplyParametersButton();
  var parameters = EBX_Form.serialize(EBX_Permalink.getPermalinkParametersForm(), true);
  var areParametersIdentical = (parameters == EBX_Permalink.currentParameters);

  EBX_ButtonUtils.setButtonDisabled(applyButton, areParametersIdentical);
  if (areParametersIdentical) {
    EBX_Utils.removeCSSClass(applyButton, EBX_ButtonUtils.defaultButtonCSSClass);
  } else {
    EBX_Utils.addCSSClass(applyButton, EBX_ButtonUtils.defaultButtonCSSClass);
  }
};
EBX_Permalink.applyParameters = function () {
  EBX_Permalink.currentParameters = EBX_Form.serialize(EBX_Permalink.getPermalinkParametersForm(), true);
  EBX_Permalink.updateLink();
  EBX_Permalink.updateApplyButton();
  EBX_Form.focus(EBX_Permalink.inputLinkId);
};

/*END EBX_Permalink */

/*START EBX_WAITPAGE */
function EBX_AjaxKeepSessionAliveObject() {
  this.onExecuteIfOK = function (responseXML, root) {
    return true;
  };

  this.onExecuteIfKO = function (responseXML) {

  };

  this.onGetExceptedResponseCode = function (callerId) {
    return this.responseCodeOK_RequestResponse;
  };
}

EBX_AjaxKeepSessionAliveObject.prototype = new EBX_AbstractAjaxResponseManager();

var ebx_keepSessionAjax = new EBX_AjaxKeepSessionAliveObject();

function ebx_keepSessionAliveAjax() {
  ebx_keepSessionAjax.onExecute(EBX_Constants.getRequestLink(EBX_Constants.ajaxKeepSessionEvent));
  window.setTimeout('ebx_keepSessionAliveAjax();', EBX_Wait_KeepSessionAliveAjaxInterval);
}

var EBX_WAIT_REQUEST_TO_PROCESS = "";

function ebx_autoStart() {
  EBX_Loader.changeTaskState(EBX_Loader_taskId_wait_page_request, EBX_Loader.states.processing);
  if (EBX_WAIT_REQUEST_TO_PROCESS != null && EBX_WAIT_REQUEST_TO_PROCESS != "") {
    self.location.href = EBX_WAIT_REQUEST_TO_PROCESS;
  }

  window.document.body.style.cursor = "wait";

  if (EBX_Wait_KeepSessionAliveAjaxInterval > 0) {
    ebx_keepSessionAliveAjax();
  }

  EBX_Loader.changeTaskState(EBX_Loader_taskId_wait_page_request, EBX_Loader.states.done);
}

/*END EBX_WAITPAGE */

/*START Input Text Wizard */

EBX_InputTextWizard = function () {
};

EBX_InputTextWizard.maskId = "ebx_InputTextWizardMask";
EBX_InputTextWizard.getMask = function () {
  var inputTextWizardMask = document.getElementById(EBX_InputTextWizard.maskId);

  if (inputTextWizardMask === null) {
    inputTextWizardMask = document.createElement("div");
    inputTextWizardMask.id = EBX_InputTextWizard.maskId;
    inputTextWizardMask.style.display = "none";

    YAHOO.util.Event.addListener(inputTextWizardMask, "click", EBX_InputTextWizard.hide);
  }

  return inputTextWizardMask;
};

// These variables are defined with the same name in the JBSWizardPropertyDeclarationHelper class.
EBX_InputTextWizard.paneSuffix = "_wizardsPane";
EBX_InputTextWizard.toggleButtonSuffix = "_toggleButtonWizard";
EBX_InputTextWizard.wizardContentSuffix = "_wizard";

EBX_InputTextWizard.panelId = "ebx_InputTextWizard";
EBX_InputTextWizard.yuiPanel = null;
EBX_InputTextWizard.getPanel = function () {
  if (EBX_InputTextWizard.yuiPanel === null) {
    EBX_InputTextWizard.yuiPanel = new YAHOO.widget.Overlay(EBX_InputTextWizard.panelId, {
      constraintoviewport: true,
      visible: false
    });
    EBX_InputTextWizard.yuiPanel.render(document.body);
    EBX_InputTextWizard.yuiPanel.showEvent.subscribe(EBX_InputTextWizard.showListener);
    EBX_InputTextWizard.yuiPanel.hideEvent.subscribe(EBX_InputTextWizard.hideListener);
  }
  return EBX_InputTextWizard.yuiPanel;
};

EBX_InputTextWizard.currentInputTextId = null;

EBX_InputTextWizard.showListener = function () {
  // toggle button state
  var buttonId = EBX_InputTextWizard.currentInputTextId + EBX_InputTextWizard.toggleButtonSuffix;
  EBX_ButtonUtils.setStateToToggleButton(document.getElementById(buttonId), true);

  // mask state
  var inputTextWizardMask = EBX_InputTextWizard.getMask();
  EBX_InputTextWizard.getPanel().element.parentNode.appendChild(inputTextWizardMask);
  inputTextWizardMask.style.display = "";

  // dummy input
  EBX_InputTextWizard.buildFeedAndPlaceDummyInput();
};
EBX_InputTextWizard.hideListener = function () {
  // toggle button state
  var buttonId = EBX_InputTextWizard.currentInputTextId + EBX_InputTextWizard.toggleButtonSuffix;
  EBX_ButtonUtils.setStateToToggleButton(document.getElementById(buttonId), false);

  // mask state
  EBX_InputTextWizard.getMask().style.display = "none";

  // dummy input
  EBX_InputTextWizard.feedInputAndHideDummyInput();
};

EBX_InputTextWizard.show = function (inputTextId, forceRefresh) {

  var refresh = EBX_InputTextWizard.currentInputTextId != inputTextId || forceRefresh;

  EBX_InputTextWizard.currentInputTextId = inputTextId;

  var yuiPanel = EBX_InputTextWizard.getPanel();

  var wizardsPane;
  var wizardsPaneClone = null;

  if (refresh) {
    wizardsPane = document.getElementById(EBX_InputTextWizard.currentInputTextId + EBX_InputTextWizard.paneSuffix);

    wizardsPaneClone = wizardsPane.cloneNode(true);

    yuiPanel.setBody(wizardsPaneClone);
    yuiPanel.cfg.setProperty('context', [EBX_InputTextWizard.currentInputTextId, 'tl', 'bl']);
  }

  yuiPanel.show();

  if (refresh) {
    // build yui trees inside cloned textWizard
    var wizardTreePaneParents = EBX_Utils.getRecursiveChildrenMatchingCSSClass(wizardsPaneClone, "ebx_wizardTreePane");
    for (var i = 0; i < wizardTreePaneParents.length; i++) {
      var wizardTreePaneParent = wizardTreePaneParents[i];
      var wizardTreePane = EBX_Utils.getFirstDirectChildMatchingTagName(wizardTreePaneParent, "div");
      ebx_initYUITree(wizardTreePane);
    }
  }
};

EBX_InputTextWizard.hide = function () {
  EBX_InputTextWizard.getPanel().hide();
};

EBX_InputTextWizard.dummyInputTextId = "ebx_InputTextWizard_DummyInputText";
EBX_InputTextWizard.dummyInput = null;
EBX_InputTextWizard.getDummyInput = function () {
  if (EBX_InputTextWizard.dummyInput === null) {
    var dummyInputText = document.createElement("INPUT");
    dummyInputText.type = "text";
    dummyInputText.id = EBX_InputTextWizard.dummyInputTextId;
    EBX_InputTextWizard.dummyInput = new YAHOO.widget.Overlay(dummyInputText, {
      visible: false
    });
    EBX_InputTextWizard.dummyInput.render(document.body);
  }
  return EBX_InputTextWizard.dummyInput;
};

EBX_InputTextWizard.buildFeedAndPlaceDummyInput = function () {
  var dummyInput = EBX_InputTextWizard.getDummyInput();

  var dummyInputText = document.getElementById(EBX_InputTextWizard.dummyInputTextId);
  var currentInputText = document.getElementById(EBX_InputTextWizard.currentInputTextId);
  dummyInputText.value = currentInputText.value;
  if (currentInputText.style.width) {
    dummyInputText.style.width = currentInputText.style.width;
  } else {
    dummyInputText.style.width = currentInputText.offsetWidth + "px";
  }

  if (EBX_LayoutManager.browser.toLowerCase() === "firefox" && EBX_LayoutManager.browserMajorVersion < 29) {
    dummyInputText.style.MozBoxSizing = "border-box";
  } else {
    dummyInputText.style.boxSizing = "border-box";
  }

  dummyInput.cfg.setProperty('context', [EBX_InputTextWizard.currentInputTextId, 'tl', 'tl']);

  dummyInput.show();
};
EBX_InputTextWizard.feedInputAndHideDummyInput = function () {
  var currentInputText = document.getElementById(EBX_InputTextWizard.currentInputTextId);
  currentInputText.value = document.getElementById(EBX_InputTextWizard.dummyInputTextId).value;

  EBX_InputTextWizard.getDummyInput().hide();

  currentInputText.focus();
};

EBX_InputTextWizard.previousWizardSelected_byInputTextId = [];

EBX_InputTextWizard.displayContent = function (inputTextId, wizardNumber) {
  var idWizard = inputTextId + EBX_InputTextWizard.wizardContentSuffix + wizardNumber;
  if (idWizard == EBX_InputTextWizard.previousWizardSelected_byInputTextId[inputTextId]) {
    return;
  }
  document.getElementById(idWizard).style.display = "";
  if (document.getElementById(EBX_InputTextWizard.previousWizardSelected_byInputTextId[inputTextId]) !== null) {
    document.getElementById(
        EBX_InputTextWizard.previousWizardSelected_byInputTextId[inputTextId]).style.display = "none";
  }
  EBX_InputTextWizard.previousWizardSelected_byInputTextId[inputTextId] = idWizard;
};

EBX_InputTextWizard.insertValueFromSelect = function (select, inputTextId, insertionMode) {
  var selectedOption = select.options[select.selectedIndex];
  if (selectedOption.value === "") {
    return;
  }
  if (insertionMode) {
    EBX_Form.insertTextAtCursorPosition(document.getElementById(EBX_InputTextWizard.dummyInputTextId),
        selectedOption.value);
    select.selectedIndex = 0;
    return;
  }
  document.getElementById(EBX_InputTextWizard.dummyInputTextId).value = selectedOption.value;
  select.selectedIndex = 0;
  EBX_InputTextWizard.hide();
};

EBX_InputTextWizard.initSelection_forWizardsPane = function (inputTextId) {
  var idFirstWizard = inputTextId + EBX_InputTextWizard.wizardContentSuffix + "0";
  EBX_InputTextWizard.previousWizardSelected_byInputTextId[inputTextId] = idFirstWizard;
};

EBX_InputTextWizard.insertValueFromTree = function (value, inputTextId, insertionMode, wizardNumber) {
  if (value === "") {
    return;
  }
  var divWizard = document.getElementById(inputTextId + EBX_InputTextWizard.wizardContentSuffix + wizardNumber);
  if (insertionMode) {
    EBX_Form.insertTextAtCursorPosition(document.getElementById(EBX_InputTextWizard.dummyInputTextId), value);
  } else {
    document.getElementById(EBX_InputTextWizard.dummyInputTextId).value = value;
    EBX_InputTextWizard.hide();
  }
  divWizard.scrollTop = 0;
};

/*END Input Text Wizard */

function ebx_selectAllCkbName(checkboxName, buttonId) {
  var button = document.getElementById(buttonId);
  if (button === null) {
    return;
  }

  var form = button.form;
  if (form === undefined) {
    return;
  }

  var ckbs = form[checkboxName];
  if (ckbs === undefined) {
    return;
  }

  var i = ckbs.length;
  if (i === undefined) {
    // case inputEls is an element, because there was only one with this name
    ckbs.checked = true;
  } else {
    while (i--) {
      ckbs[i].checked = true;
    }
  }
}

var EBX_CHECKBOX_SELECT_ALL_ID_PREFIX = "ebx_SelectAll_";

function ebx_checkboxSelectAll(checkboxAllEl) {
  var checkboxesName = checkboxAllEl.id.substring(EBX_CHECKBOX_SELECT_ALL_ID_PREFIX.length);

  var inputEls = checkboxAllEl.form.elements[checkboxesName];

  var checked = checkboxAllEl.checked;
  var i = inputEls.length;
  if (i === undefined) {
    // case inputEls is an element, because there was only one with this name
    if (inputEls.type === "checkbox") {
      inputEls.checked = checked;
    }
  } else {
    while (i--) {
      var inputEl = inputEls[i];
      if (inputEl.type === "checkbox") {
        inputEl.checked = checked;
      }
    }
  }
}

function ebx_checkboxRefreshSelectAll(checkboxEl) {
  var selectAllCheckbox = document.getElementById(EBX_CHECKBOX_SELECT_ALL_ID_PREFIX + checkboxEl.name);

  if (selectAllCheckbox === null) {
    EBX_Logger.log("Unable to found the checkbox selectAll of checkbox id: " + checkboxEl.id, EBX_Logger.error);
    return;
  }

  // optimisation: in one case on two, the checkbox clicked is
  //  not checked, so the selectAllCheckbox must be unchecked
  if (checkboxEl.checked === false) {
    selectAllCheckbox.checked = false;
    return;
  }

  var inputEls = checkboxEl.form.elements[checkboxEl.name];

  var allAreChecked = true;

  var i = inputEls.length;
  if (i === undefined) {
    // case inputEls is an element, because there was only one with this name
    if (inputEls.type === "checkbox" && inputEls.checked === false) {
      allAreChecked = false;
    }
  } else {
    while (i--) {
      var inputEl = inputEls[i];
      if (inputEl.type === "checkbox" && inputEl.checked === false) {
        allAreChecked = false;
        break;
      }
    }
  }

  selectAllCheckbox.checked = allAreChecked;
}

var EBX_CHECKBOX_MARK_FOR_PURGE_BRANCH_ID_PREFIX = "ebx_branch_";
var EBX_CHECKBOX_MARK_FOR_PURGE_CHILD_CSS_CLASS_PREFIX = "ebx_childOf_";

function ebx_checkboxMarkForPurge(checkboxEl) {

  ebx_checkboxMarkForPurgeAllChildren(checkboxEl);

  ebx_checkboxMarkForPurgeRefreshParent(checkboxEl);
}

function ebx_checkboxMarkForPurgeAllChildren(checkboxEl) {

  // do not unselect children
  if (checkboxEl.checked === false) {
    return;
  }

  var childrenAllDescendants = ebx_checkboxMarkForPurgeGetChildrenAllDescendants(checkboxEl);

  var i = childrenAllDescendants.length;
  while (i--) {
    var child = childrenAllDescendants[i];
    child.checked = checkboxEl.checked;
  }
}

function ebx_checkboxMarkForPurgeRefreshParent(checkboxEl) {
  var parentId = EBX_CHECKBOX_MARK_FOR_PURGE_BRANCH_ID_PREFIX + checkboxEl.className.substr(
      EBX_CHECKBOX_MARK_FOR_PURGE_CHILD_CSS_CLASS_PREFIX.length);
  var parentEl = document.getElementById(parentId);
  if (parentEl === null) {
    return;
  }

  if (checkboxEl.checked === false) {
    parentEl.checked = false;
    ebx_checkboxMarkForPurgeRefreshParent(parentEl);

  }

  // do not check parent
  //var childrenOfParent = ebx_checkboxMarkForPurgeGetChildren(parentEl);
  //
  //var allAreChecked = true;
  //
  //var i = childrenOfParent.length;
  //while (i--) {
  //    var child = childrenOfParent[i];
  //    if (child.checked === false) {
  //        allAreChecked = false;
  //        break;
  //    }
  //}
  //
  //parentEl.checked = allAreChecked;
  //ebx_checkboxMarkForPurgeRefreshParent(parentEl);
}

function ebx_checkboxMarkForPurgeGetChildren(checkboxEl) {
  if (checkboxEl.ebx_children === undefined) {
    var checkboxes = checkboxEl.form.elements[checkboxEl.name];

    var currentBranchId = checkboxEl.id.substr(EBX_CHECKBOX_MARK_FOR_PURGE_BRANCH_ID_PREFIX.length);

    var children = [];

    var i = checkboxes.length;
    while (i--) {
      var checkbox = checkboxes[i];
      if (checkbox.className === EBX_CHECKBOX_MARK_FOR_PURGE_CHILD_CSS_CLASS_PREFIX + currentBranchId) {
        children.push(checkbox);
      }
    }

    checkboxEl.ebx_children = children;
  }

  return checkboxEl.ebx_children;
}

function ebx_checkboxMarkForPurgeGetChildrenAllDescendants(checkboxEl) {
  var children = ebx_checkboxMarkForPurgeGetChildren(checkboxEl);

  var ret = children;

  var i = children.length;
  while (i--) {
    var child = children[i];
    var subChildren = ebx_checkboxMarkForPurgeGetChildrenAllDescendants(child);

    var j = subChildren.length;
    while (j--) {
      var subChild = subChildren[j];
      ret.push(subChild);
    }
  }

  return ret;
}

function ebx_initYUITree(treeIdOrElement) {
  var tree = new YAHOO.widget.TreeView(treeIdOrElement);
  tree.subscribe("clickEvent", EBX_Utils.returnFalse);
  tree.render();
}

/* START Filter Pane */
function ebx_initFilter() {
  EBX_Loader.changeTaskState(EBX_Loader_taskId_workspace_filters, EBX_Loader.states.processing);

  // restore displaying
  EBX_LayoutManager.restoreFilterSize();

  EBX_Loader.changeTaskState(EBX_Loader_taskId_workspace_filters, EBX_Loader.states.done);
}

function ebx_displayFilterPane() {
  EBX_LayoutManager.workspaceLayout.getUnitByPosition(EBX_LayoutManager.workspaceUnits.filters.position).expand();
  EBX_LayoutManager.workspaceLayout.resize();
  EBX_LayoutManager.addCSSClassFilterPresent();
}

function ebx_hideFilterPane() {
  EBX_LayoutManager.workspaceLayout.getUnitByPosition(EBX_LayoutManager.workspaceUnits.filters.position).collapse();
  EBX_LayoutManager.removeCSSClassFilterPresent();
}

EBX_LayoutManager.FilterPresentCSSClass = "ebx_FilterPresent";
EBX_LayoutManager.addCSSClassFilterPresent = function () {
  EBX_Utils.addCSSClass(EBX_LayoutManager.WorkspaceContentEl, EBX_LayoutManager.FilterPresentCSSClass);
};
EBX_LayoutManager.removeCSSClassFilterPresent = function () {
  EBX_Utils.removeCSSClass(EBX_LayoutManager.WorkspaceContentEl, EBX_LayoutManager.FilterPresentCSSClass);
};

EBX_LayoutManager.saveFilterDisplayedYUIDataSource = null;
EBX_LayoutManager.saveFilterSizeYUIDataSource = null;
EBX_LayoutManager.saveFilterSize = function () {
  var filterWidth = EBX_LayoutManager.workspaceLayout.getUnitByPosition(
      EBX_LayoutManager.workspaceUnits.filters.position).get('width');
  filterWidth = Math.round(filterWidth);

  if (EBX_LayoutManager.saveFilterDisplayedYUIDataSource === null) {
    EBX_LayoutManager.saveFilterDisplayedYUIDataSource = new YAHOO.util.XHRDataSource(
        EBX_LayoutManager.filterPanelDisplayedRequest);
  }

  if (filterWidth <= 0) {
    EBX_LayoutManager.saveFilterDisplayedYUIDataSource.sendRequest(EBX_LayoutManager.displayedParameter + "false",
        null);
  } else {
    if (EBX_LayoutManager.saveFilterSizeYUIDataSource === null) {
      EBX_LayoutManager.saveFilterSizeYUIDataSource = new YAHOO.util.XHRDataSource(
          EBX_LayoutManager.filterPanelWidthRequest);
    }

    EBX_LayoutManager.saveFilterSizeYUIDataSource.sendRequest(EBX_LayoutManager.widthParameter + filterWidth, null);

    EBX_LayoutManager.saveFilterDisplayedYUIDataSource.sendRequest(EBX_LayoutManager.displayedParameter + "true", null);
  }
};

EBX_LayoutManager.isFiltersPaneDisplayed = false;
EBX_LayoutManager.restoreFilterSize = function () {
  if (EBX_LayoutManager.isFiltersPaneDisplayed && EBX_Utils.isFilterKeptOpen) {
    ebx_displayFilterPane();
  } else {
    ebx_hideFilterPane();
  }
};

var ebx_setFilterOpened_yuiDataSource = null;

function ebx_tableFilter_sendFilterIsOpened(filterIndex, isOpened) {
  if (ebx_setFilterOpened_yuiDataSource === null) {
    ebx_setFilterOpened_yuiDataSource = new YAHOO.util.XHRDataSource(EBX_Constants.table_filter_setOpened);
  }
  ebx_setFilterOpened_yuiDataSource.sendRequest(EBX_Constants.filterIndex + filterIndex + EBX_Constants.isOpened
      + isOpened, null);
}

var ebx_tableFilter_keepOpen_dataSource = null;
EBX_Utils.isFilterKeptOpen = true;

function ebx_tableFilter_sendFilterKeptOpen() {
  if (ebx_tableFilter_keepOpen_dataSource === null) {
    ebx_tableFilter_keepOpen_dataSource = new YAHOO.util.XHRDataSource(EBX_Constants.table_filter_setKeepOpen);
  }

  EBX_Utils.isFilterKeptOpen = !EBX_Utils.isFilterKeptOpen;

  EBX_ButtonUtils.setMenuItemChecked(this.parent.ebx_ElementToRelease.id, "ebx_KeepFilterOpenMenuAction",
      EBX_Utils.isFilterKeptOpen);

  ebx_tableFilter_keepOpen_dataSource.sendRequest(EBX_Constants.isKeptOpened + EBX_Utils.isFilterKeptOpen, null);
}

function ebx_tableFilter_expand(contentId, filterIndex) {
  document.getElementById(contentId).style.display = "";
  ebx_tableFilter_sendFilterIsOpened(filterIndex, true);
}

function ebx_tableFilter_collapse(contentId, filterIndex) {
  document.getElementById(contentId).style.display = "none";
  ebx_tableFilter_sendFilterIsOpened(filterIndex, false);
}

function ebx_tableFilter_sendFormByCheckbox(checkboxEl, submitValue, submitName) {
  if (EBX_LayoutManager.isIE) {
    EBX_Form.initSubmitNamesForIE(checkboxEl.form);
  }
  EBX_Form.setSubmitValue(checkboxEl.form, submitValue, submitName);
  checkboxEl.form.submit();
}

function ebx_tableFilter_applyByQuickFilterAccess(filterFormId, submitValue, submitName) {
  var filterForm = document.getElementById(filterFormId);

  if (EBX_LayoutManager.isIE) {
    EBX_Form.initSubmitNamesForIE(filterForm);
  }
  EBX_Form.setSubmitValue(filterForm, submitValue, submitName);
  filterForm.submit();
}


/* END Filter Pane */

/* START WSDL Downloader */
var EBX_HIDDEN_DIV_DOWNLOAD_ID = "ebx_WSDLDownload";

function ebx_getWSDLDownloadDiv() {
  var downloadDiv = document.getElementById(EBX_HIDDEN_DIV_DOWNLOAD_ID);
  if (downloadDiv === null) {
    downloadDiv = document.createElement("div");
    downloadDiv.id = EBX_HIDDEN_DIV_DOWNLOAD_ID;
    downloadDiv.style.display = "none";

    document.getElementsByTagName("body")[0].appendChild(downloadDiv);
  }
  return downloadDiv;
}

function ebx_getBaseUrlForWSDLConnector() {
  var url = window.location.href;
  var pos = url.indexOf("/ebx", 0);
  return url.substring(0, pos) + '/' + EBX_Constants.WSDLConnector_webapp;
}

function ebx_startWSDLDownload(downloadURL) {
  var downloadDiv = ebx_getWSDLDownloadDiv();
  downloadDiv.innerHTML = "<iframe src='" + downloadURL + ebx_getBaseUrlForWSDLConnector() + "'></iframe>";
}

/* END WSDL Downloader */

/* START Comparator */
EBX_COMPARATOR_SELECT_ALL_CHECKBOX_ID = "ebx_ComparatorDecisionCheckboxAll";
EBX_COMPARATOR_CHECKBOX_CSS_CLASS = "ebx_ComparatorDecisionCheckbox";
ebx_comparatorSelectAll = function (checkboxAllEl) {
  var comparatorTable = EBX_Utils.getFirstParentMatchingTagName(checkboxAllEl, "TABLE");
  var checkboxEls = EBX_Utils.getRecursiveChildrenMatchingCSSClass(comparatorTable, EBX_COMPARATOR_CHECKBOX_CSS_CLASS);

  var checked = checkboxAllEl.checked;
  var i = checkboxEls.length;
  while (i--) {
    checkboxEls[i].checked = checked;
  }
};
ebx_comparatorRefreshSelectAll = function (checkboxEl) {
  var comparatorTable = EBX_Utils.getFirstParentMatchingTagName(checkboxEl, "TABLE");

  var checkboxAllEl = document.getElementById(EBX_COMPARATOR_SELECT_ALL_CHECKBOX_ID);

  if (checkboxAllEl === null) {
    return;
  }

  var checkboxEls = EBX_Utils.getRecursiveChildrenMatchingCSSClass(comparatorTable, EBX_COMPARATOR_CHECKBOX_CSS_CLASS);

  var allAreChecked = true;

  var i = checkboxEls.length;
  while (i--) {
    if (checkboxEls[i].checked === false) {
      allAreChecked = false;
      break;
    }
  }

  checkboxAllEl.checked = allAreChecked;

  // refresh "Mark as reviewed" button
  var buttonMarkAsDecided = document.getElementById("ebx_MarkAsDecided");
  if (buttonMarkAsDecided !== null) {
    var formHasBeenModified = EBX_Form.hasBeenModified(document.getElementById(EBX_Form.WorkspaceFormId));
    if (formHasBeenModified === true) {
      EBX_Utils.addCSSClass(buttonMarkAsDecided, EBX_ButtonUtils.defaultButtonCSSClass);
    } else {
      EBX_Utils.removeCSSClass(buttonMarkAsDecided, EBX_ButtonUtils.defaultButtonCSSClass);
    }
  }
};
/* END Comparator */

/*START AJAX wizard */
function EBX_AJAXWizard() {
}

// Display a static wizard
EBX_AJAXWizard.displayWizard = function (targetInputTextId, url, buttonId) {
  var button = document.getElementById(buttonId);

  ebx_buttonUtils_setButtonWaitingMode(button, true);

  button.blur();

  var wizardManager = new EBX_AjaxWizardResponseManager(targetInputTextId);
  wizardManager.onExecute(url);
  wizardManager.buttonWizard = button;
};

// Display the ajax response
EBX_AjaxWizardResponseManager = function (targetInputTextId) {
  //Method which manage response document if the response code is the one expected.
  //Must return true if all happens as expected, false otherwise.
  this.onExecuteIfOK = function (responseXML, root) {
    var bodyElement = root.getElementsByTagName('responseBody')[0];
    if (!bodyElement.firstChild) {
      EBX_Logger.log("Error getting responseBody from response: " + this.getResponseText(), EBX_Logger.error);
      return false;
    }
    var wizardContent = bodyElement.firstChild.data;
    EBX_AJAXWizard.displayWizardFromAjaxResponse(wizardContent, targetInputTextId);
    ebx_buttonUtils_setButtonWaitingMode(this.buttonWizard, false);
    return true;
  };

  // Method which manage response document if the response code is not the one expected.
  this.onExecuteIfKO = function (responseXML) {
    ebx_buttonUtils_setButtonWaitingMode(this.buttonWizard, false);
    return false;
  };
};
EBX_AjaxWizardResponseManager.prototype = new EBX_AbstractAjaxResponseManager();

EBX_AJAXWizard.displayWizardFromAjaxResponse = function (responseContent, targetInputTextId) {
  var wizard = document.getElementById(targetInputTextId + "_wizardsPane");
  // Refresh content from existing wizard
  if (wizard) {
    wizard.parentNode.innerHTML = responseContent;
    EBX_InputTextWizard.show(targetInputTextId, true);
    return;
  }

  var limbo = EBX_LayoutManager.getLimbo();
  var tmpDiv = document.createElement("div");
  limbo.appendChild(tmpDiv);
  tmpDiv.innerHTML = responseContent;
  EBX_InputTextWizard.show(targetInputTextId);
  limbo.removeChild(tmpDiv);
};
/*END Ajax wizard */

/*START Ajax Predicate Editor Updater */
function EBX_PredicateEditor() {
}

EBX_PredicateEditor.treeDivId = ""; //Set by server
EBX_PredicateEditor.treeDivIsMovingClassName = ""; //Set by server

EBX_PredicateEditor.modifyPredicate = function (treeName, url) {
  var ajaxTree = ebx_getAjaxTree(treeName);
  if (ajaxTree === null) {
    return;
  }
  var updater = new EBX_AjaxPredicateEditorUpdater(ajaxTree);

  updater.onExecute(url);
};

EBX_PredicateEditor.startMoving = function () {
  var tree = document.getElementById(EBX_PredicateEditor.treeDivId);
  if (tree) {
    tree.classList.add(EBX_PredicateEditor.treeDivIsMovingClassName);
  }
};

EBX_PredicateEditor.endMoving = function () {
  var tree = document.getElementById(EBX_PredicateEditor.treeDivId);
  if (tree) {
    tree.classList.remove(EBX_PredicateEditor.treeDivIsMovingClassName);
  }
};

// Display the ajax response
EBX_AjaxPredicateEditorUpdater = function (ajaxTree) {
  this.ajaxTree = ajaxTree;

  //Method which manage response document if the response code is the one expected.
  //Must return true if all happens as expected, false otherwise.
  this.onExecuteIfOK = function (responseXML, root) {
    ajaxTree.rebuild(null);
    return true;
  };

  // Method which manage response document if the response code is not the one expected.
  this.onExecuteIfKO = function (responseXML) {
    return false;
  };
};
EBX_AjaxPredicateEditorUpdater.prototype = new EBX_AbstractAjaxResponseManager();
/*END Ajax Predicate Editor Updater */

/*START Ajax History tools */

ebx_historyTools_viewHistoryForSelectedRecords = function (url) {
  var ajaxRequest = new EBX_AjaxHistoryForSelectedRecords();

  ajaxRequest.onExecute(url);
};
// Display the ajax response
EBX_AjaxHistoryForSelectedRecords = function () {

  this.onGetExceptedResponseCode = function (callerId) {
    return this.responseCodeOK_JSONDoc;
  };

  //Method which manage response document if the response code is the one expected.
  //Must return true if all happens as expected, false otherwise.
  this.onExecuteIfOK = function (responseXML, root) {
    var bodyElement = root.getElementsByTagName('responseBody')[0];
    if (!bodyElement.firstChild) {
      EBX_Logger.log("EBX_AjaxHistoryForSelectedRecords.onExecuteIfOK: Error getting responseBody from response: "
          + this.getResponseText(),
          EBX_Logger.error);
      return false;
    }
    var jsonString = bodyElement.firstChild.data;
    var jsonObj = YAHOO.lang.JSON.parse(jsonString);
    if (!jsonObj) {
      EBX_Logger.log("EBX_AjaxHistoryForSelectedRecords.onExecuteIfOK: Error getting JSON from response: "
          + this.getResponseText(),
          EBX_Logger.error);
      return false;
    }

    EBX_Utils.openInternalPopupLargeSizeHostedClose(jsonObj.URL);
    return true;
  };

  // Method which manage response document if the response code is not the one expected.
  this.onExecuteIfKO = function (responseXML) {
    return false;
  };
};
EBX_AjaxHistoryForSelectedRecords.prototype = new EBX_AbstractAjaxResponseManager();
/*END Ajax History tools */

/*START See more component */

function EBX_SeeMore() {

}

EBX_SeeMore.yuiPanel = null;
EBX_SeeMore.panelId = "ebx_SeeMore_Panel";
EBX_SeeMore.getDocumentationPanel = function () {
  if (EBX_SeeMore.yuiPanel === null) {
    EBX_SeeMore.yuiPanel = new YAHOO.widget.Overlay(EBX_SeeMore.panelId, {
      constraintoviewport: true,
      visible: false
    });
    EBX_SeeMore.yuiPanel.render(document.body);

    YAHOO.util.Event.addListener(EBX_SeeMore.yuiPanel.element, "mouseout", EBX_SeeMore.hidePane, null, null);
  }
  return EBX_SeeMore.yuiPanel;
};

EBX_SeeMore.displayPane = function (text, buttonId) {
  var panel = EBX_SeeMore.getDocumentationPanel();

  panel.setBody(text);

  var buttonEl = document.getElementById(buttonId);
  var contextTableRefContainer = EBX_Utils.getFirstParentMatchingCSSClass(buttonEl, "ebx_OpenTableRefContainerInTable");

  panel.body.style.width = contextTableRefContainer.offsetWidth + "px";

  panel.cfg.setProperty('context', [contextTableRefContainer, 'tl', 'tl', null, [-3, -2]]);

  panel.show();

  document.getElementById(buttonId).blur();
};

EBX_SeeMore.hidePane = function () {
  EBX_SeeMore.yuiPanel.hide();
};

/*END See more component */

/*START Color picker */

function EBX_ColorPicker() {

}

EBX_ColorPicker.yuiPanel = null;
EBX_ColorPicker.panelId = "ebx_ColorPicker_Panel";
EBX_ColorPicker.yuiPicker = null;

EBX_ColorPicker.currentToggleButton = null;
EBX_ColorPicker.currentFnUpdateColor = null;

EBX_ColorPicker.currentWidgetPath = null;
EBX_ColorPicker.currentWidgetPreviewEl = null;
EBX_ColorPicker.currentWidgetCustomPreviewEvent = null;

EBX_ColorPicker.maskId = "ebx_ColorPickerMask";
EBX_ColorPicker.getMask = function () {
  var colorPickerMask = document.getElementById(EBX_ColorPicker.maskId);

  if (colorPickerMask === null) {
    colorPickerMask = document.createElement("div");
    colorPickerMask.id = EBX_ColorPicker.maskId;
    colorPickerMask.style.display = "none";

    YAHOO.util.Event.addListener(colorPickerMask, "click", EBX_ColorPicker.hide);
  }

  return colorPickerMask;
};

EBX_ColorPicker.getPanel = function () {
  if (EBX_ColorPicker.yuiPanel === null) {
    EBX_ColorPicker.yuiPanel = new YAHOO.widget.Overlay(EBX_ColorPicker.panelId, {
      constraintoviewport: true,
      visible: false
    });
    EBX_ColorPicker.yuiPanel.render(document.body);
    EBX_ColorPicker.yuiPanel.setBody("");

    EBX_ColorPicker.yuiPicker = new YAHOO.widget.ColorPicker(EBX_ColorPicker.yuiPanel.body, {
      showcontrols: false,
      images: {
        PICKER_THUMB: "",
        HUE_THUMB: ""
      }
    });
    YAHOO.util.Event.addListener(EBX_ColorPicker.yuiPanel.body, "click", function (event) {
      YAHOO.util.Event.stopEvent(event);
    });

    EBX_ColorPicker.yuiPicker.addListener("rgbChange", EBX_ColorPicker.updateColor);
  }
  return EBX_ColorPicker.yuiPanel;
};

EBX_ColorPicker.updateColor = function (p_oEvent) {
  if (typeof EBX_ColorPicker.currentFnUpdateColor === "function") {
    EBX_ColorPicker.currentFnUpdateColor.call(this, "#" + EBX_ColorPicker.yuiPicker.get("hex"));
  }
};

/* argsObj structure: (all are optionnal)
 * initialColor: String HTML hexa color well formatted 6 digits "#123456"
 * toggleButtonId: String button id
 * fnUpdateColor: Function declaration
 * fnCommitColor: Function declaration
 * context: String id or HTML Element (default is toggleButton parent node)
 */
EBX_ColorPicker.display = function (argsObj) {
  if (EBX_ColorPicker.currentToggleButton !== null) {
    EBX_ColorPicker.hide();
  }

  if (argsObj.toggleButtonId !== undefined) {
    EBX_ColorPicker.currentToggleButton = document.getElementById(argsObj.toggleButtonId);
  }
  EBX_ColorPicker.currentFnUpdateColor = argsObj.fnUpdateColor;
  EBX_ColorPicker.currentFnCommitColor = argsObj.fnCommitColor;

  var panelContext = argsObj.context;
  if (panelContext === undefined && EBX_ColorPicker.currentToggleButton !== null) {
    panelContext = EBX_ColorPicker.currentToggleButton.parentNode;
  }

  var panel = EBX_ColorPicker.getPanel();

  panel.cfg.setProperty('context', [panelContext, 'tl', 'bl', null, [0, 1]]);

  var colorPickerMask = EBX_ColorPicker.getMask();
  panel.element.parentNode.appendChild(colorPickerMask);
  colorPickerMask.style.display = "";

  if (EBX_ColorPicker.isHexColor(argsObj.initialColor)) {
    EBX_ColorPicker.yuiPicker.setValue(YAHOO.util.Color.hex2rgb(argsObj.initialColor.substr(1)), true);
  }

  panel.show();
};

EBX_ColorPicker.hide = function () {
  EBX_ColorPicker.yuiPanel.hide();

  if (EBX_ColorPicker.currentToggleButton !== null) {
    EBX_ButtonUtils.setStateToToggleButton(EBX_ColorPicker.currentToggleButton, false);
  }
  if (typeof EBX_ColorPicker.currentFnCommitColor === "function") {
    EBX_ColorPicker.currentFnCommitColor.call(this, "#" + EBX_ColorPicker.yuiPicker.get("hex"));
  }

  // erase all current variables
  EBX_ColorPicker.currentToggleButton = null;
  EBX_ColorPicker.currentFnUpdateColor = null;
  EBX_ColorPicker.currentFnCommitColor = null;

  EBX_ColorPicker.getMask().style.display = "none";
};

EBX_ColorPicker.commitForCurrentWidget = function (color) {
  ebx_form_setNodeValue(EBX_ColorPicker.currentWidgetPath, color);

  // no more useful as soon as commit function is called (the yui color picker is hidden)
  EBX_ColorPicker.currentWidgetPath = null;
  EBX_ColorPicker.currentWidgetPreviewEl = null;
  EBX_ColorPicker.currentWidgetCustomPreviewEvent = null;
};

EBX_ColorPicker.updatePreviewForCurrentWidget = function (color) {
  EBX_ColorPicker.updatePreviewForWidgetElement(color, EBX_ColorPicker.currentWidgetPreviewEl);

  if (EBX_ColorPicker.currentWidgetCustomPreviewEvent !== null) {
    EBX_FormPresenter.callComponentEvent(EBX_ColorPicker.currentWidgetCustomPreviewEvent, color);
  }
};
EBX_ColorPicker.updatePreviewForWidgetKeyUp = function (color, previewColorId, customPreviewEvent) {
  EBX_ColorPicker.updatePreviewForWidget(color, previewColorId);

  if (EBX_ColorPicker.isHexColor(color) && customPreviewEvent !== null) {
    EBX_FormPresenter.callComponentEvent(customPreviewEvent, color);
  }
};
EBX_ColorPicker.updatePreviewForWidget = function (color, previewColorId) {
  EBX_ColorPicker.updatePreviewForWidgetElement(color, document.getElementById(previewColorId));
};
EBX_ColorPicker.updatePreviewForWidgetElement = function (color, previewElement) {
  if (EBX_ColorPicker.isHexColor(color)) {
    previewElement.style.backgroundColor = color;
  }
};

EBX_ColorPicker.isHexColor = function (color) {
  return (/^#[A-F0-9]{6}$/i.test(color));
};

EBX_ColorPicker.displayFromWidget = function (argsObj) {
  EBX_ColorPicker.currentWidgetPath = argsObj.path;
  EBX_ColorPicker.currentWidgetPreviewEl = document.getElementById(argsObj.previewColorId);
  if (argsObj.customPreviewEvent !== undefined) {
    EBX_ColorPicker.currentWidgetCustomPreviewEvent = argsObj.customPreviewEvent;
  }

  var color = ebx_form_getNodeValue(EBX_ColorPicker.currentWidgetPath);

  EBX_ColorPicker.display({
    initialColor: color,
    toggleButtonId: argsObj.buttonId,
    context: argsObj.context,
    fnUpdateColor: EBX_ColorPicker.updatePreviewForCurrentWidget,
    fnCommitColor: EBX_ColorPicker.commitForCurrentWidget
  });
};

/*END Color picker */

/* JSON structure of argsObj : {
 * 
 *     previewColorId: String
 *     
 *     mainColorPath: String optionnal,
 *     defaultMainColorValue: String optionnal,
 *     
 *     brightnessPath: String optionnal,
 *     defaultBrightnessValue: String optionnal,
 *     
 *     textColorPath: String optionnal,
 *     defaultTextColorValue: String optionnal,
 *     
 *     borderColorPath: String optionnal,
 *     defaultBorderColorValue: String optionnal
 *     
 * }
 */
EBX_COLOR_PICKER_BEAN_EDITOR_PARAMETERS_MAP = {};

EBX_COLOR_PICKER_BEAN_EDITOR_DARK_TEXT_COLOR = "#000000";
EBX_COLOR_PICKER_BEAN_EDITOR_MEDIUM_TEXT_COLOR = "#808080";
EBX_COLOR_PICKER_BEAN_EDITOR_LIGHT_TEXT_COLOR = "#FFFFFF";

EBX_COLOR_PICKER_BEAN_EDITOR_BRIGHTNESS_DARK_VALUE = "0";
EBX_COLOR_PICKER_BEAN_EDITOR_BRIGHTNESS_MEDIUM_VALUE = "50";
EBX_COLOR_PICKER_BEAN_EDITOR_BRIGHTNESS_LIGHT_VALUE = "100";

ebx_colorPickerBeanEditor_updatePreview = function (value, declarationId) {
  var argsObj = EBX_COLOR_PICKER_BEAN_EDITOR_PARAMETERS_MAP[declarationId];

  if (argsObj.mainColorPath !== undefined) {
    ebx_colorPickerBeanEditor_updatePreview_backgroundColor(ebx_form_getNodeValue(argsObj.mainColorPath),
        argsObj.previewColorId);
  }

  if (argsObj.brightnessPath !== undefined) {
    var brightness = ebx_form_getNodeValue(argsObj.brightnessPath);

    var textColor = EBX_COLOR_PICKER_BEAN_EDITOR_DARK_TEXT_COLOR;

    if (brightness == EBX_COLOR_PICKER_BEAN_EDITOR_BRIGHTNESS_LIGHT_VALUE) {
      textColor = EBX_COLOR_PICKER_BEAN_EDITOR_LIGHT_TEXT_COLOR;
    } else if (brightness == EBX_COLOR_PICKER_BEAN_EDITOR_BRIGHTNESS_MEDIUM_VALUE) {
      textColor = EBX_COLOR_PICKER_BEAN_EDITOR_MEDIUM_TEXT_COLOR;
    }

    ebx_colorPickerBeanEditor_updatePreview_textColor(textColor, argsObj.previewColorId);
  }

  if (argsObj.textColorPath !== undefined) {
    ebx_colorPickerBeanEditor_updatePreview_workflowBadgeTextColor(ebx_form_getNodeValue(argsObj.textColorPath),
        argsObj.previewColorId);
  }

  if (argsObj.borderColorPath !== undefined) {
    ebx_colorPickerBeanEditor_updatePreview_borderColor(ebx_form_getNodeValue(argsObj.borderColorPath),
        argsObj.previewColorId);
  }
};

ebx_colorPickerBeanEditor_resetToDefaultValues = function (previewColorId) {
  var argsObj = EBX_COLOR_PICKER_BEAN_EDITOR_PARAMETERS_MAP[previewColorId];

  if (argsObj.mainColorPath !== undefined && argsObj.defaultMainColorValue !== undefined) {
    ebx_form_setNodeValue(argsObj.mainColorPath, argsObj.defaultMainColorValue);
  }

  if (argsObj.brightnessPath !== undefined && argsObj.defaultBrightnessValue !== undefined) {
    ebx_form_setNodeValue(argsObj.brightnessPath, argsObj.defaultBrightnessValue);
  }

  if (argsObj.textColorPath !== undefined && argsObj.defaultTextColorValue !== undefined) {
    ebx_form_setNodeValue(argsObj.textColorPath, argsObj.defaultTextColorValue);
  }

  if (argsObj.borderColorPath !== undefined && argsObj.defaultBorderColorValue !== undefined) {
    ebx_form_setNodeValue(argsObj.borderColorPath, argsObj.defaultBorderColorValue);
  }
};

ebx_colorPickerBeanEditor_updatePreview_backgroundColor = function (color, previewColorId) {
  if (!EBX_ColorPicker.isHexColor(color)) {
    return;
  }

  document.getElementById(previewColorId).style.backgroundColor = color;
};
ebx_colorPickerBeanEditor_updatePreview_textColor = function (color, previewColorId) {
  if (!EBX_ColorPicker.isHexColor(color)) {
    return;
  }

  document.getElementById(previewColorId).style.color = color;
};
ebx_colorPickerBeanEditor_updatePreview_workflowBadgeTextColor = function (color, previewColorId) {
  if (!EBX_ColorPicker.isHexColor(color)) {
    return;
  }

  var previewEl = document.getElementById(previewColorId);

  previewEl.style.color = color;
  previewEl.style.boxShadow = "0 0 0 1px " + color;
  previewEl.style.MozBoxShadow = "0 0 0 1px " + color;
  previewEl.style.borderColor = color;
};
ebx_colorPickerBeanEditor_updatePreview_borderColor = function (color, previewColorId) {
  if (!EBX_ColorPicker.isHexColor(color)) {
    return;
  }

  document.getElementById(previewColorId).style.borderColor = color;
};

/* START MDM component */
function EBX_MDMComponent() {
}

EBX_MDMComponent.yuiDataSource = new YAHOO.util.XHRDataSource();
EBX_MDMComponent.yuiDataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
EBX_MDMComponent.yuiDataSource.responseSchema = {
  resultsList: "result",
  fields: [{
    key: "openComment"
  }, {
    key: "url"
  }]
};

EBX_MDMComponent.sendRequest = function (requestURL) {
  EBX_MDMComponent.yuiDataSource.sendRequest(requestURL, {
    success: EBX_MDMComponent.receiveSuccess,
    failure: EBX_MDMComponent.receiveFailure
  });
};

EBX_MDMComponent.receiveSuccess = function (oRequest, oParsedResponse, argument) {
  var result = oParsedResponse.results;
  if (result !== undefined) {
    var openComment = result[0].openComment;
    var url = result[0].url;
    if (openComment) {
      EBX_Utils.openInternalPopup(url, 600, 370);
    } else {
      window.location.href = url;
    }
  }
};

EBX_MDMComponent.receiveFailure = function (oRequest, oParsedResponse, argument) {

};
/* END MDM component */

//[EBX_PUBLIC_API]
ebx_setWorkspaceTitle = function (workspaceTitle) {
  EBX_LayoutManager.setWorkspaceTitle(workspaceTitle);
};
ebx_getWorkspaceTitle = function () {
  return EBX_LayoutManager.getWorkspaceTitle();
};

/********* ebx_workflowProcessInstanceHistory.js *********/
function EBX_WPIH() {
}

EBX_WPIH.taskCSSClass = "ebx_wpihTask";
EBX_WPIH.currentTaskCSSClass = "ebx_wpihCurrentTask";
EBX_WPIH.hiddenTaskCSSClass = "ebx_wpihHiddenTask";

EBX_WPIH.buttonScrollAmount = 132;//px /* 100(task.width) + 32(separator.width) */

EBX_WPIH.marginForSelectionWhenAutoScroll = 50;//px

/* When the user hold a scroll button.
 * The scroll is done once, then a delay, then repeated scrolls. */
EBX_WPIH.delayToLaunchRepeatedScrolling = 400;//ms

EBX_WPIH.delayForRepeatedScrolling = 100;//ms

EBX_WPIH.buttonScrollAnimationDuration = 100;//ms
EBX_WPIH.selectionAutoScrollAnimationDuration = 500;//ms
EBX_WPIH.gotoPositionScrollAnimationDuration = 200;//ms

EBX_WPIH.taskFlowRegister = [];

EBX_WPIH.taskFlowToRemoveOnAJAXReload = [];

EBX_WPIH.createAndRegisterTaskFlow = function (taskFlowName, config) {
  if (EBX_WPIH.taskFlowRegister[taskFlowName] !== undefined) {
    return;
  }

  var taskFlow = new EBX_WPIH.taskFlow(taskFlowName, config);

  EBX_WPIH.taskFlowRegister[taskFlowName] = taskFlow;
};

EBX_WPIH.initTaskFlows = function () {
  for (var taskFlowName in EBX_WPIH.taskFlowRegister) {
    EBX_WPIH.taskFlowRegister[taskFlowName].init();
  }
};

EBX_WPIH.removeAJAXTaskFlows = function () {
  var taskFlowName;
  while ((taskFlowName = EBX_WPIH.taskFlowToRemoveOnAJAXReload.shift()) !== undefined) {
    delete EBX_WPIH.taskFlowRegister[taskFlowName];
  }
};

EBX_WPIH.refreshTaskFlowsSizeConstants = function () {
  for (var taskFlowName in EBX_WPIH.taskFlowRegister) {
    EBX_WPIH.taskFlowRegister[taskFlowName].refreshSizeConstants();
    EBX_WPIH.taskFlowRegister[taskFlowName].scrollListener();
  }
};

EBX_WPIH.workspaceResizeListenerEnabled = false;
EBX_WPIH.enableWorkspaceResizeListener = function () {

  if (EBX_WPIH.workspaceResizeListenerEnabled === true) {
    return;
  }

  EBX_LayoutManager.resizeWorkspaceListeners.push(EBX_WPIH.refreshTaskFlowsSizeConstants);
  EBX_WPIH.workspaceResizeListenerEnabled = true;

};

EBX_WPIH.showHiddenTasksCSSClass = "ebx_wpihShowHiddenTasks";

/* Will call the update of variable graphical element every x ms during the CSS transition of the show/hide hiddenTasks.
 * Set 0 to disable it.
 */
EBX_WPIH.showHiddenTasksRefreshInterval = 10;

// in ms. Must match with the CSS transition duration property set on .ebx_wpihIcon and .ebx_wpihTask
EBX_WPIH.showHiddenTasksTransitionDuration = 500;

EBX_WPIH.showHiddenTasksRefreshCurrentIntervalID = null;

EBX_WPIH.showHiddenTasksRefreshClearInterval = function () {
  if (EBX_WPIH.showHiddenTasksRefreshCurrentIntervalID === null) {
    return;
  }

  window.clearInterval(EBX_WPIH.showHiddenTasksRefreshCurrentIntervalID);
  EBX_WPIH.showHiddenTasksRefreshCurrentIntervalID = null;

  EBX_WPIH.selectIndicatorTransition(true);
};

EBX_WPIH.showHiddenTasks = function (isInitDontSave) {

  EBX_Utils.addCSSClass(document.body, EBX_WPIH.showHiddenTasksCSSClass);

  if (!EBX_LayoutManager.doesBrowserSupportsCSSTransitions) {
    // no delay needed
    EBX_WPIH.refreshAfterToggleHiddenTasks();
    return;
  }

  if (EBX_WPIH.showHiddenTasksRefreshInterval > 0) {
    EBX_WPIH.showHiddenTasksRefreshClearInterval();

    EBX_WPIH.selectIndicatorTransition(false);

    EBX_WPIH.showHiddenTasksRefreshCurrentIntervalID = window.setInterval(EBX_WPIH.refreshAfterToggleHiddenTasks,
        EBX_WPIH.showHiddenTasksRefreshInterval);

    window.setTimeout(EBX_WPIH.showHiddenTasksRefreshClearInterval, EBX_WPIH.showHiddenTasksTransitionDuration);
  }

  // if transition or not: refresh after transition duration
  window.setTimeout(EBX_WPIH.refreshAfterToggleHiddenTasks, EBX_WPIH.showHiddenTasksTransitionDuration);

  if (isInitDontSave !== true) {
    EBX_WPIH.saveShowHiddenTasks(true);
  }
};

EBX_WPIH.hideHiddenTasks = function () {

  EBX_Utils.removeCSSClass(document.body, EBX_WPIH.showHiddenTasksCSSClass);

  var selectIndicatorTransition = false;

  // unselect the task if hidden and not current
  var mainTaskFlow = EBX_WPIH.taskFlowRegister[EBX_WPIH.mainTaskFlowId];
  if (mainTaskFlow !== undefined) {
    if (mainTaskFlow.selectedIndex >= 0 && EBX_Utils.matchCSSClass(mainTaskFlow.taskEls[mainTaskFlow.selectedIndex],
        EBX_WPIH.hiddenTaskCSSClass)
        && !EBX_Utils.matchCSSClass(mainTaskFlow.taskEls[mainTaskFlow.selectedIndex], EBX_WPIH.currentTaskCSSClass)) {
      mainTaskFlow.selectedIndex = -1;

      selectIndicatorTransition = true;

      EBX_WPIH.callbackSuccess(null, {
        results: [{
          title: "",
          infoText: "",
          preview: ""
        }]
      }, null);
    }
  }

  if (!EBX_LayoutManager.doesBrowserSupportsCSSTransitions) {
    // no delay needed
    EBX_WPIH.refreshAfterToggleHiddenTasks();
    return;
  }

  if (EBX_WPIH.showHiddenTasksRefreshInterval > 0) {
    EBX_WPIH.showHiddenTasksRefreshClearInterval();

    EBX_WPIH.selectIndicatorTransition(selectIndicatorTransition);

    EBX_WPIH.showHiddenTasksRefreshCurrentIntervalID = window.setInterval(EBX_WPIH.refreshAfterToggleHiddenTasks,
        EBX_WPIH.showHiddenTasksRefreshInterval);

    window.setTimeout(EBX_WPIH.showHiddenTasksRefreshClearInterval, EBX_WPIH.showHiddenTasksTransitionDuration);
  }

  // if transition or not: refresh after transition duration
  window.setTimeout(EBX_WPIH.refreshAfterToggleHiddenTasks, EBX_WPIH.showHiddenTasksTransitionDuration);

  EBX_WPIH.saveShowHiddenTasks(false);
};

EBX_WPIH.refreshAfterToggleHiddenTasks = function () {
  for (var taskFlowName in EBX_WPIH.taskFlowRegister) {
    EBX_WPIH.taskFlowRegister[taskFlowName].refreshAfterToggleHiddenTasks();
  }
};

EBX_WPIH.selectIndicatorTransition = function (enable) {
  for (var taskFlowName in EBX_WPIH.taskFlowRegister) {
    if (EBX_WPIH.taskFlowRegister[taskFlowName].selectIndicatorEl !== undefined) {
      if (enable === true) {
        EBX_Utils.removeCSSClass(EBX_WPIH.taskFlowRegister[taskFlowName].selectIndicatorEl, "ebx_disableTransition");
      } else {
        EBX_Utils.addCSSClass(EBX_WPIH.taskFlowRegister[taskFlowName].selectIndicatorEl, "ebx_disableTransition");
      }
    }
  }
};

EBX_WPIH.saveShowingHiddenTasksDataSource = null;
EBX_WPIH.saveShowHiddenTasks = function (isShowHiddenTasks) {
  if (EBX_WPIH.saveShowingHiddenTasksDataSource === null) {
    EBX_WPIH.saveShowingHiddenTasksDataSource = new YAHOO.util.XHRDataSource(EBX_WPIH.showingHiddenTasksRequest);
  }

  EBX_WPIH.saveShowingHiddenTasksDataSource.sendRequest(isShowHiddenTasks + "", null);
};

EBX_WPIH.scrollLeftTaskFlow = function (taskFlowName) {
  EBX_WPIH.taskFlowRegister[taskFlowName].scrollLeft();
};
EBX_WPIH.scrollRightTaskFlow = function (taskFlowName) {
  EBX_WPIH.taskFlowRegister[taskFlowName].scrollRight();
};

EBX_WPIH.launchScrollIntervalTaskFlow = function (taskFlowName) {
  EBX_WPIH.taskFlowRegister[taskFlowName].launchScrollInterval();
};

/**
 * A Task Flow is a component showing tasks as a chain of graphical elements,
 * linked by arrows. This component have its own scroll component.
 *
 * @param name
 *            a unique name in the page (registered by
 *            EBX_WPIH.taskFlowRegister)
 * @param config
 *            is a object containing the following attributes:
 * @param selectedIndex
 *            the current selected task index
 * @param presentTaskIndex
 *            the present task index
 * @param isPreview
 *            true if the workflow is a preview, false if it's a main (a click
 *            on a task will have a different action)
 * @param isPreviewOpenPopup
 *            true if click on a click on a workflow task or background opens a
 *            popup
 * @param workflowUrl
 *            (optionnal) base URL to use on a click on a workflow task or
 *            background
 * @returns {EBX_WPIH.ebx_taskFlow}
 */
EBX_WPIH.taskFlow = function (name, config) {
  this.name = name;
  this.taskFlowOverviewId = name;

  this.selectedIndex = config.selectedIndex;
  this.presentTaskIndex = config.presentTaskIndex;
  this.isPreview = config.isPreview === true;
  this.isPreviewOpenPopup = config.isPreviewOpenPopup === true;
  this.workflowUrl = config.workflowUrl;

  this.initDone = false;

  this.taskFlowOverviewEl;
  this.taskContainerEl;
  this.selectIndicatorEl;

  this.scrollEl;
  {
    this.scrollBGPastEl;
    this.scrollBGPresentEl;
    this.scrollBGFutureEl;

    this.scrollBtnLeftEl;
    this.scrollBtnRightEl;

    this.scrollSlideLeftEl;
    this.scrollKnobEl;
    this.scrollKnobDDEl;
    this.scrollSlideRightEl;
  }

  this.taskEls;

  this.hScrollHeight;

  this.presentTaskLeftPos;
  this.presentTaskWidth;
  this.viewWidth;
  this.scrollWidth;
  this.selectIndicatorWidth;

  this.timeLinePastEl;
  this.timeLinePresentEl;
  this.timeLineFutureEl;

  this.init = function () {
    if (this.initDone === true) {
      return;
    }
    YAHOO.util.Event.onContentReady(this.taskFlowOverviewId, this.onContentReady, this, true);
    this.initDone = true;
  };

  this.onContentReady = function () {
    this.taskFlowOverviewEl = document.getElementById(this.taskFlowOverviewId);

    this.scrollEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.taskFlowOverviewEl, "ebx_wpihTaskScroll");

    this.scrollBGPastEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.scrollEl, "ebx_wpihTaskScrollBGPast");
    this.scrollBGPresentEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.scrollEl,
        "ebx_wpihTaskScrollBGPresent");
    if (this.scrollBGPresentEl === null) {
      this.scrollBGPresentEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.scrollEl,
          "ebx_wpihTaskScrollBGError");
    }
    this.scrollBGFutureEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.scrollEl, "ebx_wpihTaskScrollBGFuture");

    this.scrollBtnLeftEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.scrollEl, "ebx_wpihTaskScrollBtnLeft");
    this.scrollBtnRightEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.scrollEl, "ebx_wpihTaskScrollBtnRight");

    this.scrollSlideLeftEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.scrollEl,
        "ebx_wpihTaskScrollSlideLeft");
    this.scrollKnobEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.scrollEl, "ebx_wpihTaskScrollKnob");
    this.scrollKnobDDEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.scrollEl, "ebx_wpihTaskScrollKnobDD");
    this.scrollSlideRightEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.scrollEl,
        "ebx_wpihTaskScrollSlideRight");

    this.taskContainerWithTimelineEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.taskFlowOverviewEl,
        "ebx_wpihTaskContainerWithTimeline");
    this.taskContainerEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.taskContainerWithTimelineEl,
        "ebx_wpihTaskContainer");
    this.selectIndicatorEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.taskContainerEl,
        "ebx_wpihSelectIndicator");

    this.timeLinePastEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.taskContainerWithTimelineEl,
        "ebx_wpihTimeLinePast");
    this.timeLinePresentEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.taskContainerWithTimelineEl,
        "ebx_wpihTimeLinePresent");
    if (this.timeLinePresentEl === null) {
      this.timeLinePresentEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.taskContainerWithTimelineEl,
          "ebx_wpihTimeLineError");
    }
    this.timeLineFutureEl = EBX_Utils.getFirstDirectChildMatchingCSSClass(this.taskContainerWithTimelineEl,
        "ebx_wpihTimeLineFuture");

    this.taskEls = EBX_Utils.getRecursiveChildrenMatchingCSSClass(this.taskContainerEl, EBX_WPIH.taskCSSClass);

    this.hScrollHeight = EBX_Utils.getHScrollHeight();

    if (this.presentTaskIndex !== -1) {
      this.presentTaskLeftPos = this.taskEls[this.presentTaskIndex].offsetLeft;
      this.presentTaskWidth = this.taskEls[this.presentTaskIndex].offsetWidth;
    } else {
      this.presentTaskLeftPos = this.taskContainerEl.scrollWidth;
      this.presentTaskWidth = 0;
    }

    this.selectIndicatorWidth = this.selectIndicatorEl.offsetWidth;

    this.refreshSizeConstants();

    this.refreshScrollKnobPosition();

    if (!this.isPreview) {
      this.updateSelectIndicator();
    } else if (this.presentTaskIndex !== -1) {
      this.scrollToTaskIndex(this.presentTaskIndex);
    }

    YAHOO.util.Event.addListener(this.taskContainerEl, "click", this.clickListener, null, this);
    YAHOO.util.Event.addListener(this.taskContainerEl, "scroll", this.scrollListener, null, this);

    this.scrollListener();

    EBX_WPIH.enableWorkspaceResizeListener();
  };

  this.refreshAfterToggleHiddenTasks = function () {
    // sometimes, the task flow is not ready. Never mind, there is nothing to refresh
    // and the refresh will be done at first display a few milliseconds later
    if (this.taskContainerEl === undefined) {
      return;
    }

    this.scrollWidth = this.taskContainerEl.scrollWidth;
    this.isScrollEnabled = this.viewWidth < this.scrollWidth;

    if (this.presentTaskIndex !== -1) {
      this.presentTaskLeftPos = this.taskEls[this.presentTaskIndex].offsetLeft;
    } else {
      this.presentTaskLeftPos = this.taskContainerEl.scrollWidth;
    }

    if (!this.isPreview) {
      this.updateSelectIndicator();
    }

    this.initScroll();
    this.scrollListener();
  };

  this.refreshSizeConstants = function () {
    this.viewWidth = this.taskFlowOverviewEl.offsetWidth;
    this.scrollWidth = this.taskContainerEl.scrollWidth;
    this.isScrollEnabled = this.viewWidth < this.scrollWidth;

    this.initScroll();
    this.initTimeLinePositions();
  };

  this.getSelectedIndex = function () {
    return this.selectedIndex;
  };

  this.clickListener = function (event) {
    var targetEl = EBX_Utils.getTargetElement(event);

    var taskEl = targetEl;
    if (!EBX_Utils.matchCSSClass(taskEl, EBX_WPIH.taskCSSClass)) {
      taskEl = EBX_Utils.getFirstParentMatchingCSSClass(targetEl, EBX_WPIH.taskCSSClass);
    }
    if (taskEl !== null) {
      var index = EBX_Utils.indexOf(this.taskEls, taskEl);
      if (index !== -1) {
        if (this.isPreview) {
          if (this.isPreviewOpenPopup) {
            EBX_Utils.openInternalPopupLargeSizeHostedClose(this.workflowUrl + index);
          } else {
            window.location.href = this.workflowUrl + index;
          }
          return;
        } else {
          this.selectedIndex = index;
          this.updateSelectIndicator();
          EBX_WPIH.selectMainTaskListener(this);
          return;
        }
      }
    }

    if (this.isPreview) {
      if (this.isPreviewOpenPopup) {
        EBX_Utils.openInternalPopupLargeSizeHostedClose(this.workflowUrl);
      } else {
        window.location.href = this.workflowUrl;
      }
    }
  };

  this.initScroll = function () {
    if (!this.isScrollEnabled) {
      if (this.isPreview) {
        this.scrollEl.style.display = "none";
      } else {
        this.scrollEl.style.visibility = "hidden";
      }
      return;
    }
    if (this.isPreview) {
      this.scrollEl.style.display = "";
    } else {
      this.scrollEl.style.visibility = "";
    }

    this.scrollElOffsetLeft = EBX_Utils.getOffsetLeftRelativeToContainer(this.scrollEl, document.body);

    this.scrollLeftBound = this.scrollBtnLeftEl.offsetWidth;
    this.scrollRightBound = this.scrollBtnRightEl.offsetWidth;

    this.scrollAvailableWidth = this.viewWidth - this.scrollLeftBound - this.scrollRightBound;

    var pastProportion = this.presentTaskLeftPos / this.scrollWidth;
    var presentProportion = this.presentTaskWidth / this.scrollWidth;

    var presentStartPos = this.scrollLeftBound + Math.round(pastProportion * this.scrollAvailableWidth);
    var futureStartPos = presentStartPos + Math.round(presentProportion * this.scrollAvailableWidth);

    this.scrollBGPastEl.style.left = this.scrollLeftBound + "px";
    this.scrollBGPastEl.style.width = presentStartPos - this.scrollLeftBound + "px";

    this.scrollBGPresentEl.style.left = presentStartPos + "px";
    this.scrollBGPresentEl.style.width = futureStartPos - presentStartPos + "px";

    this.scrollBGFutureEl.style.left = futureStartPos + "px";
    this.scrollBGFutureEl.style.right = this.scrollRightBound + "px";

    var knobWidthProportion = this.viewWidth / this.scrollWidth;
    this.knobWidth = Math.round(knobWidthProportion * this.scrollAvailableWidth);

    this.scrollSlideLeftEl.style.left = this.scrollLeftBound + "px";
    this.scrollKnobEl.style.width = this.knobWidth + "px";
    this.scrollKnobDDEl.style.width = this.knobWidth + "px";
    this.scrollSlideRightEl.style.right = this.scrollRightBound + "px";

    /* init drag n drop */
    if (this.knobDD === undefined) {
      this.isKnobDD = false;
      this.knobDD = new YAHOO.util.DD(this.scrollKnobDDEl);
      this.knobDD.subscribe("startDragEvent", this.startDragKnobListener, null, this);
      this.knobDD.subscribe("dragEvent", this.dragKnobListener, null, this);
      this.knobDD.subscribe("endDragEvent", this.endDragKnobListener, null, this);

      YAHOO.util.Event.addListener(this.scrollEl, "mousedown", this.scrollMouseDownListener, null, this);
      YAHOO.util.Event.addListener(this.scrollEl, "mouseup", this.scrollMouseUpListener, null, this);
      YAHOO.util.Event.addListener(this.scrollEl, "mouseout", this.scrollMouseOutListener, null, this);
    }
  };

  this.startDragKnobListener = function (dragCoords) {
    this.isKnobDD = true;
    EBX_Utils.addCSSClass(document.body, "ebx_wpihTaskScrollGrabbing");
  };
  this.dragKnobListener = function (event) {
    this.scrollKnobDDEl.style.top = "";

    var offsetLeft = this.scrollKnobDDEl.offsetLeft;

    var offsetLeftInSlide = offsetLeft - this.scrollLeftBound;

    var offsetLeftProportion = offsetLeftInSlide / this.scrollAvailableWidth;

    var scrollLeftTaget = Math.round(offsetLeftProportion * this.scrollWidth);

    this.taskContainerEl.scrollLeft = scrollLeftTaget;
  };
  this.endDragKnobListener = function (event) {
    this.isKnobDD = false;
    this.scrollKnobDDEl.style.left = this.scrollKnobEl.offsetLeft + "px";
    EBX_Utils.removeCSSClass(document.body, "ebx_wpihTaskScrollGrabbing");
  };

  this.refreshScrollKnobPosition = function () {
    if (!this.isScrollEnabled) {
      return;
    }

    var scrollLeft = this.taskContainerEl.scrollLeft;

    var knobLeftProportion = scrollLeft / this.scrollWidth;

    var slideLeftWidth = Math.round(knobLeftProportion * this.scrollAvailableWidth);

    this.scrollSlideLeftEl.style.width = slideLeftWidth + 1 + "px";

    this.scrollKnobEl.style.left = this.scrollLeftBound + slideLeftWidth + "px";
    if (this.isKnobDD === false) {
      this.scrollKnobDDEl.style.left = this.scrollLeftBound + slideLeftWidth + "px";
    }

    this.scrollSlideRightEl.style.width = this.scrollAvailableWidth - (slideLeftWidth + this.knobWidth) + 1 + "px";
  };

  this.scrollMouseDownListener = function (event) {
    var targetEl = EBX_Utils.getTargetElement(event);

    if (targetEl === this.scrollSlideLeftEl || targetEl === this.scrollSlideRightEl) {

      var xCoord = event.clientX;

      var xCoordInSlide = xCoord - this.scrollElOffsetLeft - this.scrollLeftBound;

      var scrollLeftProportion = (xCoordInSlide - this.knobWidth / 2) / this.scrollAvailableWidth;

      var scrollLeftTaget = scrollLeftProportion * this.scrollWidth;

      new YAHOO.util.Scroll(this.taskContainerEl, {
        scroll: {
          to: [scrollLeftTaget, 0]
        }
      }, EBX_WPIH.gotoPositionScrollAnimationDuration / 1000, YAHOO.util.Easing.easeBoth).animate();

      // in case of YUI animation performance issues, use this
      //			this.taskContainerEl.scrollLeft = scrollLeftTaget;

      return;
    }

    var isScrollButtonLeft = false;
    var isScrollButtonRight = false;
    var targetParentEl = targetEl;
    while (targetParentEl !== this.scrollEl) {
      if (targetParentEl.parentNode === this.scrollBtnLeftEl) {
        isScrollButtonLeft = true;
        break;
      }
      if (targetParentEl.parentNode === this.scrollBtnRightEl) {
        isScrollButtonRight = true;
        break;
      }
      targetParentEl = targetParentEl.parentNode;
    }

    this.scrollIntervalCmd = null;
    if (isScrollButtonLeft) {
      this.scrollIntervalCmd = "EBX_WPIH.scrollLeftTaskFlow(\"" + this.name + "\")";
    }
    if (isScrollButtonRight) {
      this.scrollIntervalCmd = "EBX_WPIH.scrollRightTaskFlow(\"" + this.name + "\")";
    }

    if (this.scrollIntervalCmd !== null) {
      window.setTimeout(this.scrollIntervalCmd, 0);
      this.scrollTimeout = window.setTimeout("EBX_WPIH.launchScrollIntervalTaskFlow(\"" + this.name + "\")",
          EBX_WPIH.delayToLaunchRepeatedScrolling);
      return;
    }
  };

  this.launchScrollInterval = function () {
    this.scrollInterval = window.setInterval(this.scrollIntervalCmd, EBX_WPIH.delayForRepeatedScrolling);
  };

  this.scrollMouseUpListener = function (event) {
    window.clearTimeout(this.scrollTimeout);
    window.clearInterval(this.scrollInterval);
  };

  this.scrollMouseOutListener = function (event) {
    window.clearTimeout(this.scrollTimeout);
    window.clearInterval(this.scrollInterval);
  };

  this.initTimeLinePositions = function () {
    this.timeLinePastEl.style.left = 0;
    this.timeLinePresentEl.style.width = this.presentTaskWidth + "px";
  };

  this.scrollListener = function () {
    this.refreshScrollKnobPosition();
    this.updateTimeLinePositions();
  };

  this.updateTimeLinePositions = function () {

    var scrollLeft = this.taskContainerEl.scrollLeft;

    var widthPast = this.presentTaskLeftPos - scrollLeft;

    var leftPositionPresent = this.presentTaskLeftPos - scrollLeft;

    var leftPositionFuture = leftPositionPresent + this.presentTaskWidth;

    var widthFuture = this.viewWidth - leftPositionFuture;

    var isPastDisplayed = true;
    var isPresentDisplayed = true;
    var isFutureDisplayed = true;

    if (widthPast > this.viewWidth) {
      widthPast = this.viewWidth;

      isPresentDisplayed = false;
      isFutureDisplayed = false;
    }

    if (widthPast + this.presentTaskWidth > this.viewWidth) {
      isFutureDisplayed = false;
    }

    if (widthFuture > this.viewWidth) {
      widthFuture = this.viewWidth;

      isPastDisplayed = false;
      isPresentDisplayed = false;
    }

    if (leftPositionFuture < 0) {
      leftPositionFuture = 0;
    }

    if (isPastDisplayed) {
      this.timeLinePastEl.style.width = widthPast + "px";
      this.timeLinePastEl.style.display = "";
    } else {
      this.timeLinePastEl.style.display = "none";
    }

    if (isPresentDisplayed) {
      this.timeLinePresentEl.style.left = leftPositionPresent + "px";
      this.timeLinePresentEl.style.display = "";
    } else {
      this.timeLinePresentEl.style.display = "none";
    }

    if (isFutureDisplayed) {
      this.timeLineFutureEl.style.left = leftPositionFuture + "px";
      this.timeLineFutureEl.style.width = widthFuture + "px";
      this.timeLineFutureEl.style.display = "";
    } else {
      this.timeLineFutureEl.style.display = "none";
    }
  };

  this.updateSelectIndicator = function () {
    if (this.selectedIndex < 0) {
      this.selectIndicatorEl.style.left = "";//reset (apply CSS init state)
      return;
    }

    var selectedTaskOffsetLeft = this.taskEls[this.selectedIndex].offsetLeft;
    this.selectIndicatorEl.style.left = selectedTaskOffsetLeft + "px";

    this.scrollToTaskIndex(this.selectedIndex);
  };

  this.scrollToTaskIndex = function (index) {
    var selectedTaskOffsetLeft = this.taskEls[index].offsetLeft;

    var currentScrollLeft = this.taskContainerEl.scrollLeft;

    var gapForSelectorLeftMargin = -1;

    var isHiddenLeft = currentScrollLeft + EBX_WPIH.marginForSelectionWhenAutoScroll > selectedTaskOffsetLeft
        + gapForSelectorLeftMargin;

    var targetScrollLeft = null;

    if (isHiddenLeft) {
      targetScrollLeft = selectedTaskOffsetLeft + gapForSelectorLeftMargin - EBX_WPIH.marginForSelectionWhenAutoScroll;
    } else {
      var isHiddenRight = currentScrollLeft + this.viewWidth < selectedTaskOffsetLeft + gapForSelectorLeftMargin
          + this.selectIndicatorWidth
          + EBX_WPIH.marginForSelectionWhenAutoScroll;
      if (isHiddenRight) {
        targetScrollLeft = selectedTaskOffsetLeft + gapForSelectorLeftMargin + this.selectIndicatorWidth
            + EBX_WPIH.marginForSelectionWhenAutoScroll - this.viewWidth;
      }
    }

    if (targetScrollLeft !== null) {
      new YAHOO.util.Scroll(this.taskContainerEl, {
        scroll: {
          to: [targetScrollLeft, 0]
        }
      }, EBX_WPIH.selectionAutoScrollAnimationDuration / 1000, YAHOO.util.Easing.easeBoth).animate();

      // in case of YUI animation performance issues, use this
      //			this.taskContainerEl.scrollLeft = targetScrollLeft;
    }
  };

  this.scrollLeft = function () {

    new YAHOO.util.Scroll(this.taskContainerEl, {
      scroll: {
        to: [this.taskContainerEl.scrollLeft - EBX_WPIH.buttonScrollAmount, 0]
      }
    }, EBX_WPIH.buttonScrollAnimationDuration / 1000).animate();

    // in case of YUI animation performance issues, use this
    //			this.taskContainerEl.scrollLeft -= EBX_WPIH.buttonScrollAmount;
  };

  this.scrollRight = function () {

    new YAHOO.util.Scroll(this.taskContainerEl, {
      scroll: {
        to: [this.taskContainerEl.scrollLeft + EBX_WPIH.buttonScrollAmount, 0]
      }
    }, EBX_WPIH.buttonScrollAnimationDuration / 1000).animate();

    // in case of YUI animation performance issues, use this
    //			this.taskContainerEl.scrollLeft += EBX_WPIH.buttonScrollAmount;
  };

};

EBX_WPIH.selectMainTaskListener = function (taskFlow) {
  var selectedIndex = taskFlow.getSelectedIndex();

  if (selectedIndex < 0) {
    return;
  }

  EBX_WPIH.dataSource.sendRequest(selectedIndex, {
    success: EBX_WPIH.callbackSuccess,
    failure: EBX_WPIH.callbackFailure
  });
};

EBX_WPIH.dataSourceResponseSchema = {
  resultsList: "infoPane"
};

EBX_WPIH.getCallbackObject = function () {
  return {
    success: EBX_WPIH.callbackSuccess,
    failure: EBX_WPIH.callbackFailure
  };
};

EBX_WPIH.mainTaskFlowId = "ebx_wpihMainTaskFlow";
EBX_WPIH.infoTitleId = "ebx_wpihInfoTitle";
EBX_WPIH.infoBodyId = "ebx_wpihInfoBody";
EBX_WPIH.infoTextId = "ebx_wpihInfoText";
EBX_WPIH.infoPreviewId = "ebx_wpihInfoPreview";
EBX_WPIH.dataContextId = "ebx_wpihDataContext";

EBX_WPIH.callbackSuccess = function (oRequest, oParsedResponse, argument) {
  var infoPane;

  // remove the documentation pane, just in case it was open
  EBX_NodeDocumentation.hideCurrentDocumentationNow();

  // remove previous task flows get with AJAX
  EBX_WPIH.removeAJAXTaskFlows();

  infoPane = oParsedResponse.results[0];

  document.getElementById(EBX_WPIH.infoTitleId).innerHTML = infoPane.title;

  document.getElementById(EBX_WPIH.infoTextId).innerHTML = infoPane.infoText;

  document.getElementById(EBX_WPIH.infoPreviewId).innerHTML = infoPane.preview;

  var dataContextContainer = document.getElementById(EBX_WPIH.dataContextId);
  if (dataContextContainer !== null) {
    if (infoPane.dataContext !== undefined) {
      dataContextContainer.innerHTML = infoPane.dataContext;
    } else {
      dataContextContainer.innerHTML = "";
    }
  }

  // execute script from current response
  window.setTimeout(infoPane.scriptToExecute, 0);
};

EBX_WPIH.callbackFailure = function (oRequest, oParsedResponse, argument) {

  if (oParsedResponse.status == 401) {
    EBX_Loader.gotoTimeoutPage();
    return;
  }

};

EBX_WPIH.init = function () {
  EBX_Loader.changeTaskState(EBX_Loader_taskId_workflow_process_instance_history, EBX_Loader.states.processing);

  // disable WorkspaceContent scrolls
  EBX_LayoutManager.WorkspaceContentEl.style.overflow = "hidden";

  EBX_LayoutManager.WorkspaceContentAreaEl.style.overflow = "hidden";
  EBX_LayoutManager.WorkspaceContentAreaEl.style.padding = "0";

  EBX_LayoutManager.bodyLayout.addListener("resize", EBX_WPIH.resizeInfoBody, null, null);
  EBX_WPIH.resizeInfoBody();

  EBX_WPIH.initTaskFlows();

  YAHOO.util.Event.addListener(EBX_WPIH.getInfoBody(), "scroll", EBX_WPIH.displayShadowOnScroll, null);

  EBX_WPIH.dataSource = new YAHOO.util.XHRDataSource(EBX_WPIH.infoPaneContentRequest);
  EBX_WPIH.dataSource.responseType = YAHOO.util.DataSource.TYPE_JSON;
  EBX_WPIH.dataSource.responseSchema = EBX_WPIH.dataSourceResponseSchema;

  EBX_Loader.changeTaskState(EBX_Loader_taskId_workflow_process_instance_history, EBX_Loader.states.done);
};

EBX_WPIH.infoBodyEl = null;

EBX_WPIH.getInfoBody = function () {
  if (EBX_WPIH.infoBodyEl === null) {
    EBX_WPIH.infoBodyEl = document.getElementById(EBX_WPIH.infoBodyId);
  }
  return EBX_WPIH.infoBodyEl;
};

EBX_WPIH.resizeInfoBody = function () {
  var targetHeight = EBX_LayoutManager.WorkspaceContentAreaEl.offsetHeight;
  targetHeight -= document.getElementById(EBX_WPIH.mainTaskFlowId).offsetHeight;
  targetHeight -= document.getElementById(EBX_WPIH.infoTitleId).offsetHeight;

  EBX_WPIH.getInfoBody().style.height = targetHeight + "px";

  var scrollShadow = EBX_WPIH.getScrollShadow();
  if (scrollShadow !== null) {
    scrollShadow.style.top = EBX_WPIH.getInfoBody().offsetTop + "px";
    scrollShadow.style.width = EBX_WPIH.getInfoBody().clientWidth + "px";
    scrollShadow.style.borderTopLeftRadius = "0";
  }
};

EBX_WPIH.scrollShadow = null;
EBX_WPIH.getScrollShadow = function () {
  if (EBX_WPIH.scrollShadow === null) {
    EBX_WPIH.scrollShadow = document.getElementById("ebx_ScrollShadow");
  }
  return EBX_WPIH.scrollShadow;
};

EBX_WPIH.displayShadowOnScroll = function () {
  if (EBX_WPIH.getInfoBody().scrollTop > 0) {
    EBX_WPIH.getScrollShadow().style.display = "block";
  } else {
    EBX_WPIH.getScrollShadow().style.display = "none";
  }
};

EBX_WPIH.displayWorkItemInfo = function (buttonId, workitemId) {
  EBX_LabelTooltip.reinitCurrentToggleButton();
  EBX_LabelTooltip.currentLabelDocButtonId = buttonId;
  var workitemEl = document.getElementById(workitemId);
  EBX_NodeDocumentation.displayDocumentation(workitemEl);
};

/********* ebx_dynamicDisplay.js *********/
var ebx_DynamicDisplay = (function() {
	
	var hiddenCssClass = "ebx_dynamicHidden";
	
	function ebx_DynamicDisplay() {
		var self = this;
		this.properties = {};
		this.listeners = {};
		
		this.registerProperty = function(name, path) {
			this.properties[name] = path;
		};
		
		this.registerListener = function(elementId, predicate) {
			this.listeners[elementId] = predicate;
		};
		
		this.refresh = function() {
			var props = {};
			
			// gather props values
			for (var name in self.properties) {
				if (!self.properties.hasOwnProperty(name)) continue;
				
				var path = self.properties[name];
				props[name] = ebx_form_getValue(path);
			}
			
			// apply predicates
			for (var id in self.listeners) {
				if (!self.listeners.hasOwnProperty(id)) continue;
				
				var element = document.getElementById(id);
				if (!element) continue;
				
				var predicate = self.listeners[id];
				var result = predicate(props);
				
				if (result) {
					EBX_Utils.removeCSSClass(element, hiddenCssClass);
				} else {
					EBX_Utils.addCSSClass(element, hiddenCssClass);
				}
			}
		};
	}
	
	return ebx_DynamicDisplay;
})();

/********* ebx_CtbBeanServiceWidget.js *********/
var ebx_CtbBeanServiceWidget = (function() {
  return {
    onAfterLauncherChanged: onAfterLauncherChanged,
    onAfterServiceChanged: onAfterServiceChanged
  };

  function onAfterLauncherChanged(selection, any) {
    var json = JSON.parse(any);
    ebx_workflowLauncher_Documentation.update(selection, json);
  }

  function onAfterServiceChanged(selection, any) {
    var json = JSON.parse(any);
    ebx_workflowLauncher_Documentation.update(selection, json.documentation);
    refreshParameters(selection, json.parameters);
  }

  function refreshParameters(selection, paramObj) {
    var url = paramObj.url;
    var id = paramObj.id;

    var params = "__WIDGET_NAME__=" + encodeURIComponent(id);
    if (selection != null) {
      params += "&__KEY__=" + encodeURIComponent(selection.key);
    }

    var serviceParamsObject = {};
    var form = document.forms[EBX_Form.WorkspaceFormId];
    var paramPrefix = id + "_param_";
    if (form != null) {
      for (var i = 0; i < form.length; ++i) {
        var elem = form.elements[i];

        if (elem.name.indexOf(paramPrefix) === 0) {
          serviceParamsObject[elem.name.substr(paramPrefix.length)] = elem.value;
        }
      }
    }
    params += "&__PARAMETERS__=" + encodeURIComponent(JSON.stringify(serviceParamsObject));

    var ajaxHandler = new EBX_AJAXResponseHandler();

    ajaxHandler.handleAjaxResponseSuccess = function (responseContent) {
      var targetId = id + "_parameters";
      var target = document.getElementById(targetId);

      if (target) {
        target.innerHTML = responseContent;

        var dynamicDisplay = window["ebx_" + id + "_dynamicDisplay"];
        dynamicDisplay.refresh();
      }
    };

    ajaxHandler.sendRequest(url + "&" + params);
  }
})();

/********* ebx_frame.js *********/
/**
 * This script is used by both legacy and New UI.
 */

//[EBX_PUBLIC_API]
ebx_getContainerWindow = function(win) {
  if(!win) {
    win = window;
  }

  while(true) {
    var winParent = win.parent;

    if(winParent == win) {
      return win;
    }

    try {
      var docParent = winParent.document; // throws a security error is on a different domain.
      if(!docParent)  {
        return win;
      }
    } catch(e) {
      return win;
    }


    var frame = docParent.getElementById("ebx-legacy-component");
    if(frame && (frame.contentWindow == win)) {
      win = winParent;
      continue;
    }

    frame = docParent.getElementById("ebx_SubSessioniFrame");
    if(frame && (frame.contentWindow == win)) {
      win = winParent;
      continue;
    }

    return win;
  }
};

//[EBX_PUBLIC_API]
ebx_getContentWindow = function(win) {
  if(!win) {
    win = window;
  }

  while(true) {
    if(win.EBX_LayoutManager) {
      // Window content is "legacy".

      var subSesssionFrame = win.document.getElementById("ebx_SubSessioniFrame");
      if (!subSesssionFrame) {
        return win;
      }

      win = subSesssionFrame.contentWindow;
      if (!win) {
        return null;
      }
    }
    else {
      // Window content is not "legacy".
      if (!win.document) {
        return null;
      }

      var legacyComponentFrame = win.document.getElementById("ebx-legacy-component");
      if (!legacyComponentFrame) {
        return null;
      }

      win = legacyComponentFrame.contentWindow;
      if (!win) {
        return null;
      }
    }
  }
}

/********* workflowLauncher/workflowLauncher.js *********/
var ebx_workflowLauncher_Documentation = {

  update: function (inputParameter, requestDocumentation) {

    var url = requestDocumentation.url;
    var predicate = requestDocumentation.predicate;
    var documentationWidgetName = requestDocumentation.documentationWidgetName;
    var targetNode = requestDocumentation.targetNode; // targetNode is the node which is required by AjaxComponent to build a response.
    var displayInformationPredicate = requestDocumentation.displayInformationPredicate;

    // Predicate is used to decide whether or not to display the standard documentation widget
    if (eval(predicate)) {
      ebx_workflowLauncher_Helper.displayStandardDocumentation(documentationWidgetName);
      return;
    }

    // If the documentation is displayed, send a request to an Ajax component to compute and update documentation components.
    var updateDocumentationAjax = new EBX_AJAXResponseHandler();

    // Each time the current input changes or a service is set to workflow launcher, the
    updateDocumentationAjax.handleAjaxResponseSuccess = function (response) {
      var json = JSON.parse(response);

      // Replace old documentation elements with new ones.
      json.forEach(function (item) {
        ebx_workflowLauncher_Helper.replaceElementByHTMLAndKeepOrder(item.id, item.innerHTML);
      });
    };
    // The request url, contains the following parameters targetNodeValue, documentationWidgetName, and displayInformation.
    // 1. targetNodeValue is the Path of the node which is required to build documentation component. For example in the case of
    //    launcher definition record form, the documentation depends on the value of the node workflow publication.
    // 2. documentationWidgetName, identifier of the widget, it is used to build identifiers of the new documentation component.
    // 3. displayInformation is used to decide whether or not to display/update the information component of the documentation widget.
    //    Because, the information is optional.
    var targetNodeValue = ebx_form_getNodeValue(targetNode);
    url += targetNodeValue ? "&targetNodeValue=" + targetNodeValue.key : "";
    url += documentationWidgetName ? "&documentationWidgetName=" + documentationWidgetName : "";

    if (eval(displayInformationPredicate)) {
      url += "&displayInformation=" + EBX_WorkflowLauncherLabelWidget.on;
    }

    updateDocumentationAjax.sendRequest(url);
  }
};

var ebx_workflowLauncher_DataContext = {
  update: function (inputParameter, requestDataContext) {

    var url = requestDataContext.url;
    var targetNode = requestDataContext.targetNode; // targetNode is the node which is required by AjaxComponent to build a response.

    // If the documentation is displayed, send a request to an Ajax component to compute and update documentation components.
    var updateDataContextAjax = new EBX_AJAXResponseHandler();

    // Each time the current input changes or a service is set to workflow launcher, the
    updateDataContextAjax.handleAjaxResponseSuccess = function (response) {
      var json = JSON.parse(response);
      ebx_workflowLauncher_Helper.updateDataContext(json.newDataContextHTML, json.dataContextGroupId, json.isHidden)
    };
    // The request url, contains the following parameters targetNodeValue, documentationWidgetName, and displayInformation.
    // 1. targetNodeValue is the Path of the node which is required to build documentation component. For example in the case of
    //    launcher definition record form, the documentation depends on the value of the node workflow publication.
    // 2. documentationWidgetName, identifier of the widget, it is used to build identifiers of the new documentation component.
    // 3. displayInformation is used to decide whether or not to display/update the information component of the documentation widget.
    //    Because, the information is optional.
    var targetNodeValue = ebx_form_getNodeValue(targetNode);
    url += targetNodeValue ? "&targetNodeValue=" + targetNodeValue.key : "";
    updateDataContextAjax.sendRequest(url);
  }
};

var ebx_workflowLauncher = (function () {
  return {
    onPublicationChanged: onPublicationChanged,
    onLauncherChanged: onLauncherChanged
  };

  function onPublicationChanged(selection, any) {
    var json = JSON.parse(any);
    ebx_workflowLauncher_Documentation.update(selection, json.documentation);
    ebx_workflowLauncher_DataContext.update(selection, json.dataContext);
  }

  function onLauncherChanged(selection, any) {
    var jsonParams = JSON.parse(any);
    ebx_workflowLauncher_Documentation.update(selection, jsonParams);
  }
})();

/********* workflowLauncher/ebx_workflowLauncher_Helper.js *********/
var ebx_workflowLauncher_Helper = {

  //======= Start Common =======//
  hideShowElementById: function (anIdToHide, hide) {
    var elementToHide = document.getElementById(anIdToHide);
    if (elementToHide == null) {
      return;
    }

    if (hide) {
      EBX_Utils.addCSSClass(elementToHide, "ebx_DisplayNone");
    } else {
      EBX_Utils.removeCSSClass(elementToHide, "ebx_DisplayNone");
    }
  },

  // Replace an html element by HTML. The new inserted HTML should keep the same position as the old element in
  // the tree structure of its parent.
  replaceElementByHTMLAndKeepOrder: function (elementId, newHTML) {

    // 1. Retrieve the html element to be replaced.
    var element = document.getElementById(elementId);
    if (!element) {
      return;
    }

    // 2. Look for the previous sibling and the parent of the element to be replaced.
    var previousElement = element.previousElementSibling;
    var parentElement = element.parentElement;

    // 3. Remove the element.
    element.remove();

    //4. Insert the new html after the sibling of the element to be replaced.
    //   Otherwise, insert the new html as the first child of the parent the element to be replaced.
    if (!previousElement) {
      parentElement.insertAdjacentHTML("afterbegin", newHTML);
    } else {
      previousElement.insertAdjacentHTML("afterend", newHTML)
    }
  },

  //======= End Common =======//

  //======= Start Documentation =======//

  /**
   * It displays a documentation widget without the switch button, information and default value.
   * @param widgetName. Identifier used to build identifiers of documentation's components
   */
  displayStandardDocumentation: function (widgetName) {
    //1. Display Overwritten Values
    ebx_workflowLauncher_Helper.hideShowElementById(widgetName + "_" + "overwrittenValue", false);

    //2. Hide Inherited Values
    ebx_workflowLauncher_Helper.hideShowElementById(widgetName + "_" + "inheritedValue", true);

    //3. Hide Switch Button
    ebx_workflowLauncher_Helper.hideShowElementById(widgetName + "_" + "switch", true);

    //4. Hide Information bloc
    ebx_workflowLauncher_Helper.hideShowElementById(widgetName + "_" + "information", true);
  },
  //======= End Documentation =======//

  //======= Start Helper for DataContext =======//
  /**
   * It switches the state of custom form field. It is used when displaying DataContext Items of workflowlauncher.launcher
   * @param aSwitchId. Identifier of the switch element
   * @param defaultId. Identifier of the element which contains the default value
   * @param editId.  Identifier of the element which contains the editable value
   * @param defaultTooltip. The tooltip to display when the state of the switch element is Edit
   * @param editTooltip. The tooltip to display when the state of the switch element is Default
   */
  switchBetweenEditAndDefaultDisplay: function (aSwitchId, defaultId, editId, defaultTooltip, editTooltip) {
    // The button that toggles between default and editable value and vice versa.
    // It has two states : default and edit.
    // A click on a button in default state, apply and displays the default value for the corresponding parameter
    // A click on a button in edit state, displays an input and allows the user to edit the value of the corresponding parameter
    var button = document.getElementById(aSwitchId);
    var defaultElement = document.getElementById(defaultId);
    var editElement = document.getElementById(editId);
    var toggle = document.getElementById(aSwitchId + "_toggle");

    var switchStateToEdit = function (element) {
      EBX_Utils.removeCSSClass(element, "ebx_ValueNull");
      EBX_Utils.addCSSClass(element, "ebx_ValueEditable");
      element.setAttribute('title', editTooltip);
    };

    var switchStateToDefault = function (element) {
      EBX_Utils.removeCSSClass(element, "ebx_ValueEditable");
      EBX_Utils.addCSSClass(element, "ebx_ValueNull");
      element.setAttribute('title', defaultTooltip);
    };

    var displayDefaultValue = function (defaultElement, editElement) {
      EBX_Utils.removeCSSClass(defaultElement, "ebx_dynamicHidden");
      EBX_Utils.addCSSClass(editElement, "ebx_dynamicHidden");
      EBX_Utils.removeCSSClass(editElement, "ebx_OverwrittenValue");
    };

    var displayEditableValue = function (defaultElement, editElement) {
      EBX_Utils.addCSSClass(defaultElement, "ebx_dynamicHidden");
      EBX_Utils.removeCSSClass(editElement, "ebx_dynamicHidden");
      EBX_Utils.addCSSClass(editElement, "ebx_OverwrittenValue");
    };

    if (button) {
      var isCurrentStateDefault = EBX_Utils.matchCSSClass(button, "ebx_ValueNull");

      if (isCurrentStateDefault) {
        switchStateToEdit(button);
        displayDefaultValue(defaultElement, editElement);
        if (toggle) {
          toggle.checked = true;
        }
      } else {
        switchStateToDefault(button);
        displayEditableValue(defaultElement, editElement);
        if (toggle) {
          toggle.checked = false;
        }
      }
    }
  },

  updateDataContext: function (newDataContextHTML, dataContextGroupId, isHidden) {
    //1. Looks for the first raw of the Data Context Group (the raw that displays the expand/collapse button
    var dataContextMainRaw = document.getElementById(dataContextGroupId);

    //2. Hide or Show Data context widget
    ebx_workflowLauncher_Helper.hideShowElementById(dataContextGroupId, isHidden);

    //2. Remove Current Data Context Items and Keep the first raw.
    this.removeDataContextContent(dataContextMainRaw);

    //3. If new data context is empty.
    if (!newDataContextHTML) {
      return;
    }

    //4. creates Temporary Element (TableRawForm ) with the new DataContext HTMl: it has the following structure :
    //Table/FormRow/Border/Table/dataContext Rows
    var temporaryDataContextContainer = document.createElement("div");
    temporaryDataContextContainer.innerHTML = newDataContextHTML;

    //5. retrieves and replace the new data context items from the table content. The new content starts at the "border" element
    var dataContextTableContent = temporaryDataContextContainer.getElementsByTagName("table")[0].children[0];
    this.replaceDataContextContent(dataContextMainRaw, dataContextTableContent.getElementsByClassName("ebx_Input")[0]);

  },

  removeDataContextContent: function (dataContextMainRaw) {
    if (!dataContextMainRaw) {
      return;
    }

    var contentElement = dataContextMainRaw.getElementsByClassName("ebx_Input");
    if (!contentElement) {
      return;
    }
    contentElement[0].innerHTML = "";
  },

  replaceDataContextContent: function (dataContextMainRaw, newContent) {
    var contentElement = dataContextMainRaw.getElementsByClassName("ebx_Input");
    if (!contentElement) {
      return;
    }

    contentElement[0].parentNode.replaceChild(newContent, contentElement[0]);
  }
  //======= End Helper for DataContext =======//
};

/********* workflowLauncher/ebx_labelWidgetHelper.js *********/
var ebx_labelWidgetHelper = {
  buildSwitchCommand: function (itemsToHide, nextState, informationId) {
     if(!itemsToHide)
        return;

      itemsToHide.forEach(function (item) {
        var element = document.getElementById(item.id);
        if(item.hide){
          EBX_Utils.addCSSClass(element,"ebx_DisplayNone" );
          EBX_Utils.removeCSSClass(element,"ebx_DisplayInline" );
        }else{
          EBX_Utils.removeCSSClass(element,"ebx_DisplayNone" );
          EBX_Utils.addCSSClass(element,"ebx_DisplayInline" );
        }});

      var informationElement = document.getElementById(informationId);
      if(!informationElement)
        return;

    informationElement.innerText = nextState ? EBX_WorkflowLauncherLabelWidget.information.overwrittenValue
        : EBX_WorkflowLauncherLabelWidget.information.inheritedValue;
  }
};
